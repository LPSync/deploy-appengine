{"version":3,"sources":["AuthorizedApolloProvider.js","theme/theme.js","AuthUserContextProvider.js","components/Page.js","components/breadcrumbs/BreadcrumbText.js","components/NoPermissionsError.js","pages/NonFteAuditReportPage/NonFteAuditReportContextProvider.js","operations/queries/getReportingNonfteAudits.js","operations/queries/getAllNonfteOktaUsers.js","pages/NonFteAuditReportPage/NonFteAuditReportPageContent/NonFteCountBox.js","components/circularProgress/LoadingCircle.js","components/table/StyledTableRow.js","components/table/EnhancedTableHead.js","data/constants/TaskScheduleTypes.js","data/constants/TaskTypes.js","data/constants/BadgeTypes.js","data/helper/DateTimezoneHelpers.js","data/helper/helpers.js","components/typographies/NoResultsTypography.js","pages/NonFteAuditReportPage/NonFteAuditReportPageContent/NonFteTable.js","components/buttons/RefreshButton.js","components/blocks/BoxCardWrapper.js","components/inputs/SearchTextField.js","data/helper/commonFunctions.js","components/inputs/AutoTextField.js","components/inputs/SelectTextfield.js","components/blocks/CustomCollapse.js","components/buttons/ApplyFiltersButton.js","components/buttons/ResetFilterButton.js","components/blocks/FilterBlock.js","components/inputs/CustomAutocomplete.js","pages/NonFteAuditReportPage/NonFteAuditReportPageContent/NonFteFilterBox.js","pages/NonFteAuditReportPage/NonFteAuditReportPageContent/NonFteSearchFilterBox.js","components/PaperCardWrapper.js","data/handleError.js","pages/NonFteAuditReportPage/NonFteAuditReportPageContent/NonFteAuditReportPageContent.js","components/breadcrumbs/BreadcrumbLink.js","data/constants/FrontendRoutes.js","components/breadcrumbs/BreadcrumbHomeBox.js","components/PageTitle.js","components/blocks/PageTitleBox.js","pages/NonFteAuditReportPage/NonFteAuditReportPage.js","pages/ConsolidatedReportPage/ConsolidatedReportPage.js","pages/DashboardPage/DashboardPage.js","pages/HomePage/HomePage.js","components/InfoBlock.js","data/redux/offboardRequest/offboardRequestActonTypes.js","data/redux/offboardRequest/offboardRequestActions.js","components/requestWrapper/RequestStepper.js","pages/OffboardRequestPage/OffboardRequestBottomBar/BottomSectionTitle.js","operations/queries/getGoogleUserImg.js","components/UserImg.js","pages/OffboardRequestPage/OffboardRequestBottomBar/BottomSectionWrapper.js","pages/OffboardRequestPage/OffboardRequestBottomBar/OffboardWhoBottomSection.js","pages/OffboardRequestPage/OffboardRequestBottomBar/OffboardWhenBottomSection.js","components/chips/CustomChip.js","pages/OffboardRequestPage/OffboardRequestBottomBar/DataTransferBottomSection.js","pages/OffboardRequestPage/OffboardRequestBottomBar/LicensesDevicesBottomSection.js","pages/OffboardRequestPage/OffboardRequestBottomBar/OffboardRequestBottomBar.js","components/requestWrapper/RequestStepperButtonWrapper.js","components/CustomPortal.js","components/modals/CustomModal.js","components/modals/MissedInputModal.js","pages/OffboardRequestPage/OffboardRequestWrapperPage.js","operations/queries/searchUsersQuery.js","components/circularProgress/SelectCircularProgress.js","hooks/useDebouncedChangeHandler.js","components/formBlocks/offboardWhoDetails/AllEmployeeSelect.js","operations/queries/getTeamNonfteDirectReports.js","components/inputs/AutocompleteTextField.js","components/formBlocks/offboardWhoDetails/TeamEmployeeSelect.js","pages/OffboardRequestPage/OffboardWhoContainers/SelectedOffboardEmployee.js","operations/queries/searchUserOffboardingTask.js","components/AlertBox.js","data/constants/FteTrackerStatuses.js","components/taskManager/TaskStatusBlock.js","pages/ServiceAndSystemDirectoryPage/components/SaSFlag.js","data/constants/ServiceAndSystemDirectory.js","data/constants/TaskStatuses.js","components/typographies/RequestFormTypography.js","pages/OffboardRequestPage/OffboardWhoContainers/OffboardEmployeeSelect.js","components/requestFormWrapper/RequestFormWrapper.js","components/requestFormWrapper/RequestFormGridContainer.js","components/blocks/SectionTitleBlock.js","pages/OffboardRequestPage/OffboardWhoContainers/OffboardWho.js","operations/mutations/createOffboardingTask.js","operations/mutations/addTaskApproval.js","operations/mutations/createLogEntry.js","data/constants/EmployeeTypes.js","data/helper/validation.js","data/constants/ApprovalStatuses.js","operations/queries/getGoogleUserAliases.js","components/buttons/StepperBackButton.js","components/buttons/StepperNextButton.js","pages/OffboardRequestPage/StepperButtons.js","components/tooltips/HtmlTooltips.js","components/tooltips/InfoTooltip.js","components/formBlocks/offboardWhenDetails/ScheduleTypeSelect.js","pages/OffboardRequestPage/OffboardWhenContainers/ScheduleTypeSelectContainer.js","components/inputs/DateTextField.js","operations/queries/getTimeZoneInfo.js","operations/queries/getLocationPrediction.js","operations/queries/getLocationCoordinates.js","components/formBlocks/hrInfo/TimeZoneSearch.js","components/formBlocks/offboardWhenDetails/ScheduleDateTimeInput.js","pages/OffboardRequestPage/OffboardWhenContainers/ScheduleDateTimeInputContainer.js","components/checkboxes/ColorCheckbox.js","components/checkboxes/CustomLabelCheckbox.js","components/formBlocks/offboardWhenDetails/NotificationCheck.js","pages/OffboardRequestPage/OffboardWhenContainers/NotifyCheckContainer.js","pages/OffboardRequestPage/OffboardWhenContainers/OffboardWhen.js","components/formBlocks/dataLicensesDevicesDetails/TransferWhatCheck.js","pages/OffboardRequestPage/DataLicensesDevicesContainers/TransferWhatCheckContainer.js","components/formBlocks/dataLicensesDevicesDetails/TransferWhoSelect.js","pages/OffboardRequestPage/DataLicensesDevicesContainers/TransferWhoSelectContainer.js","operations/queries/getACloudGuruLicense.js","operations/queries/getSlackLicense.js","operations/queries/getSmartsheetLicense.js","components/formBlocks/dataLicensesDevicesDetails/LicensesCheck.js","pages/OffboardRequestPage/DataLicensesDevicesContainers/LicensesCheckContainer.js","operations/queries/getJamfDevices.js","operations/queries/getGoogleChromeDevices.js","pages/OffboardEmployeePage/CreateRequestForm/DeviceUnassignment/DeviceCheckboxes.js","components/requestFormWrapper/GridInputWrapper.js","components/formBlocks/dataLicensesDevicesDetails/DevicesCheck.js","pages/OffboardRequestPage/DataLicensesDevicesContainers/DevicesCheckContainer.js","pages/OffboardRequestPage/DataLicensesDevicesContainers/DataLicensesDevices.js","components/inputs/CustomFormSelect.js","operations/queries/getHRTerminationCodes.js","components/formBlocks/hrInfo/HrTerminationCodeSelect.js","pages/OffboardRequestPage/HrInfoContainers/HrTerminationCodeContainer.js","components/formBlocks/hrInfo/HrTerminationTypeSelect.js","pages/OffboardRequestPage/HrInfoContainers/HrTerminationTypeContainer.js","components/formBlocks/hrInfo/HrPayrollDateTimeSelect.js","pages/OffboardRequestPage/HrInfoContainers/HrPayrollDateTimeContainer.js","components/formBlocks/hrInfo/HrDateInput.js","pages/OffboardRequestPage/HrInfoContainers/HrDateContainer.js","pages/OffboardRequestPage/HrInfoContainers/HrTimeZoneContainer.js","components/formBlocks/hrInfo/HrDateTimezoneInfo.js","pages/OffboardRequestPage/HrInfoContainers/HrDateTimezoneInfoContainer.js","components/inputs/NotesTextField.js","components/formBlocks/hrInfo/HrPayrollNotesInput.js","pages/OffboardRequestPage/HrInfoContainers/HrPayrollNotesContainer.js","pages/OffboardRequestPage/HrInfoContainers/HrInformation.js","components/requestWrapper/GridItem.js","components/requestWrapper/RequestSummarySectionTitle.js","components/requestWrapper/RequestSummarySection.js","components/requestWrapper/RequestSummaryItem.js","components/typographies/TopTypography.js","pages/OffboardRequestPage/OffboardRequestSummary.js","components/buttons/StepperResetRequestButton.js","pages/OffboardRequestPage/OffboardRequestPageContent.js","pages/OffboardRequestPage/OffboardRequestPage.js","operations/queries/getAllAuthRequisitionTotals.js","components/totalContainer/TotalContainer.js","components/totalContainer/TotalBox.js","components/totalContainer/TotalBoxDivider.js","pages/OnboardingDashboardPage/TotalContainers/TotalsBox.js","pages/OnboardingDashboardPage/TotalContainers/RequisitionTotals.js","operations/queries/getAllAuthOnboardingTotals.js","pages/OnboardingDashboardPage/TotalContainers/CandidateTotals.js","operations/queries/getAuthRequisitionTasks.js","components/SearchInput.js","data/redux/onboardingDashboard/onboardingDashboardActonTypes.js","data/redux/onboardingDashboard/onboardingDashboardActions.js","pages/OnboardingDashboardPage/RequestSearchBar.js","components/table/InfinityScroll.js","components/table/CustomInfiniteScroll.js","components/circularProgress/TableCircularProgress.js","components/table/BoxTableWrapper.js","components/table/CustomTableRow.js","pages/OnboardingDashboardPage/DashboardTableContent.js","components/taskRowFields/DateRowField.js","components/taskRowFields/ReqJobTitleCodeField.js","components/taskRowFields/ReqStatusRowField.js","components/taskRowFields/ViewTaskButton.js","pages/OnboardingDashboardPage/RequisitionRequests.js","components/buttons/ViewButton.js","operations/queries/getAuthOnboardingTasks.js","components/taskRowFields/CandidateStatusRowField.js","pages/OnboardingDashboardPage/CandidateRequests.js","operations/queries/getTask.js","pages/OnboardingDashboardPage/RequestInfoBoxItem.js","pages/OnboardingDashboardPage/RequestInfoBox.js","components/chips/DelegateChip.js","pages/OnboardingDashboardPage/DelegatesInfoBox.js","operations/queries/getAuthOnboardingDelegates.js","pages/TaskManagerPage/SelectedTasks/components/CustomTimelineItem.js","components/taskManager/TaskHeadingToolbar.js","components/taskManager/TaskContainerTable.js","components/table/CustomTableTitleCell.js","components/table/CustomTableValueCell.js","pages/TaskManagerPage/SelectedTasks/components/TaskSection.js","components/UserProfileLink.js","pages/TaskManagerPage/SelectedTasks/components/TaskTimeline.js","pages/TaskManagerPage/SelectedTasks/SelectedOnboardTaskData.js","components/taskManager/TaskCloseButtonToolbar.js","pages/TaskManagerPage/SelectedTasks/components/SelectedTaskWrapper.js","pages/TaskManagerPage/SelectedTasks/components/TaskButtons.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedCandidateActionSection.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedTaskInfoBlock.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedCandidateTaskContent.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedRequisitionTaskData.js","data/redux/candidateRequest/candidateRequestActonTypes.js","data/redux/candidateRequest/candidateRequestActions.js","pages/TaskManagerPage/SelectedTasks/components/ActionSection.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedRequisitionActionSection.js","pages/OnboardingDashboardPage/SelectedTaskContent/SelectedRequisitionTaskContent.js","pages/OnboardingDashboardPage/SelectedTaskDrawer.js","components/tabs/CustomTabPanel.js","components/tabs/StyledTab.js","components/tabs/TabsPaper.js","pages/OnboardingDashboardPage/OnboardingDashboardPageContent.js","pages/OnboardingDashboardPage/OnboardingDashboardPage.js","components/LoadingLogo.js","data/constants/OrgChart.js","pages/OrganizationChartPage/BalkanOrgChart.js","operations/queries/getAllOktaUsers.js","pages/OrganizationChartPage/OrganizationChartPage.js","pages/RequisitionRequestPage/RequisitionRequestContextProvider.js","operations/mutations/createRequisitionTask.js","pages/RequisitionRequestPage/StepperButtons.js","operations/queries/getUltiLocations.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/LocationSelect.js","operations/queries/getUltiBUDept.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/BusinessUnitDeptSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/ManagerSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/RequisitionTypeSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/StartDateInput.js","operations/queries/getBackfillDirectReports.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/BackfillSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/RequisitionDetails/RequisitionDetails.js","operations/queries/getCostCenters.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/CompanyCodeSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/ParentMgmtCostCenterSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/MgmtCostCenterSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/FunctionalAreaDescSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/CountryDescSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CostCenter/CostCenter.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/AdditionalInformation/CommentsInput.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/AdditionalInformation/AdditionalInformation.js","operations/queries/getRequisitionJobCode.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/JobCodeSelect.js","data/CurrencyData.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionSpend/ReqSpendCurrencySelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionSpend/ReqSpendAmountInput.js","data/constants/SalaryPeriodOptions.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionSpend/ReqSpendPeriodSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionSpend/RequisitionSpend.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionBonus/ReqBonusAmountInput.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionBonus/ReqBonusTypeSelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionBonus/RequisitionBonus.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionCommission/ReqCommissionAmountInput.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionCommission/ReqCommissionCurrencySelect.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/RequisitionCommission/RequisitionCommission.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/ContractInformation/ContractMonthsInput.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/ContractInformation/ContractHoursInput.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/ContractInformation/ContractInformation.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/JobTitle.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/JobFinanceDetails/JobFinanceDetails.js","components/typographies/SubtitleTypography.js","pages/RequisitionRequestPage/CreateRequisitionRequestForm/CreateRequisitionRequestForm.js","components/requestWrapper/RequestWrapperPage.js","pages/RequisitionRequestPage/StepperResetBtn.js","components/blocks/RequestTopBox.js","pages/RequisitionRequestPage/RequestSummary.js","pages/RequisitionRequestPage/RequisitionRequestPageContent.js","pages/RequisitionRequestPage/RequisitionRequestPage.js","pages/SystemStatusPage/SystemStatusPage.js","operations/queries/getReportGeneratorInfo.js","operations/queries/getGeneratedReport.js","data/constants/ReportGenerator.js","pages/ReportGenerator/ReportGeneratorPageContent/DatePicker.js","components/inputs/StyledInputLabel.js","pages/ReportGenerator/ReportGeneratorPageContent/FieldsBox.js","components/table/StyledDataGrid.js","pages/ReportGenerator/ReportGeneratorPageContent/TableBox.js","pages/ReportGenerator/ReportGeneratorPageContent/ReportGeneratorPageContent.js","pages/ReportGenerator/ReportGeneratorPage.js","operations/queries/getAuthTasks.js","components/taskRowFields/TaskDetailsRowField.js","components/taskRowFields/TaskStatusRowField.js","components/table/TableContent.js","pages/TaskManagerPage/TaskManagerPageContent/TaskManagerTableContent.js","pages/TaskManagerPage/TaskManagerPageContent/TaskManagerTable.js","pages/TaskManagerPage/TaskManagerPageContent/MyTasks.js","pages/TaskManagerPage/TaskManagerPageContent/AllTasks/CountBox.js","components/inputs/SmallDataTextField.js","pages/TaskManagerPage/TaskManagerPageContent/AllTasks/FilterBox.js","operations/subscription/createTaskSubscription.js","operations/queries/getTasks.js","operations/subscription/updateTaskSubscription.js","data/redux/taskManager/taskManagerActonTypes.js","data/redux/taskManager/taskManagerActions.js","pages/TaskManagerPage/TaskManagerPageContent/AllTasks/CurrentView.js","pages/TaskManagerPage/TaskManagerPageContent/AllTasks/Search.js","pages/TaskManagerPage/TaskManagerPageContent/TableToolbar.js","operations/queries/getAllTasksTotals.js","components/modals/ModalTopBar.js","components/checkboxes/CustomCheckbox.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalTaskTopBar.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalTaskMainSection.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalTaskCommentSection.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalTask.js","operations/queries/getAllBulkApprovalTasks.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalData.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalSubmitButton.js","pages/TaskManagerPage/TaskManagerPageContent/BulkModal/BulkApprovalModal.js","pages/TaskManagerPage/TaskManagerPageContent/BulkApprovalButton.js","pages/TaskManagerPage/TaskManagerPageContent/AllTasks/AllTasks.js","operations/queries/getAllOffboardingTasks.js","pages/TaskManagerPage/TaskManagerPageContent/AllOffboardingTasks.js","operations/queries/getAllPendingTasks.js","pages/TaskManagerPage/TaskManagerPageContent/PendingApprovalTasks.js","operations/queries/getAllRequisitionTasks.js","pages/TaskManagerPage/TaskManagerPageContent/AllRequisitionTasks.js","pages/TaskManagerPage/SelectedTasks/SelectedOffboardTaskData.js","pages/TaskManagerPage/SelectedTasks/SelectedOffboardActionSection.js","data/redux/taskManagerHrInfo/taskManagerHrInfoActonTypes.js","data/redux/taskManagerHrInfo/taskManagerHrInfoActions.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrTerminatonCodeContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrTerminatonTypeContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrPayrollNotesContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrDateContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrDateTimezoneInfoContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrPayrollDateTimeContainer.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrTimeZoneContainer.js","operations/mutations/addOffboardingHrInformation.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrButtonSubmit.js","pages/TaskManagerPage/SelectedTasks/hrInfo/HrInformation.js","pages/TaskManagerPage/SelectedOffboardTaskContent.js","pages/TaskManagerPage/SelectedTasks/SelectedOnboardActionSection.js","pages/TaskManagerPage/SelectedOnboardTaskContent.js","pages/TaskManagerPage/SelectedTasks/SelectedRequisitionTaskData.js","pages/TaskManagerPage/SelectedTasks/SelectedRequisitionActionsSection.js","pages/TaskManagerPage/SelectedRequisitionTaskContent.js","components/badges/BadgeIcon.js","pages/TaskManagerPage/SelectedTasks/SelectedBadgeRequestTaskData.js","pages/TaskManagerPage/SelectedTasks/SelectedBadgeRequestActionsSection.js","pages/TaskManagerPage/SelectedBadgeRequestTaskContent.js","pages/TaskManagerPage/SelectedTaskContent.js","pages/TaskManagerPage/SelectedTasks/components/TaskAlert.js","operations/queries/getAllOnboardingTasks.js","pages/TaskManagerPage/TaskManagerPageContent/AllOnboardingTasks.js","pages/TaskManagerPage/TaskManagerPageContent/TaskManagerPageContent.js","pages/TaskManagerPage/TaskManagerPage.js","operations/queries/getAllOrganizationChartsInfo.js","operations/queries/getOffAndOnBoardingChartsInfo.js","operations/queries/getRequisitionTasksChartsInfo.js","data/constants/ReportingCharts.js","pages/ReportingDashboardPage/ReportingPageContent/ChartsBox.js","pages/ReportingDashboardPage/ReportingPageContent/ReportingPageContent.js","pages/ReportingDashboardPage/ReportingDashboardPage.js","operations/queries/searchUserDirectory.js","data/redux/userDirectory/userDirectoryActionTypes.js","data/redux/userDirectory/userDirectoryActions.js","pages/UserDirectoryPage/UserDirectoryFilterBlock.js","components/typographies/ToolbarTypography.js","pages/UserDirectoryPage/UserSearch/UserSearchInfoCell.js","operations/queries/getLpsyncUserBadges.js","components/badges/TopBadges.js","data/constants/UserDirectorySearchTypes.js","components/ConditionalWrapper.js","components/badges/BadgeChip.js","components/badges/BadgeGroupItem.js","components/badges/BadgeMenu.js","components/badges/UserCardBadgesBox.js","components/badges/UserCardBadges.js","data/redux/common/commonActionTypes.js","data/redux/common/commonActions.js","pages/UserDirectoryPage/UserSearch/UserInfoMenu.js","pages/UserDirectoryPage/UserSearch/UserTableCell.js","pages/UserDirectoryPage/UserSearch/UserTableContent.js","pages/UserDirectoryPage/UserSearch/UserDirectoryTable.js","components/inputs/SelectSearchTypeField.js","components/blocks/SearchBlock.js","operations/queries/getDirectReports.js","operations/queries/getUserByEmail.js","pages/UserDirectoryPage/UserTeam/UserTypography.js","pages/UserDirectoryPage/UserTeam/UserCard.js","pages/UserDirectoryPage/UserTeam/UserLoadingCircle.js","pages/UserDirectoryPage/UserTeam/UserGridItemWrapper.js","pages/UserDirectoryPage/UserTeam/UserTeam.js","components/blocks/ColorBorderBox.js","operations/adminQueries/getLpsyncBadges.js","data/helper/filterHelpers.js","components/grid/BoxGridWrapper.js","components/grid/BadgeIconGridItem.js","components/buttons/BackPaginationButton.js","components/buttons/NextPaginationButton.js","pages/UserDirectoryPage/UserSearch/badgeSearch/BadgesSelectGrid.js","pages/UserDirectoryPage/UserSearch/badgeSearch/UserBadgesModalBlock.js","data/constants/BadgeCriteriaOptions.js","operations/queries/searchUsersByBadgesQuery.js","pages/UserDirectoryPage/UserSearch/badgeSearch/BadgesModalActionBlock.js","pages/UserDirectoryPage/UserSearch/badgeSearch/BadgeFormSelect.js","pages/UserDirectoryPage/UserSearch/badgeSearch/UserBadgesSearchModal.js","pages/UserDirectoryPage/UserDirectoryPageContent.js","operations/queries/getGoogleUserInfo.js","pages/UserDirectoryPage/UserProfile/UserInformation/UserOrgInfo.js","pages/UserDirectoryPage/UserProfile/UserInformation/UserDirectReportsList.js","pages/UserDirectoryPage/UserProfile/UserInformation/UserInformation.js","pages/UserDirectoryPage/UserProfile/ItInformation/UserOktaInfo/AdGroupsDrawer.js","operations/queries/getAppsList.js","pages/UserDirectoryPage/UserProfile/ItInformation/UserOktaInfo/AppMembershipsDrawer.js","pages/UserDirectoryPage/UserProfile/ItInformation/UserOktaInfo/UserOktaInfo.js","operations/queries/getGoogleUserGroups.js","pages/UserDirectoryPage/UserProfile/ItInformation/UserGoogleInfo/GoogleGroupsDrawer.js","pages/UserDirectoryPage/UserProfile/ItInformation/UserGoogleInfo/UserGoogleInfo.js","pages/UserDirectoryPage/UserProfile/ItInformation/DevicesInfo/JamfDevicesRows.js","pages/UserDirectoryPage/UserProfile/ItInformation/DevicesInfo/GoogleDevicesRows.js","pages/UserDirectoryPage/UserProfile/ItInformation/DevicesInfo/DevicesInfo.js","operations/queries/getServiceNowUserGroups.js","pages/UserDirectoryPage/UserProfile/ItInformation/ServiceNowInfo/ServiceNowTable.js","pages/UserDirectoryPage/UserProfile/ItInformation/ServiceNowInfo/ServiceNowInfo.js","pages/UserDirectoryPage/UserProfile/ItInformation/ItInformation.js","pages/UserDirectoryPage/UserProfile/FinanceInformation/FinanceInformation.js","operations/queries/getAuditorNonfteReports.js","operations/mutations/createReportingNonFteAudit.js","pages/UserDirectoryPage/UserProfile/NonFteAudit/ManagerSelect.js","components/drawers/StyledDrawer.js","pages/UserDirectoryPage/UserProfile/NonFteAudit/UpdateAuditDrawer.js","pages/UserDirectoryPage/UserProfile/NonFteAudit/NonFteAudit.js","components/typographies/ProfileTypography.js","pages/UserDirectoryPage/UserProfile/UserBadgeChip.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/UserStarBadge.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/KnowledgeIcon.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/UserKnowledgeBadge.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/UserManagerIcon.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/UserManagerOrICBadge.js","pages/UserDirectoryPage/UserProfile/TopProfileBadges/UserProfileBadges.js","pages/UserDirectoryPage/UserProfile/UserProfileInfo.js","pages/UserDirectoryPage/UserProfile/Badges/ChipBox.js","operations/mutations/deleteAuthUserBadge.js","pages/UserDirectoryPage/UserProfile/Badges/ManageMyBadges/EditBadgesTab.js","operations/mutations/addAuthUserBadges.js","components/badges/SelectBadgeCategoryInput.js","components/inputs/CustomTextField.js","operations/adminQueries/getBadgeIcons.js","components/badges/ChooseBadgeIcon.js","operations/adminQueries/checkIfBadgeNameExists.js","operations/adminQueries/checkIfBadgeIconExists.js","components/ImageUpload.js","components/buttons/SaveAndClearButtons.js","operations/mutations/createBadgeRequestTask.js","pages/UserDirectoryPage/UserProfile/Badges/ManageMyBadges/RequestBadgeDrawerContent.js","components/drawers/DisableBackdropDrawer.js","pages/UserDirectoryPage/UserProfile/Badges/ManageMyBadges/AddBadgesTab.js","pages/UserDirectoryPage/UserProfile/Badges/ManageMyBadges/ManageMyBadgesDrawerContent.js","pages/UserDirectoryPage/UserProfile/Badges/Badges.js","pages/UserDirectoryPage/UserProfile/UserProfileSearch.js","pages/UserDirectoryPage/UserProfile/UserProfile.js","components/routes/SecureRoute.js","pages/UserDirectoryPage/UserDirectoryPage.js","operations/queries/getThirdParties.js","data/redux/thirdParty/thirdPartyActonTypes.js","data/redux/thirdParty/thirdPartyActions.js","data/constants/ThirdPartyStatuses.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartyDirectoryTableContent.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartySearchResults.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartyDirectoryTable.js","operations/queries/getViewedThirdParties.js","operations/queries/getOwnedThirdParties.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartyDirectoryInfo.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartyDirectoryFilterBlock.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartySearchBlock.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryContent/ThirdPartyDirectoryPageContent.js","operations/queries/getThirdPartyByCode.js","components/table/CustomTableLabelValueRow.js","pages/ThirdPartyDirectoryPage/ThirdPartyProfile/Details.js","operations/queries/getUsersByContractorCompany.js","operations/queries/getUsersTotalsByContractorCompany.js","pages/ThirdPartyDirectoryPage/ThirdPartyProfile/ThirdPartyUsers.js","pages/ThirdPartyDirectoryPage/ThirdPartyProfile/ThirdPartyProfilePanel.js","pages/ThirdPartyDirectoryPage/ThirdPartyProfile/ThirdPartyProfileInfo.js","operations/mutations/addThirdPartyView.js","pages/ThirdPartyDirectoryPage/ThirdPartyProfile/ThirdPartyProfile.js","pages/ThirdPartyDirectoryPage/ThirdPartyDirectoryPage.js","components/ScrollToTop.js","components/formBlocks/deviceInformation/DeviceSelect.js","pages/CandidateRequestPage/AdditionalInformationContainers/DeviceSelectContainer.js","components/formBlocks/googleAccount/GoogleAccountCheck.js","pages/CandidateRequestPage/AdditionalInformationContainers/GoogleAccountCheckContainer.js","pages/CandidateRequestPage/AdditionalInformationContainers/AdditionalInformation.js","components/formBlocks/candidateDetails/NonLpEmailInput.js","pages/CandidateRequestPage/CandidateDetailsContainers/NonLpEmailInputContainer.js","components/formBlocks/candidateDetails/FullNameInput.js","pages/CandidateRequestPage/CandidateDetailsContainers/FullNameInputContainer.js","components/formBlocks/candidateDetails/JobTitleInput.js","pages/CandidateRequestPage/CandidateDetailsContainers/JobTitleInputContainer.js","components/formBlocks/candidateDetails/JobCode.js","pages/CandidateRequestPage/CandidateDetailsContainers/JobCodeContainer.js","operations/queries/searchConcurVendors.js","components/formBlocks/candidateDetails/CompanyNameSelect.js","pages/CandidateRequestPage/CandidateDetailsContainers/CompanyNameSelectContainer.js","components/formBlocks/candidateDetails/OfficeNumberInput.js","pages/CandidateRequestPage/CandidateDetailsContainers/OfficeNumberInputContainer.js","components/formBlocks/candidateDetails/MobileNumberInput.js","pages/CandidateRequestPage/CandidateDetailsContainers/MobileNumberInputContainer.js","operations/queries/searchUsername.js","components/modals/AlreadyExistUsernameModal.js","components/formBlocks/candidateDetails/UsernameCreate.js","pages/CandidateRequestPage/CandidateDetailsContainers/UsernameCreateContainer.js","pages/CandidateRequestPage/CandidateDetailsContainers/CandidateDetails.js","operations/queries/getCompletedRequisitionsByUser.js","components/RequisitionCard.js","components/modals/RequisitionSelectModal.js","pages/CandidateRequestPage/RequisitionDetailsContainers/RequisitionSelectModalContainer.js","components/formBlocks/requisitionDetails/RequisitionTypeSelect.js","pages/CandidateRequestPage/RequisitionDetailsContainers/RequisitionTypeSelectContainer.js","components/formBlocks/requisitionDetails/StartDateInput.js","pages/CandidateRequestPage/RequisitionDetailsContainers/StartDateInputContainer.js","components/formBlocks/requisitionDetails/HiringManagerSelect.js","pages/CandidateRequestPage/RequisitionDetailsContainers/HiringManagerContainer.js","components/formBlocks/requisitionDetails/BusinessUnitDeptSelect.js","pages/CandidateRequestPage/RequisitionDetailsContainers/BusinessUnitDeptSelectContainer.js","components/formBlocks/requisitionDetails/LocationSelect.js","pages/CandidateRequestPage/RequisitionDetailsContainers/LocationSelectContainer.js","components/formBlocks/requisitionDetails/EmployeeTypeSelect.js","pages/CandidateRequestPage/RequisitionDetailsContainers/EmployeeTypeSelectContainer.js","pages/CandidateRequestPage/RequisitionDetailsContainers/RequisitionDetails.js","pages/CandidateRequestPage/CreateCandidateRequestForm.js","pages/CandidateRequestPage/CandidateRequestSummary.js","operations/mutations/createOnboardingTask.js","pages/CandidateRequestPage/StepperButtons.js","data/constants/RequestSteps.js","pages/CandidateRequestPage/CandidateRequestPageContent.js","pages/CandidateRequestPage/CandidateRequestPage.js","pages/adminPages/HomePage/HomePage.js","operations/adminQueries/getLogEntries.js","pages/adminPages/SystemLogsPage/SystemLogsDescription.js","pages/adminPages/SystemLogsPage/SystemsLogsTable.js","pages/adminPages/SystemLogsPage/SystemLogsFilters.js","pages/adminPages/SystemLogsPage/SystemLogsTopBox.js","pages/adminPages/SystemLogsPage/SystemsLogsContent.js","pages/adminPages/SystemLogsPage/SystemLogsPage.js","pages/adminPages/UserManagementPage/UserManagementContextProvider.js","operations/adminQueries/getPermissions.js","operations/adminQueries/getRoles.js","operations/adminMutations/deleteRole.js","pages/adminPages/UserManagementPage/DrawerComponent.js","operations/adminMutations/addRoleUser.js","operations/adminMutations/createLogEntry.js","operations/adminMutations/removeRoleUser.js","pages/adminPages/UserManagementPage/RoleManagement/RemoveUserRoleModal.js","pages/adminPages/UserManagementPage/RoleManagement/ViewDetailsContent/SearchComponent.js","operations/queries/getOktaUsersByRoleId.js","pages/adminPages/UserManagementPage/RoleManagement/ViewDetailsContent/RoleUsersInfinityTable.js","pages/adminPages/UserManagementPage/RoleManagement/ViewDetailsContent/RoleDetailsTable.js","pages/adminPages/UserManagementPage/RoleManagement/ViewDetailsContent/ViewDetailsContent.js","components/buttons/DeleteButton.js","pages/adminPages/UserManagementPage/RoleManagement/RolePermissionsTable.js","operations/adminMutations/createNewRole.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/AddRoleTopMessage.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/SubmitBottonBox.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/PermissionRow.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/PermissionsTable.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/ManagementTextField.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/AddRoleForm.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/PermissionFilterSearchBox.js","pages/adminPages/UserManagementPage/RoleManagement/AddRole/AddRole.js","pages/adminPages/UserManagementPage/RoleManagement/RoleManagement.js","pages/adminPages/UserManagementPage/UserManagementPageContent.js","pages/adminPages/UserManagementPage/UserManagementPage.js","components/tabs/CustomTabs.js","operations/adminMutations/createLpsyncBadge.js","pages/adminPages/UserBadgeManagementPage/ManageBadges/AddBadgesDrawerContent.js","operations/adminMutations/deleteLpsyncBadge.js","pages/adminPages/UserBadgeManagementPage/ManageBadges/ManageBadgesTable.js","pages/adminPages/UserBadgeManagementPage/BadgesAutomation/SelectBadgesBox.js","components/badges/SelectedBadgeChipsBox.js","operations/adminMutations/createBadgeRule.js","operations/adminMutations/UpdateBadgeRule.js","pages/adminPages/UserBadgeManagementPage/BadgesAutomation/AddEditDrawerContent.js","operations/adminQueries/getBadgeRules.js","operations/adminMutations/deleteBadgeRule.js","components/buttons/EditButton.js","pages/adminPages/UserBadgeManagementPage/BadgesAutomation/BadgesAutomationTable.js","operations/mutations/updateSplashScreenCompleted.js","pages/adminPages/UserBadgeManagementPage/SplashScreenSettings/SplashScreenSettings.js","pages/adminPages/UserBadgeManagementPage/UserBadgeManagementPage.js","operations/mutations/updateHRTerminationCode.js","operations/mutations/deleteHRTerminationCode.js","pages/adminPages/OffboardingSettingsPage/HrTerminationCodes/EditDeleteCodeModal.js","operations/adminMutations/createHRTerminationCode.js","pages/adminPages/OffboardingSettingsPage/HrTerminationCodes/AddCodeModal.js","pages/adminPages/OffboardingSettingsPage/HrTerminationCodes/HrTerminationCodes.js","components/tabs/AdminTabsPaper.js","pages/adminPages/OffboardingSettingsPage/OffboardingSettingsPage.js","operations/adminQueries/getAllOnboardingDelegates.js","operations/adminMutations/createOnboardingDelegates.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/AddDelegatesDrawer/SearchDelegateCompany.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/AddDelegatesDrawer/SearchDelegateTo.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/AddDelegatesDrawer/SearchDelegateUser.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/AddDelegatesDrawer/AddDelegatesDrawer.js","operations/adminMutations/deleteOnboardingDelegate.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/EditDelegatesDrawer.js","pages/adminPages/OnboardingSettingsPage/OnboardingDelegates/OnboardingDelegates.js","data/constants/OnboardingSettingsPage.js","operations/mutations/addUltiBUDept.js","pages/adminPages/OnboardingSettingsPage/OnboardingRequest/OnboardingRequest.js","pages/adminPages/OnboardingSettingsPage/OnboardingSettingsPage.js","operations/queries/getGoogleCloudSchedulerTasks.js","data/constants/SchedulerJobs.js","pages/adminPages/SchedulerJobsPage/SchedulerJobsPageContent/SchedulerJobsPageContent.js","pages/adminPages/SchedulerJobsPage/SchedulerJobsPage.js","data/constants/FteTracker.js","pages/adminPages/FteCandidateTrackerPage/components/FteCandidateTrackerTable.js","operations/queries/getFteTrackerHistory.js","pages/adminPages/FteCandidateTrackerPage/components/SelectedFteTrackerData.js","data/constants/FteTrackerEventType.js","pages/adminPages/FteCandidateTrackerPage/components/FteTrackerDrawerContent.js","operations/queries/searchFteTrackerCandidates.js","operations/mutations/updateFTETracking.js","pages/adminPages/FteCandidateTrackerPage/FteCandidateTrackerPage.js","operations/adminQueries/getCandidatePortalLaptopSettings.js","data/constants/CandidateLaptops.js","operations/adminMutations/createLaptopOption.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalSettingsContent/LaptopField.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalSettingsContent/LaptopDrawer.js","operations/adminMutations/deleteLaptopOption.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalSettingsContent/DeleteLaptopModal.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalSettingsContent/CandidatePortalLaptopSettingsContent.js","data/constants/CandidateNonFteTasks.js","operations/queries/getCandidateNonFteTasksForAdminCandidatePortalAccess.js","operations/mutations/toggleCandidateTaskStatus.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalAccessContent/CandidatePortalAccessContent.js","pages/adminPages/CandidatePortalSettingsPage/CandidatePortalSettingsPage.js","layout/BodyLayout/AdminMainContainer.js","components/routes/LoginCallback.js","pages/NotFoundPage/NotFoundPage.js","data/redux/multiCandidateRequest/multiCandidateRequestActonTypes.js","data/redux/multiCandidateRequest/multiCandidateRequestActions.js","pages/MultiCandidateRequestPage/components/TableBox.js","pages/MultiCandidateRequestPage/components/TableOptions.js","pages/MultiCandidateRequestPage/components/ImportDetails.js","pages/MultiCandidateRequestPage/components/ImportCSV.js","pages/MultiCandidateRequestPage/CreateMultiCandidateRequestForm.js","pages/MultiCandidateRequestPage/components/CandidateUsername.js","pages/MultiCandidateRequestPage/components/MultiCandidateDetails.js","pages/MultiCandidateRequestPage/MultiCandidateRequestSummary.js","operations/mutations/createMultipleOnboardingTasks.js","operations/queries/getRequisitionJobCodes.js","operations/queries/getUsersByEmails.js","operations/queries/getConcurVendors.js","pages/MultiCandidateRequestPage/StepperButtons.js","pages/MultiCandidateRequestPage/MultiCandidateRequestPageContent.js","pages/MultiCandidateRequestPage/MultiCandidateRequestPage.js","components/snackbars/notifiacationAction.js","components/snackbars/useNotifier.js","pages/ServiceAndSystemDirectoryPage/components/PageComponent.js","pages/ServiceAndSystemDirectoryPage/components/SaSContainer.js","components/buttons/LoadingButton.js","pages/ServiceAndSystemDirectoryPage/components/SaSSearch.js","pages/ServiceAndSystemDirectoryPage/components/SaSTitle.js","pages/ServiceAndSystemDirectoryPage/components/SaSListItem/SaSListItemStyles.js","pages/ServiceAndSystemDirectoryPage/components/SaSListItem/SaSListItem.js","pages/ServiceAndSystemDirectoryPage/components/SaSList.js","pages/ServiceAndSystemDirectoryPage/components/SaSModal.js","operations/queries/searchSystemsAndServices.js","operations/queries/getGroupMembers.js","pages/ServiceAndSystemDirectoryPage/ServiceAndSystemDirectoryContent.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/components/TabPanelItem.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/Overview.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/components/MembersList.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/People.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/Dependencies.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/components/SearchResults.js","pages/ServiceAndSystemDirectoryPage/ServiceComponent/ServiceComponent.js","pages/ServiceAndSystemDirectoryPage/ServiceAndSystemDirectoryPage.js","operations/queries/searchInnerData.js","pages/GlobalSearchPage/GlobalSearchTypography.js","pages/GlobalSearchPage/GlobalSearchResults.js","pages/GlobalSearchPage/GlobalSeachResultsInfoBox.js","pages/GlobalSearchPage/getCardData.js","pages/GlobalSearchPage/GlobalSearchContent.js","pages/GlobalSearchPage/GlobalSeachPage.js","layout/BodyLayout/MainContainer.js","components/list/NavListItemText.js","components/list/NavListItem.js","components/list/NavListSubheader.js","components/CustomIcon.js","layout/BodyLayout/NavBar/NavItems.js","layout/BodyLayout/NavBar/AdminNavItems.js","layout/BodyLayout/NavBar/NavBar.js","operations/queries/getAuthUser.js","operations/queries/getUserRolesByUserId.js","data/helper/storageHelpers.js","layout/BodyLayout/TopBar/BrandIcon.js","layout/BodyLayout/TopBar/PowerSettingPopover.js","operations/mutations/createFeedback.js","operations/mutations/sendFeedbackEmail.js","layout/BodyLayout/TopBar/ProvideFeedback.js","layout/BodyLayout/TopBar/FeedbackPopover.js","operations/mutations/updateUserLastLogin.js","layout/BodyLayout/TopBar/SplashModalContent/SystemOwnerBadgesInfo.js","components/buttons/AddButton.js","layout/BodyLayout/TopBar/SplashModalContent/BadgesSearch.js","layout/BodyLayout/TopBar/SplashModalContent/UserImgPopover.js","layout/BodyLayout/TopBar/SplashModalContent/SplashModal.js","operations/queries/checkIfAuthSplashScreenCompleted.js","layout/BodyLayout/GlobalSearchBlock.js","hooks/usePermissions.js","hooks/useTopBarSnackbar.js","layout/BodyLayout/TopBar/TopBar.js","layout/BodyLayout/MobileAlertPage.js","hooks/useScreenDimensions.js","layout/BodyLayout/BodyLayout.js","data/immutableEntities/candidateImmutables/RequisitionType.js","data/immutableEntities/candidateImmutables/HiringManager.js","data/immutableEntities/candidateImmutables/Location.js","data/immutableEntities/candidateImmutables/RequisitionDetails.js","data/immutableEntities/candidateImmutables/Job.js","data/immutableEntities/candidateImmutables/CandidateDetails.js","data/immutableEntities/candidateImmutables/AdditionalInformation.js","data/redux/candidateRequest/candidateRequestReducer.js","data/redux/common/commonReducer.js","data/immutableEntities/offboardImmutables/DataTransfer.js","data/immutableEntities/offboardImmutables/DeviceUnassign.js","data/immutableEntities/offboardImmutables/LicenseRemoval.js","data/immutableEntities/offboardImmutables/TaskScheduling.js","data/immutableEntities/HrInformation.js","data/immutableEntities/offboardImmutables/OffboardDetails.js","data/redux/offboardRequest/offboardRequestReducer.js","data/redux/taskManager/taskManagerReducer.js","data/redux/thirdParty/thirdPartyReducer.js","data/redux/requisitionRequst/requisitionRequestActonTypes.js","data/redux/requisitionRequst/requisitionRequestReducer.js","data/redux/onboardingDashboard/onboardingDashboardReducer.js","data/redux/multiCandidateRequest/multiCandidateRequestReducer.js","data/redux/userDirectory/userDirectoryReducer.js","data/redux/taskManagerHrInfo/taskManagerHrInfoReducer.js","data/redux/store.js","components/GlobalStyles.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthorizedApolloProvider","children","useState","accessToken","setAccessToken","useEffect","token","document","cookie","split","find","x","startsWith","onError","graphQLErrors","networkError","map","message","locations","path","console","log","httpLink","createUploadLink","uri","authMiddleware","ApolloLink","operation","forward","setContext","headers","authorization","client","ApolloClient","cache","InMemoryCache","addTypename","link","concat","connectToDevTools","ApolloProvider","theme","createTheme","palette","type","primary","main","dark","light","secondary","info","warning","success","background","default","paper","gradient","text","props","MuiListItemText","primaryTypographyProps","variant","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightBold","fontSize","h2","weight","h5","h6","subtitle1","subtitle2","button","color","AuthUserContext","createContext","AuthUserContextProvider","isPageLoading","setIsPageLoading","authUser","setAuthUser","authUserDirectReports","setAuthUserDirectReports","authUserRoles","setAuthUserRoles","authUserPermissions","setAuthUserPermissions","permDashboardView","setPermDashboardView","permMultiCandidateRequestView","setMultiCandidateRequestView","permBadgeRequestApproveTasks","setPermBadgeRequestApproveTasks","permBadgeRequestCancelTasks","setPermBadgeRequestCancelTasks","permBadgeRequestRejectTasks","setPermBadgeRequestRejectTasks","permOffboardingAll","setPermOffboardingAll","permOffboardingTeam","setPermOffboardingTeam","permOffboardingNfte","setPermOffboardingNfte","permOffboardingApprovalBypass","setPermOffboardingApprovalBypass","permOffboardingApproveTasks","setPermOffboardingApproveTasks","permOffboardingCancelTasks","setPermOffboardingCancelTasks","permOffboardingHrInfo","setPermOffboardingHrInfo","permOffboardingRejectTasks","setPermOffboardingRejectTasks","permOnboardingAll","setPermOnboardingAll","permOnboardingApprovalBypass","setPermOnboardingApprovalBypass","permOnboardingApproveTasks","setPermOnboardingApproveTasks","permOnboardingCancelTasks","setPermOnboardingCancelTasks","permOnboardingRejectTasks","setPermOnboardingRejectTasks","permOnboardingRequisitionBypass","setPermOnboardingRequisitionBypass","permOnboardingTeam","setPermOnboardingTeam","permOnboardingDashboardView","setPermOnboardingDashboardView","permOrgChartView","setPermOrgChartView","permReportGeneratorView","setPermReportGeneratorView","permReportingDashboardView","setPermReportingDashboardView","permReportNonFteAudit","setPermReportNonFteAudit","permRequisitionAll","setPermRequisitionAll","permRequisitionApproveTasks","setPermRequisitionApproveTasks","permRequisitionRejectTasks","setPermRequisitionRejectTasks","permRequisitionCancelTasks","setPermRequisitionCancelTasks","permSysMgmtBadgeMgmt","setPermSysMgmtBadgeMgmt","permSysMgmtCandidatePortalAccess","setPermSysMgmtCandidatePortalAccess","permSysMgmtFteCandidateTracker","setPermSysMgmtFteCandidateTracker","permSystemsAndServicesView","setPermSystemsAndServicesView","permSysMgmtLogs","setPermSysMgmtLogs","permSysMgmtManage","setPermSysMgmtManage","permSysMgmtSchedulerJobs","setPermSysMgmtSchedulerJobs","permSysMgmtSettingsOffboarding","setPermSysMgmtSettingsOffboarding","permSysMgmtSettingsOnboarding","setPermSysMgmtSettingsOnboarding","permTaskManagerViewAll","setPermTaskManagerViewAll","permTaskManagerViewAllOffboarding","setPermTaskManagerViewAllOffboarding","permTaskManagerViewAllOnboarding","setPermTaskManagerViewAllOnboarding","permTaskManagerViewAllRequisition","setPermTaskManagerViewAllRequisition","permTaskManagerViewTeam","setPermTaskManagerViewTeam","permTaskManagerViewHrInfo","setPermTaskManagerViewHrInfo","permUserDirectoryFinanceView","setPermUserDirectoryFinanceView","permUserDirectoryItDetailsView","setPermUserDirectoryItDetailsView","permUserDirectoryLpsyncManage","setPermUserDirectoryLpsyncManage","permUserDirectoryNonFteAudit","setPermUserDirectoryNonFteAudit","permUserDirectoryOrgDetailsView","setPermUserDirectoryOrgDetailsView","permUserDirectoryView","setPermUserDirectoryView","permThirdPartyDirectoryView","setPermThirdPartyDirectoryView","permBulkApproverOnboarding","setPermBulkApproverOnboarding","permBulkApproverRequisition","setPermBulkApproverRequisition","permBulkApproverOffboarding","setPermBulkApproverOffboarding","Provider","value","Page","forwardRef","ref","title","rest","Helmet","useStyles","makeStyles","fontWeight","marginLeft","BreadcrumbText","classes","Typography","component","className","memo","NoPermissionsError","Box","ml","mt","NonFteAuditReportContext","NonFteAuditReportContextProvider","allAuditsData","setAllAuditsData","nonFteTotal","setNonFteTotal","nonFteData","setNonFteData","offboardingRequiredTotal","setOffboardingRequiredTotal","employeeTypeIncorrectTotal","setEmployeeTypeIncorrectTotal","directReportKnownTotal","setDirectReportKnownTotal","directReportUnknownTotal","setDirectReportUnknownTotal","directReportCorrectTotal","setDirectReportCorrectTotal","isDataLoading","setIsDataLoading","auditData","setAuditData","GET_REPORTING_NONFTE_AUDITS","gql","GET_ALL_NONFTE_OKTA_USERS","countContainer","width","display","flexDirection","countBox","alignItems","marginRight","spacing","line","borderRight","viewBox","border","borderRadius","countNum","countNumTitle","NonFteCountBox","useContext","root","justifyContent","CircularIndeterminate","CircularProgress","StyledTableRow","withStyles","backgroundColor","hover","cursor","TableRow","tableHeadCell","visuallyHidden","clip","height","margin","overflow","padding","position","top","EnhancedTableHead","order","orderBy","onRequestSort","headCells","headAlign","TableHead","headCell","TableCell","align","disablePadding","sortDirection","id","isNotSortable","label","TableSortLabel","active","direction","onClick","property","event","TaskScheduleTypes","IMMEDIATE","SCHEDULED","SENSITIVE","TaskTypes","OFFBOARDING","ONBOARDING","REQUISITION","BADGE_REQUEST","BadgeTypes","SYSTEM_OWNER","HOBBIES_INTERESTS","SUBJECT_MATTER_EXPERT","TOVUTI","BadgeNames","BadgeImages","BadgeTypesObj","idType","nameType","iconName","getLogDateString","timestamp","dateFormat","Date","parseInt","toISOString","getDateString","getFullDateString","getDateStringWithTimeAndCustomTimezone","zone","getShortDateWithTimeString","getDateWithTimeString","getDateStringWithTimeAndDefaultTimezone","trailingS","length","joinWith","splitter","valueN","filter","Boolean","join","joinWithSpace","typesWithPrefix","prefix","obj","Object","entries","reduce","prev","curK","curV","deepCopy","JSON","parse","stringify","descendingComparator","a","b","orderByStrings","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","getValidationMessage","validate","fieldName","setError","errorText","validator","v","errorMessage","getProfileName","profile","firstName","lastName","getProfileNameAndInfo","location","jobTitle","getRequisitionTypeTitle","jobCode","startDate","getDigitsFromString","replace","getFullName","taskName","fieldStartsWith","task","getOffboardingFullName","getOnboardingFullName","getTaskFieldValue","getOnboardingFieldValue","getOffboardingFieldValue","getRequisitionFieldValue","getFieldValue","field","getScheduleDateOrImmediate","day","taskScheduleType","taskScheduleDateTime","getTaskValueOrNotEntered","secondField","secondValue","getYesOrNo","logOptions","description","logType","variables","input","logNotification","logDescription","getStrWithFirstUpperLetter","s","charAt","toUpperCase","slice","toLowerCase","transformSpaceToDashAndLowerCase","str","getGroupedBadges","badges","typeBadgesArray","values","badge","badgeType","filteredBadgesArray","fromEntries","Map","NoResultsTypography","args","tableContainer","numeric","NonFteTable","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","minWidth","TableContainer","Table","stickyHeader","size","LoadingCircle","TableBody","i","oktaLastLogin","nonFte","tabIndex","userName","employeeType","managerEmail","auditStatus","getTime","toString","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","target","icon","RefreshButton","handleClick","Button","BoxCardWrapper","Card","CardContent","searchTextField","lineHeight","SearchTextField","handleChange","handleClose","TextField","autoComplete","onChange","e","InputProps","endAdornment","InputAdornment","IconButton","edge","isObjectsEqual","obj1","obj2","props1","getOwnPropertyNames","props2","val1","val2","isObjects","isObject","object","toSetArray","Set","removeExtraSpaces","string","trim","transform","paddingTop","AutoTextField","SelectTextField","dataList","onValueChange","deleteFirst","valueLabelMapper","sortedOptions","useMemo","select","MenuItem","CustomCollapse","Collapse","timeout","unmountOnExit","applyFilterBtn","ApplyFiltersButton","ResetFiltersButton","filterBox","marginTop","filterFields","clearFilterBtn","filterActionWrapper","FilterBlock","filterOpen","handleClearFilters","handleFilterQuery","in","CustomAutocomplete","textFieldProps","Autocomplete","freeSolo","autoSelect","blurOnSelect","newValue","renderInput","params","NonFteFilterBox","setIsFilterApplied","employeeTypeFilter","setEmployeeTypeFilter","managerFilter","setManagerFilter","auditStatusFilter","setAuditStatusFilter","useCallback","employeeTypes","data","managers","String","auditStatuses","filtered","report","includes","options","getOptionLabel","option","wrapperCardContent","backgroundImage","marginBottom","NonFteSearchFilterBox","refetch","searchQuery","setSearchQuery","isFilterApplied","setFilterOpen","shouldSort","useExtendedSearch","threshold","keys","fuzzySearch","fuse","Fuse","result","search","item","Toolbar","flexGrow","csvIcon","PaperCardWrapper","paperClassName","contentClassName","pb","Paper","elevation","handleError","error","history","push","AuditReportPageContent","useHistory","useQuery","onCompleted","allData","get_reporting_nonfte_audits","countTotals","nonfteAuditsData","nonfteUsersData","get_all_nonfte_okta_users","filterData","auditsData","usersData","newData","forEach","some","audit","auditUserEmail","email","insert","auditUserStatus","BreadcrumbLink","href","NavLink","to","AdminRoutes","FrontendRoutes","HOME","LOGIN_CALLBACK","NON_FTE_AUDIT_REPORT","REPORTING_DASHBOARD","REPORT_GENERATOR","CONSOLIDATED_REPORT","DASHBOARD","ORGANIZATION_CHART","CANDIDATE_REQUEST","MULTI_CANDIDATE_REQUEST","OFFBOARD_EMPLOYEE","ONBOARDING_DASHBOARD","ONBOARDING_DASHBOARD_VIEW","hash","REQUISITION_REQUEST","SYSTEM_STATUS","TASK_MANAGER","TASK_MANAGER_VIEW","TASK_MANAGER_VIEW_TASK","taskId","USER_DIRECTORY","USER_DIRECTORY_PROFILE","user","THIRD_PARTY_DIRECTORY","THIRD_PARTY_DIRECTORY_PROFILE","thirdPartyId","GLOBAL_SEARCH","SERVICE_AND_SYSTEM_DIRECTORY","SERVICE_AND_SYSTEM_DIRECTORY_SERVICE","BreadcrumbHomeBox","admin","Breadcrumbs","PageTitle","PageTitleBox","mb","NonFteAuditReportPage","viewNonFteAuditReportPage","setViewNonFteAuditReportPage","mx","NonFteAuditReportPageContent","ConsolidatedReportPage","DashboardPage","Container","my","HomePage","isLoading","setIsLoading","infoIcon","infoSmallIcon","InfoBlock","small","Info","Help","SET_SELECTED_OFFBOARD_USER","SET_SELECTED_TRANSFER_USER","SET_IS_DRIVE_CHECKED","SET_IS_CALENDAR_CHECKED","SET_IS_DATA_STUDIO_CHECKED","SET_GOOGLE_USER_ALIASES","SET_UNASSIGN_LICENSES","SET_DEVICE_UNASSIGN","SET_JAMF_DEVICES_DATA","SET_GOOGLE_DEVICES_DATA","SET_SCHEDULE_TYPE","SET_SCHEDULE_DATE","SET_SCHEDULE_EPOCH","SET_SCHEDULE_TIME_ZONE","SET_SCHEDULE_TIME_ZONE_ID","SET_SCHEDULE_LOCATION_LAT","SET_SCHEDULE_LOCATION_LONG","SET_SCHEDULE_CITY","SET_IS_NOTIFY_TERMINATIONS_CHECKED","SET_IS_NOTIFY_TERMINATIONS_DISABLED","SET_HR_TERMINATION_CODE","SET_HR_TERMINATION_TYPE","SET_HR_SELECTED_DATE","SET_HR_TIMEZONE","SET_HR_TIMEZONE_ID","SET_HR_PAYROLL_EPOCH","SET_HR_NOTES","SET_HR_LOCATION_LAT","SET_HR_LOCATION_LONG","SET_HR_CITY","SET_SCHEDULE_TYPE_ERROR","SET_SCHEDULE_DATE_ERROR","SET_SCHEDULE_TIME_ZONE_ERROR","SET_HR_DATE_ERROR","SET_HR_TIME_ZONE_ERROR","SET_IS_WARNING_MODAL_OPEN","SET_WARNING_MODAL_MESSAGE","SET_IS_BUTTON_DISABLED","SET_IS_OFFBOARDING","SET_OFFBOARDING_REASON","SET_IS_SELECTED_LOADING","SET_ACTIVE_STEP","SET_DEFAULT_STATE","setSelectedOffboardUser","selectedOffboardUser","OffboardRequestActonTypes","payload","setSelectedTransferUser","selectedTransferUser","setScheduleEpoch","scheduleEpoch","setIsNotifyTerminationsChecked","isNotifyTerminationsChecked","setScheduleTypeError","scheduleTypeError","setScheduleDateError","scheduleDateError","setScheduleTimeZoneError","scheduleTimeZoneError","setHrDateError","hrDateError","setHrTimeZoneError","hrTimeZoneError","setIsWarningModalOpen","isWarningModalOpen","setIsButtonDisabled","isButtonDisabled","setDefaultState","activeIcon","completedIcon","RequestStepper","steps","activeStep","Stepper","Step","StepLabel","StepIconProps","completed","box","BottomSectionTitle","Grid","GET_GOOGLE_USER_IMG","smallImgDiv","smallImg","boxShadow","mediumImgDiv","mediumImg","largeImgDiv","largeImg","UserImg","imgClass","imgDivClass","medium","large","src","get_google_user_img","photoData","alt","grid","BottomSectionWrapper","OffboardWhoBottomSection","useSelector","getInOffboardingRequest","xs","Item","OffboardWhenBottomSection","getOffboardingRequestObject","shallowEqual","scheduleType","scheduleDate","scheduleTimeZone","chip","CustomChip","Chip","DataTransferBottomSection","getActiveStep","isDriveChecked","isCalendarChecked","isDataStudioChecked","LicensesDevicesBottomSection","deviceUnassign","unassignLicenses","jamfDevicesData","googleDevicesData","license","isChecked","name","device","deviceName","serialNumber","footer","flexShrink","divider","OffboardRequestBottomBar","Divider","container","RequestStepperButtonWrapper","topMargin","CustomPortal","portalRoot","getElementById","newElement","createElement","appendChild","removeChild","ReactDOM","rand","Math","round","random","shadows","smallPaper","minwidth","maxWidth","minHeight","largePaper","maxHeight","CustomModal","middlePosition","left","getModalStyle","modalStyle","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","open","style","modalInfo","MissedInputModal","modalMsg","onClose","m","mr","contentBodyBox","breakpoints","up","gradientPaper","stepTitles","OffboardRequestWrapperPage","warningModalMessage","isOffboarding","setActiveStep","offboardWhoComponent","offboardWhenComponent","dataLicensesDevicesComponent","hrInfoComponent","reviewComponent","stepperButtons","stepperResetBtn","summaryComponent","setSteps","isLastStep","scroll","newTitles","step","handleNext","handleBack","handleReset","stepperButtonWithProps","Children","child","isValidElement","cloneElement","stepperResetBtnWithProps","connect","state","offboardRequest","get","getIn","USER_DATA_FIELDS","SEARCH_USERS_QUERY","SEARCH_NFTE_USERS_QUERY","progressCircleBox","alignContent","progressCircle","SelectCircularProgress","p","useDebouncedChangeHandler","callback","dispatch","debounce","query","trimmedQuery","textField","resultsBox","zIndex","AllEmployeeSelect","setIsSelectedLoading","setQuery","setUsersData","resultsOpen","setResultsOpen","isResultsLoading","setIsResultsLoading","useLazyQuery","fetchPolicy","search_nfte_users","search_users","employeeNumber","executeSearch","searchOnChange","debouncedChangeHandler","clsx","required","helperText","List","Fragment","ListItem","ListItemText","GET_TEAM_NONFTE_DIRECT_REPORTS","AutocompleteTextField","alertBox","TeamEmployeeSelect","userDirectReports","setUserDirectReports","get_team_nonfte_direct_reports","renderOption","iconTextBox","selectBtnBox","selectedContainer","SelectedOffboardEmployee","userProfile","clearSelectedOffboardUser","sm","gutterBottom","businessUnit","department","SupervisedUserCircle","manager","SEARCH_USER_OFFBOARDING_TASK","alert","AlertBox","severity","Alert","FteTrackerStatuses","DISPATCH_NOW","NEW","SHIPPED","statusField","statusFailed","statusCancelled","statusComplete","statusPending","statusSigning","statusReady","statusRunning","statusExpired","tierOne","tierTwo","tierThree","tierFour","TaskStatusBlock","taskStatus","statusTextClass","TaskStatuses","PENDING","PENDING_USER_TASKS","READY","RUNNING","COMPLETE","CANCELLED","FAILED","EXPIRED","TierStatuses","One","Two","Three","Four","getTaskStatusClass","getTaskStatusText","CircleIcon","cx","cy","r","stroke","strokeWidth","fill","SaSFlag","createFlag","Tooltip","colour","leftText","paddingLeft","RequestFormTypography","subtitle","mapDispatchToProps","isSelectedLoading","setIsOffboarding","setOffboardingReason","offboardingReason","progressBar","OffboardEmployeeSelect","checkOffboardTask","search_user_offboarding_task","executeSearchOffboardingTask","toLocaleLowerCase","LinearProgress","RequestFormWrapper","gridContainer","RequestFormGridContainer","SectionTitleBlock","OffboardWho","CREATE_OFFBOARDING_TASK","ADD_TASK_APPROVAL","CREATE_LOG_ENTRY","EmployeeTypes","BPO","DELIVERY","INDIVIDUAL","SALES","TECHNICAL","FULL_TIME","isFullTimeEmployee","require","regex","number","floatNumber","phoneNumber","date","isEmpty","isMoreThan25Char","validateNameInput","test","validateEmailInput","validatePhoneNumberInput","num","validateNumberInput","validateSalaryInput","validDateFormat","isEmptyString","isPastDate","isEmployeeType","isInArray","ApprovalStatuses","APPROVED","REJECTED","CONFIRMED_HR_INFORMATION","SIGNED_ACCEPTABLE","SIGNED_VENDOR","SIGNED_SECURITY","COMPLETE_SIGNING","REMAINDER_EMAIL_SENT","NEW_HIRE_EMAIL_SENT","CANDIDATE_PORTAL_EMAIL_SENT","GET_GOOGLE_USER_ALIASES","StepperBackButton","StepperNextButton","StepperButtons","useDispatch","errorDispatch","func","dispatchFunc","dataTransfer","taskScheduling","hrInformation","scheduleTimeZoneId","hrTerminationCode","hrTerminationType","hrSelectedDate","hrPayrollEpoch","hrTimeZoneId","hrTimeZone","hrNotes","isUnassignDevice","setIsUnassignDevice","isUnassignLicense","setIsUnassignLicense","jamfDevices","setJamfDevices","googleDevices","setGoogleDevices","licenses","setLicenses","taskOffboardingType","setTaskOffboardingType","isTransferAlias","setIsTransferAlias","allUserAliases","setAllUserAliases","get_google_user_aliases","alias","executeGetAliases","useMutation","createLog","createOffboardingTask","approvalStatus","addApproval","approvalStage","handleOpen","createLogEntry","addTaskApproval","status","approvalInfo","taskType","taskApprovalStatus","createTask","allDevices","taskScheduleTimezone","taskScheduleEpochTime","taskSendNotification","offboardingTask","offboardUsername","offboardEmail","offboardFirstName","offboardLastName","offboardEmployeeType","offboardEmployeeNumber","offboardLocation","offboardDepartment","offboardOktaId","transferUsername","transferFirstName","transferLastName","transferEmail","transferGdrive","transferGcalendar","transferGdataStudio","transferAlias","offboardingTransferAlias","unassignLicense","offboardingUnassignLicenses","unassignDevice","offboardingUnassignDevices","payrollEndDateTime","payrollEpochTime","payrollEndTimezone","payrollNote","approvalBypass","msg","concatDevices","handleOffboardWhenCheck","handleHrInfoCheck","handleDataTransferStep","handleDevicesStep","hasJamfDevices","hasGoogleDevices","userDevices","deviceManager","deviceId","deviceSerialNumber","deviceModel","model","handleLicensesStep","userLicenses","handleOnNext","disabled","searchOffboardTask","HtmlTooltip","tooltip","pxToRem","InfoTooltip","placement","typeBox","ScheduleTypeSelect","setScheduleType","setIsNotifyTerminationsDisabled","FormControl","InputLabel","Select","labelId","isNotifyTerminationsDisabled","ScheduleTypeSelectContainer","dateTimeField","dateField","DateTextField","minDateInDays","nowDateTime","minDate","getDate","nowDate","setDate","noValidate","targetValue","InputLabelProps","shrink","inputProps","min","GET_TIME_ZONE_INFO","GET_LOCATION_PREDICTION","GET_LOCATION_COORDINATES","TimeZoneSearch","setHrCity","setHrTimeZone","setHrTimeZoneId","setHrLocationLat","setHrLocationLong","setValue","inputValue","setInputValue","setOptions","timeZoneName","setTimeZoneName","zoneId","setZoneId","latitude","longitude","latLng","setLatLng","get_time_zone_info","timeZoneId","executeQuery","get_location_coordinates","lat","lng","executeLocationCoordinatesQuery","executeLocationQuery","handleValue","get_location_prediction","filterOptions","includeInputInList","filterSelectedOptions","onInputChange","newInputValue","fullWidth","matches","main_text_matched_substrings","parts","main_text","match","offset","part","highlight","secondary_text","ScheduleDateTimeInput","setScheduleDate","setScheduleTimeZone","setScheduleTimeZoneId","city","setCity","scheduleLocationLat","setScheduleLocationLat","scheduleLocationLong","setScheduleLocationLong","epochTime","ScheduleDateTimeInputContainer","ColorCheckbox","checked","Checkbox","CustomLabelCheckbox","FormControlLabel","control","checkedIcon","NotificationCheck","FormGroup","row","NotificationCheckContainer","OffboardWhen","TransferWhatCheck","setIsDriveChecked","setIsCalendarChecked","setIsDataStudioChecked","TransferWhatCheckContainer","TransferWhoSelect","TransferWhoSelectContainer","GET_ACLOUDGURU_LICENSE","GET_SLACK_LICENSE","GET_SMARTSHEET_LICENSE","formBox","LicensesCheck","setUnassignLicenses","selectedUserEmail","isAllChecked","setIsAllChecked","verifiedAcloudguru","setVerifiedAcloudguru","verifiedSlack","setVerifiedSlack","verifiedSmartsheet","setVerifiedSmartsheet","get_acloudguru_license","ok","executeAcloudguruSearch","get_slack_license","executeSlackSearch","get_smartsheet_license","executeSmartsheetSearch","verifyLicenses","newState","LicensesCheckContainer","GET_JAMF_DEVICES","GET_GOOGLE_CHROME_DEVICES","DeviceCheckboxes","devicesData","isChrome","inputWrapperContainer","paddingRight","inputWrapperLabel","alignSelf","GridInputWrapper","gridInput","inputWrapperContainerStyle","inputWrapperLabelStyle","xsItemChild","checkIfAllChecked","devices","allChecked","changeDeviceStatus","setDevices","DevicesCheck","setJamfDevicesData","setGoogleDevicesData","setHasJamfDevices","setHasGoogleDevices","verifiedJamf","setVerifiedJamf","verifiedGoogle","setVerifiedGoogle","dataWithCheckedStatus","get_jamf_devices","executeJamfSearch","get_google_chrome_devices","executeGoogleSearch","allJemfChecked","allGoogleChecked","newJamfDeviceState","newGoogleDeviceState","handleCheckedAll","DevicesCheckContainer","DataLicensesDevices","CustomFormSelect","withoutEmptyOption","selectClasses","inputLabelClasses","outlined","GET_HRTERMINATION_CODES","HrTerminationCodeSelect","get_hrtermination_codes","terminationCode","HrTerminationCodeContainer","HrTerminationTypeSelect","HrTerminationTypeContainer","HrPayrollDateTimeSelect","hrLocationLat","hrLocationLong","setHrPayrollEpoch","HrPayrollDateTimeContainer","HrDateInput","paddingBottom","HrDateContainer","HrTimeZoneContainer","hrCity","HrDateTimezoneInfo","timeZone","HrDateTimezoneInfoContainer","NotesTextField","multiline","minRows","maxRows","maxLength","HrPayrollNotesInput","placeholder","HrPayrollNotesContainer","HrInformation","gridItem","GridItem","sectionTitle","RequestSummarySection","gridItemContainer","RequestSummarySectionTitle","RequestSummaryItem","TopTypography","OffboardRequestSummary","review","StepperResetRequestButton","clearData","toJS","fieldPath","OffboardRequestPageContent","OffboardRequestPage","GET_ALL_AUTH_REQUISITION_TOTALS","totalContainer","TotalContainer","totalBox","totalNum","totalNumTitle","TotalBox","TotalBoxDivider","TotalsBox","statuses","isSubmitted","executeFunc","totals","useGetAllAuthRequisitionTotals","config","handleComplete","get_all_auth_requisition_totals","RequisitionTotals","isReqSubmitted","onboardingDashboard","GET_ALL_AUTH_ONBOARDING_TOTALS","useGetAllAuthOnboardingTotals","get_all_auth_onboarding_totals","CandidateTotals","isCandidateSubmitted","GET_AUTH_REQUISITION_TASKS","SearchInput","onSearch","minLength","debounceTimeout","element","SET_SELECTED_TASK_DATA","SET_IS_DRAWER_OPEN","SET_VIEW_TASK_TYPE_DETAILS","SET_IS_REQ_SUBMITTED","SET_IS_CANDIDATE_SUBMITTED","setSelectedTaskData","selectedTaskData","OnboardingDashboardActonTypes","setIsDrawerOpen","isDrawerOpen","setViewTaskTypeDetails","viewTaskTypeDetails","setIsReqSubmitted","setIsCandidateSubmitted","RequestSearchBar","btnText","handleRefresh","Link","ThresholdUnits","defaultThreshold","unit","parseThreshold","scrollThreshold","parseFloat","warn","InfiniteScroll","throttledOnScrollListener","_scrollableNode","_infScroll","lastScrollTop","actionTriggered","_pullDown","startY","currentY","dragging","maxPullDownDistance","getScrollableTarget","scrollableTarget","HTMLElement","onStart","evt","MouseEvent","pageY","TouchEvent","touches","willChange","transition","onMove","Number","pullDownToRefreshThreshold","setState","pullToRefreshThresholdBreached","onEnd","refreshFunction","requestAnimationFrame","onScrollListener","onScroll","setTimeout","documentElement","scrollTop","body","inverse","isElementAtTop","isElementAtBottom","hasMore","showLoader","next","prevDataLength","dataLength","throttle","bind","this","Error","window","addEventListener","initialScrollY","scrollHeight","scrollTo","pullDownToRefresh","firstChild","getBoundingClientRect","forceUpdate","removeEventListener","prevProps","clientHeight","screen","availHeight","WebkitOverflowScrolling","hasChildren","Array","outerDivStyle","infScroll","pullDown","right","releaseToRefreshContent","pullDownToRefreshContent","loader","endMessage","nextProps","prevState","Component","scrollLoader","infinityScrollLoader","CustomInfiniteScroll","tableCircularProgress","TableCircularProgress","BoxTableWrapper","loading","CustomTableRow","rowData","tableCellClasses","rowField","DashboardTableContent","valRow","handleOnSelectedTask","requestDateTime","DateRowField","dateTime","tinyFontSize","ReqJobTitleCodeField","req","requisitionTask","reqJobTitle","reqJobCode","taskStatusDiv","smallText","ReqStatusRowField","reqFulfilled","ViewTaskButton","reqValueRow","taskCreatedDateTime","taskCreatorFirstName","taskCreatorLastName","reqType","reqStartDate","RequisitionRequests","pageCount","itemsPerPage","filters","setFilters","reqData","setReqData","tasksCountStatus","setTasksCountStatus","isSearchInProgress","setIsSearchInProgress","currentQuery","setCurrentQuery","handleQueryFilter","get_auth_requisition_tasks","handlePageChange","ViewButton","GET_AUTH_ONBOARDING_TASKS","CandidateStatusRowField","candidate","candidateValueRow","onboardingTask","onboardEmployeeType","onboardJobTitle","CandidateRequests","candidateData","setCandidateData","get_auth_onboarding_tasks","GET_TASK","textAlign","spanText","RequestInfoBoxItem","question","infoPaper","RequestInfoBox","sx","DelegateChip","delegate","delegateLabel","delegateTo","delegateCompany","DelegatesInfoBox","delegateData","GET_AUTH_ONBOARDING_DELEGATES","timelineRoot","timelineDate","timelineTime","timelineTitle","timelineName","timelineOppositeContent","alignCenter","timelineContent","CustomTimelineItem","isLast","dotClasses","time","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","heading","headingToolbar","borderBottom","TaskHeadingToolbar","TaskContainerTable","tableProps","containerProps","tableCellKey","CustomTableTitleCell","scope","tableCell","CustomTableValueCell","TaskSection","statusBlock","tableRows","tableRow","hidden","defaultLink","UserProfileLink","username","isRob","linkClass","underline","statusSigned","statusApproved","statusRequested","TaskTimeline","taskData","items","getTimeLineItems","Timeline","taskEndDate","taskApprovals","taskCreatorUsername","creatorName","approval","approvalUsername","approvalFirstName","approvalLastName","approvalEmail","approvalDateTime","approvalName","dotOptions","getDotTaskOptions","getTaskApprovalStatusTitle","onboardTaskRows","locationDescription","oldTaskId","getTaskValueOrNA","onboardUsername","onboardEmail","onboardNonLpEmail","onboardCompany","onboardLocationDescription","onboardLocation","onboardManagerFirstName","onboardManagerLastName","onboardManagerEmail","onboardDepartment","isGoogleAccountNeeded","onboardDevice","onboardingOktaGroups","groupsBox","OktaGroupBox","group","oktaGroupName","oktaGroupId","closeToolbar","btnDiv","TaskCloseButtonToolbar","overflowY","footerDiv","SelectedTaskWrapper","withFooter","preChildren","approveBtn","rejectBtn","cancelBtn","pointerEvents","CancelButton","SubmitApprovalButton","handleSubmit","TaskRejectButton","isRejected","TaskActionButton","isAction","TaskCancelButton","isCancelled","TaskApproveButton","isApproved","SelectedOnboardActionSection","onSubmitted","cancelledNotes","setCancelledNotes","isCancelledError","setIsCancelledError","setModalMsg","get_task","handleCancel","executeTaskSearch","handleCloseAfterSubmit","approvalNote","handleModalClose","SelectedTaskInfoBlock","condition","SelectedCandidateTaskContent","taskActionPermissions","SelectedCandidateActionSection","requisitionTaskRows","reqHiringManagerFirstName","reqHiringManagerLastName","reqHiringManagerEmail","isBackfill","reqBackfillFirstName","reqBackfillLastName","reqBackfillUsername","reqCountryDesc","reqCompanyCode","reqParentMgmtCC","reqManagementCC","reqFunctionalAreaDesc","reqFulfilledID","reqBonusAmount","reqBonusType","reqCommissionAmount","reqCommissionCurrency","comments","reqBusinessUnit","reqDepartment","reqLocationDescription","reqLocation","reqSpendCurrency","reqSpendAmount","reqSpendPeriod","reqContractMonths","reqContractHoursPerWeek","SET_REQUISITION_TYPE","SET_START_DATE","SET_HIRING_MANAGER","SET_BUSINESS_UNIT","SET_DEPARTMENT","SET_LOCATION","SET_EMPLOYEE_TYPE","SET_REQUISITION_DETAILS","SET_FIRST_NAME","SET_LAST_NAME","SET_NON_LP_EMAIL","SET_JOB","SET_JOB_TITLE","SET_JOB_CODE","SET_SELECTED_COMPANY","SET_OFFICE_NUMBER","SET_MOBILE_NUMBER","SET_USERNAME","SET_IS_DEVICE_NOTE_CONFIRMED","SET_REQUEST_DEVICE","SET_IS_FILLED_BY_REQUISITION","SET_IS_GOOGLE_ACCOUNT_NEEDED","SET_REQUISITION_TYPE_ERROR","SET_START_DATE_ERROR","SET_HIRING_MANAGER_ERROR","SET_BUSINESS_UNIT_ERROR","SET_DEPARTMENT_ERROR","SET_LOCATION_ERROR","SET_EMPLOYEE_TYPE_ERROR","SET_FIRST_NAME_ERROR","SET_LAST_NAME_ERROR","SET_NON_LP_EMAIL_ERROR","SET_JOB_ERROR","SET_SELECTED_COMPANY_ERROR","SET_USERNAME_ERROR","SET_REQUEST_DEVICE_ERROR","setRequisitionDetails","requisitionDetails","CandidateRequestActonTypes","setJob","job","setJobCode","setFilledByRequisition","isFilledByRequisition","setIsGoogleAccountNeeded","setRequisitionTypeError","requisitionTypeError","setStartDateError","startDateError","setHiringManagerError","hiringManagerError","setBusinessUnitError","businessUnitError","setDepartmentError","departmentError","setLocationError","locationError","setEmployeeTypeError","employeeTypeError","setFirstNameError","firstNameError","setLastNameError","lastNameError","setNonLpEmailError","nonLpEmailError","setJobError","jobError","setSelectedCompanyError","selectedCompanyError","setUsernameError","userNameError","setSelectedDeviceError","selectedDeviceError","ActionSection","SelectedRequisitionActionsSection","selfCreatedTask","setStatus","showCancelButton","checkStatus","btnClick","SelectedRequisitionTaskContent","handleOnboard","reqHiringManagerId","locationCode","reqLocationCode","reqDetails","requisitionType","hiringManager","selfTaskActionPermissions","taskUsername","checkSelfCreatedTask","SelectedRequisitionActionSection","SelectedTaskDrawer","setIsSubmitted","resetSubmitted","Drawer","anchor","key","CustomTabPanel","vertical","other","role","a11yProps","StyledTab","selected","Tab","tabs","TabsPaper","tabName","tabPanelClasses","styled","AppBar","Tabs","scrollButtons","content","infoBoxWrapper","OnboardingDashboardPageContent","useRouteMatch","dashView","onboardingDashboardTabs","get_auth_onboarding_delegates","onboardingDelegates","OnboardingDashboardPage","landingLogoText","landingLogo","LoadingLogo","viewErrorMsg","setViewErrorMsg","NAME_LABEL","TITLE_LABEL","EMAIL_LABEL","DEPARTMENT_LABEL","LOCATION_LABEL","EMPLOYEE_TYPE_LABEL","DIRECT_REPORTS_TOTAL_LABEL","DIRECT_REPORTS_FULL_TIME_LABEL","DIRECT_REPORTS_CONTRACTOR_LABEL","DIRECT_REPORTS_PARTNER_LABEL","ROLL_UPS_LABEL","ROLL_UPS_BREAKDOWN_LABEL","LINK_LABEL","IMG_LABEL","BalkanOrgChart","divRef","createRef","fulltime_children_count_full_time","fulltime_children_count_contractor","fulltime_children_count_partner","fulltime_children_count_intern","children_count","fulltime_children_count_student","OrgChart","templates","ula","field_7","field_0","field_1","chart","current","nodes","template","scaleInitial","mouseScrool","action","zoom","layout","treeRightOffset","lazyLoading","enableDragDrop","ORIENTATION","speed","smooth","toolbar","fullScreen","fit","expandAll","collapse","level","allChildren","searchFields","nodeBinding","img_0","field_2","field_3","field_4","field_5","field_6","field_8","field_9","field_10","field_number_children2","field_number_children3","childrenCount","nodeId","node","getNode","childrenIds","rollupChildrenCount","fulltimechildren","partnerchildren","contractorchildren","internchildren","studentchildren","childNodeData","editUI","on","sender","querySelector","inputElement","outerHTML","textareaElement","rows","resize","txt","textDecoration","innerHTML","parentNode","PureComponent","GET_ALL_OKTA_USERS","loadingBox","OrganizationChartPage","setDisplay","nodesList","setNodesList","isChartReady","setIsChartReady","getNodes","get_all_okta_users","allObj","mgrId","managerOktaId","drTotal","totalDirectReports","userPhoto","photo","totalFullTimeDirects","totalContractorDirects","totalPartnerDirects","common","RequisitionRequestContext","RequisitionRequestContextProvider","setRequisitionType","plannedStartDate","setPlannedStartDate","plannedStartDateError","setPlannedStartDateError","selectedManager","setSelectedManager","selectedManagerError","setSelectedManagerError","selectedBusinessUnit","setSelectedBusinessUnit","selectedBusinessUnitError","setSelectedBusinessUnitError","selectedDepartment","setSelectedDepartment","selectedDepartmentError","setSelectedDepartmentError","setLocation","selectedLocation","setSelectedLocation","isBackfillChecked","setIsBackfillChecked","selectedBackfill","setSelectedBackfill","selectedBackfillError","setSelectedBackfillError","isCostCenterDisabled","setIsCostCenterDisabled","costCenterData","setCostCenterData","managerCostCenter","setManagerCostCenter","selectedCompanyCode","setSelectedCompanyCode","selectedCompanyCodeError","setSelectedCompanyCodeError","selectedParentMgmtCostCenter","setSelectedParentMgmtCostCenter","selectedParentMgmtCostCenterError","setSelectedParentMgmtCostCenterError","selectedMgmtCostCenter","setSelectedMgmtCostCenter","selectedMgmtCostCenterError","setSelectedMgmtCostCenterError","selectedFunctionalAreaDesc","setSelectedFunctionalAreaDesc","selectedFunctionalAreaDescError","setSelectedFunctionalAreaDescError","selectedCountryDesc","setSelectedCountryDesc","selectedCountryDescError","setSelectedCountryDescError","setJobTitle","jobCodeError","setJobCodeError","jobTitleError","setJobTitleError","selectedReqSpendCurrency","setSelectedReqSpendCurrency","selectedReqSpendCurrencyError","setSelectedReqSpendCurrencyError","setReqSpendAmount","reqSpendAmountError","setReqSpendAmountError","selectedReqSpendPeriod","setSelectedReqSpendPeriod","selectedReqSpendPeriodError","setSelectedReqSpendPeriodError","setReqBonusAmount","reqBonusAmountError","setReqBonusAmountError","selectedReqBonusType","setSelectedReqBonusType","reqBonusTypeCurrencyError","setReqBonusTypeCurrencyError","setReqCommissionAmount","reqCommissionAmountError","setReqCommissionAmountError","selectedReqCommissionCurrency","setSelectedReqCommissionCurrency","selectedReqCommissionCurrencyError","setSelectedReqCommissionCurrencyError","contractMonths","setContractMonths","contractMonthsError","setContractMonthsError","contractHours","setContractHours","contractHoursError","setContractHoursError","setComments","commentsError","setCommentsError","isCodeChanged","setIsCodeChanged","CREATE_REQUISITION_TASK","setOpen","createRequisitionTask","costCenterCode","handleCheck","backfill","AlphabeticCode","GET_ULTI_LOCATIONS","LocationSelect","get_ulti_locations","locationCountryCode","countryCode","GET_ULTI_BU_DEPT","BusinessUnitDeptSelect","buData","setBuData","deptData","setDeptData","get_ulti_bu_dept","sorted","handleBusinessChange","ManagerSelect","RequisitionTypeInput","StartDateInput","GET_BACKFILL_DIRECT_REPORTS","BackfillSelect","backfillData","setBackfillData","mapped","get_backfill_direct_reports","RequisitionDetails","GET_COST_CENTERS","CompanyCodeSelect","codeData","setCodeData","codeFiltered","costCenterCategory","disableClearable","costCenterDescription","ParentMgmtCostCenterSelect","MgmtCostCenterSelect","FunctionalAreaDescSelect","CountryDescSelect","CostCenter","costCenter","get_cost_centers","pl","CommentsInput","AdditionalInformation","GET_REQUISITION_JOB_CODE","JobCodeSelect","setReqJobCode","get_requisition_job_code","IntJobCode","USJobCode","currencyData","Currency","Entity","MinorUnit","NumericCode","WithdrawalDate","ReqSpendCurrencySelect","ReqSpendAmountInput","check","SalaryPeriodOptions","ReqSpendPeriodSelect","RequisitionSpend","ReqBonusAmountInput","ColorRadio","Radio","ReqBonusTypeSelect","React","radioValue","setRadioValue","selectedCurrency","setSelectedCurrency","isViewCurrency","setIsViewCurrency","FormLabel","RadioGroup","ReqCommissionAmountInput","ReqCommissionCurrencySelect","RequisitionCommission","ContractMonthsInput","ContractHoursInput","ContractInformation","JobTitle","JobFinanceDetails","RequisitionBonus","SubtitleTypography","CreateRequisitionRequestForm","RequestWrapperPage","createFormComponent","px","StepperResetBtn","RequestTopBox","reviewText","summaryText","RequestSummary","RequisitionRequestPageContent","RequisitionRequestPage","viewRequisition","setViewRequisition","SystemStatusPage","GET_REQUISITION_REPORTS_GENERATOR_INFO","GET_ONBOARDING_REPORTS_GENERATOR_INFO","GET_OFFBOARDING_REPORTS_GENERATOR_INFO","GET_EMPLOYEES_REPORTS_GENERATOR_INFO","GET_REQUISITION_GENERATED_REPORT","GET_OFFBOARDING_GENERATED_REPORT","GET_ONBOARDING_GENERATED_REPORT","GET_EMPLOYEES_GENERATED_REPORT","DEFAULT_NO_DATA_LABEL","REPORT_GENERATOR_CONFIG","reportTypes","requisition","selectsInfoQuery","tableDataQuery","fields","reqStartDateFrom","reqStartDateTo","reqStatus","booleanItems","actualValue","displayValue","hasReqFulfilledID","menuItems","tableColumnsOptions","headerName","valueGetter","offboarding","offboardedFrom","offboardedTo","payrollEndDateFrom","payrollEndDateTo","offboardingType","offboardingStatus","onboarding","onboardedFrom","onboardedTo","onboardingType","onboardingStatus","onboardBusinessUnit","hasReqId","onboardFirstName","onboardLastName","employees","employeeLastLoginFrom","employeeLastLoginTo","employeeLastHireFrom","employeeLastHireTo","companyName","employeeManagerEmail","employeeBusinessUnit","employeeDepartment","employeeLocation","lastHireDate","DatePicker","defaultValue","inputLabel","StyledInputLabel","FieldsBox","setSearchInfoObject","reportType","disableGenerating","accumulator","currentValue","fieldType","getDefaultValue","generateValuesObject","valuesInfo","setValuesInfo","createSelectField","currentField","multiple","renderValue","itemName","itemValue","indexOf","defaultChecked","createCheckBoxField","valuesCopy","cloneDeep","isArray","prepareValuesInfoObject","noRowsOverlay","verticalAlign","toolbarButton","dataGrid","overflowX","whiteSpace","textOverflow","StyledDataGrid","columns","components","NoRowsOverlay","TableBox","tableData","DEFAULT_LOADING_INFO","selectsInfo","loaderBox","getReportTypeNameForSpecificReportType","ReportGeneratorPageContent","clone","loadingInfo","setLoadingInfo","setReportType","fieldsWithItems","setFieldsWithItems","fetchedData","setFetchedData","searchInfo","setSearchInfo","setTableData","get_report_generator_fields_info","getSelectsInfo","get_generated_report","getTableData","resetData","generateFieldsObjectWithItems","searchInfoObject","selectReportType","showFieldsBox","showTableBox","getLoaderBox","stateValue","Slide","bgcolor","Grow","ReportGeneratorPage","GET_AUTH_TASKS","tinyBoldFontSize","getImmediateText","getScheduleText","isScheduled","TaskDetailsRowField","details","badgeRequestTask","badgeRequestName","badgeRequestType","getTaskDetails","TaskStatusRowField","TableContent","initOrderBy","sliceFrom","sliceTo","getCreatorName","taskManagerRow","TaskTableRow","matchTaskManager","isExact","TaskManagerTableContent","taskManagerCircularProgressBlock","TaskManagerTable","currentPage","MyTasks","get_auth_tasks","CountBox","boxItems","allTasks","pendingApproval","scheduled","inProgress","dateTextField","SmallDataTextField","datesDiv","rowOneDiv","FilterBox","onFilterChange","allTasksData","taskTypeFilter","setTaskTypeFilter","taskStatusFilter","setTaskStatusFilter","taskCreator","taskCreatorFilter","setTaskCreatorFilter","dateFrom","dateFromFilter","setDateFromFilter","dateTo","dateToFilter","setDateToFilter","dateFromError","setDateFromError","dateToError","setDateToError","setTaskData","newFilters","handleApply","taskManager","CREATE_TASK_SUBSCRIPTION","GET_TASKS","UPDATE_TASK_SUBSCRIPTION","SET_ALL_TASKS_DATA","ADD_TASK_DATA","TaskManagerActonTypes","formControl","taskNames","CurrentView","currentView","onCurrentViewChange","Search","TableToolbar","handleCurrentView","handleSearchQuery","handleFilterClick","GET_ALL_TASKS_TOTALS","modalTopBox","ModalTopBar","CustomCheckbox","topBox","topTaskInfoBox","topBoxTypography","BulkApprovalTaskTopBar","toggleSelect","requestedDate","requestedBy","textTransform","taskSection","titleSection","taskRowTypography","BulkApprovalTaskMainSection","columnSize","BulkApprovalTaskCommentSection","commentSection","pr","pt","bulkApprovalTask","taskSectionsContainer","BulkApprovalTask","setSelected","taskIds","hoverText","sections","section","GET_ALL_BULK_APPROVAL_TASKS","getBulkApprovalTaskData","topSection","getOnboardingDetails","getRequisitionDetails","getOffboardingDetails","taskScheduleDate","reqId","aliasName","createLogDescription","BulkApprovalSubmitButton","tasks","handleSubmitClose","setLoading","approvedAmount","setApprovedAmount","amount","selectedTasks","getTaskStatus","bulkApprovalModalContainer","BulkApprovalModal","setTasks","tasksData","selectedTaskIds","setSelectedTaskIds","setPageCount","get_all_bulk_approval_tasks","executeAllBulkSearch","BulkApprovalButton","AllTasks","setAllTasksData","addTaskData","isResetFilters","setIsResetFilters","openBulkModal","setOpenBulkModal","createTaskSubscription","useSubscription","updateTaskSubscription","totalData","get_tasks","subData","updatedData","isUpdatedArray","hasBulkApprovePermission","handleOpenBulkModal","handleCloseBulkModal","get_all_tasks_totals","GET_ALL_OFFBOARDING_TASKS","AllOffboardingTasks","offData","setOffData","get_all_offboarding_tasks","GET_ALL_PENDING_TASKS","PendingApprovalTasks","pendingTasksData","setPendingTasksData","get_all_pending_tasks","executeAllSearch","GET_ALL_REQUISITION_TASKS","AllRequisitionTasks","get_all_requisition_tasks","offboardTaskRows","is","hrPayrollRows","licenseBox","UnassignLicensesBox","licenseName","UnassignDevicesBox","SelectedOffboardActionSection","approveDisabled","setIsApproved","setIsRejected","isRejectedError","setIsRejectedError","rejectedNotes","setRejectedNotes","scrollDown","taskWindow","SET_HR_INFORMATION","CLEAR_HR_INFORMATION","SET_HR_TERMINATION_CODE_ERROR","SET_HR_TERMINATION_TYPE_ERROR","clearHrInformation","TaskManagerHrInfoActonTypes","setHrTerminationCodeError","hrTerminationCodeError","taskManagerHrInfo","ADD_OFFBOARDING_HR_INFORMATION","HrButtonSubmit","setModalMessage","addOffboardingHrInformation","hrTerminationTypeError","SelectedOffboardTaskContent","isApproveDisabled","checkIsDisabledToApprove","isHrInformationExist","SelectedOnboardTaskContent","permRequisitionApproveTasksUpd","showApproveButton","showRejectButton","logOperation","logInfo","logInfoRejected","logInfoCancelled","BadgeIcon","image","imageName","badgeRequestTaskRows","badgeRequestIconImg","SelectedBadgeRequestActionsSection","SelectedBadgeRequestTaskContent","SelectedTaskContent","isNaN","toggleDrawer","TaskAlert","GET_ALL_ONBOARDING_TASKS","onData","setOnData","get_all_onboarding_tasks","TaskManagerContent","pendingApprovalIndex","setPendingApprovalIndex","viewAllTasksTab","setViewAllTasksTab","viewPendingTasksTab","setViewPendingTasksTab","allTasksIndex","setAllTasksIndex","taskView","AllOnboardingTasks","TaskManagerPage","viewTaskPage","setViewTaskPage","TaskManagerPageContent","GET_ALL_ORGANIZATION_CHARTS_INFO","GET_OFF_AND_ON_BOARDING_CHARTS_INFO","GET_REQUISITION_TASKS_CHARTS_INFO","DEFAULT_LOADING_INFO_OBJECT","organization","boarding","requisitions","CHARTS_TITLES","last7days","last30days","last90days","REQUISITION_CHARTS_SUBTITLES","currentYear","CHARTS_WITH_KEY_ONLY_COUNT","ORGANIZATION_CHARTS_CONFIG","countersLabels","chartsType","ONBOARDING_CHARTS_CONFIG","OFFBOARDING_CHARTS_CONFIG","REQUISITIONS_CHARTS_CONFIG","chartsLabels","fontStyle","card","opacity","counterBox","borderLeft","float","cardSubtitleBox","getChartData","labels","requisitionTypes","infoArray","zipWith","zip","getChartsDataCount","chartData","chartName","record","recordItem","getChartOptions","forRequisitions","titleTextStyle","bold","italic","is3D","isStacked","hAxis","minValue","vAxis","ChartsBox","appear","stringInCamelCase","formattedChartData","chartType","getChartsBoxes","ReportingPageContent","organizationChartsData","setOrganizationChartsData","onboardingChartsData","setOnboardingChartsData","offboardingChartsData","setOffboardingChartsData","requisitionStatistics","setRequisitionStatistics","get_all_organization_charts_info","get_off_and_on_boarding_charts_info","get_requisition_tasks_charts_info","boxTitle","ReportingDashboardPage","SEARCH_USER_DIRECTORY","SET_SEARCH_QUERY","SET_SEARCH_TYPE","SET_USERS_DATA","SET_USER_DATA","SET_USER_BADGES","SET_COST_CENTERS","SET_USER_DIRECT_REPORTS","SET_GOOGLE_USER_INFO","SET_IS_LOADING","SET_SELECTED_AUDIT_USER","SET_IS_AUDIT_DRAWER_OPEN","SET_IS_GOOGLE_GROUPS_DRAWER_OPEN","SET_IS_AD_GROUPS_DRAWER_OPEN","SET_IS_APP_MEMBERSHIPS_DRAWER_OPEN","SET_DISABLED_SEARCH_RESULTS","UserDirectoryActionTypes","setSearchType","searchType","setSelectedAuditUser","selectedAuditUser","setIsAuditDrawerOpen","isAuditDrawerOpen","setIsGoogleGroupsDrawerOpen","isGoogleGroupsDrawerOpen","setIsAdGroupsDrawerOpen","isAdGroupsDrawerOpen","setIsAppMembershipsDrawerOpen","isAppMembershipsDrawerOpen","setDisabledSearchResults","disabledSearchResults","UserDirectoryFilterBlock","empTypeFilter","setEmpTypeFilter","locationFilter","setLocationFilter","departmentFilter","setDepartmentFilter","search_user_directory","departments","blackText","whiteText","toolbarGutters","ToolbarTypography","white","gutters","employeeInfoContent","UserSearchInfoCell","GET_LPSYNC_USER_BADGES","badgesHoveredBox","TopBadges","badgesTypes","handleHover","py","onMouseOver","UserDirectorySearchTypes","ALL","USER_NAME","USER_JOB","USER_LOCATION","USER_DEPARTMENT","USER_BUSINESS_UNIT","EMPLOYEE_NUMBER","COST_CENTER","BADGES","ConditionalWrapper","wrapper","BadgeChip","isDisabled","onChipClick","stopPropagation","avatar","Avatar","clickable","badgeGroupBox","badgeGroupTitle","badgeLabel","BadgeGroupItem","bge","badgeName","badgeIcon","badgeIconImg","allBadgesPaper","allBadgesWrapper","BadgeMenu","anchorEl","badgeGroupRef","Menu","keepMounted","list","getContentAnchorEl","anchorOrigin","horizontal","MenuListProps","onMouseLeave","badgeList","getBadgeGroupItem","badgesBox","unwrap","UserCardBadgesBox","setAnchorEl","filteredBadges","setFilteredBadges","topBadgesTypes","setTopBadgesTypes","hoveredBadgeType","setHoveredBadgeType","groupedBadges","badgeTypes","UserCardBadges","userEmail","setBadges","get_lpsync_user_badges","SET_ORGCHART_EMAIL","ENQUEUE_SNACKBAR","REMOVE_SNACKBAR","CLOSE_SNACKBAR","setOrgChartEmail","orgChartEmail","CommonActionTypes","enqueueSnackbar","notification","closeSnackbar","dismissAll","UserInfoMenu","handleMenuClose","currentTarget","navigator","clipboard","writeText","then","err","userTableCell","userTableCellDiv","UserTableCell","sizeSmall","userTableHeadCells","userDirectoryRow","UserTableBodyRow","UserTableContent","users","userFullName","userDirectoryTableContainer","tableBox","UserDirectoryTable","userDirectory","visibleUsers","setVisibleUsers","setCurrentPage","setHasMore","filled","SelectSearchTypeField","types","searchFilterBox","filterBtn","SearchBlock","searchProps","Zoom","GET_DIRECT_REPORTS","GET_USER_BY_EMAIL","userTypography","UserTypography","paperCard","cardBox","boxContent","nameText","UserCard","UserLoadingCircle","userTeamItem","notDefinedText","UserGridItemWrapper","noUserText","userTeamContainer","UserTeam","setManager","reportsData","setReportsData","get_direct_reports","executeReportsSearch","reportsLoading","get_user_by_email","ColorBorderBox","GET_LPSYNC_BADGES","setData","resultData","iconBox","BoxGridWrapper","gridItemBox","boxSizing","BadgeIconGridItem","BackPaginationButton","NextPaginationButton","BadgesSelectGrid","isBackBtnDisabled","handleBackBtn","isNextBtnDisabled","handleNextBtn","modalBadgesContentBlock","UserBadgesModalBlock","BadgeCriteriaOptions","ANY","BadgeCriteriaOptionsObj","SEARCH_USERS_BY_BADGES_QUERY","SEARCH_USERS_FOR_SPLASH_SCREEN_SETTINGS","modalBottomBox","modalSearchButton","BadgesModalActionBlock","handleSearch","submitting","BadgeFormSelect","badgeSearchBlock","UserBadgesSearchModal","selectedBadges","setSelectedBadges","badgeCategory","setBadgeCategory","badgeCriteria","setBadgeCriteria","badgeData","setBadgeData","setIsNextBtnDisabled","setIsBackBtnDisabled","alertMessage","setAlertMessage","alertSeverity","setAlertSeverity","setSubmitting","handleResult","get_lpsync_badges","search_users_by_badges","executeUserSearch","badgeId","onDelete","headerBox","searchBox","badgesSearchButton","UserDirectoryPageContent","badgeModalOpen","setBadgeModalOpen","useSearchUserDirectory","handleBadgeSearchModalOpen","handleBadgeSearchModalClose","GET_GOOGLE_USER_INFO","table","icons","UserOrgInfo","userData","tenureMonth","setTenureMonth","tenureYear","setTenureYear","tenureDay","setTenureDay","startingDate","endingDate","isFuture","substr","endDate","swap","startYear","getFullYear","daysInMonth","yearDiff","monthDiff","getMonth","dayDiff","abs","getTenure","employeeSince","managerUsername","originalHireDate","employeeInfoDiv","tableBodyCell","filterClear","viewBtn","rootPanel","UserDirectReportsList","userInfoExpanded","handleUserInfoAccordionChange","useParams","reportsResult","setReportsResult","networkStatus","NetworkStatus","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","totalCount","handleOnClick","UserInformation","setUserInfoExpanded","panel","isExpanded","titleBox","tableHeadText","AdGroupsDrawer","drawerRoot","memberOf","GET_APPS_LIST","AppMembershipsDrawer","get_apps_list","tableBody","app","tableHead","keyText","valueText","itemContainer","UserOktaInfo","lastLogin","GET_GOOGLE_USER_GROUPS","GoogleGroupsDrawer","get_google_user_groups","UserGoogleInfo","googleUserInfo","suspended","lastLoginTime","JamfDevicesRows","setJamfTotal","GoogleDevicesRows","setGoogleTotal","annotatedUser","DevicesInfo","jamfTotal","googleTotal","total","setTotal","GET_SERVICE_NOW_USER_GROUPS","ServiceNowTable","titles","cell","idx","ServiceNowInfo","searchData","groupsMembership","get_service_now_user_groups","groupsManage","g","parentGroup","unitLeader","createdOn","iconContainer","iconFA","iconMUI","ItInformation","itInfoExpanded","setItInfoExpanded","handleItInfoAccordionChange","copySpan","costCenterBox","FinanceInformation","costCenters","setCostCenters","viewBreakdown","setViewBreakdown","partOne","setPartOne","partTwo","setPartTwo","partThree","setPartThree","partFour","setPartFour","partFive","setPartFive","partOneDesc","setPartOneDesc","partTwoDesc","setPartTwoDesc","partThreeDesc","setPartThreeDesc","partFourDesc","setPartFourDesc","partFiveDesc","setPartFiveDesc","setIsCopied","getUserCostCenterDetails","userCostCenter","onCopy","GET_AUDITOR_NONFTE_REPORTS","CREATE_REPORTING_NONFTE_AUDIT","setViewSubmitBtn","StyledDrawer","isOpen","handleDrawerClose","AuditStatuses","UpdateAuditDrawer","runSearch","setAuditStatus","viewSubmitBtn","viewManagerSelect","setViewManagerSelect","viewOffboardBtn","setViewOffboardBtn","createReportingNonFteAudit","auditUserFirstName","auditUserLastName","auditUserInformation","auditCompleted","NonFteAudit","nonFtes","setNonFtes","getNonFtes","get_auditor_nonfte_reports","auditorData","filteredReports","splice","findIndex","foundIndex","handleOffboardUser","handleOnSelectedClick","userSubtitle","userText","ProfileTypography","UserBadgeChip","tooltipTitle","goldStar","goldStarText","silverStar","silverStarText","bronzeStar","bronzeStarText","getTenureToolTip","tenureYears","UserStarBadge","getClasses","starClasses","starTextClasses","KnowledgeSvg","SvgIcon","rx","ry","d","getKnowledgeBadge","numberOfBadges","KnowledgeIcon","getKnowledgeTooltip","UserKnowledgeBadge","UserManagerIcon","iconWrapper","UserManagerOrICBadge","isManager","UserProfileBadges","setTenureYears","setNumberOfBadges","setGroupedBadges","userEmployeeSince","userBadges","knowledgeBadges","years","now","startingTimestamp","timeDifference","getUTCFullYear","getTenureYears","img","imgItem","viewInOrgButton","profileNameBlock","UserProfileInfo","primaryPhone","mobilePhone","badgeTitleBox","ChipBox","badgeTitle","DELETE_AUTH_USER_BADGE","EditBadgesTab","userBadgeData","hobbiesBadges","setHobbiesBadges","smeBadges","setSmeBadges","isBadgesReady","setIsBadgesReady","separateBadges","deleteBadge","hobbies","sme","handleDelete","ADD_AUTH_USER_BADGES","SelectBadgeCategoryInput","smallTextField","CustomTextField","valid","onKeyDown","preventDefault","propTypes","PropTypes","bool","GET_BADGE_ICONS","ChooseBadgeIcon","badgeIconName","setBadgeIconName","badgeImage","setBadgeImage","get_badge_icons","CHECK_IF_BADGE_NAME_EXISTS","CHECK_IF_BADGE_ICON_EXISTS","styles","importLabel","ImageUpload","setBaseImage","setImageFile","sizeLimit","setIsAlertOpen","handleAlert","handleFileUpload","imgTypes","file","files","setImage","convertToBase64","base64","byteSize","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","htmlFor","Input","accept","btnBox","SaveAndClearButtons","handleClear","handleSave","isButtonsDisabled","CREATE_BADGE_REQUEST_TASK","RequestBadgeDrawerContent","setIsRequestDrawerOpen","addNameError","setAddNameError","setBadgeName","isAlertOpen","badgeFile","setBadgeFile","isUploadImage","setIsUploadImage","setIsButtonsDisabled","onCheckBadgeNameComplete","check_if_badge_name_exists","executeBadgeNameSearch","onCheckBadgeIconComplete","check_if_badge_icon_exists","executeBadgeIconSearch","onCreateComplete","createBadgeRequest","resetComplete","runBadgeNameSearch","saveBadge","handleCategoryChange","clearAlert","handleUploadBtnClick","badgeRequestIconName","checkBadge","DisableBackdropDrawer","disableBackdropClick","listItemText","selectedBox","saveBox","AddBadgesTab","isRequestDrawerOpen","addBadges","badgeIds","isBadgeUsed","isBadgeSelected","ManageMyBadgesDrawerContent","handleBadgeQuery","manageBadgesTabs","Badges","UserProfileSearch","useLocation","pathname","executeUserDirSearch","onBlur","onMouseDown","splitEmail","goBack","tabPanel","tabBox","UserProfile","activeTab","setActiveTab","viewNonFteTab","setViewNonFteTab","get_google_user_info","executeGoogleUserSearch","gData","gLoading","executeGoogleUserImgSearch","imgData","imgLoading","executeBadgesSearch","getUserEmail","useProfileTabs","getUserProfileTabs","tab","newTab","SecureRoute","adminOnly","UserDirectoryPage","exact","GET_THIRD_PARTIES","SET_ALL_THIRD_PARTIES","SET_THIRD_PARTY_DATA","SET_FILTERS","SET_THIRD_PARTY_USERS","setAllThirdParties","allThirdParties","ThirdPartyActonTypes","setThirdPartyUsers","thirdPartyUsers","ThirdPartyStatuses","DISAPPROVED","getStatusName","code","getBooleanStatus","getOwnerName","thirdParty","ownerFirstName","ownerLastName","owner","thirdPartyRow","ThirdPartyDirectoryTableContent","thirdParties","noDataTypography","ThirdPartySearchResults","trimmedSearchQuery","get_third_parties","ThirdPartyDirectoryTable","thirdPartiesCountStatus","setThirdPartiesCountStatus","infoThirdParties","setInfoThirdParties","notifyOnNetworkStatusChange","outerBox","GET_VIEWED_THIRD_PARTIES","GET_OWNED_THIRD_PARTIES","useGetOwnedThirdParties","get_owned_third_parties","useRecentlyViewedThirdParties","get_viewed_third_parties","ThirdPartyDirectoryInfo","ThirdPartyDirectoryFilterBlock","thirdPartyTypeFilter","setThirdPartyTypeFilter","thirdPartyOwnerFilter","setThirdPartyOwnerFilter","thirdPartyStatusFilter","setThirdPartyStatusFilter","vendorType","ThirdPartySearchBlock","flex","ThirdPartyDirectoryPageContent","GET_THIRD_PARTY_BY_CODE","CustomTableLabelValueRow","DEFAULT_NULL_LABEL","Details","thirdPartyData","thirdPartyRows","altName","thirdPartyTableRows","GET_USERS_BY_CONTRACTOR_COMPANY","GET_USERS_TOTALS_BY_CONTRACTOR_COMPANY","userTotalsTypography","ThirdPartyUsers","executeTotalSearch","dataTotals","totalLoading","get_users_by_contractor_company","after","get_users_totals_by_contractor_company","thirdPartyTabs","ThirdPartyProfilePanel","getThirdPartyContactName","contactFirstName","contactLastName","ThirdPartyProfileInfo","contactEmail","ADD_THIRD_PARTY_VIEW","ThirdPartyProfile","setThirdPartyData","get_third_party_by_code","addThirdPartyView","ThirdPartyDirectoryPage","ScrollToTop","useLayoutEffect","deviceNoteContainer","deviceArray","DeviceSelect","selectedDevice","setSelectedDevice","isDeviceNoteConfirmed","setIsDeviceNoteConfirmed","DeviceSelectContainer","candidateRequest","GoogleAccountCheck","GoogleAccountCheckContainer","NonLpEmailInput","nonLpEmail","setNonLpEmail","NonLpEmailInputContainer","firstField","FullNameInput","setFirstName","setLastName","FullNameInputContainer","JobTitleInput","JobTitleInputContainer","JobCode","JobCodeContainer","SEARCH_CONCUR_VENDORS","CompanyNameSelect","selectedCompany","setSelectedCompany","vendorData","setVendorData","search_concur_vendors","vendor","selectedVendor","CompanyNameSelectContainer","OfficeNumberInput","officeNumber","setOfficeNumber","numError","setNumError","OfficeNumberInputContainer","MobileNumberInput","mobileNumber","setMobileNumber","MobileNumberInputContainer","SEARCH_USERNAME","AlreadyExistUsernameModal","UsernameCreate","setUsername","usernameError","newUsername","setNewUsername","setIndex","search_username","createUsername","combinedName","substring","CandidateDetails","UsernameCreateContainer","GET_COMPLETED_REQUISITIONS_BY_USER","RequisitionCardItem","RequisitionCard","handleSelect","hiringManagerFirstName","hiringManagerLastName","hiringManagerEmail","bonusAmount","bonusType","salary","salaryCurrency","salaryPeriod","backfillFirstName","backfillLastName","onSelect","modalTopBar","RequisitionSelectModal","get_completed_requisitions_by_user","hiringManagerId","companyCode","useRequisitions","RequisitionTypeSelect","RequisitionSelectModalContainer","setStartDate","StartDateInputContainer","HiringManagerSelect","setHiringManager","HiringManagerSelectContainer","setBusinessUnit","setDepartment","businessUnitSet","getOptionSelected","BusinessUnitDeptSelectContainer","locationList","setLocationList","l","EmployeeTypeSelect","setEmployeeType","EmployeeTypeSelectContainer","RequisitionTypeSelectContainer","LocationSelectContainer","CreateCandidateRequestForm","CandidateRequestSummary","candidateDetails","additionalInformation","CREATE_ONBOARDING_TASK","groups","setGroups","isFirstApprovalBypass","setIsFirstApprovalBypass","createOnboardingTask","onboardManagerId","onboardJobCode","onboardOfficeNumber","onboardMobileNumber","firstApprovalBypass","onboardingFinance","onboardingSalaryCurrency","onboardingSalaryAmount","onboardingSalaryPeriod","onboardingContractMonths","onboardingContractHoursPerWeek","RequestSteps","CandidateRequestPageContent","CandidateRequestPage","viewCandidateRequest","setViewCandidateRequest","redirectLink","setRedirectLink","GET_LOG_ENTRIES","lineClamp","boxOrient","SystemLogsDescription","textElementRef","useRef","getSystemLogRowData","logDateTime","userId","SystemLogsRow","SystemsLogsTable","logsData","filterSection","filterField","SystemLogsFilters","allLogsData","setLogsData","usernameFilter","setUsernameFilter","typeFilter","setTypeFilter","notificationFilter","setNotificationFilter","usernames","notifications","SystemLogsTopBox","SystemsLogsContent","setAllLogsData","get_log_entries","SystemLogsPage","UserManagementContext","UserManagementContextProvider","allRoles","setAllRoles","allPermissions","setAllPermissions","allPermissionUsers","setAllPermissionUsers","selectedUsers","setSelectedUsers","selectedUsersTotal","setSelectedUsersTotal","selectedRole","setSelectedRole","selectedPermissions","setSelectedPermissions","isAddRoleOpen","setIsAddRoleOpen","isViewDetailsContent","setIsViewDetailsContent","isEditRoleContent","setIsEditRoleContent","GET_PERMISSIONS","GET_ROLES","DELETE_ROLE","DrawerComponent","ADD_ROLE_USER","REMOVE_ROLE_USER","btn","modalBtnBox","RemoveUserRoleModal","selectedRemoveRole","selectedRemoveUser","onComplete","removeRoleUser","removeError","roleId","SearchComponent","setList","selectedValue","setSelectedValue","relatedTarget","classList","contains","GET_OKTA_USERS_BY_ROLE_ID","RoleUsersInfinityTable","setSelectedRemoveUser","setSelectedRemoveRole","searchStr","setOffset","roleUsersData","setRoleUsersData","preventFirstRun","setPreventFirstRun","setUsers","get_okta_users_by_role_id","getOktaUsersByRoleId","roleUsersLoading","loadUsers","take","skip","RoleDetailsTable","roleTitle","roleDescription","permissions","perm","permission","permissionTitle","oktaUsers","usersTitleBox","addUserBox","addUserBtn","ViewDetailsContent","setAddUserError","errorSent","setErrorSent","selectedUser","setSelectedUser","addUserLoading","setAddUserLoading","addRoleUser","addError","DeleteButton","RolePermissionsTable","deleteRole","setAlertMsg","setIsComplete","oktaUsersTotal","handleViewBtn","roleLocked","CREATE_NEW_ROLE","AddRoleTopMessage","isComplete","submitBtnBox","SubmitButtonBox","onSubmit","permissionTableHead","permissionRowData","isSelected","handleSingleCheck","permissionDescription","PermissionHeadRow","PermissionRow","PermissionsTable","permissionQuery","filteredPermissions","ManagementTextField","AddRoleFrom","isNewRoleNameError","newRoleName","handleRoleNameChange","isNewRoleDescriptionError","newRoleDescription","handleRoleDescriptionChange","PermissionFilterSearchBox","setPermissionQuery","AddRole","isRoleAdded","setNewRoleName","setNewRoleDescription","setIsNewRoleNameError","isDuplicateRoleNameError","setIsDuplicateRoleNameError","isBlankRoleNameError","setIsBlankRoleNameError","setIsNewRoleDescriptionError","isPermissionsError","setIsPermissionsError","setIsChecked","initialIsChecked","acc","nextIsChecked","createNewRole","currentIsChecked","submitNewRole","permissionKeys","permissionId","openModal","isValid","reformatted","RoleManagement","alertMsg","setIsRoleAdded","get_roles","refetchRoles","get_permissions","UserManagementPageContent","isAddEditOpen","setIsAddEditOpen","UserManagementPage","CustomTabs","orientation","CREATE_LPSYNC_BADGE","AddBadgesDrawerContent","badgeTypeTitle","createLpsyncBadge","DELETE_LPSYNC_BADGE","ManageBadgesTable","dataCountStatus","setDataCountStatus","deleteLpsyncBadge","isDeleteLoading","badgeID","SelectBadgesBox","SelectedBadgeChipsBox","CREATE_BADGE_RULE","UPDATE_BADGE_RULE","criteriaBox","AddEditDrawerContent","isEditRule","editRule","ruleBadges","setIsEditRule","ruleName","setRuleName","ruleNameError","setRuleNameError","criteriaFieldValue","setCriteriaFieldValue","criteriaFieldValueError","setCriteriaFieldValueError","criteriaFilter","setCriteriaFilter","criteriaFilterError","setCriteriaFilterError","criteriaInputValue","setCriteriaInputValue","criteriaInputValueError","setCriteriaInputValueError","deletedBadges","setDeletedBadges","handleOnClose","createBadgeRule","updateBadgeRule","createRule","idList","updateRule","deleteBadges","saved","GET_BADGE_RULES","DELETE_BADGE_RULE","BadgesAutomationTable","badgeRuleData","setBadgeRuleData","setEditRule","setRuleBadges","get_badge_rules","deleteBadgeRule","handleDeleteRule","rule","EditButton","handleEditRule","UPDATE_SPLASH_SCREEN_COMPLETED","boxButtons","boxButton","bottom","SplashScreenSettings","setOktaUsers","search_users_for_splash_screen_settings","getOktaUsers","loadingOktaUsers","updateSplashScreen","updatingSplashScreen","splashScreenCompleted","u","toggleHandler","tabRoot","div","UserBadgeManagementPage","UPDATE_HRTERMINATION_CODE","DELETE_HRTERMINATION_CODE","editBtn","deleteBtn","EditDeleteCodeModal","isModalOpen","setIsModalOpen","setCode","isError","setIsError","updateHRTerminationCode","updateLoading","deleteHRTerminationCode","deleteLoading","intID","CREATE_HRTERMINATION_CODE","AddCodeModal","createHRTerminationCode","HrTerminationCodes","AdminTabsPaper","OffboardingSettingsPage","offboardingSettingsTabs","GET_ALL_ONBOARDING_DELEGATES","CREATE_ONBOARDING_DELEGATES","SearchDelegateCompany","delegates","setDelegates","delegateUser","isVendorSearchLoading","setIsVendorSearchLoading","searchVendorsQuery","setSearchVendorsQuery","isVendorResultsOpen","setIsVendorResultsOpen","executeVendorsSearch","company","SearchDelegateTo","isUserSearchLoading","setIsUserSearchLoading","searchUserQuery","setSearchUserQuery","isUserResultsOpen","setIsUserResultsOpen","handleUserClick","SearchDelegateUser","setDelegateUser","AddDelegatesDrawer","createDelegates","del","DELETE_ONBOARDING_DELEGATE","EditDelegatesDrawer","delArr","setDelArr","deleteDel","OnboardingDelegates","drawerView","setDrawerView","get_all_onboarding_delegates","BUSINESS_UNIT_LABEL","DEFAULT_BU_DEPT_INFO","DEFAULT_TOAST_INFO","shown","INPUTS_CONFIG_FOR_BU_DEPT_FORM","ADD_ULTI_BU_DEPT","inputBox","saveButton","OnboardingRequest","buDeptInfo","setBuDeptInfo","toastInfo","setToastInfo","isSaving","setIsSaving","addUltiBUDept","Snackbar","autoHideDuration","inputId","every","OnboardingSettingsPage","onboardingSettingsTabs","GET_GOOGLE_CLOUD_SCHEDULER_TASKS","NO_DATA_LABEL","SCHEDULER_JOBS_TABLE_COLUMNS","splicedName","lastAttemptTime","schedule","SchedulerJobsPageContent","jobsData","setJobsData","jobData","addIdsToJobsData","get_google_cloud_scheduler_tasks","getJobsData","refetchJobsData","jobsDataFetched","called","SchedulerJobsPage","OKTA_STATUS_LABEL","SHIPPING_STATUS_LABEL","BUTTON_TEXT_ALL","BUTTON_TEXT_COMPLETED","BUTTON_TEXT_NOT_COMPLETED","BUTTON_TEXT_SHIPPED","BUTTON_TEXT_DISPATCH_NOW","getStartsWithConfigObject","columnField","operatorValue","oktaStatusButtons","shippingStatusButtons","FTE_TRACKER_OPTIONS_BUTTONS_SELECTED","FTE_TRACKER_OPTIONS_BUTTONS","buttonsBox","fullDimensionsBox","FteCandidateTrackerTable","openDrawerHandler","filterModel","setFilterModel","selectedButtons","setSelectedButtons","handleFilterModelChange","changedFilterModel","applyFilterModelChanges","itemChanges","columnToRemoveFromFilter","indexOfColumnToRemove","existingColumnFieldIndex","currentFilterModel","newButtonsOptionsObject","refreshSelectedButtons","buttonGroupEntry","ButtonGroup","buttonGroup","buttonText","buttonCallback","created","laptopType","laptopLanguage","trackingNumber","trackingProvider","candidateStatus","renderCell","oktaStatus","onFilterModelChange","getFteCandidateTrackerTable","GET_FTE_TRACKER_HISTORY","FteTrackerRows","ShippingTrackerRows","postalAddress","FteTrackerEventType","header","trackingBox","trackingLoader","trackingColumn","trackingRow","trackingHeader","trackingInput","FteTrackerDrawerContent","updateTracking","updatingTracking","initTracking","provider","tracking","setTracking","trackingChanged","setTrackingChanged","historyData","setHistoryData","getTitle","eventType","associateEmail","associateFirstName","associateLastName","eventDate","eventTime","createHistoryData","get_fte_tracker_history","getHistory","historyLoading","changeHandler","FTETracker_id","SEARCH_FTE_TRACKER_CANDIDATES","UPDATE_FTE_TRACKING","FteCandidateTrackerPage","searchInput","setSearchInput","selectedData","setSelectedData","setDrawerOpen","setSkip","loadNew","setLoadNew","updateTableData","search_fte_tracker_candidates","dataLoading","updateSelectedData","updateFteTracking","prevData","selectedDataCopy","tableDataCopy","selectedIndex","GET_CANDIDATE_PORTAL_LAPTOP_SETTINGS","GENERATE_LAPTOPS_TABLE_COLUMNS","editCallback","deleteCallback","laptopAvailability","CREATE_LAPTOP_OPTION","LaptopField","setInput","LaptopDrawer","selectedLaptop","isAdd","laptops","setLaptopType","setLaptopLanguage","laptopTypeError","setLaptopTypeError","laptopLanguageError","setLaptopLanguageError","setErrorMessage","setActive","createLaptop","laptop","laptopTypes","laptopLanguages","DELETE_LAPTOP_OPTION","DeleteLaptopModal","deleteLaptop","deleteError","CandidatePortalLaptopSettingsContent","setLaptops","isDeleteModalOpen","setIsDeleteModalOpen","get_candidate_portal_laptops","getLaptopData","handleEdit","handleDeleteModalClose","GET_CANDIDATE_TASKS_FOR_ADMIN_CANDIDATE_PORTAL_ACCESS","TOGGLE_CANDIDATE_TASK_STATUS","CandidatePortalAccessContent","candidatesData","setCandidatesData","get_candidate_tasks","getCandidateData","toggleCandidateAccess","candidateAccessToggling","removeCandidate","candidateId","candidateType","candidateFirstName","candidateLastName","candidateNonLpEmail","lastLoginAt","getCandidateNFteTasksTable","CandidatePortalSettingsPage","candidatePortalSettingsTabs","AdminMainContainer","currentKey","TransitionGroup","CSSTransition","classNames","LoginCallback","notFoundBox","NotFoundPage","SET_CSV_DATA","SET_CSV_FILE_ERROR","SET_SELECTED_TASK_IDS","SET_SELECTED_TASKS","SET_SELECTED_TASK_USERNAME","SET_EXISTING_ID","setExistingId","existingId","MultiCandidateRequestActonTypes","pageSize","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","newSelection","selectionModel","multiCandidateRequest","CSVFields","ImportDetails","csvData","ImportCSV","csvFileError","setCSVFileError","setCSVData","buttonRef","handleOpenDialog","handleRemoveFile","removeFile","onFileLoad","parsedData","itemNumber","initialValue","convertArrayToObject","inputElem","reason","noClick","noDrag","onRemoveFile","CreateMultiCandidateRequestForm","CandidateUsername","setSelectedTaskUsername","currentUsername","setCurrentUsername","checkUsernameAvailable","searchUsernames","fullTableColumnOptions","MultiCandidateDetails","MultiCandidateRequestSummary","CREATE_MULTIPLE_ONBOARDING_TASKS","GET_REQUISITION_JOB_CODES","GET_USERS_BY_EMAILS","GET_CONCUR_VENDORS","setSelectedTasks","reqJobCodes","setReqJobCodes","businessUnits","setBusinessUnits","setManagers","companies","setCompanies","get_requisition_job_codes","get_concur_vendors","c","executeConcurCompanies","get_users_by_emails","executeUsersByEmail","managersEmails","companiesNames","selectedTasksData","createMultipleOnboardingTasks","createTasks","hiringManagerEmployeeNumber","selectedTasksFullData","jobCodes","j","typeName","message2","handleSecondCheck","MultiCandidateRequestPageContent","MultiCandidateRequestPage","download","onShow","getNotificationMessage","displayed","useNotifier","handleCloseSnackbar","closeSnackbarAction","useSnackbar","dismissed","myKey","onExited","removeSnackbar","pageNav","pageNavButton","PageComponent","breadcrumbs","backButtonLink","block","blockDivider","SaSContainer","LoadingButton","searchButton","searchContainer","searchRow","borderTopLeftRadius","borderTopRightRadius","SaSSearch","queryType","setQueryType","onKeyPress","SaSTitle","tooltipText","tierText","flag","settings","settingsIcon","itemCenter","itemText","SaSListItem","typographyVariant","redirectToService","tier","Settings","Group","team","undefined","SaSList","flexWrap","cardContainer","cardImg","SaSModal","members","modalSettings","rel","SEARCH_SYSTEMS_AND_SERVICES","GET_SERVICE_WITH_ID","GET_GROUP_MEMBERS","ServiceAndSystemDirectoryTitle","ServiceAndSystemDirectoryContent","Title","showSearchResults","setShowSearchResults","setModalOpen","modalData","setModalData","search_systems_and_services","searchSystemsAndServices","loadingData","get_group_members","getGroupMembers","loadingGroupMembers","handleModalOpen","groupName","leftContent","TabPanelItem","contentType","column","Overview","impact","groupList","MembersList","openHandler","groupMembers","arrow","onOpen","member","People","setGroupMembers","getUsername","director","changeApprover","changeApproverBackup","qaLead","formatData","service","relationship","sysId","sysService","Dependencies","viewHandler","sortable","SearchResults","topBar","topBarTier","topBarTitle","topBarDate","ServiceComponent","serviceData","setServiceData","isResultsOpen","lastUpdated","get_service_with_id","loadService","loadingService","redirectHandler","DirectoryTitle","toDateString","dependencies","ServiceAndSystemDirectoryPage","SEARCH_INNER_DATA","GlobalSearchTypography","resultsBlock","itemsWrapper","GlobalSearchResults","results","topResultsInfo","GlobalSearchResultsInfoBlock","allDataLength","getCardData","GlobalSearchContent","searchResults","setSearchResults","setResults","useSearchData","search_inner_data","partResults","GlobalSearchPage","MainContainer","ReportGenerator","NavListItemText","NavListItem","activeClassName","ListItemIcon","NavListSubheader","ListSubheader","disableSticky","CustomIcon","NavItems","viewCompany","setViewCompany","viewSystemTools","setViewSystemTools","viewReports","setViewReports","viewAdminTools","setViewAdminTools","subText","AdminNavItems","mobileDrawer","desktopDrawer","NavBar","onMobileClose","openMobile","isAdmin","Hidden","lgUp","mdDown","docked","defaultProps","GET_AUTH_USER","GET_USER_ROLES_BY_USER_ID","setAuthExpireDateTimeToStorage","ttl","authExpireDateTime","localStorage","setItem","isAuthExpired","getItem","expireTime","removeAuthExpireDateTime","removeItem","brandImg","brandText","BrandIcon","PowerSettingPopover","logout","Popover","transformOrigin","CREATE_FEEDBACK","SEND_FEEDBACK_EMAIL","menuItem","dialog","ProvideFeedback","dialogOpen","setDialogOpen","setName","setEmail","notes","setNotes","notesError","setNotesError","createFeedback","sendFeedbackEmail","handleDialogClose","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","feedback","mailDetails","runFeedbackEmail","FeedbackPopover","anchorCur","isMenuOpen","setIsMenuOpen","handleListKeyDown","Popper","disablePortal","TransitionProps","ClickAwayListener","onClickAway","MenuList","autoFocusItem","UPDATE_USER_LAST_LOGIN","SystemOwnerBadgesInfo","soBadges","setSoBadges","getSoBadges","so","AddButton","boxIcon","BadgesSearch","deleteBadgeHandler","badgesType","badgesData","setBadgesData","executeBadgeSearch","loadingBadges","initArr","dataArr","focusInCurrentTarget","initItem","dataItem","selectedBadge","imgDiv","UserImgPopover","saveBtnBox","welcomeBox","SplashModal","setIsSplashOpen","smeSelectedBadges","setSmeSelectedBadges","setUserBadges","hiSelectedBadges","setHiSelectedBadges","updateSplash","hiBadges","getUserBadges","CHECK_IF_AUTH_SPLASH_SCREEN_COMPLETED","globalSearchTextField","searchItem","GlobalSearchBlock","globalSearch","onFocus","usePermissions","useTopBarSnackbar","isTaskManager","handleShow","publicIp","commentIcon","topBlock","userNameButton","TopBar","onMobileNavOpen","anchorRef","isSplashOpen","get_auth_user","savePermissions","get_user_roles_by_user_id","check_if_auth_splash_screen_completed","updateUserLastLogin","logUserAuthenticated","v4","ipAddress","userRole","permissionsSet","toUTCString","prevOpen","focus","postion","logoDiv","MobileAlertPage","getScreenDimensions","innerWidth","innerHeight","useScreenDimensions","screenDimensions","setScreenDimensions","handleResize","desktopRoot","orgchart","request","down","firefox","mobileRoot","rootWrapper","contentContainer","BodyLayout","InstallTrigger","isMobileNavOpen","setMobileNavOpen","scale","RequisitionType","Record","HiringManager","Location","isImmutable","Job","defaultState","OrderedMap","candidateRequestReducer","setIn","set","SET_DEVICE_ERROR","commonReducer","update","DataTransfer","googleUserAliases","DeviceUnassign","LicenseRemoval","TaskScheduling","OffboardDetails","licenseRemoval","offboardDetails","offboardRequestReducer","scheduleCity","taskManagerReducer","thirdPartyReducer","requisitionRequestReducer","RequisitionRequestActionTypes","onboardingDashboardReducer","selectedIds","multiCandidateRequestReducer","userDirectoryReducer","taskManagerHrInfoReducer","rootReducer","combineReducers","requisitionRequest","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","createStyles","html","GlobalStyles","library","add","fab","faCircle","faCommentDots","faDotCircle","faUserMinus","faUserPlus","faThumbtack","faCogs","faIdCard","AppContent","CssBaseline","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","disableReactDevTools","render","StrictMode","App","serviceWorker","ready","registration","unregister","catch"],"mappings":"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Cp8B,IACD,gBACAu8B,IAEFnmD,GACEomD,EACA,CAACx8B,IACD,aACA28B,IAEFvmD,GAAqBa,EAAU,CAAC+oB,IAAU,WAAYiwB,IACtD75C,GACEunD,EACA,CAAC39B,IACD,eACA89B,IAEF1nD,GACE2nD,EACA,CAAC/9B,IACD,gCACAk+B,IAEF9nD,GACE+nD,EACA,CAACn+B,IACD,yBACAs+B,IAEFloD,GACEmoD,EACA,CAACv+B,IACD,8BACA0+B,IAEFtoD,GACEuoD,EACA,CAAC3+B,IACD,sBACA8+B,IAEF1oD,GACEgB,EACA,CAAC4oB,IACD,WACAi/B,IAEF7oD,GACEc,EACA,CAAC8oB,GAASC,IACV,YACAk/B,IAEF/oD,GACEgpD,EACA,CAACp/B,IACD,6BACAu/B,IAEFnpD,GACEk2C,EACA,CAACtsB,GAASQ,IACV,2BACAk/B,IAEFtpD,GACEupD,EACA,CAAC3/B,IACD,2BACA8/B,IAEDlU,GACCx1C,GACEw1C,EACA,CAACprB,IACD,6BAEHorB,GAC0B,MAAzBsU,GACA9pD,GACE8pD,EACA,CAAClgC,IACD,6BACAqgC,KAEFI,GAAiC3U,IACjC11C,GACE01C,EACA,CAACtrB,IACD,mCAEFigC,GAAiC3U,IACjC11C,GACEqqD,EACA,CAACzgC,IACD,oCAEJ5pB,GACEyqD,EACA,CAAC7gC,GAASO,IACV,kBACAygC,IAEF5qD,GACE6qD,EACA,CAACjhC,GAASO,IACV,iBACA6gC,IAEFhrD,GAAqB41C,EAAU,CAAChsB,IAAU,WAAYuhC,IACrDxE,GACC3mD,GACE6mD,EACA,CAACj9B,IACD,WACAo9B,GAGFzmD,EACF0tB,GAAW1tB,GAEX7T,EAAM8yB,aAKRksC,IAES,OAALh/D,QAAK,IAALA,OAAA,EAAAA,EAAOgrB,eAAoB,OAALhrB,QAAK,IAALA,GAAA,UAAAA,EAAO+qB,aAAP,eAAc1Z,QAAS,IA3MhC,SAAC4tD,GAAc,IAAD,QAC/BH,GAAsB,CACpB7oD,UAAW,CACTC,MAAO,CACL0rB,SAAUryB,GAAUG,YACpBqpB,WAAYE,GAAaC,QACz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","file":"static/js/main.ae53733b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ApolloProvider,\n  ApolloClient,\n  InMemoryCache,\n  ApolloLink,\n  concat,\n  split\n} from \"@apollo/client\";\n\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { createUploadLink } from \"apollo-upload-client\";\n\nconst isProduction = process.env.REACT_APP_ENVIRONMENT === \"production\";\n\nconst AuthorizedApolloProvider = ({ children }) => {\n  const [accessToken, setAccessToken] = useState(null);\n\n  useEffect(() => {\n    const token = document.cookie\n      ?.split(\"; \")\n      ?.find((x) => x.startsWith(\"serviceToken\"))\n      ?.split(\"=\")[1];\n    if (token && !accessToken) {\n      setAccessToken(token);\n    }\n  }, []);\n\n  onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors)\n      graphQLErrors.map(({ message, locations, path }) =>\n        console.log(\n          `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n        )\n      );\n    if (networkError) console.log(`[Network error]: ${networkError}`);\n  });\n\n  // for local & production\n  // const httpLink = createHttpLink({\n  //   uri: \"/graphql\",\n  // });\n\n  const httpLink = createUploadLink({\n    uri: \"/graphql\",\n  });\n\n  //for production\n  const wsLink = isProduction && new WebSocketLink({\n    uri: \"wss://api-dot-lpsync-staging.uc.r.appspot.com/subscriptions\",\n    options: {\n      reconnect: true,\n      connectionParams: async () => {\n        return {\n          Authorization: accessToken || null,\n        };\n      },\n    },\n  });\n\n  // for local\n  // const wsLink = new WebSocketLink({\n  //   uri: \"ws://localhost:8080/subscriptions\",\n  //   options: {\n  //     reconnect: true,\n  //     connectionParams: async () => {\n  //       debugger\n  //       return {\n  //         Authorization: accessToken || null,\n  //       };\n  //     },\n  //   },\n  // });\n\n  const authMiddleware = new ApolloLink((operation, forward) => {\n    // add the authorization to the headers\n    operation.setContext(({headers = {}}) => ({\n      headers: {\n        ...headers,\n        authorization: accessToken || null,\n      },\n    }));\n\n    return forward(operation);\n  });\n\n  const splitLink = isProduction && split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    concat(authMiddleware, httpLink)\n  );\n\n  const client = new ApolloClient({\n    // disabled for prod\n    // link: splitLink,\n    cache: new InMemoryCache({\n      addTypename: true,\n    }),\n    link: isProduction ? splitLink : concat(authMiddleware, httpLink),\n    // link: concat(authMiddleware, splitLink),\n    connectToDevTools: true,\n  });\n\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\n};\n\nexport default AuthorizedApolloProvider;\n","import {createTheme} from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#FCFCFC\", // neutral-99\n      dark: \"#B1B1F0\", // lavender-100\n      light: \"#E0E0F9\", // lavender-40\n    },\n    secondary: {\n      main: \"#3863E5\", // brand blue\n      light: \"#E7F2F7\", // blue-20\n      dark: \"#95CBE5\", // blue-100\n    },\n    info: {\n      main: \"#E849B7\", // pink\n      light: \"#F9EEF4\", // pink-20\n      dark: \"#EBB7D4\", // pink-100\n    },\n    warning: {\n      main: \"#FA772E\", // brand orange\n      light: \"#FBEBE2\", // orange-20\n    },\n    success: {\n      main: \"#F59E9E\", //red-100\n      dark: \"#EBCD7A\", //yellow-100\n    },\n    background: {\n      // default: \"linear-gradient(45deg, #1d1f52 30%, #162036 90%)\",\n      default: \"#F4F4F6\", // neutral-96 (super light gray)\n      paper: \"#FCFCFC\", // neutral-99 (white)\n      light: \"#989EAE\", // neutral-64 (light gray),\n      dark: \"#363944\", // neutral-24 (dark gray),\n      gradient:\n        \"linear-gradient(to right, #3863E5 , #8D46EB , #E849B7 , #FA772E)\",\n    },\n    text: {\n      primary: \"#1C1D22\",\n    },\n  },\n  props: {\n    MuiListItemText: {\n      primaryTypographyProps: {\n        variant: \"subtitle2\",\n      },\n    },\n  },\n  typography: {\n    fontFamily: '\"Inter\", sans-serif',\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightBold: 700,\n    fontSize: 16,\n    h2: {\n      fontFamily: '\"Space Grotesk\", sans-serif',\n      weight: 600,\n      fontSize: \"2rem\",\n    },\n    h5: {\n      fontFamily: '\"Space Grotesk\", sans-serif',\n      fontSize: \"1.25rem\",\n    },\n    h6: {\n      fontSize: \"1.25rem\",\n    },\n    subtitle1: {\n      fontSize: \".9rem\",\n    },\n    subtitle2: {\n      fontSize: \".8rem\",\n    },\n  },\n  button: {\n    color: \"#1C1D22\",\n  },\n});\n\nexport default theme;\n","import React, {createContext, useState} from \"react\";\n\nexport const AuthUserContext = createContext();\n\nconst AuthUserContextProvider = ({children}) => {\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [authUser, setAuthUser] = useState();\n  const [authUserDirectReports, setAuthUserDirectReports] = useState([]);\n  const [authUserRoles, setAuthUserRoles] = useState();\n  const [authUserPermissions, setAuthUserPermissions] = useState([]);\n  const [permDashboardView, setPermDashboardView] = useState(false);\n  const [permMultiCandidateRequestView, setMultiCandidateRequestView] =\n    useState(false);\n  const [permBadgeRequestApproveTasks, setPermBadgeRequestApproveTasks] =\n    useState(false);\n  const [permBadgeRequestCancelTasks, setPermBadgeRequestCancelTasks] =\n    useState(false);\n  const [permBadgeRequestRejectTasks, setPermBadgeRequestRejectTasks] =\n    useState(false);\n  const [permOffboardingAll, setPermOffboardingAll] = useState(false);\n  const [permOffboardingTeam, setPermOffboardingTeam] = useState(false);\n  const [permOffboardingNfte, setPermOffboardingNfte] = useState(false);\n  const [permOffboardingApprovalBypass, setPermOffboardingApprovalBypass] =\n    useState(false);\n  const [permOffboardingApproveTasks, setPermOffboardingApproveTasks] =\n    useState(false);\n  const [permOffboardingCancelTasks, setPermOffboardingCancelTasks] =\n    useState(false);\n  const [permOffboardingHrInfo, setPermOffboardingHrInfo] = useState(false);\n  const [permOffboardingRejectTasks, setPermOffboardingRejectTasks] =\n    useState(false);\n  const [permOnboardingAll, setPermOnboardingAll] = useState(false);\n  const [permOnboardingApprovalBypass, setPermOnboardingApprovalBypass] =\n    useState(false);\n  const [permOnboardingApproveTasks, setPermOnboardingApproveTasks] =\n    useState(false);\n  const [permOnboardingCancelTasks, setPermOnboardingCancelTasks] =\n    useState(false);\n  const [permOnboardingRejectTasks, setPermOnboardingRejectTasks] =\n    useState(false);\n  const [permOnboardingRequisitionBypass, setPermOnboardingRequisitionBypass] =\n    useState(false);\n  const [permOnboardingTeam, setPermOnboardingTeam] = useState(false);\n  const [permOnboardingDashboardView, setPermOnboardingDashboardView] =\n    useState(false);\n  const [permOrgChartView, setPermOrgChartView] = useState(false);\n  const [permReportGeneratorView, setPermReportGeneratorView] = useState(false);\n  const [permReportingDashboardView, setPermReportingDashboardView] =\n    useState(false);\n  const [permReportNonFteAudit, setPermReportNonFteAudit] = useState(false);\n  const [permRequisitionAll, setPermRequisitionAll] = useState(false);\n  const [permRequisitionApproveTasks, setPermRequisitionApproveTasks] =\n    useState(false);\n  const [permRequisitionRejectTasks, setPermRequisitionRejectTasks] =\n    useState(false);\n  const [permRequisitionCancelTasks, setPermRequisitionCancelTasks] =\n    useState(false);\n  const [permSysMgmtBadgeMgmt, setPermSysMgmtBadgeMgmt] = useState(false);\n  const [\n    permSysMgmtCandidatePortalAccess,\n    setPermSysMgmtCandidatePortalAccess,\n  ] = useState(false);\n  const [permSysMgmtFteCandidateTracker, setPermSysMgmtFteCandidateTracker] =\n    useState(false);\n  const [permSystemsAndServicesView, setPermSystemsAndServicesView] =\n    useState(false);\n  const [permSysMgmtLogs, setPermSysMgmtLogs] = useState(false);\n  const [permSysMgmtManage, setPermSysMgmtManage] = useState(false);\n  const [permSysMgmtSchedulerJobs, setPermSysMgmtSchedulerJobs] =\n    useState(false);\n  const [permSysMgmtSettingsOffboarding, setPermSysMgmtSettingsOffboarding] =\n    useState(false);\n  const [permSysMgmtSettingsOnboarding, setPermSysMgmtSettingsOnboarding] =\n    useState(false);\n  const [permTaskManagerViewAll, setPermTaskManagerViewAll] = useState(false);\n  const [\n    permTaskManagerViewAllOffboarding,\n    setPermTaskManagerViewAllOffboarding,\n  ] = useState(false);\n  const [\n    permTaskManagerViewAllOnboarding,\n    setPermTaskManagerViewAllOnboarding,\n  ] = useState(false);\n  const [\n    permTaskManagerViewAllRequisition,\n    setPermTaskManagerViewAllRequisition,\n  ] = useState(false);\n  const [permTaskManagerViewTeam, setPermTaskManagerViewTeam] = useState(false);\n  const [permTaskManagerViewHrInfo, setPermTaskManagerViewHrInfo] =\n    useState(false);\n  const [permUserDirectoryFinanceView, setPermUserDirectoryFinanceView] =\n    useState(false);\n  const [permUserDirectoryItDetailsView, setPermUserDirectoryItDetailsView] =\n    useState(false);\n  const [permUserDirectoryLpsyncManage, setPermUserDirectoryLpsyncManage] =\n    useState(false);\n  const [permUserDirectoryNonFteAudit, setPermUserDirectoryNonFteAudit] =\n    useState(false);\n  const [permUserDirectoryOrgDetailsView, setPermUserDirectoryOrgDetailsView] =\n    useState(false);\n  const [permUserDirectoryView, setPermUserDirectoryView] = useState(false);\n  const [permThirdPartyDirectoryView, setPermThirdPartyDirectoryView] =\n    useState(false);\n  const [permBulkApproverOnboarding, setPermBulkApproverOnboarding] =\n    useState(false);\n  const [permBulkApproverRequisition, setPermBulkApproverRequisition] =\n    useState(false);\n  const [permBulkApproverOffboarding, setPermBulkApproverOffboarding] =\n    useState(false);\n\n  return (\n    <AuthUserContext.Provider\n      value={{\n        isPageLoading,\n        setIsPageLoading,\n        authUser,\n        setAuthUser,\n        authUserDirectReports,\n        setAuthUserDirectReports,\n        authUserRoles,\n        setAuthUserRoles,\n        authUserPermissions,\n        setAuthUserPermissions,\n        permDashboardView,\n        setPermDashboardView,\n        permMultiCandidateRequestView,\n        setMultiCandidateRequestView,\n        permBadgeRequestApproveTasks,\n        setPermBadgeRequestApproveTasks,\n        permBadgeRequestCancelTasks,\n        setPermBadgeRequestCancelTasks,\n        permBadgeRequestRejectTasks,\n        setPermBadgeRequestRejectTasks,\n        permOffboardingAll,\n        setPermOffboardingAll,\n        permOffboardingTeam,\n        setPermOffboardingTeam,\n        permOffboardingNfte,\n        setPermOffboardingNfte,\n        permOffboardingApprovalBypass,\n        setPermOffboardingApprovalBypass,\n        permOffboardingApproveTasks,\n        setPermOffboardingApproveTasks,\n        permOffboardingCancelTasks,\n        setPermOffboardingCancelTasks,\n        permOffboardingHrInfo,\n        setPermOffboardingHrInfo,\n        permOffboardingRejectTasks,\n        setPermOffboardingRejectTasks,\n        permOnboardingAll,\n        setPermOnboardingAll,\n        permOnboardingApprovalBypass,\n        setPermOnboardingApprovalBypass,\n        permOnboardingApproveTasks,\n        setPermOnboardingApproveTasks,\n        permOnboardingCancelTasks,\n        setPermOnboardingCancelTasks,\n        permOnboardingRejectTasks,\n        setPermOnboardingRejectTasks,\n        permOnboardingRequisitionBypass,\n        setPermOnboardingRequisitionBypass,\n        permOnboardingTeam,\n        setPermOnboardingTeam,\n        permOnboardingDashboardView,\n        setPermOnboardingDashboardView,\n        permOrgChartView,\n        setPermOrgChartView,\n        permReportGeneratorView,\n        setPermReportGeneratorView,\n        permReportingDashboardView,\n        setPermReportingDashboardView,\n        permRequisitionAll,\n        setPermRequisitionAll,\n        permRequisitionApproveTasks,\n        setPermRequisitionApproveTasks,\n        permRequisitionRejectTasks,\n        setPermRequisitionRejectTasks,\n        permRequisitionCancelTasks,\n        setPermRequisitionCancelTasks,\n        permSysMgmtBadgeMgmt,\n        setPermSysMgmtBadgeMgmt,\n        permSysMgmtCandidatePortalAccess,\n        setPermSysMgmtCandidatePortalAccess,\n        permSysMgmtFteCandidateTracker,\n        setPermSysMgmtFteCandidateTracker,\n        permSystemsAndServicesView,\n        setPermSystemsAndServicesView,\n        permSysMgmtLogs,\n        setPermSysMgmtLogs,\n        permSysMgmtManage,\n        setPermSysMgmtManage,\n        permSysMgmtSchedulerJobs,\n        setPermSysMgmtSchedulerJobs,\n        permSysMgmtSettingsOffboarding,\n        setPermSysMgmtSettingsOffboarding,\n        permSysMgmtSettingsOnboarding,\n        setPermSysMgmtSettingsOnboarding,\n        permTaskManagerViewAll,\n        setPermTaskManagerViewAll,\n        permTaskManagerViewAllOffboarding,\n        setPermTaskManagerViewAllOffboarding,\n        permTaskManagerViewAllOnboarding,\n        setPermTaskManagerViewAllOnboarding,\n        permTaskManagerViewAllRequisition,\n        setPermTaskManagerViewAllRequisition,\n        permTaskManagerViewTeam,\n        setPermTaskManagerViewTeam,\n        permTaskManagerViewHrInfo,\n        setPermTaskManagerViewHrInfo,\n        permUserDirectoryFinanceView,\n        setPermUserDirectoryFinanceView,\n        permUserDirectoryItDetailsView,\n        setPermUserDirectoryItDetailsView,\n        permUserDirectoryLpsyncManage,\n        setPermUserDirectoryLpsyncManage,\n        permUserDirectoryNonFteAudit,\n        setPermUserDirectoryNonFteAudit,\n        permUserDirectoryOrgDetailsView,\n        setPermUserDirectoryOrgDetailsView,\n        permUserDirectoryView,\n        setPermUserDirectoryView,\n        permThirdPartyDirectoryView,\n        setPermThirdPartyDirectoryView,\n        permReportNonFteAudit,\n        setPermReportNonFteAudit,\n        permBulkApproverOnboarding,\n        setPermBulkApproverOnboarding,\n        permBulkApproverRequisition,\n        setPermBulkApproverRequisition,\n        permBulkApproverOffboarding,\n        setPermBulkApproverOffboarding,\n      }}\n    >\n      {children}\n    </AuthUserContext.Provider>\n  );\n};\n\nexport default AuthUserContextProvider;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { memo } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  text: { fontSize: \".92rem\", fontWeight: \"600\", marginLeft: \".4rem\" },\n}));\n\nconst BreadcrumbText = ({ title }) => {\n  const classes = useStyles();\n\n  return (\n    <Typography component={'div'} color=\"textPrimary\" className={classes.text}>\n      {title}\n    </Typography>\n  );\n};\n\nexport default memo(BreadcrumbText);\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst NoPermissionsError = () => {\n  return (\n    <Box ml={5} mt={5}>\n      <Typography component={'div'}>Insufficient Permissions</Typography>\n    </Box>\n  );\n};\n\nexport default NoPermissionsError;\n","import React, { createContext, useState } from \"react\";\n\nexport const NonFteAuditReportContext = createContext();\n\nconst NonFteAuditReportContextProvider = ({ children }) => {\n  const [allAuditsData, setAllAuditsData] = useState();\n  const [nonFteTotal, setNonFteTotal] = useState(0);\n  const [nonFteData, setNonFteData] = useState([]);\n  const [offboardingRequiredTotal, setOffboardingRequiredTotal] = useState(0);\n  const [employeeTypeIncorrectTotal, setEmployeeTypeIncorrectTotal] = useState(\n    0\n  );\n  const [directReportKnownTotal, setDirectReportKnownTotal] = useState(0);\n  const [directReportUnknownTotal, setDirectReportUnknownTotal] = useState(0);\n  const [directReportCorrectTotal, setDirectReportCorrectTotal] = useState(0);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n  const [auditData, setAuditData] = useState();\n\n  return (\n    <NonFteAuditReportContext.Provider\n      value={{\n        allAuditsData,\n        setAllAuditsData,\n        nonFteTotal,\n        setNonFteTotal,\n        nonFteData,\n        setNonFteData,\n        offboardingRequiredTotal,\n        setOffboardingRequiredTotal,\n        employeeTypeIncorrectTotal,\n        setEmployeeTypeIncorrectTotal,\n        directReportKnownTotal,\n        setDirectReportKnownTotal,\n        directReportUnknownTotal,\n        setDirectReportUnknownTotal,\n        directReportCorrectTotal,\n        setDirectReportCorrectTotal,\n        isDataLoading,\n        setIsDataLoading,\n        auditData,\n        setAuditData,\n      }}\n    >\n      {children}\n    </NonFteAuditReportContext.Provider>\n  );\n};\n\nexport default NonFteAuditReportContextProvider;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_REPORTING_NONFTE_AUDITS = gql`\n  query GetReportingNonfteAudits {\n    get_reporting_nonfte_audits {\n      id\n      auditorUsername\n      auditUserFirstName\n      auditUserLastName\n      auditUserEmail\n      auditUserStatus\n      auditUserInformation\n      auditCompleted\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_NONFTE_OKTA_USERS = gql`\n  query GetAllNonfteOktaUsers {\n    get_all_nonfte_okta_users {\n      id\n      email\n      employeeNumber\n      employeeType\n      department\n      firstName\n      jobTitle\n      lastName\n      location\n      managerOktaId\n      managerEmail\n      managerEmployeeNumber\n      photo\n      userName\n      totalDirectReports\n      totalFullTimeDirects\n      totalContractorDirects\n      totalPartnerDirects\n      oktaLastLogin\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { Box, makeStyles, Typography, } from \"@material-ui/core\";\nimport { NonFteAuditReportContext } from \"../NonFteAuditReportContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  countContainer: { width: \"100%\", display: \"flex\", flexDirection: \"row\" },\n  countBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    borderRight: \"2px solid #87889c\",\n    marginRight: theme.spacing(2),\n  },\n  viewBox: {\n    border: \"1px solid #87889c\",\n    borderRadius: \"5px\",\n  },\n  countNum: {\n    fontSize: \"2rem\",\n  },\n  countNumTitle: {\n    fontSize: \".9rem\",\n  },\n}));\n\nconst NonFteCountBox = () => {\n  const classes = useStyles();\n  const {\n    nonFteTotal,\n    offboardingRequiredTotal,\n    employeeTypeIncorrectTotal,\n    directReportKnownTotal,\n    directReportUnknownTotal,\n    directReportCorrectTotal,\n  } = useContext(NonFteAuditReportContext);\n\n  return (\n    <Box className={classes.countContainer}>\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>{nonFteTotal}</Typography>\n        </div>\n\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Total Non-FTEs\n          </Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {nonFteTotal -\n              (offboardingRequiredTotal +\n                directReportCorrectTotal +\n                employeeTypeIncorrectTotal +\n                directReportKnownTotal +\n                directReportUnknownTotal)}\n          </Typography>\n        </div>\n\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>Not Audited</Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {offboardingRequiredTotal}\n          </Typography>\n        </div>\n\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Offboarding Required\n          </Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {employeeTypeIncorrectTotal}\n          </Typography>\n        </div>\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Employee Type Incorrect\n          </Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {directReportKnownTotal}\n          </Typography>\n        </div>\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Direct Report Known\n          </Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {directReportUnknownTotal}\n          </Typography>\n        </div>\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Direct Report Unknown\n          </Typography>\n        </div>\n      </Box>\n      <Box className={classes.line} />\n      <Box className={classes.countBox}>\n        <div>\n          <Typography component={'div'} className={classes.countNum}>\n            {directReportCorrectTotal}\n          </Typography>\n        </div>\n        <div>\n          <Typography component={'div'} className={classes.countNumTitle}>\n            Direct Report Correct\n          </Typography>\n        </div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default NonFteCountBox;\n","import React, { memo } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst CircularIndeterminate = ({ text, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" {...props}/>\n      {text && <p className={classes.text}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(CircularIndeterminate);\n","import {memo} from \"react\";\nimport {TableRow, withStyles} from \"@material-ui/core\";\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n    \"&$hover:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  hover: {\n    cursor: \"pointer\",\n  },\n}))(TableRow);\n\nexport default memo(StyledTableRow);\n","import React, {memo} from \"react\";\nimport {\n  makeStyles,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableHeadCell: {\n    background: theme.palette.primary.main,\n    fontWeight: 600,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst EnhancedTableHead = ({\n  order,\n  orderBy,\n  onRequestSort,\n  headCells,\n  headAlign,\n}) => {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const classes = useStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headAlign || \"center\"}\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n            className={classes.tableHeadCell}\n          >\n            {headCell.isNotSortable ? (\n              headCell.label\n            ) : (\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === \"desc\"\n                      ? \"sorted descending\"\n                      : \"sorted ascending\"}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string,\n};\n\nexport default memo(EnhancedTableHead);\n","const TaskScheduleTypes = {\n  IMMEDIATE: \"Immediate\",\n  SCHEDULED: \"Scheduled\",\n  SENSITIVE: \"Sensitive\"\n}\n\nexport default TaskScheduleTypes;","const TaskTypes = {\n  OFFBOARDING: \"offboarding\",\n  ONBOARDING: \"onboarding\",\n  REQUISITION: \"requisition\",\n  BADGE_REQUEST: \"badge-request\",\n};\n\nexport default TaskTypes;\n","export const badgesUrl = \"https://storage.googleapis.com/lpsync-staging-badges/categorised_badges/\";\n\nconst BadgeTypes = {\n  SYSTEM_OWNER: \"system-owner\",\n  HOBBIES_INTERESTS: \"hobbies-interests\",\n  SUBJECT_MATTER_EXPERT: \"subject-matter-expert\",\n  TOVUTI: \"tovuti\",\n};\n\n\nexport const BadgeNames = {\n  [BadgeTypes.SYSTEM_OWNER]: \"System Owner\",\n  [BadgeTypes.HOBBIES_INTERESTS]: \"Hobbies/Interests\",\n  [BadgeTypes.SUBJECT_MATTER_EXPERT]: \"Subject Matter Expert\",\n  [BadgeTypes.TOVUTI]: \"Tovuti\",\n};\n\nexport const BadgeImages = {\n  [BadgeTypes.SYSTEM_OWNER]: \"system_owner.png\",\n  [BadgeTypes.HOBBIES_INTERESTS]: \"hobbies_interests.png\",\n  [BadgeTypes.SUBJECT_MATTER_EXPERT]: \"sme.png\",\n  [BadgeTypes.TOVUTI]: \"tovuti.png\"\n};\n\nexport const BadgeTypesObj = [\n  {\n    idType: BadgeTypes.SYSTEM_OWNER,\n    nameType: \"System Owner\",\n    iconName: \"system_owner.png\"\n  },\n  {\n    idType: BadgeTypes.HOBBIES_INTERESTS,\n    nameType: \"Hobbies/Interests\",\n    iconName: \"hobbies_interests.png\"\n  },\n  {\n    idType: BadgeTypes.SUBJECT_MATTER_EXPERT,\n    nameType: \"Subject Matter Expert\",\n    iconName: \"sme.png\"\n  },\n  {\n    idType: BadgeTypes.TOVUTI,\n    nameType: \"Tovuti\",\n  } // TODO CHECK\n];\n\nexport default BadgeTypes;\n","import dateFormat from \"dateformat\";\n\nexport const getLogDateString = (timestamp) =>\n  dateFormat(\n    new Date(parseInt(timestamp)).toISOString(),\n    \"yyyy-mm-dd\"\n  );\n\nexport const getDateStringWithTimeAndZone = (timestamp) =>\n  dateFormat(\n    new Date(parseInt(timestamp)).toISOString(),\n    \"dd/mm/yyyy h:MM TT Z\"\n  );\nexport const getDateStringFromString = (timestamp) =>\n  dateFormat(new Date(parseInt(timestamp)), \"mmm d, yyyy\");\n\nexport const getDateString = (timestamp) =>\n  dateFormat(timestamp, \"mmm d, yyyy\");\n\nexport const getFullDateString = (timestamp) =>\n  dateFormat(timestamp, \"mmmm d, yyyy\");\n\nexport const getDateStringWithTimeAndCustomTimezone = (timestamp, zone) =>\n  dateFormat(timestamp, \"mmmm d, yyyy h:MM TT\") + \" \" + (zone || \"\");\n\nconst getDateStringWithTimeAndDefaultTimezone = (timestamp) =>\n  dateFormat(\n    new Date(parseInt(timestamp)).toISOString(),\n    \"mmmm d, yyyy h:MM TT Z\",\n  );\n\nexport const getShortDateWithTimeString = (timestamp) =>\n  dateFormat(\n    new Date(parseInt(timestamp)).toISOString(),\n    \"mmm d, yyyy h:MM TT Z\",\n  );\n\nexport const getDateWithTimeString = (timestamp, zone) =>\n  zone\n    ? getDateStringWithTimeAndCustomTimezone(timestamp, zone)\n    : getDateStringWithTimeAndDefaultTimezone(timestamp);","import TaskScheduleTypes from \"../constants/TaskScheduleTypes\";\nimport React from \"react\";\nimport TaskTypes from \"../constants/TaskTypes\";\nimport BadgeTypes from \"../constants/BadgeTypes\";\nimport { getDateStringWithTimeAndCustomTimezone, getFullDateString } from \"./DateTimezoneHelpers\";\n\nexport const trailingS = length => length > 1 ? \"s\" : \"\";\n\nexport const joinWith = (splitter) => (...valueN) => valueN?.filter(Boolean)?.join(splitter);\nexport const joinWithSpace = joinWith(\" \");\n\nexport const typesWithPrefix = (prefix) => (obj) =>\n  Object.entries(obj).reduce(\n    (prev, [curK, curV]) => ({\n      ...prev,\n      [curK]: prefix + curV,\n    }),\n    {},\n  );\n\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\nexport const isBoolean = (val) => \"boolean\" === typeof val;\n\nexport function descendingComparator(a, b, orderBy) {\n  const orderByStrings = orderBy?.split(\".\");\n  if (orderByStrings?.length === 1) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n  }\n  if (orderByStrings?.length === 2) {\n    if (\n      b[orderByStrings[0]]?.[orderByStrings[1]] <\n      a[orderByStrings[0]]?.[orderByStrings[1]]\n    ) {\n      return -1;\n    }\n    if (\n      b[orderByStrings[0]]?.[orderByStrings[1]] >\n      a[orderByStrings[0]]?.[orderByStrings[1]]\n    ) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array?.map((el, index) => [el, index]);\n  stabilizedThis?.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis?.map((el) => el[0]);\n}\n\nexport const getValidationMessage = (value, validate, fieldName, setError) => {\n  const errorText = validate\n    ?.map((validator) => validator(value))\n    .find((v) => v !== \"\");\n  const errorMessage = errorText ? `${fieldName} ${errorText}` : \"\";\n  if (errorText) {\n    console.log(setError);\n    setError && setError(true);\n  }\n  return errorMessage;\n};\n\nexport const getProfileName = (profile) =>\n  joinWithSpace(profile?.firstName, profile?.lastName);\n\nexport const getProfileNameAndInfo = (profile) => {\n  return (\n    (profile?.firstName || \"\") +\n    \" \" +\n    (profile?.lastName || \"\") +\n    \" | \" +\n    (profile?.location || \"\") +\n    \" | \" +\n    (profile?.jobTitle || \"\")\n  );\n};\n\nexport const jobToString = (job) =>\n  joinWith(\" | \")(job?.jobCode, job?.jobTitle);\n\nexport const getRequisitionTypeTitle = (type) => {\n  if (type?.id) {\n    return joinWith(\" - \")(type?.id, type?.jobCode, type?.jobTitle, type?.startDate);\n  } else {\n    return \"No requisition selected\";\n  }\n};\n\nexport const transformCamelCaseToText = (stringInCamelCase) =>\n  stringInCamelCase.replace(/([A-Z])/g, \" $1\");\n\nexport const makeFirstLetterUpperCase = (text) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const getDigitsFromString = (text) => text.replace(/[\\D]/g, \"\");\n\nexport const getTaskFullName = (task, type) => {\n  if (type === TaskTypes.OFFBOARDING) {\n    console.log(\"OFFBOARDING\", task);\n    return getOffboardingFullName(task);\n  }\n  if (type === TaskTypes.ONBOARDING) {\n    console.log(\"ONBOARDING\", task);\n    return getOnboardingFullName(task);\n  }\n};\n\nconst getFullName = (taskName, fieldStartsWith) => (task) => joinWithSpace(\n  task?.[taskName]?.[fieldStartsWith + \"FirstName\"], task?.[taskName]?.[fieldStartsWith + \"LastName\"],\n);\n\nexport const getOffboardingFullName = getFullName(\"offboardingTask\", \"offboard\");\n\nexport const getOnboardingFullName = getFullName(\"onboardingTask\", \"onboard\");\n\nexport const getTaskFieldValue = (task, type, fieldName) => {\n  if (type === TaskTypes.OFFBOARDING) {\n    console.log(task, type, fieldName, getOnboardingFieldValue(task, fieldName))\n    return getOffboardingFieldValue(task, fieldName);\n  }\n  if (type === TaskTypes.ONBOARDING) {\n    console.log(task, type, fieldName, getOffboardingFieldValue(task, fieldName))\n    return getOnboardingFieldValue(task, fieldName);\n  }\n  if (type === TaskTypes.REQUISITION) {\n    return getRequisitionFieldValue(task, fieldName);\n  }\n};\nexport const getRequisitionFieldValue = (task, fieldName) =>\n  getFieldValue(task, \"requisitionTask\", \"req\" + fieldName);\n\nexport const getOnboardingFieldValue = (task, fieldName) =>\n  getFieldValue(task, \"onboardingTask\", \"onboard\" + fieldName);\n\nexport const getOffboardingFieldValue = (task, fieldName) =>\n  getFieldValue(task, \"offboardingTask\", \"offboard\" + fieldName);\n\nconst getFieldValue = (task, taskName, field) =>\n  task?.[taskName]?.[field] || \"\";\n\nexport const getScheduleDateOrImmediate = (task, day) =>\n  task?.taskScheduleType === TaskScheduleTypes.SCHEDULED\n    ? day\n      ? getFullDateString(task?.taskScheduleDateTime)\n      : getDateStringWithTimeAndCustomTimezone(task?.taskScheduleDateTime)\n    : TaskScheduleTypes.IMMEDIATE;\n\nexport const getTaskValueOrNotEntered = (task, field, secondField) => {\n  const secondValue =\n    secondField && task?.[secondField] ? ` ${task?.[secondField]}` : \"\";\n  return task?.[field] ? task?.[field] + secondValue : <p>Not entered</p>;\n};\n\nexport const createLogDesc =\n  (task, taskType) => (operation, authUser, message) => {\n    const getBody = () => {\n      switch (taskType) {\n        case TaskTypes.ONBOARDING:\n          return `[${getOnboardingFullName(task)} (${getOnboardingFieldValue(\n            task,\n            \"Username\",\n          )})]; `;\n        case TaskTypes.OFFBOARDING:\n          return `[${getOffboardingFullName(task)} (${getOffboardingFieldValue(\n            task,\n            \"Username\",\n          )})]; `;\n        case TaskTypes.REQUISITION:\n          return `[${task.requisitionTask.reqType}, ${task.requisitionTask.reqBusinessUnit}, ${task.requisitionTask.reqDepartment}]; `;\n      }\n    };\n    const lowercaseOperation = operation?.toLowerCase();\n    const createdBy =\n      authUser && `${lowercaseOperation}By: ${authUser.profile.userName}; `;\n    const msg = message && `${lowercaseOperation}Msg: ${message}}; `;\n\n    return (\n      `Task ${operation} >> Task ID: ${task.id} ` + getBody() + createdBy + msg\n    );\n  };\n\nexport const getYesOrNo = (value) => (value ? \"Yes\" : \"No\");\n\nexport const logOptions = (description, logType = \"Task Manager\") => ({\n  variables: {\n    input: {\n      logType,\n      logNotification: \"info\",\n      logDescription: description,\n    },\n  },\n});\n\nexport const getStrWithFirstUpperLetter = (s) =>\n  (s?.charAt(0)?.toUpperCase() || \"\") + (s?.slice(1)?.toLowerCase() || \"\");\n\nexport const transformSpaceToDashAndLowerCase = (str) =>\n  str.replace(/\\s+/g, \"-\").toLowerCase();\n\nexport const transformDashToSpace = (str) => str.replace(/-/g, \" \");\n\nexport const getGroupedBadges = (badges, filter) =>  {\n  const typeBadgesArray = Object.values(BadgeTypes)?.map(type =>\n        [type, badges?.filter((badge) => badge?.badge?.badgeType === type)]);\n  const filteredBadgesArray = filter ? typeBadgesArray?.filter(filter) : typeBadgesArray;\n  return Object.fromEntries(new Map(filteredBadgesArray));\n}\n","import {Typography} from \"@material-ui/core\";\nimport React, {memo} from \"react\";\n\nconst NoResultsTypography = ({...args}) => {\n  return (\n    <Typography component={\"div\"} {...args}>\n      No Results\n    </Typography>\n  );\n};\n\nexport default memo(NoResultsTypography);\n","import React, {memo, useContext, useState} from \"react\";\nimport {\n  Box,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport {NonFteAuditReportContext} from \"../NonFteAuditReportContextProvider\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport StyledTableRow from \"../../../components/table/StyledTableRow\";\nimport EnhancedTableHead from \"../../../components/table/EnhancedTableHead\";\nimport {getComparator, stableSort} from \"../../../data/helper/helpers\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    height: \"30rem\",\n  },\n  tableHeadCell: {\n    background: \"#16173f\",\n    fontWeight: 600,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst headCells = [\n  {id: \"firstName\", numeric: true, disablePadding: true, label: \"Name\"},\n  {\n    id: \"employeeType\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Employee Type\",\n  },\n  {\n    id: \"jobTitle\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Job Title\",\n  },\n  {\n    id: \"managerEmail\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Manager\",\n  },\n  {\n    id: \"auditStatus\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Audit Status\",\n  },\n  {\n    id: \"oktaLastLogin\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Okta Last Login\",\n  },\n];\n\nconst NonFteTable = () => {\n  const classes = useStyles();\n  const {isDataLoading, auditData} = useContext(NonFteAuditReportContext);\n  const [order, setOrder] = useState(\"desc\");\n  const [orderBy, setOrderBy] = useState(\"taskStatus\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Box mt={2} minWidth={1050}>\n      <Box>\n        {auditData ? (\n          <>\n            {auditData?.length === 0 ? (\n              <NoResultsTypography />\n            ) : (\n              <>\n                <TableContainer className={classes.tableContainer}>\n                  <Table stickyHeader size=\"small\">\n                    <EnhancedTableHead\n                      classes={classes}\n                      order={order}\n                      orderBy={orderBy}\n                      onRequestSort={handleRequestSort}\n                      headCells={headCells}\n                    />\n                    {isDataLoading ? (\n                      <LoadingCircle />\n                    ) : (\n                      <TableBody>\n                        {stableSort(\n                          auditData.map((i) => ({\n                            ...i,\n                            oktaLastLogin: new Date(i.oktaLastLogin),\n                          })),\n                          getComparator(order, orderBy)\n                        )\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n\n                          .map((nonFte) => {\n                            return (\n                              <StyledTableRow\n                                hover\n                                tabIndex={-1}\n                                id={nonFte.id}\n                                key={nonFte.id}\n                              >\n                                <TableCell>\n                                  {nonFte.firstName} {nonFte.lastName}\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle2\"\n                                  >\n                                    {nonFte.userName}\n                                  </Typography>\n                                </TableCell>\n                                <TableCell>{nonFte.employeeType}</TableCell>\n                                <TableCell>\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {nonFte.jobTitle}\n                                  </Typography>\n                                </TableCell>\n                                <TableCell>\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {nonFte.managerEmail\n                                      ? nonFte.managerEmail?.toLowerCase()\n                                      : \"n/a\"}\n                                  </Typography>\n                                </TableCell>\n                                <TableCell>{nonFte.auditStatus}</TableCell>\n                                <TableCell>\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {nonFte.oktaLastLogin.getTime() ? (\n                                      nonFte.oktaLastLogin.toString()\n                                    ) : (\n                                      <NoResultsTypography variant=\"subtitle1\" />\n                                    )}\n                                  </Typography>\n                                </TableCell>\n                              </StyledTableRow>\n                            );\n                          })}\n                      </TableBody>\n                    )}\n                  </Table>\n                </TableContainer>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  component=\"div\"\n                  count={auditData?.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  onPageChange={handleChangePage}\n                  onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n              </>\n            )}{\" \"}\n          </>\n        ) : (\n          <LoadingCircle />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(NonFteTable);\n","import React, { memo } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst RefreshButton = ({ handleClick, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={handleClick}\n      {...props}\n    >\n      <RefreshIcon className={classes.icon} />\n      Refresh\n    </Button>\n  );\n};\n\nexport default memo(RefreshButton);\n","import React, {memo} from \"react\";\nimport {Box, Card, CardContent, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(()=> ({\n  viewBox: {\n    border: \"1px solid #87889c\",\n    borderRadius: \"5px\",\n  },\n}));\n\nconst BoxCardWrapper = ({ ...props}) => {\n  const classes= useStyles();\n\n  return (\n    <Box mt={2} minWidth={1050} className={classes.viewBox}>\n      <Card>\n        <CardContent {...props}/>\n      </Card>\n    </Box>\n  )\n}\n\nexport default memo(BoxCardWrapper);","import React, {memo} from \"react\";\nimport {\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchTextField: {\n    width: \"58ch\",\n    \"& .MuiFilledInput-root\": {\n      background: theme.palette.primary.main,\n    },\n    \"& .MuiInputLabel-filled\": {\n      fontSize: \"0.75rem\",\n      lineHeight: 1.5,\n    },\n    \"& .MuiInputLabel-filled.MuiInputLabel-shrink.MuiInputLabel-marginDense\": {\n      width: \"calc(58ch * 4 / 3)\",\n    },\n    \"& .MuiFormHelperText-root\": {\n      width: \"max-content\",\n    },\n  },\n}));\n\nconst SearchTextField = ({\n  className,\n  value,\n  handleChange,\n  handleClose,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  const closeHandler = () => {\n    handleChange(\"\");\n    if (handleClose)\n      handleClose();\n  };\n\n  return (\n    <TextField\n      variant=\"filled\"\n      size=\"small\"\n      color=\"secondary\"\n      margin=\"dense\"\n      autoComplete=\"off\"\n      value={value}\n      onChange={(e) => handleChange(e.target.value)}\n      className={className || classes.searchTextField}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={closeHandler} edge=\"end\">\n              <ClearIcon />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default memo(SearchTextField);\n","export const isObjectsEqual = (obj1, obj2) => {\n  var props1 = Object.getOwnPropertyNames(obj1);\n  var props2 = Object.getOwnPropertyNames(obj2);\n\n  if (props1.length != props2.length) {\n    return false;\n  }\n  for (let i = 0; i < props1.length; i++) {\n    let val1 = obj1[props1[i]];\n    let val2 = obj2[props1[i]];\n    let isObjects = isObject(val1) && isObject(val2);\n    if (\n      (isObjects && !isObjectsEqual(val1, val2)) ||\n      (!isObjects && val1 !== val2)\n    ) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst isObject = (object) => object != null && typeof object === \"object\";\n\nexport const toSetArray = (array) => [...new Set(array)];\n\nexport const removeExtraSpaces = string => string?.replace(/\\s\\s+/g, \" \")?.trim();","import React, {memo} from \"react\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  filter: {\n    margin: theme.spacing(1),\n    width: \"25ch\",\n    \"& .MuiFilledInput-root\": {\n      background: theme.palette.primary.main,\n    },\n    \"& .MuiInputLabel-filled.MuiInputLabel-shrink\": {\n      transform: \"translate(12px, 7px) scale(0.75)\",\n    },\n    \"& .MuiInputLabel-filled\": {\n      transform: \"translate(12px, 17px) scale(1)\",\n    },\n    '& .MuiAutocomplete-inputRoot[class*=\"MuiFilledInput-root\"] .MuiAutocomplete-input': {\n      padding: \"6px 4px\"\n    },\n    '& .MuiAutocomplete-inputRoot[class*=\"MuiFilledInput-root\"]': {\n      paddingTop: 17\n    }\n  },\n}));\n\nconst AutoTextField =({...props}) => {\n  const classes = useStyles();\n  return <TextField\n    size=\"small\"\n    color=\"secondary\"\n    variant={\"filled\"}\n    className={classes.filter}\n    {...props}\n  />\n};\n\nexport default memo(AutoTextField);","import React, {memo, useMemo} from \"react\";\nimport {MenuItem} from \"@material-ui/core\";\nimport {toSetArray} from \"../../data/helper/commonFunctions\";\nimport AutoTextField from \"./AutoTextField\";\n\nconst SelectTextField = ({dataList, onValueChange, deleteFirst, valueLabelMapper, ...props}) => {\n  const sortedOptions = useMemo(() => toSetArray(dataList)?.sort(), [dataList]);\n\n  return (\n    <AutoTextField\n      select\n      onChange={(e) => onValueChange(e.target.value)}\n      {...props}\n    >\n      {!deleteFirst && (\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n      )}\n      {sortedOptions?.map((value) => (\n          <MenuItem key={value} value={value}>\n            {valueLabelMapper\n              ? valueLabelMapper(value)\n              : value\n            }\n          </MenuItem>\n        ))}\n    </AutoTextField>\n  );\n};\n\nexport default memo(SelectTextField);\n","import { memo } from \"react\";\nimport { Collapse } from \"@material-ui/core\";\n\nconst CustomCollapse = ({ ...props }) => {\n  return (\n    <Collapse timeout={500} unmountOnExit {...props}/>\n  );\n};\n\nexport default memo(CustomCollapse);","import React, { memo } from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  applyFilterBtn: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nconst ApplyFiltersButton = ({ handleClick, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.applyFilterBtn}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={handleClick}\n      {...props}\n    >\n      Apply Filter\n    </Button>\n  );\n};\n\nexport default memo(ApplyFiltersButton);","import React, {memo} from \"react\";\nimport {Button} from \"@material-ui/core\";\n\nconst ResetFiltersButton = ({handleClick, ...props}) => {\n  return (\n    <Button variant=\"contained\" onClick={handleClick} {...props}>\n      Reset Filters\n    </Button>\n  );\n};\n\nexport default memo(ResetFiltersButton);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport CustomCollapse from \"../../components/blocks/CustomCollapse\";\nimport ApplyFiltersButton from \"../../components/buttons/ApplyFiltersButton\";\nimport ResetFiltersButton from \"../../components/buttons/ResetFilterButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterBox: {\n    marginTop: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"row\",\n    // flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  filterFields: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    // marginBottom: theme.spacing(3),\n  },\n  clearFilterBtn: {\n    marginLeft: theme.spacing(2),\n  },\n  filterActionWrapper: {\n    display: \"flex\",\n  }\n}));\n\nconst FilterBlock = ({\n  filterOpen,\n  handleClearFilters,\n  handleFilterQuery,\n  children,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <CustomCollapse in={filterOpen}>\n      <Box className={classes.filterBox}>\n        <Box className={classes.filterFields}>\n          {children}\n        </Box>\n\n        <div className={classes.filterActionWrapper}>\n          <ApplyFiltersButton handleClick={handleFilterQuery} />\n\n          <ResetFiltersButton\n            handleClick={handleClearFilters}\n            className={classes.clearFilterBtn}\n          />\n        </div>\n      </Box>\n    </CustomCollapse>\n  );\n};\n\nexport default memo(FilterBlock);\n","import React, {memo} from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport AutoTextField from \"./AutoTextField\";\n\nconst CustomAutocomplete = ({textFieldProps, onValueChange, ...props}) => {\n  return (\n    <Autocomplete\n      freeSolo\n      autoSelect\n      blurOnSelect\n      onChange={(event, newValue) => {\n        onValueChange(newValue);\n      }}\n      renderInput={(params) => (\n        <AutoTextField\n          {...params}\n          {...textFieldProps}\n        />\n      )}\n      {...props}\n    />\n  )\n}\n\nexport default memo(CustomAutocomplete);","import React, {memo, useCallback, useMemo, useState} from \"react\";\nimport SelectTextField from \"../../../components/inputs/SelectTextfield\";\nimport FilterBlock from \"../../../components/blocks/FilterBlock\";\nimport {toSetArray} from \"../../../data/helper/commonFunctions\";\nimport CustomAutocomplete from \"../../../components/inputs/CustomAutocomplete\";\n\nconst NonFteFilterBox = ({nonFteData, filterOpen, setIsFilterApplied, setAuditData}) => {\n  const [employeeTypeFilter, setEmployeeTypeFilter] = useState(\"\");\n  const [managerFilter, setManagerFilter] = useState(\"\");\n  const [auditStatusFilter, setAuditStatusFilter] = useState(\"\");\n\n  const handleFilterQuery = () => {\n    setIsFilterApplied(true);\n    const filtered = nonFteData\n      .filter((report) =>\n        (!employeeTypeFilter?.length || report.employeeType === employeeTypeFilter) &&\n        (!auditStatusFilter?.length || report.auditStatus === auditStatusFilter) &&\n        (!managerFilter?.length || String(report.managerEmail)?.split(\"@\")?.[0]?.includes(managerFilter))\n      );\n    setAuditData(filtered);\n  };\n\n  const handleClearFilters = useCallback(() => {\n    setEmployeeTypeFilter(\"\");\n    setManagerFilter(\"\");\n    setAuditStatusFilter(\"\");\n    setIsFilterApplied(false);\n    setAuditData(nonFteData);\n  }, [nonFteData]);\n\n  const employeeTypes = useMemo(() =>\n    nonFteData?.map((data) => data.employeeType), [nonFteData]);\n\n  const managers = useMemo(() =>\n    toSetArray(nonFteData?.map((data) => String(data.managerEmail)?.split(\"@\")?.[0]))?.sort(), [nonFteData]);\n\n  const auditStatuses = useMemo(() =>\n    nonFteData?.map((data) => data.auditStatus), [nonFteData]);\n\n  return (\n    <FilterBlock\n      filterOpen={filterOpen}\n      handleFilterQuery={handleFilterQuery}\n      handleClearFilters={handleClearFilters}\n    >\n      <SelectTextField\n        id=\"select-employee-type\"\n        label=\"Employee Type\"\n        value={employeeTypeFilter}\n        onValueChange={setEmployeeTypeFilter}\n        dataList={employeeTypes}\n      />\n      <CustomAutocomplete\n        value={managerFilter}\n        options={managers}\n        getOptionLabel={(option) => String(option)?.toLowerCase()}\n        onValueChange={setManagerFilter}\n        textFieldProps={{\n          id: \"select-manager\",\n          label: \"Manager\"\n        }}\n      />\n      <SelectTextField\n        id=\"select-audit-status\"\n        label=\"Audit Status\"\n        value={auditStatusFilter}\n        onValueChange={setAuditStatusFilter}\n        dataList={auditStatuses}\n      />\n    </FilterBlock>\n  )\n}\n\nexport default memo(NonFteFilterBox);","import React, {useContext, useState} from \"react\";\nimport Fuse from \"fuse.js\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  Toolbar,\n} from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport {CSVLink} from \"react-csv\";\nimport {NonFteAuditReportContext} from \"../NonFteAuditReportContextProvider\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport BoxCardWrapper from \"../../../components/blocks/BoxCardWrapper\";\nimport SearchTextField from \"../../../components/inputs/SearchTextField\";\nimport NonFteFilterBox from \"./NonFteFilterBox\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapperCardContent: {\n    padding: theme.spacing(3),\n    backgroundImage: theme.palette.background.gradient,\n  },\n  searchTextField: {\n    width: \"40ch\",\n    marginBottom: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    \"& .MuiFilledInput-root\": {\n      background: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst NonFteSearchFilterBox = ({refetch}) => {\n  const classes = useStyles();\n  const {nonFteData, setAuditData} = useContext(NonFteAuditReportContext);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n  const [filterOpen, setFilterOpen] = useState(false);\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n    fuzzySearch(value);\n  };\n\n  const options = {\n    shouldSort: true,\n    useExtendedSearch: true,\n    threshold: 0.1,\n    keys: [\"firstName\", \"lastName\", \"jobTitle\", \"managerEmail\"],\n  };\n\n  const fuzzySearch = (value) => {\n    if (value === \"\") setAuditData(nonFteData);\n    else {\n      const fuse = new Fuse(nonFteData, options);\n      if (nonFteData) {\n        const result = fuse.search(value).map((data) => data.item);\n\n        setAuditData(result);\n      }\n    }\n  };\n\n  const handleFilterClick = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  return (\n    <BoxCardWrapper className={classes.wrapperCardContent}>\n      <Box>\n        <Toolbar>\n          <SearchTextField\n            label=\"Search All Non-Fte Reports\"\n            value={searchQuery}\n            handleChange={handleSearch}\n            className={classes.searchTextField}\n          />\n          <Box flexGrow={1} />\n          <>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleFilterClick}\n            >\n              <FilterListIcon /> Filter All Non-Fte Audit Reports{\" \"}\n              {isFilterApplied && \"(Applied)\"}\n            </Button>\n          </>\n          <Box ml={2}>\n            <CSVLink data={nonFteData}>\n              <Button variant=\"contained\">\n                <GetAppIcon className={classes.csvIcon} /> CSV Export\n              </Button>\n            </CSVLink>\n          </Box>\n          <Box ml={2}>\n            <RefreshButton handleClick={() => refetch()} />{\" \"}\n          </Box>\n        </Toolbar>\n      </Box>\n\n      <NonFteFilterBox\n        filterOpen={filterOpen}\n        nonFteData={nonFteData}\n        setIsFilterApplied={setIsFilterApplied}\n        setAuditData={setAuditData}\n      />\n    </BoxCardWrapper>\n  );\n};\n\nexport default NonFteSearchFilterBox;\n","import React, { memo } from \"react\";\nimport {Box, Card, CardContent, Paper} from \"@material-ui/core\";\n\nconst PaperCardWrapper = ({ children, paperClassName, contentClassName, ...props }) => {\n  return (\n    <Box pb={1}>\n      <Paper elevation={3} className={paperClassName}>\n        <Card {...props}>\n          <CardContent className={contentClassName}>\n            {children}\n          </CardContent>\n        </Card>\n      </Paper>\n    </Box>\n  )\n}\n\nexport default memo(PaperCardWrapper)","const handleError = (error) => (history) => {\n  console.log(JSON.stringify(error, null, 2));\n  console.error(error.message);\n  if (error.message === \"Bad Permission\") {\n    history.push(\"/\");\n  }\n};\n\nexport default handleError;\n","import React, {memo, useCallback, useContext, useEffect} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport {GET_REPORTING_NONFTE_AUDITS} from \"../../../operations/queries/getReportingNonfteAudits\";\nimport {GET_ALL_NONFTE_OKTA_USERS} from \"../../../operations/queries/getAllNonfteOktaUsers\";\nimport {NonFteAuditReportContext} from \"../NonFteAuditReportContextProvider\";\nimport NonFteCountBox from \"./NonFteCountBox\";\nimport NonFteTable from \"./NonFteTable\";\nimport NonFteSearchFilterBox from \"./NonFteSearchFilterBox\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst AuditReportPageContent = () => {\n  const history = useHistory();\n  const {\n    allAuditsData,\n    nonFteData,\n    setNonFteData,\n    setAllAuditsData,\n    setOffboardingRequiredTotal,\n    setNonFteTotal,\n    setEmployeeTypeIncorrectTotal,\n    setDirectReportKnownTotal,\n    setDirectReportUnknownTotal,\n    setDirectReportCorrectTotal,\n    setAuditData,\n  } = useContext(NonFteAuditReportContext);\n\n  const {data: nonfteAuditsData, refetch} = useQuery(\n    GET_REPORTING_NONFTE_AUDITS,\n    {\n      onCompleted: (data) => {\n        const allData = data.get_reporting_nonfte_audits;\n        setAllAuditsData(allData);\n        countTotals(allData);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const {data: nonfteUsersData} = useQuery(GET_ALL_NONFTE_OKTA_USERS, {\n    onCompleted: (data) => {\n      setNonFteTotal(data.get_all_nonfte_okta_users?.length);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const filterData = useCallback(\n    (auditsData, usersData) => {\n      const newData = [];\n\n      usersData?.forEach((nonFte) => {\n        const isAudited = auditsData.some(\n          (audit) => audit.auditUserEmail === nonFte.email\n        );\n\n        if (isAudited) {\n          const auditInfo = auditsData.filter((audit) =>\n            audit.auditUserEmail.includes(nonFte.email)\n          );\n\n          const insert = {\n            auditStatus: auditInfo[0].auditUserStatus,\n          };\n          newData.push({...nonFte, ...insert});\n        } else {\n          const insert = {\n            auditStatus: \"Not audited\",\n          };\n          newData.push({...nonFte, ...insert});\n        }\n      });\n\n      setNonFteData(newData);\n      setAuditData(newData);\n    },\n    [nonfteUsersData, setAuditData, setNonFteData]\n  );\n\n  useEffect(() => {\n    if (nonfteAuditsData && nonfteUsersData) {\n      filterData(\n        nonfteAuditsData?.get_reporting_nonfte_audits,\n        nonfteUsersData?.get_all_nonfte_okta_users\n      );\n    }\n  }, [nonfteUsersData, nonfteAuditsData, filterData]);\n\n  const countTotals = (data) => {\n    setOffboardingRequiredTotal(\n      data?.filter(\n        (audit) => audit.auditUserStatus === \"User needs to be offboarded\"\n      ).length\n    );\n    setDirectReportCorrectTotal(\n      data?.filter(\n        (audit) => audit.auditUserStatus === \"Reports to me - no change\"\n      ).length\n    );\n    setEmployeeTypeIncorrectTotal(\n      data?.filter(\n        (audit) => audit.auditUserStatus === \"User is a full time employee\"\n      ).length\n    );\n    setDirectReportKnownTotal(\n      data?.filter(\n        (audit) =>\n          audit.auditUserStatus === \"Not reporting to me - manager known\"\n      ).length\n    );\n    setDirectReportUnknownTotal(\n      data?.filter(\n        (audit) =>\n          audit.auditUserStatus === \"Not reporting to me - manager unknown\"\n      ).length\n    );\n  };\n\n  return (\n    <>\n      {allAuditsData && nonfteUsersData ? (\n        <Box mt={3} minWidth={1050}>\n          <PaperCardWrapper>\n            {nonFteData?.length > 0 && (\n              <>\n                <NonFteCountBox />\n                <NonFteSearchFilterBox refetch={refetch} />\n                <NonFteTable />\n              </>\n            )}\n          </PaperCardWrapper>\n        </Box>\n      ) : (\n        <LoadingCircle />\n      )}\n    </>\n  );\n};\n\nexport default memo(AuditReportPageContent);\n","import React, { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\n\nconst BreadcrumbLink = ({ href, title }) => {\n  return (\n    <Button\n      size=\"small\"\n      component={NavLink}\n      to={href}\n    >\n      {title}\n    </Button>\n  );\n};\n\nexport default memo(BreadcrumbLink);\n","const FrontendRoutes = {\n  HOME: \"/\",\n  LOGIN_CALLBACK: \"/login/callback\",\n  NON_FTE_AUDIT_REPORT: \"/nonfteauditreport\",\n  REPORTING_DASHBOARD: \"/reporting-dashboard\",\n  REPORT_GENERATOR: \"/report-generator\",\n  CONSOLIDATED_REPORT: \"/consolidated-report\",\n  DASHBOARD: \"/dashboard\",\n  ORGANIZATION_CHART: \"/organizationchart\",\n  CANDIDATE_REQUEST: \"/candidate-request\",\n  MULTI_CANDIDATE_REQUEST: \"/multi-candidate-onboarding-request\",\n  // ONBOARD_EMPLOYEE: \"/onboardemployee\",\n  OFFBOARD_EMPLOYEE: \"/offboardemployee\",\n  ONBOARDING_DASHBOARD: \"/onboarding-dashboard\",\n  ONBOARDING_DASHBOARD_VIEW: (hash) =>\n    `/onboarding-dashboard/view/${hash || \":hash\"}`,\n  REQUISITION_REQUEST: \"/requisitionrequest\",\n  SYSTEM_STATUS: \"/systemstatus\",\n  TASK_MANAGER: \"/taskmanager\",\n  TASK_MANAGER_VIEW: (hash) => `/taskmanager/view/${hash || \":hash\"}`,\n  TASK_MANAGER_VIEW_TASK: (hash, taskId) =>\n    `/taskmanager/view/${hash || \":hash\"}/${taskId || \":taskId\"}`,\n  USER_DIRECTORY: \"/userdirectory\",\n  USER_DIRECTORY_PROFILE: (user) =>\n    `/userdirectory/profile/${user || \":userName\"}`,\n  THIRD_PARTY_DIRECTORY: \"/third-party-directory\",\n  THIRD_PARTY_DIRECTORY_PROFILE: (thirdPartyId) =>\n    `/third-party-directory/profile/${thirdPartyId || \":thirdPartyId\"}`,\n  GLOBAL_SEARCH: \"/global-search\",\n  SERVICE_AND_SYSTEM_DIRECTORY: \"/service-and-system-directory\",\n  SERVICE_AND_SYSTEM_DIRECTORY_SERVICE: \"/service-and-system-directory/:id\",\n};\n\nexport const AdminRoutes = {\n  ADMIN: \"/admin\",\n  ADMIN_CANDIDATE_PORTAL: \"/admin/candidate-portal-admin\",\n  ADMIN_FTE_CANDIDATE_TRACKER: \"/admin/fte-candidate-tracker\",\n  ADMIN_FTE_CANDIDATE_TRACKER_USERNAME:\n    \"/admin/fte-candidate-tracker/:username\",\n  ADMIN_OFFBOARDING_SETTINGS: \"/admin/offboardingsettings\",\n  ADMIN_ONBOARDING_SETTINGS: \"/admin/onboardingsettings\",\n  ADMIN_SCHEDULER_JOBS: \"/admin/scheduler-jobs\",\n  ADMIN_SYSTEM_LOGS: \"/admin/systemlogs\",\n  ADMIN_USER_MANAGEMENT: \"/admin/usermanagement\",\n  ADMIN_USER_BADGING_MANAGEMENT: \"/admin/userbadgemanagement\",\n};\nexport default FrontendRoutes;\n","import React, { memo } from \"react\";\nimport { Box, Breadcrumbs } from \"@material-ui/core\";\nimport BreadcrumbLink from \"./BreadcrumbLink\";\nimport FrontendRoutes, { AdminRoutes } from \"../../data/constants/FrontendRoutes\";\nimport PropTypes from \"prop-types\";\n\nconst BreadcrumbHomeBox = ({admin, children}) => {\n  return (\n    <Box mt={1} ml={1}>\n      <Breadcrumbs aria-label=\"breadcrumb\">\n        <BreadcrumbLink href={admin ? AdminRoutes.ADMIN : FrontendRoutes.HOME} title={\"Home\"}/>\n        {children}\n      </Breadcrumbs>\n    </Box>\n  )\n}\n\nBreadcrumbHomeBox.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default memo(BreadcrumbHomeBox);","import React, {memo} from \"react\";\nimport {Typography} from \"@material-ui/core\";\n\nconst PageTitle = ({children}) => {\n  return (\n    <Typography component=\"h2\" variant=\"h2\">\n      {children}\n    </Typography>\n  );\n};\n\nexport default memo(PageTitle);\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport PageTitle from \"../PageTitle\";\n\nconst PageTitleBox = ({title, children, ...props}) => {\n  return (\n    <Box minWidth={1050} mt={2} mb={3} {...props}>\n      <PageTitle>{title}</PageTitle>\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(PageTitleBox);","import React, { memo, useContext, useEffect, useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport NonFteAuditReportContextProvider from \"./NonFteAuditReportContextProvider\";\nimport NonFteAuditReportPageContent from \"./NonFteAuditReportPageContent\";\nimport { AuthUserContext } from \"../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst NonFteAuditReportPage = () => {\n  const { permReportNonFteAudit } = useContext(AuthUserContext);\n  const [viewNonFteAuditReportPage, setViewNonFteAuditReportPage] = useState(\n    false\n  );\n\n  useEffect(() => {\n    if (permReportNonFteAudit) {\n      setViewNonFteAuditReportPage(true);\n    }\n  }, [permReportNonFteAudit]);\n  return (\n    <NonFteAuditReportContextProvider>\n      <Page title=\"Non-FTE Audit Report | LPSYNC\">\n        <BreadcrumbHomeBox>\n          <BreadcrumbText title={\"NON-FTE AUDIT REPORT\"}/>\n        </BreadcrumbHomeBox>\n\n        <Box mx={3}>\n          <PageTitleBox title=\"Non-FTE Audit Report\"/>\n\n          {viewNonFteAuditReportPage ? (\n            <NonFteAuditReportPageContent/>\n          ) : (\n            <NoPermissionsError/>\n          )}\n        </Box>\n      </Page>\n    </NonFteAuditReportContextProvider>\n  );\n};\n\nexport default memo(NonFteAuditReportPage);\n","import React from \"react\";\n\nconst ConsolidatedReportPage = () => {\n  return (\n    <div>\n      <p>Consolidated Report Page</p>\n    </div>\n  );\n};\n\nexport default ConsolidatedReportPage;\n","import React, { useContext } from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport PageTitle from \"../../components/PageTitle\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport { AuthUserContext } from \"../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\n\nconst DashboardPage = () => {\n  const { permDashboardView } = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Dashboard | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"DASHBOARD\"} />\n      </BreadcrumbHomeBox>\n      {permDashboardView ? (\n        <Container>\n          <Box my={2}>\n            <PageTitle>Dashboard</PageTitle>\n          </Box>\n        </Container>\n      ) : (\n        <NoPermissionsError />\n      )}\n    </Page>\n  );\n};\n\nexport default DashboardPage;\n","import React, { useState, useEffect, useContext, memo } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthUserContext } from \"../../AuthUserContextProvider\";\nimport LoadingCircle from \"../../components/circularProgress/LoadingCircle\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\n\nconst HomePage = () => {\n  const { permDashboardView, permUserDirectoryView } = useContext(\n    AuthUserContext,\n  );\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!permDashboardView || !permUserDirectoryView) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [permDashboardView, permUserDirectoryView, isLoading]);\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingCircle/>\n      ) : (\n        <>\n          {permDashboardView ? (\n            <Redirect to={FrontendRoutes.USER_DIRECTORY}/>\n          ) : (\n            <Redirect to={FrontendRoutes.USER_DIRECTORY}/>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(HomePage);\n","import {memo} from \"react\";\nimport {Box, makeStyles, Paper} from \"@material-ui/core\";\nimport {Help, Info} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    backgroundColor: theme.palette.primary.light,\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0.5em 0.75em 0.5em\",\n  },\n  infoIcon: {\n    margin: \"0.5em 0.25em\",\n  },\n  infoSmallIcon: {\n    margin: \"0.2em 0.1em\",\n  },\n}));\n\nconst InfoBlock = ({children, type, mb, small, ...props}) => {\n  const classes = useStyles();\n  const marginBottom = mb >= 0 ? mb : 2;\n  return (\n    <Box mb={marginBottom} {...props}>\n      <Paper className={classes.info}>\n        {type === \"info\" ? (\n          <Info className={small ? classes.infoSmallIcon : classes.infoIcon} />\n        ) : (\n          <Help className={small ? classes.infoSmallIcon : classes.infoIcon} />\n        )}\n        {children}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default memo(InfoBlock);\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst OffboardRequestActonTypes = {\n  SET_SELECTED_OFFBOARD_USER: \"SET_SELECTED_OFFBOARD_USER\",\n\n  SET_SELECTED_TRANSFER_USER: \"SET_SELECTED_TRANSFER_USER\",\n  SET_IS_DRIVE_CHECKED: \"SET_IS_DRIVE_CHECKED\",\n  SET_IS_CALENDAR_CHECKED: \"SET_IS_CALENDAR_CHECKED\",\n  SET_IS_DATA_STUDIO_CHECKED: \"SET_IS_DATA_STUDIO_CHECKED\",\n  SET_GOOGLE_USER_ALIASES: \"SET_GOOGLE_USER_ALIASES\",\n\n  SET_UNASSIGN_LICENSES: \"SET_UNASSIGN_LICENSES\",\n\n  SET_DEVICE_UNASSIGN: \"SET_DEVICE_UNASSIGN\",\n  SET_JAMF_DEVICES_DATA: \"SET_JAMF_DEVICES_DATA\",\n  SET_GOOGLE_DEVICES_DATA: \"SET_GOOGLE_DEVICES_DATA\",\n\n  SET_SCHEDULE_TYPE: \"SET_SCHEDULE_TYPE\",\n  SET_SCHEDULE_DATE: \"SET_SCHEDULE_DATE\",\n  SET_SCHEDULE_EPOCH: \"SET_SCHEDULE_EPOCH\",\n  SET_SCHEDULE_TIME_ZONE: \"SET_SCHEDULE_TIME_ZONE\",\n  SET_SCHEDULE_TIME_ZONE_ID: \"SET_SCHEDULE_TIME_ZONE_ID\",\n  SET_SCHEDULE_LOCATION_LAT: \"SET_SCHEDULE_LOCATION_LAT\",\n  SET_SCHEDULE_LOCATION_LONG: \"SET_SCHEDULE_LOCATION_LONG\",\n  SET_SCHEDULE_CITY: \"SET_SCHEDULE_CITY\",\n  SET_IS_NOTIFY_TERMINATIONS_CHECKED: \"SET_IS_NOTIFY_TERMINATIONS_CHECKED\",\n  SET_IS_NOTIFY_TERMINATIONS_DISABLED: \"SET_IS_NOTIFY_TERMINATIONS_DISABLED\",\n\n  SET_HR_TERMINATION_CODE: \"SET_HR_TERMINATION_CODE\",\n  SET_HR_TERMINATION_TYPE: \"SET_HR_TERMINATION_TYPE\",\n  SET_HR_SELECTED_DATE: \"SET_HR_SELECTED_DATE\",\n  SET_HR_TIMEZONE: \"SET_HR_TIMEZONE\",\n  SET_HR_TIMEZONE_ID: \"SET_HR_TIMEZONE_ID\",\n  SET_HR_PAYROLL_EPOCH: \"SET_HR_PAYROLL_EPOCH\",\n  SET_HR_NOTES: \"SET_HR_NOTES\",\n\n  SET_HR_LOCATION_LAT: \"SET_HR_LOCATION_LAT\",\n  SET_HR_LOCATION_LONG: \"SET_HR_LOCATION_LONG\",\n  SET_HR_CITY: \"SET_HR_CITY\",\n\n  SET_SCHEDULE_TYPE_ERROR: \"SET_SCHEDULE_TYPE_ERROR\",\n  SET_SCHEDULE_DATE_ERROR: \"SET_SCHEDULE_DATE_ERROR\",\n  SET_SCHEDULE_TIME_ZONE_ERROR: \"SET_SCHEDULE_TIME_ZONE_ERROR\",\n\n  SET_HR_DATE_ERROR: \"SET_HR_DATE_ERROR\",\n  SET_HR_TIME_ZONE_ERROR: \"SET_HR_TIME_ZONE_ERROR\",\n\n  SET_IS_WARNING_MODAL_OPEN: \"SET_IS_WARNING_MODAL_OPEN\",\n  SET_WARNING_MODAL_MESSAGE: \"SET_WARNING_MODAL_MESSAGE\",\n  SET_IS_BUTTON_DISABLED: \"SET_IS_BUTTON_DISABLED\",\n  SET_IS_OFFBOARDING: \"SET_IS_OFFBOARDING\",\n  SET_OFFBOARDING_REASON: \"SET_IS_OFFBOARDING_REASON\",\n  SET_IS_SELECTED_LOADING: \"SET_IS_SELECTED_LOADING\",\n\n  SET_ACTIVE_STEP: \"SET_ACTIVE_STEP\",\n  SET_DEFAULT_STATE: \"SET_DEFAULT_STATE\",\n};\n\nexport default typesWithPrefix(\"OFFBOARD_REQUEST_\")(OffboardRequestActonTypes);\n","import OffboardRequestActonTypes from \"./offboardRequestActonTypes\";\n\nexport const setSelectedOffboardUser = (selectedOffboardUser) => ({\n  type: OffboardRequestActonTypes.SET_SELECTED_OFFBOARD_USER,\n  payload: {selectedOffboardUser},\n});\n\nexport const setSelectedTransferUser = (selectedTransferUser) => ({\n  type: OffboardRequestActonTypes.SET_SELECTED_TRANSFER_USER,\n  payload: {selectedTransferUser},\n});\n\nexport const setIsDriveChecked = (isDriveChecked) => ({\n  type: OffboardRequestActonTypes.SET_IS_DRIVE_CHECKED,\n  payload: {isDriveChecked},\n});\n\nexport const setIsCalendarChecked = (isCalendarChecked) => ({\n  type: OffboardRequestActonTypes.SET_IS_CALENDAR_CHECKED,\n  payload: {isCalendarChecked},\n});\n\nexport const setIsDataStudioChecked = (isDataStudioChecked) => ({\n  type: OffboardRequestActonTypes.SET_IS_DATA_STUDIO_CHECKED,\n  payload: {isDataStudioChecked},\n});\n\nexport const setGoogleUserAliases = (googleUserAliases) => ({\n  type: OffboardRequestActonTypes.SET_GOOGLE_USER_ALIASES,\n  payload: {googleUserAliases},\n});\n\nexport const setUnassignLicenses = (unassignLicenses) => ({\n  type: OffboardRequestActonTypes.SET_UNASSIGN_LICENSES,\n  payload: {unassignLicenses},\n});\n\nexport const setJamfDevicesData = (jamfDevicesData) => ({\n  type: OffboardRequestActonTypes.SET_JAMF_DEVICES_DATA,\n  payload: {jamfDevicesData},\n});\n\nexport const setGoogleDevicesData = (googleDevicesData) => ({\n  type: OffboardRequestActonTypes.SET_GOOGLE_DEVICES_DATA,\n  payload: {googleDevicesData},\n});\n\nexport const setScheduleType = (scheduleType) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_TYPE,\n  payload: {scheduleType},\n});\n\nexport const setScheduleDate = (scheduleDate) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_DATE,\n  payload: {scheduleDate},\n});\n\nexport const setScheduleEpoch = (scheduleEpoch) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_EPOCH,\n  payload: {scheduleEpoch},\n});\n\nexport const setScheduleTimeZone = (scheduleTimeZone) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_TIME_ZONE,\n  payload: {scheduleTimeZone},\n});\n\nexport const setScheduleTimeZoneId = (scheduleTimeZoneId) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_TIME_ZONE_ID,\n  payload: {scheduleTimeZoneId},\n});\n\nexport const setScheduleLocationLong = (scheduleLocationLat) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_LOCATION_LAT,\n  payload: {scheduleLocationLat},\n});\nexport const setScheduleLocationLat = (scheduleLocationLong) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_LOCATION_LONG,\n  payload: {scheduleLocationLong},\n});\nexport const setScheduleCity = (scheduleCity) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_CITY,\n  payload: {scheduleCity},\n});\n\nexport const setIsNotifyTerminationsChecked = (\n  isNotifyTerminationsChecked\n) => ({\n  type: OffboardRequestActonTypes.SET_IS_NOTIFY_TERMINATIONS_CHECKED,\n  payload: {isNotifyTerminationsChecked},\n});\n\nexport const setIsNotifyTerminationsDisabled = (\n  isNotifyTerminationsDisabled\n) => ({\n  type: OffboardRequestActonTypes.SET_IS_NOTIFY_TERMINATIONS_DISABLED,\n  payload: {isNotifyTerminationsDisabled},\n});\n\nexport const setHrTerminationCode = (hrTerminationCode) => ({\n  type: OffboardRequestActonTypes.SET_HR_TERMINATION_CODE,\n  payload: {hrTerminationCode},\n});\n\nexport const setHrTerminationType = (hrTerminationType) => ({\n  type: OffboardRequestActonTypes.SET_HR_TERMINATION_TYPE,\n  payload: {hrTerminationType},\n});\n\nexport const setHrSelectedDate = (hrSelectedDate) => ({\n  type: OffboardRequestActonTypes.SET_HR_SELECTED_DATE,\n  payload: {hrSelectedDate},\n});\n\nexport const setHrPayrollEpoch = (hrPayrollEpoch) => ({\n  type: OffboardRequestActonTypes.SET_HR_PAYROLL_EPOCH,\n  payload: {hrPayrollEpoch},\n});\n\nexport const setHrTimeZone = (hrTimeZone) => ({\n  type: OffboardRequestActonTypes.SET_HR_TIMEZONE,\n  payload: {hrTimeZone},\n});\n\nexport const setHrTimeZoneId = (hrTimeZoneId) => ({\n  type: OffboardRequestActonTypes.SET_HR_TIMEZONE_ID,\n  payload: {hrTimeZoneId},\n});\n\nexport const setHrNotes = (hrNotes) => ({\n  type: OffboardRequestActonTypes.SET_HR_NOTES,\n  payload: {hrNotes},\n});\n\nexport const setHrLocationLong = (hrLocationLat) => ({\n  type: OffboardRequestActonTypes.SET_HR_LOCATION_LAT,\n  payload: {hrLocationLat},\n});\nexport const setHrLocationLat = (hrLocationLong) => ({\n  type: OffboardRequestActonTypes.SET_HR_LOCATION_LONG,\n  payload: {hrLocationLong},\n});\nexport const setHrCity = (hrCity) => ({\n  type: OffboardRequestActonTypes.SET_HR_CITY,\n  payload: {hrCity},\n});\n\nexport const setScheduleTypeError = (scheduleTypeError) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_TYPE_ERROR,\n  payload: {scheduleTypeError},\n});\n\nexport const setScheduleDateError = (scheduleDateError) => ({\n  type: OffboardRequestActonTypes.SET_SCHEDULE_DATE_ERROR,\n  payload: {scheduleDateError},\n});\n\nexport const setScheduleTimeZoneError = (scheduleTimeZoneError) => ({\n  type: OffboardRequestActonTypes.SET_HR_DATE_ERROR,\n  payload: {scheduleTimeZoneError},\n});\n\nexport const setHrDateError = (hrDateError) => ({\n  type: OffboardRequestActonTypes.SET_HR_DATE_ERROR,\n  payload: {hrDateError},\n});\n\nexport const setHrTimeZoneError = (hrTimeZoneError) => ({\n  type: OffboardRequestActonTypes.SET_HR_TIME_ZONE_ERROR,\n  payload: {hrTimeZoneError},\n});\n\nexport const setIsWarningModalOpen = (isWarningModalOpen) => ({\n  type: OffboardRequestActonTypes.SET_IS_WARNING_MODAL_OPEN,\n  payload: {isWarningModalOpen},\n});\n\nexport const setWarningModalMessage = (warningModalMessage) => ({\n  type: OffboardRequestActonTypes.SET_WARNING_MODAL_MESSAGE,\n  payload: {warningModalMessage},\n});\n\nexport const setIsButtonDisabled = (isButtonDisabled) => ({\n  type: OffboardRequestActonTypes.SET_IS_BUTTON_DISABLED,\n  payload: {isButtonDisabled},\n});\n\nexport const setIsOffboarding = (isOffboarding) => ({\n  type: OffboardRequestActonTypes.SET_IS_OFFBOARDING,\n  payload: {isOffboarding},\n});\n\nexport const setOffboardingReason = (offboardingReason) => ({\n  type: OffboardRequestActonTypes.SET_OFFBOARDING_REASON,\n  payload: {offboardingReason},\n});\n\nexport const setIsSelectedLoading = (isSelectedLoading) => ({\n  type: OffboardRequestActonTypes.SET_IS_SELECTED_LOADING,\n  payload: {isSelectedLoading},\n});\n\nexport const setActiveStep = (activeStep) => ({\n  type: OffboardRequestActonTypes.SET_ACTIVE_STEP,\n  payload: {activeStep},\n});\n\nexport const setDefaultState = () => ({\n  type: OffboardRequestActonTypes.SET_DEFAULT_STATE,\n});\n","import React, {memo} from \"react\";\nimport {makeStyles, Step, StepLabel, Stepper} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    \"&$activeIcon\": {\n      color: theme.palette.warning.main,\n    },\n    \"&$completedIcon\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n  activeIcon: {},\n  completedIcon: {},\n}));\n\nconst RequestStepper = ({steps, activeStep}) => {\n  const classes = useStyles();\n  return (\n    <Stepper activeStep={activeStep}>\n      {steps?.map((label) => (\n        <Step key={label}>\n          <StepLabel\n            StepIconProps={{\n              classes: {\n                root: classes.icon,\n                active: classes.activeIcon,\n                completed: classes.completedIcon,\n              },\n            }}\n          >\n            {label}\n          </StepLabel>\n        </Step>\n      ))}\n    </Stepper>\n  );\n};\n\nexport default memo(RequestStepper);\n","import React, {memo} from \"react\";\nimport {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  box: {display: \"flex\", alignItems: \"center\"},\n});\n\nconst BottomSectionTitle = ({children, title}) => {\n  const classes = useStyles();\n  return (\n    <Grid item>\n      <Box className={classes.box}>\n        <Box>{children}</Box>\n        <Box ml={1}>\n          <Typography variant={\"body2\"}>\n            <strong>{title}</strong>\n          </Typography>\n        </Box>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default memo(BottomSectionTitle);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_USER_IMG = gql`\n  query GetGoogleUserImg($search: String!) {\n    get_google_user_img(search: $search) {\n      id\n      mimeType\n      photoData\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {GET_GOOGLE_USER_IMG} from \"../operations/queries/getGoogleUserImg\";\nimport handleError from \"../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  smallImgDiv: {\n    marginRight: theme.spacing(1),\n    height: \"3rem\",\n  },\n  smallImg: {\n    width: \"3rem\",\n    borderRadius: \"5%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.2)\",\n  },\n  mediumImgDiv: {\n    marginRight: theme.spacing(1),\n    height: \"5rem\",\n  },\n  mediumImg: {\n    width: \"5rem\",\n    borderRadius: \"5%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.2)\",\n  },\n  largeImgDiv: {\n    marginTop: \".2rem\",\n    marginRight: theme.spacing(1),\n    height: \"7rem\",\n  },\n  largeImg: {\n    width: \"7rem\",\n    borderRadius: \"10%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.2)\",\n  },\n}));\n\nconst UserImg = ({\n  email,\n  imgClass,\n  imgDivClass,\n  small,\n  medium,\n  large,\n  ...props\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const {data} = useQuery(GET_GOOGLE_USER_IMG, {\n    variables: {search: email},\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <div\n      className={\n        small\n          ? classes.smallImgDiv\n          : medium\n          ? classes.mediumImgDiv\n          : large\n          ? classes.largeImgDiv\n          : imgDivClass\n      }\n      {...props}\n    >\n      {data && (\n        <img\n          src={data?.get_google_user_img?.photoData}\n          alt=\"profile img\"\n          className={\n            small\n              ? classes.smallImg\n              : medium\n              ? classes.mediumImg\n              : large\n              ? classes.largeImg\n              : imgClass\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(UserImg);\n","import React, {memo} from \"react\";\nimport {Grid, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {borderRight: \"1px solid \" + theme.palette.background.dark},\n}));\n\nconst BottomSectionWrapper = ({children, ...props}) => {\n  const classes = useStyles();\n  return (\n    <Grid item className={classes.grid} {...props}>\n      {children}\n    </Grid>\n  );\n};\n\nexport default memo(BottomSectionWrapper);\n","import React, {memo} from \"react\";\nimport {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport BottomSectionTitle from \"./BottomSectionTitle\";\nimport UserImg from \"../../../components/UserImg\";\nimport BottomSectionWrapper from \"./BottomSectionWrapper\";\nimport { useSelector } from \"react-redux\";\nimport { getInOffboardingRequest } from \"../OffboardRequestPageContent\";\n\nconst useStyles = makeStyles(() => ({\n  box: {display: \"flex\", alignItems: \"center\"},\n}));\n\nconst OffboardWhoBottomSection = () => {\n  const classes = useStyles();\n  const selectedOffboardUser = useSelector(getInOffboardingRequest([\"offboardDetails\", \"selectedOffboardUser\"]));\n  const {email, firstName, lastName, jobTitle, location} = selectedOffboardUser?.profile || {};\n\n  return (\n    <BottomSectionWrapper xs={2}>\n      <BottomSectionTitle title={\"Offboard Who\"}>\n        <PersonIcon />\n      </BottomSectionTitle>\n      <Grid Item>\n        <Box className={classes.box}>\n          <UserImg small email={email} />\n          <Box>\n            <Typography>\n              <strong>\n                {firstName}{\" \"}\n                {lastName}\n              </strong>\n            </Typography>\n            <Typography variant={\"subtitle2\"}>\n              {jobTitle}\n            </Typography>\n            <Typography variant={\"subtitle2\"}>\n              {location}\n            </Typography>\n          </Box>\n        </Box>\n      </Grid>\n    </BottomSectionWrapper>\n  );\n};\n\nexport default memo(OffboardWhoBottomSection);\n","import React, {memo} from \"react\";\nimport dateFormat from \"dateformat\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport TaskScheduleTypes from \"../../../data/constants/TaskScheduleTypes\";\nimport BottomSectionTitle from \"./BottomSectionTitle\";\nimport BottomSectionWrapper from \"./BottomSectionWrapper\";\nimport { useSelector, shallowEqual } from \"react-redux\";\nimport { getOffboardingRequestObject } from \"../OffboardRequestPageContent\";\n\nconst OffboardWhenBottomSection = () => {\n  const taskScheduling = useSelector(getOffboardingRequestObject(\"taskScheduling\"), shallowEqual);\n\n  const { scheduleType, scheduleDate, scheduleTimeZone } = taskScheduling || {};\n  return (\n    <BottomSectionWrapper xs={2}>\n      <BottomSectionTitle title={\"Offboard When\"}>\n        <QueryBuilderIcon />\n      </BottomSectionTitle>\n      <Grid item>\n        <Typography variant={\"body2\"}>\n          <strong>{scheduleType}</strong>\n        </Typography>\n        {(scheduleType === TaskScheduleTypes.SCHEDULED ||\n          scheduleType === TaskScheduleTypes.SENSITIVE) && (\n          <>\n            <Typography variant={\"subtitle2\"}>\n              {dateFormat(scheduleDate, \"mmmm d, yyyy h:MM TT\")}\n            </Typography>\n            <Typography variant={\"subtitle2\"}>{scheduleTimeZone}</Typography>\n          </>\n        )}\n      </Grid>\n    </BottomSectionWrapper>\n  );\n};\n\nexport default memo(OffboardWhenBottomSection);\n","import React, {memo} from \"react\";\nimport {Chip, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  chip: {\n    margin: \".25rem\",\n  },\n}));\n\nconst CustomChip = ({label, className, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <span>\n      <Chip\n        id={label}\n        size=\"small\"\n        variant=\"outlined\"\n        label={label}\n        className={`${classes.chip} ${className || \"\"}`}\n        {...props}\n      />\n    </span>\n  );\n};\n\nexport default memo(CustomChip);\n","import React, {memo} from \"react\";\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\nimport BottomSectionTitle from \"./BottomSectionTitle\";\nimport CustomChip from \"../../../components/chips/CustomChip\";\nimport BottomSectionWrapper from \"./BottomSectionWrapper\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { getActiveStep, getOffboardingRequestObject } from \"../OffboardRequestPageContent\";\n\nconst useStyles = makeStyles(() => ({\n  chip: {fontSize: \".7rem\"},\n}));\n\nconst DataTransferBottomSection = () => {\n  const classes = useStyles();\n  const activeStep = useSelector(getActiveStep);\n  const dataTransfer = useSelector(getOffboardingRequestObject(\"dataTransfer\"), shallowEqual);\n  const {\n    selectedTransferUser,\n    isDriveChecked,\n    isCalendarChecked,\n    isDataStudioChecked,\n  } = dataTransfer || {};\n\n  return (\n    <BottomSectionWrapper xs={3}>\n      <BottomSectionTitle title={\"Data Transfer\"}>\n        <SyncAltIcon />\n      </BottomSectionTitle>\n      {activeStep !== 0 && activeStep !== 1 && (\n        <Grid item>\n          <Grid item>\n            <>\n              {isDriveChecked && (\n                <CustomChip className={classes.chip} label={\"Google Drive\"} />\n              )}\n              {isCalendarChecked && (\n                <CustomChip\n                  className={classes.chip}\n                  label={\"Google Calendar\"}\n                />\n              )}\n              {isDataStudioChecked && (\n                <CustomChip\n                  className={classes.chip}\n                  label={\"Google Data Studio\"}\n                />\n              )}\n            </>\n          </Grid>\n          <Grid item>\n            <Typography variant={\"subtitle1\"}>\n              Transfer To:{\" \"}\n              <>\n                {selectedTransferUser?.profile?.email ===\n                \"livepersondrive@liveperson.com\" ? (\n                  \"livepersondrive@liveperson.com\"\n                ) : (\n                  <>\n                    {selectedTransferUser?.profile?.firstName}{\" \"}\n                    {selectedTransferUser?.profile?.lastName}\n                  </>\n                )}\n              </>\n            </Typography>\n          </Grid>\n        </Grid>\n      )}\n    </BottomSectionWrapper>\n  );\n};\n\nexport default memo(DataTransferBottomSection);\n","import React, {memo} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport BottomSectionTitle from \"./BottomSectionTitle\";\nimport CustomChip from \"../../../components/chips/CustomChip\";\nimport BottomSectionWrapper from \"./BottomSectionWrapper\";\nimport {\n  getActiveStep,\n  getInOffboardingRequest,\n  getOffboardingRequestObject,\n} from \"../OffboardRequestPageContent\";\nimport {isObjectsEqual} from \"../../../data/helper/commonFunctions\";\n\nconst useStyles = makeStyles(() => ({\n  chip: {fontSize: \".7rem\"},\n  box: {height: \"95px\", overflow: \"auto\"},\n}));\n\nconst LicensesDevicesBottomSection = () => {\n  const activeStep = useSelector(getActiveStep);\n  const deviceUnassign = useSelector(\n    getOffboardingRequestObject(\"deviceUnassign\"),\n    isObjectsEqual\n  );\n  const unassignLicenses = useSelector(\n    getInOffboardingRequest([\"licenseRemoval\", \"unassignLicenses\"])\n  );\n\n  const {jamfDevicesData, googleDevicesData} = deviceUnassign || {};\n\n  const classes = useStyles();\n\n  return (\n    <BottomSectionWrapper xs={3}>\n      <BottomSectionTitle title={\"Licenses/Devices\"}>\n        <DevicesIcon />\n      </BottomSectionTitle>\n      {activeStep !== 0 && activeStep !== 1 && (\n        <Grid item>\n          <Grid Item>\n            <Box className={classes.box}>\n              <>\n                {unassignLicenses?.some((license) => license?.isChecked) ? (\n                  unassignLicenses?.map(\n                    (license) =>\n                      license?.isChecked && (\n                        <CustomChip\n                          className={classes.chip}\n                          label={license?.name}\n                        />\n                      )\n                  )\n                ) : (\n                  <Typography variant={\"subtitle1\"}>\n                    No licenses selected\n                  </Typography>\n                )}\n              </>\n              <>\n                {jamfDevicesData?.length > 0 ||\n                googleDevicesData?.length > 0 ? (\n                  <>\n                    {jamfDevicesData?.map(\n                      (device) =>\n                        device?.isChecked && (\n                          <CustomChip\n                            className={classes.chip}\n                            label={`${device.deviceName} : ${device.serialNumber}`}\n                          />\n                        )\n                    )}\n                    {googleDevicesData?.map(\n                      (device) =>\n                        device?.isChecked && (\n                          <CustomChip\n                            className={classes.chip}\n                            label={`Chrome OS Device : ${device.serialNumber}`}\n                          />\n                        )\n                    )}\n                  </>\n                ) : (\n                  <Box>\n                    <Typography variant={\"subtitle1\"}>\n                      No devices selected\n                    </Typography>\n                  </Box>\n                )}\n              </>\n            </Box>\n          </Grid>\n        </Grid>\n      )}\n    </BottomSectionWrapper>\n  );\n};\n\nexport default memo(LicensesDevicesBottomSection);\n","import React, {memo} from \"react\";\nimport {Box, Divider, Grid, makeStyles} from \"@material-ui/core\";\nimport OffboardWhoBottomSection from \"./OffboardWhoBottomSection\";\nimport OffboardWhenBottomSection from \"./OffboardWhenBottomSection\";\nimport DataTransferBottomSection from \"./DataTransferBottomSection\";\nimport LicensesDevicesBottomSection from \"./LicensesDevicesBottomSection\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(0, 2),\n    flexShrink: 0,\n  },\n  box: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n  divider: {\n    background: theme.palette.background.dark,\n  },\n}));\n\nconst OffboardRequestBottomBar = ({children}) => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Divider className={classes.divider} />\n      <Box className={classes.box} mt={1}>\n        <Grid container direction=\"row\" spacing={2}>\n          <OffboardWhoBottomSection />\n\n          <OffboardWhenBottomSection />\n\n          <DataTransferBottomSection />\n\n          <LicensesDevicesBottomSection />\n\n          <Grid item xs={2}>\n            <Box mt={4}>{children}</Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </footer>\n  );\n};\n\nexport default memo(OffboardRequestBottomBar);\n","import React, { memo } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nconst RequestStepperButtonWrapper = ({children, topMargin}) => {\n  return (\n    <Box my={topMargin || 2}>\n      <Grid container justifyContent=\"flex-end\">\n        <Grid item>\n          {children}\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default memo(RequestStepperButtonWrapper);","import { memo, useEffect, useMemo } from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nconst CustomPortal = ({ children }) => {\n  let portalRoot = useMemo(() => document.getElementById(\"portal-root-id\"), []);\n  let newElement = useMemo(() => document.createElement(\"div\"), []);\n\n  useEffect(() => {\n    if (portalRoot && newElement) {\n      portalRoot.appendChild(newElement);\n    }\n    return () => portalRoot?.removeChild(newElement);\n\n  }, [portalRoot, newElement]);\n\n  return ReactDOM.createPortal(\n    children,\n    newElement,\n  );\n};\n\nexport default memo(CustomPortal);","import React, {memo, useState} from \"react\";\nimport {Backdrop, Fade, makeStyles, Modal} from \"@material-ui/core\";\n\nconst rand = () => {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nconst getModalStyle = (middlePosition) => {\n  const top = 50 + (middlePosition ? 0 : rand());\n  const left = 50 + (middlePosition ? 0 : rand());\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  smallPaper: {\n    minWidth: (props) => props.minwidth || props.width || 400,\n    width: (props) => props.width || 400,\n    maxWidth: \"90%\",\n    minHeight: (props) => props.height || 400,\n    height: (props) => props.height || 400,\n  },\n  largePaper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: 400,\n    maxHeight: \"80%\",\n    width: \"70%\",\n    maxWidth: 900,\n  },\n}));\n\nconst CustomModal = ({children, large, width, minwidth, height, middlePosition, ...props}) => {\n  const classes = useStyles({width, minwidth, height});\n  const [modalStyle] = useState(getModalStyle(middlePosition));\n\n  return (\n    <Modal\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{timeout: 300}}\n      {...props}\n    >\n      <Fade in={props.open} timeout={300}>\n        <div\n          style={modalStyle}\n          className={`${classes.paper} ${\n            large ? classes.largePaper : classes.smallPaper\n          }`}\n        >\n          {children}\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default memo(CustomModal);\n","import React, {memo} from \"react\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport CustomModal from \"./CustomModal\";\n\nconst useStyles = makeStyles(() => ({\n  modalInfo: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  icon: {\n    fontSize: \"2rem\",\n  },\n}));\n\nconst MissedInputModal = ({open, handleClose, modalMsg}) => {\n  const classes = useStyles();\n\n  return (\n    <CustomModal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"request-form-alert\"\n      aria-describedby=\"request-form-description\"\n      height={\"auto\"}\n    >\n      <Box>\n        <Button variant=\"outlined\" size=\"small\" onClick={handleClose}>\n          <CloseIcon /> Close\n        </Button>\n      </Box>\n      <Box m={2}>\n        <div id=\"simple-modal-description\" className={classes.modalInfo}>\n          <Box mr={2}>\n            <WarningIcon className={classes.icon} />\n          </Box>\n          <Box>{modalMsg}</Box>\n        </div>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default memo(MissedInputModal);\n","import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport RequestStepper from \"../../components/requestWrapper/RequestStepper\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport OffboardRequestBottomBar from \"./OffboardRequestBottomBar\";\nimport RequestStepperButtonWrapper from \"../../components/requestWrapper/RequestStepperButtonWrapper\";\nimport CustomPortal from \"../../components/CustomPortal\";\nimport MissedInputModal from \"../../components/modals/MissedInputModal\";\nimport {setIsWarningModalOpen} from \"../../data/redux/offboardRequest/offboardRequestActions\";\n\nconst mapStateToProps = (state) => ({\n  isWarningModalOpen: state.offboardRequest.get(\"isWarningModalOpen\"),\n  warningModalMessage: state.offboardRequest.get(\"warningModalMessage\"),\n  isButtonDisabled: state.offboardRequest.get(\"isButtonDisabled\"),\n  isOffboarding: state.offboardRequest.get(\"isOffboarding\"),\n  selectedOffboardUser: state.offboardRequest.getIn([\n    \"offboardDetails\",\n    \"selectedOffboardUser\",\n  ]),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  contentBodyBox: {\n    marginTop: theme.spacing(1),\n    height: \"100%\",\n    maxHeight: \"calc(98vh - 370px)\",\n    overflow: \"auto\",\n    [theme.breakpoints.up(\"lg\")]: {\n      maxHeight: \"calc(98vh - 330px)\",\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      maxHeight: \"calc(98vh - 400px)\",\n    },\n  },\n  gradientPaper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst stepTitles = [\n  \"Offboard Who\",\n  \"Offboard When\",\n  \"Data Transfer, Devices & Licenses\",\n  \"HR Info\",\n  \"Review & Confirm Request\",\n  \"Request Completed\",\n];\n\nconst OffboardRequestWrapperPage = ({\n  isWarningModalOpen,\n  warningModalMessage,\n  setIsWarningModalOpen,\n  selectedOffboardUser,\n  isOffboarding,\n  isButtonDisabled,\n  activeStep,\n  setActiveStep,\n  offboardWhoComponent,\n  offboardWhenComponent,\n  dataLicensesDevicesComponent,\n  hrInfoComponent,\n  reviewComponent,\n  stepperButtons,\n  stepperResetBtn,\n  summaryComponent,\n}) => {\n  const classes = useStyles();\n  const {permOffboardingHrInfo} = useContext(AuthUserContext);\n  const [steps, setSteps] = useState();\n  const isLastStep = useMemo(() => activeStep === steps?.length - 1, [activeStep, steps]);\n\n  useEffect(() => {\n    if (!isLastStep) {\n      const contentBox = document.getElementById(\"content-box\");\n      contentBox.scroll(0, 0);\n    }\n  }, [isLastStep]);\n\n  useEffect(() => {\n    if (permOffboardingHrInfo) {\n      setSteps(stepTitles);\n    } else {\n      const newTitles = stepTitles.filter((step) => step !== \"HR Info\");\n      setSteps(newTitles);\n    }\n  }, [permOffboardingHrInfo]);\n\n  const handleNext = useCallback(() => {\n    setActiveStep(activeStep + 1);\n  }, [activeStep, setActiveStep]);\n\n  const handleBack = useCallback(() => {\n    setActiveStep(activeStep - 1);\n  }, [activeStep, setActiveStep]);\n\n  const handleReset = useCallback(() => {\n    setActiveStep(0);\n  }, [setActiveStep]);\n\n  const stepperButtonWithProps = Children.map(stepperButtons, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement(child, {\n        steps,\n        activeStep,\n        handleNext,\n        handleBack,\n        isButtonDisabled,\n      });\n    }\n    return child;\n  });\n\n  const stepperResetBtnWithProps = Children.map(stepperResetBtn, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement(child, {handleReset});\n    }\n    return null;\n  });\n\n  const handleClose = () => {\n    setIsWarningModalOpen(false);\n  };\n\n  return (\n    <Box>\n      <RequestStepper steps={steps} activeStep={activeStep} />\n      <Box className={classes.gradientPaper} height={\"10px\"} width={\"100%\"} />\n      <Box>\n        {isLastStep ? (\n          <>\n            <RequestStepperButtonWrapper topMargin={3}>\n              {stepperResetBtnWithProps}\n            </RequestStepperButtonWrapper>\n\n            {summaryComponent}\n          </>\n        ) : (\n          <>\n            <Box className={classes.contentBodyBox} id=\"content-box\">\n              {activeStep === 0\n                ? offboardWhoComponent\n                : activeStep === 1\n                ? offboardWhenComponent\n                : activeStep === 2\n                ? dataLicensesDevicesComponent\n                : activeStep === 3\n                ? permOffboardingHrInfo\n                  ? hrInfoComponent\n                  : reviewComponent\n                : (permOffboardingHrInfo ? activeStep === 4 : \"unknown step\")\n                ? reviewComponent\n                : \"unknown step\"}\n            </Box>\n          </>\n        )}\n      </Box>\n\n      <MissedInputModal\n        open={isWarningModalOpen}\n        handleClose={handleClose}\n        modalMsg={warningModalMessage}\n      />\n\n      {selectedOffboardUser && !isLastStep && !isOffboarding && (\n        <CustomPortal>\n          <OffboardRequestBottomBar>\n            {stepperButtonWithProps}\n          </OffboardRequestBottomBar>\n        </CustomPortal>\n      )}\n    </Box>\n  );\n};\n\nexport default connect(mapStateToProps, {setIsWarningModalOpen})(\n  memo(OffboardRequestWrapperPage)\n);\n","import {gql} from \"@apollo/client\";\n\nconst USER_DATA_FIELDS = gql`\n  fragment UserDataFields on User {\n    id\n    status\n    profile {\n      businessUnit\n      costCenter\n      department\n      displayName\n      email\n      employeeNumber\n      employeeType\n      firstName\n      jobTitle\n      lastName\n      location\n      manager\n      userName\n    }\n  }\n`;\n\nexport const SEARCH_USERS_QUERY = gql`\n  ${USER_DATA_FIELDS}\n  query SearchUsersQuery($search: String!) {\n    search_users(search: $search) {\n      ...UserDataFields\n    }\n  }\n`;\n\nexport const SEARCH_NFTE_USERS_QUERY = gql`\n    ${USER_DATA_FIELDS}\n    query SearchNfteUsersQuery($search: String!) {\n    search_nfte_users(search: $search) {\n      ...UserDataFields\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box, CircularProgress, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  progressCircleBox: {\n    display: \"flex\",\n    alignContent: \"flex-end\",\n  },\n  progressCircle: {\n    color: theme.palette.warning.main,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SelectCircularProgress = () => {\n  const classes = useStyles();\n\n  return (\n    <Box p={1} className={classes.progressCircleBox}>\n      <CircularProgress size={24} className={classes.progressCircle} />\n      <p> searching...</p>\n    </Box>\n  );\n};\n\nexport default memo(SelectCircularProgress);\n","import {useCallback} from \"react\";\nimport {debounce} from \"@mui/material\";\nimport {removeExtraSpaces} from \"../data/helper/commonFunctions\";\n\nconst useDebouncedChangeHandler = (callback, dispatch) => {\n  return useCallback(\n    debounce(query => {\n      const trimmedQuery = removeExtraSpaces(query);\n\n      return dispatch ? dispatch(callback(trimmedQuery)) : callback(trimmedQuery);\n    }, 400),\n    [callback, dispatch]);\n};\n\nexport default useDebouncedChangeHandler;","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {\n  SEARCH_NFTE_USERS_QUERY,\n  SEARCH_USERS_QUERY,\n} from \"../../../operations/queries/searchUsersQuery\";\nimport handleError from \"../../../data/handleError\";\nimport SelectCircularProgress from \"../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  textField: {\n    width: \"60ch\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 1,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n}));\n\nconst AllEmployeeSelect = ({\n  type,\n  selectedOffboardUser,\n  setSelectedOffboardUser,\n  setIsSelectedLoading,\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [usersData, setUsersData] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [isResultsLoading, setIsResultsLoading] = useState(false);\n\n  const [executeSearch] = useLazyQuery(\n    type === \"NonFte\" ? SEARCH_NFTE_USERS_QUERY : SEARCH_USERS_QUERY,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => {\n        const result =\n          type === \"NonFte\" ? data?.search_nfte_users : data?.search_users;\n        setUsersData(\n          result?.filter((user) => user?.profile?.employeeNumber !== \"100001\")\n        );\n        setIsResultsLoading(false);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    if (searchQuery?.length) {\n      executeSearch({variables: {search: searchQuery}});\n      setSelectedOffboardUser(\"\");\n    } else {\n      setUsersData();\n      setResultsOpen(false);\n    }\n  }, [searchQuery, executeSearch, setUsersData, setResultsOpen]);\n\n  const handleClick = (selectedUser) => {\n    setSelectedOffboardUser(selectedUser);\n    setIsSelectedLoading(true);\n\n    setSearchQuery(\"\");\n  };\n\n  const searchOnChange = useCallback((value) => {\n    setIsResultsLoading(true);\n    setResultsOpen(true);\n    setSearchQuery(value);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(searchOnChange);\n  useEffect(() => {debouncedChangeHandler(query)}, [query]);\n\n  return (\n    <>\n      {!selectedOffboardUser && (\n        <Box className={clsx(selectedOffboardUser && classes.box)}>\n          <TextField\n            required\n            id=\"standard-basic\"\n            label=\"Search\"\n            variant=\"standard\"\n            helperText=\"Search by Name, Email, or HRIS ID\"\n            color=\"secondary\"\n            size=\"small\"\n            autoComplete=\"off\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            className={classes.textField}\n          />\n\n          {searchQuery?.length > 0 && (\n            <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n              <Box className={classes.resultsBox}>\n                <Paper>\n                  {isResultsLoading && <SelectCircularProgress />}\n                  {!usersData?.length && !isResultsLoading ? (\n                    <Box m={1}>\n                      <NoResultsTypography />\n                    </Box>\n                  ) : (\n                    <List>\n                      {usersData?.map((user) => (\n                        <React.Fragment key={user.id}>\n                          <ListItem\n                            key={user.id}\n                            button\n                            onClick={() => handleClick(user)}\n                          >\n                            <ListItemText\n                              primary={\n                                <>\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {user.profile.firstName}{\" \"}\n                                    {user.profile.lastName} |{\" \"}\n                                    {user.profile.location} |{\" \"}\n                                    {user.profile.jobTitle}\n                                  </Typography>\n                                </>\n                              }\n                            />\n                          </ListItem>\n                          {usersData?.length > 1 && <Divider />}\n                        </React.Fragment>\n                      ))}\n                    </List>\n                  )}\n                </Paper>\n              </Box>\n            </Collapse>\n          )}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(AllEmployeeSelect);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_TEAM_NONFTE_DIRECT_REPORTS = gql`\n  query GetTeamNonfteDirectReports {\n    get_team_nonfte_direct_reports {\n      id\n      totalCount\n      profile {\n        businessUnit\n        companyName\n        department\n        email\n        employeeNumber\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        userName\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport {TextField} from \"@material-ui/core\";\n\nconst AutocompleteTextField = ({required, error, label, ...props}) => {\n  return (\n    <TextField\n      {...props}\n      required={required}\n      error={error}\n      label={label}\n      variant=\"outlined\"\n      color={\"secondary\"}\n    />\n  );\n};\n\nexport default AutocompleteTextField;\n","import React, {memo, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useQuery} from \"@apollo/client\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport handleError from \"../../../data/handleError\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport {GET_TEAM_NONFTE_DIRECT_REPORTS} from \"../../../operations/queries/getTeamNonfteDirectReports\";\nimport AutocompleteTextField from \"../../inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles(() => ({\n  alertBox: {\n    width: \"60ch\",\n  },\n}));\n\nconst TeamEmployeeSelect = ({\n  selectedOffboardUser,\n  setSelectedOffboardUser,\n  setIsSelectedLoading,\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [userDirectReports, setUserDirectReports] = useState();\n\n  useQuery(GET_TEAM_NONFTE_DIRECT_REPORTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setUserDirectReports(data?.get_team_nonfte_direct_reports);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <div>\n      {!userDirectReports && <LoadingCircle text={\"loading employees...\"} />}\n      {userDirectReports && !selectedOffboardUser && (\n        <Autocomplete\n          id=\"select-direct-report-autocomplete\"\n          options={userDirectReports}\n          className={classes.alertBox}\n          renderOption={(user) => (\n            <Typography component={\"div\"} variant=\"subtitle1\">\n              {user.profile.firstName} {user.profile.lastName} |{\" \"}\n              {user.profile.location} | {user.profile.jobTitle}\n            </Typography>\n          )}\n          getOptionLabel={(user) =>\n            `${user.profile.firstName} ${user.profile.lastName} | ${user.profile.location} | ${user.profile.jobTitle}`\n          }\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              label=\"Search\"\n              helperText=\"Search by Name, Email, or HRIS ID\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            setIsSelectedLoading(true);\n            setSelectedOffboardUser(newValue);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(TeamEmployeeSelect);\n","import React, {memo} from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport UserImg from \"../../../components/UserImg\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport {SupervisedUserCircle} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  iconTextBox: {display: \"flex\", alignContent: \"center\"},\n  icon: {fontSize: \"1.25rem\", marginRight: theme.spacing(1)},\n  selectBtnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n  selectedContainer: {\n    border: \"1px solid \" + theme.palette.warning.main,\n    borderRadius: \"5px\",\n    padding: theme.spacing(2),\n  },\n}));\n\nconst SelectedOffboardEmployee = ({userProfile, clearSelectedOffboardUser}) => {\n  const classes = useStyles();\n\n  return (\n    <Box width={700}>\n      {clearSelectedOffboardUser && (\n        <Box className={classes.selectBtnBox} mb={1}>\n          <Box>Selected Employee:</Box>\n          <Box>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={clearSelectedOffboardUser}\n            >\n              Clear Selected\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Container className={classes.selectedContainer}>\n        <Grid container>\n          <Grid item>\n            <UserImg medium email={userProfile?.email} />\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              {/*1*/}\n              <Grid item xs>\n                <Typography variant={\"h6\"}>\n                  <strong>\n                    {userProfile?.firstName} {userProfile?.lastName}\n                  </strong>\n                </Typography>\n                <Typography variant={\"subtitle1\"} gutterBottom>\n                  {userProfile?.jobTitle}\n                </Typography>\n              </Grid>\n              {/*2*/}\n              <Grid item container direction={\"row\"} spacing={10}>\n                <Grid item>\n                  <Box className={classes.iconTextBox} mb={1}>\n                    <BusinessIcon className={classes.icon} />{\" \"}\n                    {userProfile?.businessUnit}\n                  </Box>\n                  <Box className={classes.iconTextBox}>\n                    <WorkOutlineIcon className={classes.icon} />{\" \"}\n                    {userProfile?.department}\n                  </Box>\n                </Grid>\n                <Grid item>\n                  <Box className={classes.iconTextBox} mb={1}>\n                    <LocationOnIcon className={classes.icon} />{\" \"}\n                    {userProfile?.location}\n                  </Box>\n                  <Box className={classes.iconTextBox}>\n                    <SupervisedUserCircle className={classes.icon} />{\" \"}\n                    {userProfile?.manager}\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n            {/*3*/}\n            <Grid item>\n              <FontAwesomeIcon icon=\"id-card\" /> {userProfile?.employeeNumber}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\nexport default memo(SelectedOffboardEmployee);\n","import {gql} from \"@apollo/client\";\n\nexport const SEARCH_USER_OFFBOARDING_TASK = gql`\n  query SearchUserOffboardingTask($search: String!) {\n    search_user_offboarding_task(search: $search) {\n      id\n      oldTaskId\n      taskType\n      taskStatus\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {makeStyles, Box} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst AlertBox = ({severity, message, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.alert}>\n      <Alert severity={severity} {...props}>\n        {message}\n      </Alert>\n    </Box>\n  );\n};\n\nexport default memo(AlertBox);\n","const FteTrackerStatuses = {\n  DISPATCH_NOW: \"Dispatch Now\",\n  NEW: \"New\",\n  SHIPPED: \"Shipped\",\n};\n\nexport default FteTrackerStatuses;\n","import React, {memo} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport TaskStatuses, {\n  getTaskStatusText,\n} from \"../../data/constants/TaskStatuses\";\nimport FteTrackerStatuses from \"../../data/constants/FteTrackerStatuses\";\nimport {TierStatuses} from \"../../data/constants/ServiceAndSystemDirectory\";\n\nconst useStyles = makeStyles((theme) => ({\n  statusField: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    borderRadius: \"5px\",\n    fontWeight: 600,\n    backgroundColor: theme.palette.primary.light,\n    fontSize: (props) => (props.small ? \".8rem\" : \"1rem\"),\n    lineHeight: 1.5,\n  },\n  statusFailed: {\n    width: \"8ch\",\n    color: \"#ca2929\",\n  },\n  statusCancelled: {\n    width: (props) => (props.small ? \"11ch\" : \"12ch\"),\n    color: \"#363944\",\n  },\n  statusComplete: {\n    width: (props) => (props.small ? \"10ch\" : \"11ch\"),\n    color: \"#2e7d32\",\n  },\n  statusPending: {\n    width: \"20ch\",\n    color: \"#df60a2\",\n  },\n  statusSigning: {\n    width: (props) => (props.small ? \"20ch\" : \"21ch\"),\n    color: \"#00838f\",\n  },\n  statusReady: {\n    width: (props) => (props.small ? \"11ch\" : \"12ch\"),\n    color: \"#6a1b9a\",\n  },\n  statusRunning: {\n    width: \"18ch\",\n    color: \"#FA772E\",\n  },\n  statusExpired: {\n    width: \"10ch\",\n    color: \"#5d4037\",\n  },\n  tierOne: {\n    color: \"#ca2929\",\n    width: \"10ch\",\n  },\n  tierTwo: {\n    color: \"#ff6900\",\n    width: \"10ch\",\n  },\n  tierThree: {\n    color: \"#2e7d32\",\n    width: \"10ch\",\n  },\n  tierFour: {\n    color: \"#2ba8d5\",\n    width: \"10ch\",\n  },\n}));\n\nconst getTaskStatusClass = (taskStatus, classes) => {\n  switch (taskStatus) {\n    case TaskStatuses.PENDING:\n      return classes.statusPending;\n    case TaskStatuses.PENDING_USER_TASKS:\n      return classes.statusSigning;\n    case TaskStatuses.READY:\n      return classes.statusReady;\n    case TaskStatuses.RUNNING:\n      return classes.statusRunning;\n    case TaskStatuses.COMPLETE:\n      return classes.statusComplete;\n    case TaskStatuses.CANCELLED:\n      return classes.statusCancelled;\n    case TaskStatuses.FAILED:\n      return classes.statusFailed;\n    case TaskStatuses.EXPIRED:\n      return classes.statusExpired;\n    case FteTrackerStatuses.NEW:\n      return classes.statusComplete;\n    case FteTrackerStatuses.DISPATCH_NOW:\n      return classes.statusPending;\n    case FteTrackerStatuses.SHIPPED:\n      return classes.statusReady;\n    case TierStatuses.One:\n      return classes.tierOne;\n    case TierStatuses.Two:\n      return classes.tierTwo;\n    case TierStatuses.Three:\n      return classes.tierThree;\n    case TierStatuses.Four:\n      return classes.tierFour;\n\n    default:\n      return \"\";\n  }\n};\n\nconst TaskStatusBlock = ({taskStatus, id, small}) => {\n  const classes = useStyles({small});\n  const statusTextClass = getTaskStatusClass(taskStatus, classes);\n\n  return (\n    <div key={id} className={`${classes.statusField} ${statusTextClass}`}>\n      {getTaskStatusText(taskStatus).toUpperCase()}\n    </div>\n  );\n};\n\nexport default memo(TaskStatusBlock);\n","import {Tooltip} from \"@material-ui/core\";\nimport {Warning} from \"@material-ui/icons\";\nimport React from \"react\";\n\nexport const CircleIcon = ({color}) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n    height=\"24px\"\n    style={{display: \"inline-block\"}}\n  >\n    <circle\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke={color || \"#fff\"}\n      strokeWidth=\"2\"\n      fill=\"none\"\n    />\n  </svg>\n);\n\nconst SaSFlag = ({data}) => {\n  const createFlag = (icon) => {\n    return (\n      <Tooltip title={data?.description || \"No Warning Flags\"}>{icon}</Tooltip>\n    );\n  };\n  switch (data?.name) {\n    case \"warning\":\n      return createFlag(<Warning style={{color: `#${data?.colour}`}} />);\n    default:\n      return createFlag(\n        <div style={{width: 24, height: 24, lineHeight: 1}}>\n          <CircleIcon />\n        </div>\n      );\n  }\n};\n\nexport default SaSFlag;\n","import {Button} from \"@mui/material\";\nimport React from \"react\";\nimport TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport SaSFlag from \"../../pages/ServiceAndSystemDirectoryPage/components/SaSFlag\";\n\nexport const SearchTypes = {\n  ALL: \"All\",\n  SYSTEMS: \"Systems\",\n  SERVICES: \"Services\",\n};\nexport const TierStatuses = {\n  One: 1,\n  Two: 2,\n  Three: 3,\n  Four: 4,\n};\n\nexport const GENERATE_DEPENDENCY_TABLE_COLUMNS = (buttonCallback) => [\n  {\n    field: \"flag\",\n    headerName: \"Flag\",\n    width: 120,\n    renderCell: ({row}) => (\n      <SaSFlag data={row?.flag} style={{height: \"auto\"}} />\n    ),\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 250,\n  },\n  {\n    field: \"type\",\n    headerName: \"Type\",\n    width: 250,\n  },\n  {\n    field: \"tier\",\n    headerName: \"Tier\",\n    width: 120,\n    renderCell: ({row}) => (\n      <TaskStatusBlock taskStatus={Number(row?.tier)} id={row?.tier} />\n    ),\n  },\n  {\n    field: \"relationship\",\n    headerName: \"Relationship\",\n    width: 200,\n  },\n  {\n    field: \"view\",\n    headerName: \"View\",\n    width: 200,\n    align: \"center\",\n    sortable: false,\n    renderCell: ({row}) => (\n      <Button\n        style={{width: 100}}\n        color=\"primary\"\n        variant=\"outlined\"\n        onClick={() => buttonCallback(row.sysId)}\n      >\n        View\n      </Button>\n    ),\n  },\n];\n","import FteTrackerStatuses from \"./FteTrackerStatuses\";\nimport {TierStatuses} from \"./ServiceAndSystemDirectory\";\n\nexport const getTaskStatusText = (taskStatus) => {\n  switch (taskStatus) {\n    case TaskStatuses.PENDING:\n      return \"Pending Approval\";\n    case TaskStatuses.PENDING_USER_TASKS:\n      return \"Pending User Tasks\";\n    case TaskStatuses.READY:\n      return \"Scheduled\";\n    case TaskStatuses.RUNNING:\n      return \"In Progress\";\n    case TaskStatuses.COMPLETE:\n      return \"Complete\";\n    case TaskStatuses.CANCELLED:\n      return \"Canceled\";\n    case TaskStatuses.FAILED:\n      return \"Failed\";\n    case TaskStatuses.EXPIRED:\n      return \"Expired\";\n    case FteTrackerStatuses.NEW:\n      return \"New\";\n    case FteTrackerStatuses.DISPATCH_NOW:\n      return \"Dispatch Now\";\n    case FteTrackerStatuses.SHIPPED:\n      return \"Shipped\";\n    case TierStatuses.One:\n      return \"Tier 1\";\n    case TierStatuses.Two:\n      return \"Tier 2\";\n    case TierStatuses.Three:\n      return \"Tier 3\";\n    case TierStatuses.Four:\n      return \"Tier 4\";\n    default:\n      return \"\";\n  }\n};\n\nconst TaskStatuses = {\n  PENDING: \"pending\",\n  PENDING_USER_TASKS: \"pending_user_tasks\",\n  READY: \"ready\",\n  RUNNING: \"running\",\n  COMPLETE: \"complete\",\n  CANCELLED: \"cancelled\",\n  FAILED: \"failed\",\n  EXPIRED: \"expired\",\n};\n\nexport default TaskStatuses;\n","import React, { memo } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  }\n}));\n\nconst RequestFormTypography = ({ title, subtitle }) => {\n  const classes = useStyles();\n  return (\n    <>\n      {title && (\n        <Typography component={\"div\"} variant=\"subtitle1\" className={classes.leftText}>\n          {title}\n        </Typography>\n      )}\n      {subtitle && (\n        <Typography component={\"div\"} variant=\"subtitle2\" className={classes.leftText}>\n          {subtitle}\n        </Typography>\n      )}\n    </>\n  )\n}\n\nexport default memo(RequestFormTypography);","import React, {memo, useContext, useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport AllEmployeeSelect from \"../../../components/formBlocks/offboardWhoDetails/AllEmployeeSelect\";\nimport TeamEmployeeSelect from \"../../../components/formBlocks/offboardWhoDetails/TeamEmployeeSelect\";\nimport SelectedOffboardUser from \"./SelectedOffboardEmployee\";\nimport {SEARCH_USER_OFFBOARDING_TASK} from \"../../../operations/queries/searchUserOffboardingTask\";\nimport handleError from \"../../../data/handleError\";\nimport {\n  setIsButtonDisabled,\n  setIsOffboarding,\n  setIsSelectedLoading,\n  setOffboardingReason,\n  setSelectedOffboardUser,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport {connect} from \"react-redux\";\nimport AlertBox from \"../../../components/AlertBox\";\nimport {getTaskStatusText} from \"../../../data/constants/TaskStatuses\";\nimport RequestFormTypography from \"../../../components/typographies/RequestFormTypography\";\n\nconst mapStateToProps = (state) => ({\n  selectedOffboardUser: state.offboardRequest.getIn([\n    \"offboardDetails\",\n    \"selectedOffboardUser\",\n  ]),\n  isSelectedLoading: state.offboardRequest.get(\"isSelectedLoading\"),\n  isOffboarding: state.offboardRequest.get(\"isOffboarding\"),\n  offboardingReason: state.offboardRequest.get(\"offboardingReason\"),\n});\n\nconst mapDispatchToProps = {\n  setSelectedOffboardUser,\n  setIsSelectedLoading,\n  setIsOffboarding,\n  setIsButtonDisabled,\n  setOffboardingReason,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  progressBar: {\n    background: \"\" + theme.palette.warning.main,\n  },\n}));\n\nconst OffboardEmployeeSelect = ({\n  selectedOffboardUser,\n  setSelectedOffboardUser,\n  isSelectedLoading,\n  isOffboarding,\n  offboardingReason,\n  setIsSelectedLoading,\n  setIsOffboarding,\n  setIsButtonDisabled,\n  setOffboardingReason,\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const {permOffboardingAll, permOffboardingTeam, permOffboardingNfte} =\n    useContext(AuthUserContext);\n\n  const clearSelectedOffboardUser = () => {\n    setIsSelectedLoading(false);\n    setSelectedOffboardUser(\"\");\n    setIsOffboarding(false);\n    setOffboardingReason(\"\");\n    setIsButtonDisabled(false);\n  };\n\n  const [executeSearchOffboardingTask] = useLazyQuery(\n    SEARCH_USER_OFFBOARDING_TASK,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) =>\n        checkOffboardTask(data.search_user_offboarding_task),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    if (isSelectedLoading) {\n      executeSearchOffboardingTask({\n        variables: {search: selectedOffboardUser?.profile?.email},\n      });\n    }\n  }, [isSelectedLoading, selectedOffboardUser]);\n\n  const checkOffboardTask = (data) => {\n    if (data.length > 0) {\n      setIsOffboarding(true);\n      setIsButtonDisabled(true);\n      setOffboardingReason(data[0].taskStatus);\n    }\n\n    setIsSelectedLoading(false);\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Search & select employee to offboard\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box mt={2}>\n          {permOffboardingAll && (\n            <AllEmployeeSelect\n              selectedOffboardUser={selectedOffboardUser}\n              setSelectedOffboardUser={setSelectedOffboardUser}\n              setIsSelectedLoading={setIsSelectedLoading}\n            />\n          )}\n\n          {permOffboardingTeam && !permOffboardingAll && !permOffboardingNfte && (\n            <>\n              <Box mt={2} mb={2} width={600}>\n                <AlertBox\n                  severity={\"info\"}\n                  message={\n                    \"In LPSync, you can only offboard a Non Full-Time Employee (such as a partner or a contractor) who directly reports to you. All offboard requests for Full-Time Employees must be sent to HR.\"\n                  }\n                />\n              </Box>\n              <TeamEmployeeSelect\n                selectedOffboardUser={selectedOffboardUser}\n                setSelectedOffboardUser={setSelectedOffboardUser}\n                setIsSelectedLoading={setIsSelectedLoading}\n              />\n            </>\n          )}\n\n          {!permOffboardingAll && permOffboardingNfte && (\n            <>\n              <Box mt={2} mb={2} width={600}>\n                <AlertBox\n                  severity={\"info\"}\n                  message={\n                    \"In LPSync, you can only offboard any Non Full-Time Employee (such as a partner or a contractor). All offboard requests for Full-Time Employees must be sent to HR.\"\n                  }\n                />\n              </Box>\n              <AllEmployeeSelect\n                type=\"NonFte\"\n                selectedOffboardUser={selectedOffboardUser}\n                setSelectedOffboardUser={setSelectedOffboardUser}\n                setIsSelectedLoading={setIsSelectedLoading}\n              />\n            </>\n          )}\n        </Box>\n        {isOffboarding && (\n          <Box mt={2} mb={2} width={700}>\n            <AlertBox\n              severity={\"error\"}\n              message={`${selectedOffboardUser?.profile?.firstName} \n                  ${selectedOffboardUser?.profile?.lastName} has an offboarding\n                  task that is ${getTaskStatusText(\n                    offboardingReason\n                  ).toLocaleLowerCase()}.`}\n              onClose={clearSelectedOffboardUser}\n            />\n          </Box>\n        )}\n        {selectedOffboardUser && (\n          <SelectedOffboardUser\n            userProfile={selectedOffboardUser?.profile}\n            clearSelectedOffboardUser={clearSelectedOffboardUser}\n          />\n        )}\n        {isSelectedLoading && (\n          <Box mt={2} width=\"60ch\">\n            <LinearProgress className={classes.progressBar} />\n            <p>\n              Loading {selectedOffboardUser?.profile?.firstName}{\" \"}\n              {selectedOffboardUser?.profile?.lastName}'s information...\n            </p>\n          </Box>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(OffboardEmployeeSelect));\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../PaperCardWrapper\";\n\nconst RequestFormWrapper = ({children, height}) => {\n  return (\n    <Box minWidth={1050} height={height}>\n      <PaperCardWrapper>{children}</PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default memo(RequestFormWrapper);\n","import React, { memo } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst RequestFormGridContainer = ({...props}) => {\n  const classes = useStyles();\n  return <Grid container spacing={3} className={classes.gridContainer} {...props}/>\n}\n\nexport default memo(RequestFormGridContainer);","import React, {memo} from \"react\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport RequestFormGridContainer from \"../requestFormWrapper/RequestFormGridContainer\";\n\nconst SectionTitleBlock = ({title, subtitle, children}) => {\n  return (\n    <RequestFormGridContainer item container>\n      <Grid item xs={12}>\n        <Typography component={\"div\"}>\n          <Box fontWeight={600}> {title} </Box>\n        </Typography>\n        {subtitle && <Typography variant=\"subtitle2\">{subtitle}</Typography>}\n      </Grid>\n      {children}\n    </RequestFormGridContainer>\n  );\n};\n\nexport default memo(SectionTitleBlock);\n","import React, {memo} from \"react\";\nimport OffboardEmployeeSelect from \"./OffboardEmployeeSelect\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\n\nconst OffboardWho = () => {\n  return (\n    <RequestFormWrapper>\n      <SectionTitleBlock title=\"Who is being offboarded?\">\n        <OffboardEmployeeSelect />\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default memo(OffboardWho);\n","import {gql} from \"@apollo/client\";\n\nexport const CREATE_OFFBOARDING_TASK = gql`\n  mutation CreateOffboardingTask($input: LpsyncTaskInput) {\n    createOffboardingTask(input: $input) {\n      id\n      taskType\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskScheduleEpochTime\n      taskSendNotification\n      taskCreatedDateTime\n      offboardingTask {\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n        offboardEmail\n        offboardEmployeeType\n        offboardEmployeeNumber\n        offboardLocation\n        offboardDepartment\n        offboardOktaId\n        transferUsername\n        transferFirstName\n        transferLastName\n        transferEmail\n        transferGdrive\n        transferGcalendar\n        transferGdataStudio\n        transferAlias\n        offboardingTransferAlias {\n          id\n          aliasName\n        }\n        unassignLicense\n        offboardingUnassignLicenses {\n          id\n          licenseName\n        }\n        unassignDevice\n        offboardingUnassignDevices {\n          id\n          deviceManager\n          deviceName\n          deviceId\n          deviceSerialNumber\n          deviceModel\n        }\n        hrTerminationCode\n        hrTerminationType\n        payrollEndDateTime\n        payrollEpochTime\n        payrollEndTimezone\n        payrollNote\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_TASK_APPROVAL = gql`\n  mutation AddTaskApproval(\n    $id: Int!\n    $taskType: String\n    $taskStatus: String\n    $taskApprovalStatus: String\n    $input: LpsyncTaskApprovalInput\n  ) {\n    addTaskApproval(\n      id: $id\n      taskType: $taskType\n      taskStatus: $taskStatus\n      taskApprovalStatus: $taskApprovalStatus\n      input: $input\n    ) {\n      id\n      taskStatus\n      taskApprovalStatus\n      taskApprovals {\n        approvalStage\n        approvalStatus\n        approvalNote\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_LOG_ENTRY = gql`\n  mutation CreateLogEntry($input: LpsyncLogInput) {\n    createLogEntry(input: $input) {\n      logType\n      logNotification\n      logDescription\n    }\n  }\n`;\n","const EmployeeTypes = {\n  BPO: \"Partner: BPO\",\n  DELIVERY: \"Partner: Delivery\",\n  // FIXED_PRICE: \"Partner: Fixed Price\",\n  INDIVIDUAL: \"Contractor: Individual\",\n  SALES: \"Partner: Sales (Reseller)\",\n  TECHNICAL: \"Partner: Technical\",\n  FULL_TIME: \"Full Time\"\n};\n\nexport const isFinancialEmployeeType = employeeType =>\n  employeeType === EmployeeTypes.BPO ||\n  employeeType === EmployeeTypes.TECHNICAL;\n\nexport const isFullTimeEmployee = (type) => (type === EmployeeTypes.FULL_TIME)\n  || (type === (EmployeeTypes.FULL_TIME + \" Employee\"));\n\nexport default EmployeeTypes;\n","import EmployeeTypes from \"../constants/EmployeeTypes\";\n\nconst dateFormat = require(\"dateformat\");\nconst regex = {\n  number: /^(?=.*[0-9])[0-9]+$/,\n  floatNumber: /^(?=.*[0-9])[.0-9]+$/,\n  phoneNumber: /^(?=.*[0-9])[- +()0-9]+$/,\n  name: /^[[A-Za-z][A-Za-z'\\s\\-,]+$/,\n  date: /^\\d{4}[-]\\d{2}[-]\\d{2}$/,\n  email:\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n};\nconst getNow = () => dateFormat(new Date(), \"yyyy-mm-dd'T'HH:MM\");\n\nexport const isEmpty = (value) => (!value ? \"is missing\" : \"\");\n\nexport const isMoreThan25Char = (value) => value?.length > 25 ? \"is more than 25 characters\" : \"\";\n\nexport const validateNameInput = (name) => {\n return !regex.name.test(name) ? \"must contain letters only\" : \"\";\n}\n\nexport const validateEmailInput = (email) =>\n  !regex.email.test(email) ? \"is not valid\" : \"\";\n\nexport const validatePhoneNumberInput = (num) =>\n  !regex.phoneNumber.test(num) ? \"is not correct\" : \"\";\n\nexport const validateNumberInput = (num) =>\n  !regex.number.test(num) ? \"must contain numbers only\" : \"\";\n\nexport const validateSalaryInput = (num) =>\n  !regex.floatNumber.test(num) ? \"must contain numbers only\" : \"\";\n\nexport const validDateFormat = (date) => (!regex.date.test(date) ||\n  ((new Date(date)).toString() === \"Invalid Date\") || ((new Date(date)).toString() === \"NaN\"))\n  ? \"is not valid date format, should be yyyy-mm-dd\" : \"\";\n\nexport const isEmptyString = (num) => (num === \"\" ? \"is missing\" : \"\");\n\nexport const isPastDate = (date) => (date < getNow() ? \"is a past date\" : \"\");\n\nexport const isEmployeeType = (employeeType) => {\n  const employeeTypes = Object.values(EmployeeTypes);\n  return employeeTypes?.includes(employeeType) ? \"\" : `should be one of employeeTypes: \"${employeeTypes?.join('\", \"')}\"`;\n}\n\nexport const isInArray = (array) => (value) => {\n  return !(array?.length && value && array.includes(value)) ? \"is not exist\" : \"\";\n}\n","const ApprovalStatuses = {\n  APPROVED: \"approved\",\n  CANCELLED: \"cancelled\",\n  REJECTED: \"rejected\",\n  EXPIRED: \"expired\",\n  CONFIRMED_HR_INFORMATION: \"confirmed HR Information\",\n  SIGNED_ACCEPTABLE: \"signed acceptable-form\",\n  SIGNED_VENDOR: \"signed vendor-form\",\n  SIGNED_SECURITY: \"signed security-form\",\n  COMPLETE_SIGNING: \"complete signing\",\n  REMAINDER_EMAIL_SENT: \"reminder tasks\",\n  NEW_HIRE_EMAIL_SENT: \"new hire email sent\",\n  CANDIDATE_PORTAL_EMAIL_SENT: \"portal email sent\",\n};\n\nexport default ApprovalStatuses;","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_USER_ALIASES = gql`\n  query GetGoogleUserAliases($search: String!) {\n    get_google_user_aliases(search: $search) {\n      alias\n      isChecked\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Button} from \"@material-ui/core\";\n\nconst StepperBackButton = ({...props}) => {\n  return (\n    <Button variant=\"outlined\" {...props}>\n      BACK\n    </Button>\n  );\n};\n\nexport default memo(StepperBackButton);\n","import React, {memo} from \"react\";\nimport {Button} from \"@material-ui/core\";\n\nconst StepperNextButton = ({activeStep, steps, ...props}) => {\n  return (\n    <Button variant=\"contained\" color=\"secondary\" {...props}>\n      {activeStep === steps?.length - 2 ? \"CONFIRM\" : \"NEXT\"}\n    </Button>\n  );\n};\n\nexport default memo(StepperNextButton);\n","import React, {useState, memo, useContext} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport {CREATE_OFFBOARDING_TASK} from \"../../operations/mutations/createOffboardingTask\";\nimport {ADD_TASK_APPROVAL} from \"../../operations/mutations/addTaskApproval\";\nimport {CREATE_LOG_ENTRY} from \"../../operations/mutations/createLogEntry\";\nimport {SEARCH_USER_OFFBOARDING_TASK} from \"../../operations/queries/searchUserOffboardingTask\";\nimport TaskStatuses, {\n  getTaskStatusText,\n} from \"../../data/constants/TaskStatuses\";\nimport {getValidationMessage} from \"../../data/helper/helpers\";\nimport {isEmpty, isEmptyString, isPastDate} from \"../../data/helper/validation\";\nimport ApprovalStatuses from \"../../data/constants/ApprovalStatuses\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport handleError from \"../../data/handleError\";\nimport {\n  setScheduleTypeError,\n  setScheduleDateError,\n  setScheduleEpoch,\n  setScheduleTimeZoneError,\n  setHrDateError,\n  setHrTimeZoneError,\n  setIsButtonDisabled,\n  setSelectedTransferUser,\n  setWarningModalMessage,\n  setIsWarningModalOpen,\n} from \"../../data/redux/offboardRequest/offboardRequestActions\";\nimport {GET_GOOGLE_USER_ALIASES} from \"../../operations/queries/getGoogleUserAliases\";\nimport {\n  getInOffboardingRequest,\n  getOffboardingRequestObject,\n} from \"./OffboardRequestPageContent\";\nimport StepperBackButton from \"../../components/buttons/StepperBackButton\";\nimport StepperNextButton from \"../../components/buttons/StepperNextButton\";\n\nconst dispatchFunc = (dispatch) => (func) => (value) => dispatch(func(value));\n\nconst StepperButtons = ({activeStep, steps, handleBack, handleNext}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const errorDispatch = dispatchFunc(dispatch);\n  const isButtonDisabled = useSelector((state) =>\n    state?.offboardRequest.get(\"isButtonDisabled\")\n  );\n  const dataTransfer = useSelector(getOffboardingRequestObject(\"dataTransfer\"));\n  const deviceUnassign = useSelector(\n    getOffboardingRequestObject(\"deviceUnassign\")\n  );\n  const unassignLicenses = useSelector(\n    getInOffboardingRequest([\"licenseRemoval\", \"unassignLicenses\"])\n  );\n  const selectedOffboardUser = useSelector(\n    getInOffboardingRequest([\"offboardDetails\", \"selectedOffboardUser\"])\n  );\n  const taskScheduling = useSelector(\n    getOffboardingRequestObject(\"taskScheduling\")\n  );\n  const hrInformation = useSelector(\n    getOffboardingRequestObject(\"hrInformation\")\n  );\n\n  const {\n    selectedTransferUser,\n    isDriveChecked,\n    isCalendarChecked,\n    isDataStudioChecked,\n  } = dataTransfer || {};\n  const {jamfDevicesData, googleDevicesData} = deviceUnassign || {};\n  const {\n    scheduleType,\n    scheduleDate,\n    scheduleEpoch,\n    scheduleTimeZone,\n    scheduleTimeZoneId,\n    isNotifyTerminationsChecked,\n  } = taskScheduling || {};\n  const {\n    hrTerminationCode,\n    hrTerminationType,\n    hrSelectedDate,\n    hrPayrollEpoch,\n    hrTimeZone,\n    hrTimeZoneId,\n    hrNotes,\n  } = hrInformation || {};\n\n  const {permOffboardingApprovalBypass, permOffboardingHrInfo} =\n    useContext(AuthUserContext);\n  const [isUnassignDevice, setIsUnassignDevice] = useState();\n  const [isUnassignLicense, setIsUnassignLicense] = useState();\n  const [jamfDevices, setJamfDevices] = useState([]);\n  const [googleDevices, setGoogleDevices] = useState([]);\n  const [licenses, setLicenses] = useState();\n  const [taskOffboardingType, setTaskOffboardingType] = useState();\n  const [isTransferAlias, setIsTransferAlias] = useState(true);\n  const [allUserAliases, setAllUserAliases] = useState([]);\n\n  const [executeSearchOffboardingTask] = useLazyQuery(\n    SEARCH_USER_OFFBOARDING_TASK,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => {\n        checkOffboardTask(data.search_user_offboarding_task);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const [executeGetAliases] = useLazyQuery(GET_GOOGLE_USER_ALIASES, {\n    variables: {search: selectedOffboardUser?.profile?.email},\n    onCompleted: (data) => {\n      if (data?.get_google_user_aliases?.length) {\n        data?.get_google_user_aliases?.map((alias) => {\n          if (alias?.alias !== \"none\") {\n            setAllUserAliases([...allUserAliases, alias?.alias]);\n          }\n        });\n      }\n    },\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createOffboardingTask] = useMutation(CREATE_OFFBOARDING_TASK, {\n    onCompleted(data) {\n      createLog(\n        \"info\",\n        `Offboard Task Created (${data.createOffboardingTask.id}); Offboard: ${selectedOffboardUser.profile.userName}; Transfer: ${selectedTransferUser.profile.userName};  type: ${scheduleType}; scheduledDetails: ${scheduleDate} ${scheduleTimeZoneId}; notification: ${isNotifyTerminationsChecked}; transferDrive: ${isDriveChecked}; transferCal: ${isCalendarChecked}; transferDataStudio: ${isDataStudioChecked}; removeLicense: ${isUnassignLicense}; deviceUnassign: ${isUnassignDevice} `\n      );\n      if (permOffboardingApprovalBypass) {\n        const id = parseInt(data.createOffboardingTask.id);\n        const taskStatus = TaskStatuses.READY;\n        const approvalStatus = ApprovalStatuses.APPROVED;\n        const approvalInfo = {\n          approvalStage: 1,\n          approvalStatus,\n        };\n\n        addApproval(id, taskStatus, approvalStatus, approvalInfo);\n      }\n    },\n    onError: (error) => {\n      handleOpen(\n        \"Error. Please refresh and try again. If the problem persists, please leave a feedback of the error.\"\n      );\n\n      handleError(error)(history);\n    },\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL);\n\n  const addApproval = (id, status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: id,\n        taskType: TaskTypes.OFFBOARDING,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"Offboarding\",\n          logNotification: info,\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  const createTask = async (allDevices) => {\n    await createOffboardingTask({\n      variables: {\n        input: {\n          taskType: TaskTypes.OFFBOARDING,\n          taskStatus: TaskStatuses.PENDING,\n          taskScheduleType: taskOffboardingType,\n          taskScheduleDateTime: scheduleDate,\n          taskScheduleTimezone: scheduleTimeZoneId,\n          taskScheduleEpochTime: scheduleEpoch,\n          taskSendNotification: isNotifyTerminationsChecked,\n          offboardingTask: {\n            offboardUsername: selectedOffboardUser?.profile?.userName,\n            offboardEmail: selectedOffboardUser?.profile?.email,\n            offboardFirstName: selectedOffboardUser?.profile?.firstName,\n            offboardLastName: selectedOffboardUser?.profile?.lastName,\n            offboardEmployeeType: selectedOffboardUser?.profile?.employeeType,\n            offboardEmployeeNumber:\n              selectedOffboardUser?.profile?.employeeNumber,\n            offboardLocation: selectedOffboardUser?.profile?.location,\n            offboardDepartment: selectedOffboardUser?.profile?.department,\n            offboardOktaId: selectedOffboardUser?.id,\n            transferUsername: selectedTransferUser?.profile?.userName,\n            transferFirstName: selectedTransferUser?.profile?.firstName,\n            transferLastName: selectedTransferUser?.profile?.lastName,\n            transferEmail: selectedTransferUser?.profile?.email,\n            transferGdrive: isDriveChecked,\n            transferGcalendar: isCalendarChecked,\n            transferGdataStudio: isDataStudioChecked,\n            transferAlias: isTransferAlias,\n            offboardingTransferAlias: allUserAliases,\n            unassignLicense: isUnassignLicense,\n            offboardingUnassignLicenses: licenses,\n            unassignDevice: isUnassignDevice,\n            offboardingUnassignDevices: allDevices,\n            hrTerminationCode: hrTerminationCode,\n            hrTerminationType: hrTerminationType,\n            payrollEndDateTime: hrSelectedDate,\n            payrollEpochTime: hrPayrollEpoch,\n            payrollEndTimezone: hrTimeZoneId,\n            payrollNote: hrNotes,\n            approvalBypass: permOffboardingApprovalBypass,\n          },\n        },\n      },\n    });\n    handleNext();\n  };\n\n  const checkOffboardTask = (data) => {\n    if (data.length > 0) {\n      const msg = `${selectedOffboardUser?.profile?.firstName} ${\n        selectedOffboardUser?.profile?.lastName\n      } has an offboarding task that is ${getTaskStatusText(\n        data[0].taskStatus\n      ).toLocaleLowerCase()}.`;\n      handleOpen(msg);\n    } else {\n      concatDevices(createTask);\n    }\n  };\n\n  const searchOffboardTask = () => {\n    executeSearchOffboardingTask({\n      variables: {search: selectedOffboardUser?.profile?.email},\n    });\n  };\n\n  const handleOffboardWhenCheck = () => {\n    const errorMessage =\n      getValidationMessage(\n        scheduleType,\n        [isEmpty],\n        \"Schedule Type\",\n        errorDispatch(setScheduleTypeError)\n      ) ||\n      ((scheduleType === TaskScheduleTypes.SCHEDULED ||\n        scheduleType === TaskScheduleTypes.SENSITIVE) &&\n        (getValidationMessage(\n          scheduleDate,\n          [isEmpty, isPastDate],\n          \"Scheduled Date\",\n          errorDispatch(setScheduleDateError)\n        ) ||\n          getValidationMessage(\n            scheduleTimeZoneId,\n            [isEmptyString],\n            \"Scheduled Time Zone\",\n            errorDispatch(setScheduleTimeZoneError)\n          )));\n\n    if (errorMessage) {\n      handleOpen(errorMessage + \"!\");\n    } else {\n      handleNext();\n    }\n  };\n\n  const handleHrInfoCheck = () => {\n    const errorMessage =\n      (hrSelectedDate || hrTimeZoneId) &&\n      (getValidationMessage(\n        hrSelectedDate,\n        [isEmpty, isPastDate],\n        \"HR Scheduled Date\",\n        errorDispatch(setHrDateError)\n      ) ||\n        getValidationMessage(\n          hrTimeZoneId,\n          [isEmptyString],\n          \"HR Scheduled Time Zone\",\n          errorDispatch(setHrTimeZoneError)\n        ));\n\n    if (errorMessage) {\n      handleOpen(errorMessage + \"!\");\n    } else {\n      handleNext();\n    }\n  };\n\n  const handleDataTransferStep = () => {\n    if (!selectedTransferUser) {\n      dispatch(\n        setSelectedTransferUser({\n          id: \"00u8478pxdSDWiuuR2p7\",\n          profile: {\n            userName: \"livepersondrive\",\n            firstName: \"Liveperson\",\n            lastName: \"Drive\",\n            email: \"livepersondrive@liveperson.com\",\n          },\n        })\n      );\n    }\n\n    if (isDriveChecked || isCalendarChecked || isDataStudioChecked) {\n      setAllUserAliases([selectedOffboardUser?.profile?.email]);\n      setIsTransferAlias(true);\n      executeGetAliases();\n    } else {\n      setIsTransferAlias(false);\n      setAllUserAliases();\n    }\n  };\n\n  const handleDevicesStep = () => {\n    const hasJamfDevices = jamfDevicesData?.length;\n    const hasGoogleDevices = googleDevicesData?.length;\n\n    if (hasJamfDevices) {\n      setIsUnassignDevice(true);\n      const userDevices = jamfDevicesData.map((device) => {\n        if (device.isChecked) {\n          return {\n            deviceManager: \"jamf\",\n            deviceName: device.deviceName,\n            deviceId: device.id,\n            deviceSerialNumber: device.serialNumber,\n            deviceModel: device.model,\n          };\n        }\n      });\n\n      setJamfDevices(userDevices);\n    }\n    if (hasGoogleDevices) {\n      setIsUnassignDevice(true);\n      const userDevices = googleDevicesData.map((device) => {\n        if (device.isChecked) {\n          return {\n            deviceManager: \"google\",\n            deviceName: \"Chrome OS\",\n            deviceId: device.deviceId,\n            deviceSerialNumber: device.serialNumber,\n            deviceModel: device.model,\n          };\n        }\n      });\n      setGoogleDevices(userDevices);\n    }\n\n    if (!hasJamfDevices && !hasGoogleDevices) {\n      setIsUnassignDevice(false);\n    }\n  };\n\n  const handleLicensesStep = () => {\n    if (unassignLicenses?.length) {\n      setIsUnassignLicense(true);\n      const userLicenses = unassignLicenses.map((license) => license.name);\n      setLicenses(userLicenses);\n    } else {\n      setIsUnassignLicense(false);\n      setLicenses();\n    }\n  };\n\n  const concatDevices = async (callback) => {\n    const allDevices = jamfDevices.concat(googleDevices);\n\n    await callback(allDevices);\n  };\n\n  const handleOnConfirm = () => {\n    if (activeStep === steps?.length - 2) {\n      dispatch(setIsButtonDisabled(true));\n\n      if (scheduleType === TaskScheduleTypes.SENSITIVE) {\n        setTaskOffboardingType(TaskScheduleTypes.SCHEDULED);\n      } else {\n        setTaskOffboardingType(scheduleType);\n      }\n      if (scheduleType === TaskScheduleTypes.IMMEDIATE && scheduleEpoch) {\n        dispatch(setScheduleEpoch());\n      }\n\n      searchOffboardTask();\n    }\n  };\n\n  const handleOnNext = async () => {\n    if (activeStep === 1) {\n      await handleOffboardWhenCheck();\n    } else if (activeStep === 2) {\n      await handleDataTransferStep();\n      await handleLicensesStep();\n      await handleDevicesStep();\n      handleNext();\n    } else if (activeStep === 3) {\n      if (permOffboardingHrInfo) {\n        await handleHrInfoCheck();\n      }\n    } else {\n      handleNext();\n    }\n  };\n\n  const handleOpen = (msg) => {\n    dispatch(setWarningModalMessage(msg));\n    dispatch(setIsWarningModalOpen(true));\n  };\n\n  return (\n    <Box style={{display: \"flex\", justifyContent: \"center\"}}>\n      <Box mr={1}>\n        <StepperBackButton disabled={activeStep === 0} onClick={handleBack} />\n      </Box>\n      <StepperNextButton\n        disabled={isButtonDisabled}\n        activeStep={activeStep}\n        steps={steps}\n        onClick={\n          activeStep === steps?.length - 2 ? handleOnConfirm : handleOnNext\n        }\n      />\n    </Box>\n  );\n};\n\nexport default memo(StepperButtons);\n","import {memo} from \"react\";\nimport {Tooltip, withStyles} from \"@material-ui/core\";\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.secondary.light,\n    color: theme.palette.text.primary,\n    maxWidth: 600,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid \" + theme.palette.background.dark,\n  },\n}))(Tooltip);\n\nexport default memo(HtmlTooltip);\n","import React from \"react\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport HtmlTooltip from \"./HtmlTooltips\";\n\nconst InfoTooltip = ({placement, type, children}) => {\n  return (\n    <HtmlTooltip placement={placement} title={children}>\n      {type === \"help\" ? <HelpOutlineIcon /> : <InfoIcon />}\n    </HtmlTooltip>\n  );\n};\n\nexport default InfoTooltip;\n","import React, {memo} from \"react\";\nimport {\n  Box,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport TaskScheduleTypes from \"../../../data/constants/TaskScheduleTypes\";\nimport InfoTooltip from \"../../tooltips/InfoTooltip\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\n\nconst useStyles = makeStyles(() => ({\n  select: {\n    width: \"25ch\",\n  },\n  typeBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ScheduleTypeSelect = ({\n  scheduleType,\n  setScheduleType,\n  scheduleTypeError,\n  setScheduleTypeError,\n  setIsNotifyTerminationsChecked,\n  setIsNotifyTerminationsDisabled,\n}) => {\n  const classes = useStyles();\n\n  const handleTypeChange = (event) => {\n    const value = event.target.value;\n\n    setScheduleType(value);\n    setScheduleTypeError(false);\n    if (value === TaskScheduleTypes.SENSITIVE) {\n      setIsNotifyTerminationsChecked(false);\n      setIsNotifyTerminationsDisabled(true);\n    } else {\n      setIsNotifyTerminationsChecked(true);\n      setIsNotifyTerminationsDisabled(false);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select schedule type\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box className={classes.typeBox}>\n          <Box mr={2}>\n            <FormControl\n              required\n              error={scheduleTypeError}\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              <InputLabel id=\"offboarding-type\">Schedule Type</InputLabel>\n              <Select\n                labelId=\"offboarding-type-select-label\"\n                id=\"offboarding-type-select\"\n                value={scheduleType}\n                onChange={handleTypeChange}\n                label=\"Schedule Type\"\n                className={classes.select}\n                color={\"secondary\"}\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {Object.values(TaskScheduleTypes).map((type, index) => (\n                  <MenuItem key={index} value={type}>\n                    {type}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          <Box>\n            <InfoTooltip type={\"help\"}>\n              <strong>Immediate</strong>: The user will be offboarded from all\n              IT systems immediately. <br />\n              <br />\n              <strong>Scheduled</strong>: The user will be offboarded from all\n              IT systems at the scheduled date & time. <br />\n              <br />\n              <strong>Sensitive</strong>: The user will be offboarded from all\n              IT systems at the scheduled date & time and a notification will\n              only be sent to the terminations team after the scheduled date &\n              time.\n            </InfoTooltip>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(ScheduleTypeSelect);\n","import {connect} from \"react-redux\";\nimport {\n  setScheduleType,\n  setScheduleTypeError,\n  setIsNotifyTerminationsChecked,\n  setIsNotifyTerminationsDisabled,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport ScheduleTypeSelect from \"../../../components/formBlocks/offboardWhenDetails/ScheduleTypeSelect\";\n\nconst mapStateToProps = (state) => ({\n  scheduleType: state.offboardRequest.getIn([\"taskScheduling\", \"scheduleType\"]),\n  scheduleTypeError: state.offboardRequest.get([\"scheduleTypeError\"]),\n});\n\nconst mapDispatchToProps = {\n  setScheduleType,\n  setScheduleTypeError,\n  setIsNotifyTerminationsChecked,\n  setIsNotifyTerminationsDisabled,\n};\n\nconst ScheduleTypeSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleTypeSelect);\n\nexport default ScheduleTypeSelectContainer;\n","import React, {memo} from \"react\";\nimport clsx from \"clsx\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\nconst dateFormat = require(\"dateformat\");\n\nconst useStyles = makeStyles(() => ({\n  dateTimeField: {\n    width: \"30ch\",\n  },\n  dateField: {\n    width: \"20ch\",\n  },\n}));\n\nconst DateTextField = ({\n  type,\n  label,\n  error,\n  setError,\n  value,\n  onValueChange,\n  minDateInDays,\n}) => {\n  const classes = useStyles();\n  const nowDateTime = dateFormat(new Date(), \"yyyy-mm-dd'T'HH:MM\");\n  const minDate = minDateInDays\n    ? new Date().getDate() + minDateInDays\n    : new Date().getDate();\n  const nowDate = dateFormat(new Date().setDate(minDate), \"yyyy-mm-dd\");\n\n  const handleChange = (e) => {\n    const targetValue = e.target.value;\n    onValueChange && onValueChange(targetValue);\n\n    if (targetValue && error) {\n      setError(false);\n    }\n  };\n  return (\n    <form noValidate>\n      <TextField\n        required\n        color={\"secondary\"}\n        id={type}\n        label={label}\n        type={type}\n        error={error}\n        value={value}\n        onChange={handleChange}\n        className={clsx(\n          type === \"date\" ? classes.dateField : classes.dateTimeField\n        )}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{\n          min: type === \"date\" ? nowDate : nowDateTime,\n        }}\n      />\n    </form>\n  );\n};\n\nexport default memo(DateTextField);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_TIME_ZONE_INFO = gql`\n  query GetTimeZoneInfo($latitude: Float, $longitude: Float, $date: String) {\n    get_time_zone_info(\n      latitude: $latitude\n      longitude: $longitude\n      date: $date\n    ) {\n      timeZoneId\n      timeZoneName\n      epochTime\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_LOCATION_PREDICTION = gql`\n  query GetLocationPrediction($search: String) {\n    get_location_prediction(search: $search){\n      description\n      main_text\n      secondary_text\n      main_text_matched_substrings {\n        length\n        offset\n      }\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_LOCATION_COORDINATES = gql`\n  query GetLocationPrediction($search: String) {\n    get_location_coordinates(search: $search){\n      lat\n      lng  \n    }\n  }\n`;\n","import React, {useState, useEffect, useCallback, memo} from \"react\";\nimport {Grid, Typography, makeStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport parse from \"autosuggest-highlight/parse\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {GET_TIME_ZONE_INFO} from \"../../../operations/queries/getTimeZoneInfo\";\nimport {GET_LOCATION_PREDICTION} from \"../../../operations/queries/getLocationPrediction\";\nimport {GET_LOCATION_COORDINATES} from \"../../../operations/queries/getLocationCoordinates\";\nimport AutocompleteTextField from \"../../inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst TimeZoneSearch = ({\n  setHrCity,\n  setHrTimeZone,\n  setHrTimeZoneId,\n  setHrLocationLat,\n  setHrLocationLong,\n  hrTimeZoneError,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [value, setValue] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n  const [timeZoneName, setTimeZoneName] = useState(\"\");\n  const [zoneId, setZoneId] = useState(\"\");\n  const [latLng, setLatLng] = useState({latitude: null, longitude: null});\n\n  const [executeQuery] = useLazyQuery(GET_TIME_ZONE_INFO, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setZoneId(data?.get_time_zone_info?.timeZoneId);\n      setTimeZoneName(data?.get_time_zone_info?.timeZoneName);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeLocationCoordinatesQuery] = useLazyQuery(\n    GET_LOCATION_COORDINATES,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => {\n        const {lat, lng} = data?.get_location_coordinates || {};\n        if (lat && lng) {\n          setLatLng({latitude: lat, longitude: lng});\n          setHrLocationLat(lat);\n          setHrLocationLong(lng);\n        }\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const [executeLocationQuery, {data}] = useLazyQuery(GET_LOCATION_PREDICTION, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleValue = useCallback(\n    (location) => {\n      setHrCity(location);\n      if (location) {\n        executeLocationCoordinatesQuery({variables: {search: location}});\n      }\n    },\n    [setHrCity, executeLocationCoordinatesQuery]\n  );\n\n  useEffect(() => {\n    if (!inputValue) {\n      setOptions(value ? [value] : []);\n    }\n    if (inputValue) {\n      executeLocationQuery({variables: {search: inputValue}});\n    }\n  }, [inputValue, executeLocationQuery]);\n\n  useEffect(() => {\n    if (data?.get_location_prediction) {\n      setOptions(data?.get_location_prediction);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (value) {\n      handleValue(value.description);\n    }\n  }, [value, handleValue]);\n\n  useEffect(() => {\n    if (latLng?.latitude && latLng.longitude) {\n      executeQuery({variables: latLng});\n    }\n  }, [executeQuery, latLng]);\n\n  useEffect(() => {\n    if (zoneId !== \"\") {\n      setHrTimeZoneId(zoneId);\n      setHrTimeZone(timeZoneName);\n    }\n  }, [zoneId, timeZoneName, setHrTimeZoneId, setHrTimeZone]);\n\n  useEffect(() => {\n    if (value === null) {\n      setHrCity(\"\");\n      setHrTimeZone(\"\");\n    }\n  }, [value, setHrCity, setHrTimeZone]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      style={{width: \"30ch\"}}\n      getOptionLabel={(option) => option.description}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <AutocompleteTextField\n          {...params}\n          error={hrTimeZoneError}\n          label=\"Search for city of time zone\"\n          fullWidth\n        />\n      )}\n      renderOption={(option) => {\n        const matches = option.main_text_matched_substrings;\n        const parts = parse(\n          option.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length])\n        );\n\n        return (\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{fontWeight: part.highlight ? 700 : 400}}\n                >\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography\n                component={\"div\"}\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {option.secondary_text}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n};\n\nexport default memo(TimeZoneSearch);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\nimport DateTextField from \"../../inputs/DateTextField\";\nimport TimeZoneSearch from \"../hrInfo/TimeZoneSearch\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {GET_TIME_ZONE_INFO} from \"../../../operations/queries/getTimeZoneInfo\";\nimport handleError from \"../../../data/handleError\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ScheduleDateTimeInput = ({\n  scheduleDate,\n  scheduleDateError,\n  scheduleTimeZone,\n  scheduleTimeZoneError,\n  setScheduleDate,\n  setScheduleDateError,\n  setScheduleTimeZone,\n  setScheduleTimeZoneId,\n  setScheduleEpoch,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [city, setCity] = useState(\"\");\n  const [scheduleLocationLat, setScheduleLocationLat] = useState(\"\");\n  const [scheduleLocationLong, setScheduleLocationLong] = useState(\"\");\n\n  const [executeQuery] = useLazyQuery(GET_TIME_ZONE_INFO, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setScheduleEpoch(data?.get_time_zone_info?.epochTime);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (scheduleDate && scheduleLocationLat && scheduleLocationLong) {\n      executeQuery({\n        variables: {\n          latitude: scheduleLocationLat,\n          longitude: scheduleLocationLong,\n          date: scheduleDate,\n        },\n      });\n    }\n  }, [scheduleDate, scheduleLocationLat, scheduleLocationLong]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Schedule date, time & time zone of offboarding\" />\n      </Grid>\n      <Grid item xs={8} container>\n        <Grid item xs={5}>\n          <DateTextField\n            type=\"datetime-local\"\n            label=\"Offboarding date &amp; time\"\n            error={scheduleDateError}\n            setError={setScheduleDateError}\n            value={scheduleDate}\n            onValueChange={setScheduleDate}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Box className={classes.box}>\n            <Box mr={2}>\n              <TimeZoneSearch\n                setHrCity={setCity}\n                setHrTimeZone={setScheduleTimeZone}\n                setHrTimeZoneId={setScheduleTimeZoneId}\n                setHrLocationLat={setScheduleLocationLat}\n                setHrLocationLong={setScheduleLocationLong}\n                hrTimeZoneError={scheduleTimeZoneError}\n              />\n            </Box>\n          </Box>\n        </Grid>\n\n        <Grid item>\n          {scheduleTimeZone && (\n            <Box mt={2}>\n              <p>\n                The time zone of {city} is {scheduleTimeZone}\n              </p>\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(ScheduleDateTimeInput);\n","import {connect} from \"react-redux\";\nimport {\n  setScheduleDate,\n  setScheduleDateError,\n  setScheduleTimeZone,\n  setScheduleTimeZoneId,\n  setScheduleEpoch,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport ScheduleDateTimeInput from \"../../../components/formBlocks/offboardWhenDetails/ScheduleDateTimeInput\";\n\nconst mapStateToProps = (state) => ({\n  scheduleDate: state.offboardRequest.getIn([\"taskScheduling\", \"scheduleDate\"]),\n  scheduleTimeZone: state.offboardRequest.getIn([\n    \"taskScheduling\",\n    \"scheduleTimeZone\",\n  ]),\n  scheduleDateError: state.offboardRequest.get([\"scheduleDateError\"]),\n  scheduleTimeZoneError: state.offboardRequest.get([\"scheduleTimeZoneError\"]),\n});\n\nconst mapDispatchToProps = {\n  setScheduleDate,\n  setScheduleDateError,\n  setScheduleTimeZone,\n  setScheduleTimeZoneId,\n  setScheduleEpoch,\n};\n\nconst ScheduleDateTimeInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScheduleDateTimeInput);\n\nexport default ScheduleDateTimeInputContainer;\n","import React, {memo} from \"react\";\nimport {Checkbox, withStyles} from \"@material-ui/core\";\n\nconst ColorCheckbox = withStyles((theme) => ({\n  root: {\n    color: theme.palette.warning.main,\n    fontSize: \"5rem\",\n    \"&$checked\": {\n      color: theme.palette.warning.main,\n      fontSize: \"5rem\",\n    },\n  },\n  checked: {},\n}))((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default memo(ColorCheckbox);\n","import React, {memo} from \"react\";\nimport ColorCheckbox from \"./ColorCheckbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport {FormControlLabel, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  label: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst CustomLabelCheckbox = ({label, name, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <FormControlLabel\n      classes={{label: classes.label}}\n      control={\n        <ColorCheckbox\n          icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n          checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n          name={name}\n          {...props}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nexport default memo(CustomLabelCheckbox);\n","import React, {memo} from \"react\";\nimport {Box, FormGroup, Grid, makeStyles} from \"@material-ui/core\";\nimport InfoTooltip from \"../../tooltips/InfoTooltip\";\nimport CustomLabelCheckbox from \"../../checkboxes/CustomLabelCheckbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  label: {\n    fontSize: \"1rem\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst NotificationCheck = ({\n  isNotifyTerminationsChecked,\n  isNotifyTerminationsDisabled,\n  setIsNotifyTerminationsChecked,\n}) => {\n  const classes = useStyles();\n  const handleChange = (event) => {\n    setIsNotifyTerminationsChecked(event.target.checked);\n  };\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <Box className={classes.leftText}>\n          <InfoTooltip placement=\"bottom-start\">\n            If checked, a notification will be sent to the terminations team to\n            cancel user accounts.\n            <br /> <br />\n            If <b>not</b> checked, a notification will <b>only</b> be sent to\n            the terminations team after the offboarding has completed.\n          </InfoTooltip>\n        </Box>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <FormGroup row>\n            <CustomLabelCheckbox\n              label={\"Send email notification to terminations@liveperson.com\"}\n              name={\"notification\"}\n              disabled={isNotifyTerminationsDisabled}\n              checked={isNotifyTerminationsChecked}\n              onChange={handleChange}\n            />\n          </FormGroup>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(NotificationCheck);\n","import {connect} from \"react-redux\";\nimport {setIsNotifyTerminationsChecked} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport NotificationCheck from \"../../../components/formBlocks/offboardWhenDetails/NotificationCheck\";\n\nconst mapStateToProps = (state) => ({\n  isNotifyTerminationsChecked: state.offboardRequest.getIn([\n    \"taskScheduling\",\n    \"isNotifyTerminationsChecked\",\n  ]),\n  isNotifyTerminationsDisabled: state.offboardRequest.getIn([\n    \"taskScheduling\",\n    \"isNotifyTerminationsDisabled\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setIsNotifyTerminationsChecked,\n};\n\nconst NotificationCheckContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NotificationCheck);\n\nexport default NotificationCheckContainer;\n","import React, {memo} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Divider} from \"@material-ui/core\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport ScheduleTypeSelectContainer from \"./ScheduleTypeSelectContainer\";\nimport ScheduleDateTimeInputContainer from \"./ScheduleDateTimeInputContainer\";\nimport NotificationCheckContainer from \"./NotifyCheckContainer\";\n\nimport TaskScheduleTypes from \"../../../data/constants/TaskScheduleTypes\";\n\nconst OffboardWhen = ({scheduleType}) => {\n  return (\n    <RequestFormWrapper>\n      <SectionTitleBlock title=\"When to offboard?\">\n        <ScheduleTypeSelectContainer />\n        {(scheduleType === TaskScheduleTypes.SCHEDULED ||\n          scheduleType === TaskScheduleTypes.SENSITIVE) && (\n          <>\n            <ScheduleDateTimeInputContainer />\n            <Divider />\n            <NotificationCheckContainer />\n          </>\n        )}\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default connect((state) => ({\n  scheduleType: state.offboardRequest.getIn([\"taskScheduling\", \"scheduleType\"]),\n}))(memo(OffboardWhen));\n","import React, {memo} from \"react\";\nimport {FormGroup, Grid} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport CustomLabelCheckbox from \"../../checkboxes/CustomLabelCheckbox\";\n\nconst TransferWhatCheck = ({\n  isDriveChecked,\n  isCalendarChecked,\n  isDataStudioChecked,\n  setIsDriveChecked,\n  setIsCalendarChecked,\n  setIsDataStudioChecked,\n}) => {\n  const handleDriveCheck = (event) => {\n    setIsDriveChecked(event.target.checked);\n  };\n\n  const handleCalendarCheck = (event) => {\n    setIsCalendarChecked(event.target.checked);\n  };\n\n  const handleDataStudioCheck = (event) => {\n    setIsDataStudioChecked(event.target.checked);\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select what needs to be transferred\" />\n      </Grid>\n      <Grid item xs={8}>\n        <FormGroup row>\n          <CustomLabelCheckbox\n            label={\"Google Drive\"}\n            name={\"drive\"}\n            checked={isDriveChecked}\n            onChange={handleDriveCheck}\n          />\n\n          <CustomLabelCheckbox\n            label={\"Google Calendar\"}\n            name={\"calendar\"}\n            checked={isCalendarChecked}\n            onChange={handleCalendarCheck}\n          />\n\n          <CustomLabelCheckbox\n            label={\"Google Data Studio\"}\n            name={\"dataStudio\"}\n            checked={isDataStudioChecked}\n            onChange={handleDataStudioCheck}\n          />\n        </FormGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(TransferWhatCheck);\n","import {connect} from \"react-redux\";\nimport {\n  setIsDriveChecked,\n  setIsCalendarChecked,\n  setIsDataStudioChecked,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport TransferWhatCheck from \"../../../components/formBlocks/dataLicensesDevicesDetails/TransferWhatCheck\";\n\nconst mapStateToProps = (state) => ({\n  isDriveChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isDriveChecked\",\n  ]),\n  isCalendarChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isCalendarChecked\",\n  ]),\n  isDataStudioChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isDataStudioChecked\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setIsDriveChecked,\n  setIsCalendarChecked,\n  setIsDataStudioChecked,\n};\n\nconst TransferWhatCheckContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TransferWhatCheck);\n\nexport default TransferWhatCheckContainer;\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {SEARCH_USERS_QUERY} from \"../../../operations/queries/searchUsersQuery\";\nimport handleError from \"../../../data/handleError\";\nimport {getProfileNameAndInfo} from \"../../../data/helper/helpers\";\nimport NoResultsTypography from \"../../typographies/NoResultsTypography\";\nimport SelectCircularProgress from \"../../circularProgress/SelectCircularProgress\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  textField: {\n    width: \"60ch\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 1,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    width: 600,\n    marginLeft: 0,\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n}));\n\nconst TransferWhoSelect = ({selectedTransferUser, setSelectedTransferUser}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [usersData, setUsersData] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [isResultsLoading, setIsResultsLoading] = useState(false);\n\n  const [executeSearch, {data}] = useLazyQuery(SEARCH_USERS_QUERY, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if(data) {\n      setUsersData(data?.search_users);\n      setIsResultsLoading(false);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (searchQuery?.length > 0) {\n      executeSearch({variables: {search: searchQuery}});\n    } else if (searchQuery?.length === 0) {\n      setUsersData(\"\");\n      setResultsOpen(false);\n    }\n  }, [searchQuery, executeSearch]);\n\n  const handleClick = (selected) => {\n    setSelectedTransferUser(selected);\n    setSearchQuery(\"\");\n  };\n\n  const handleClear = () => {\n    setSelectedTransferUser(\"\");\n  };\n\n  const searchOnChange = useCallback((value) => {\n    setIsResultsLoading(true);\n    setResultsOpen(true);\n    setSearchQuery(value);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(searchOnChange);\n  useEffect(() => {debouncedChangeHandler(query)}, [query]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Search &amp; select who to transfer to\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <>\n            {!selectedTransferUser && (\n              <>\n                <Box>\n                  <Typography component={\"div\"} variant=\"subtitle2\">\n                    If transfer user is not selected, default will be\n                    \"livepersondrive@liveperson.com\"\n                  </Typography>\n                </Box>\n                <Box mb={2} className={classes.box}>\n                  <TextField\n                    label=\"Search\"\n                    variant=\"standard\"\n                    helperText=\"Search by Name, Email, or HRIS ID\"\n                    color=\"secondary\"\n                    autoComplete=\"off\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    className={classes.textField}\n                  />\n\n                  {searchQuery?.length > 0 && (\n                    <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n                      <Box className={classes.resultsBox}>\n                        <Paper>\n                          {isResultsLoading && <SelectCircularProgress />}\n                          {usersData && (\n                            <>\n                              {usersData?.length === 0 ? (\n                                <Box m={1}>\n                                  <NoResultsTypography />\n                                </Box>\n                              ) : (\n                                <List>\n                                  {usersData?.map((user) => (\n                                    <React.Fragment key={user.id}>\n                                      <ListItem\n                                        key={user.id}\n                                        button\n                                        onClick={() => handleClick(user)}\n                                      >\n                                        <ListItemText\n                                          primary={\n                                            <Typography\n                                              component={\"div\"}\n                                              variant=\"subtitle1\"\n                                            >\n                                              {getProfileNameAndInfo(\n                                                user?.profile\n                                              )}\n                                            </Typography>\n                                          }\n                                        />\n                                      </ListItem>\n                                      {usersData?.length > 1 && <Divider />}\n                                    </React.Fragment>\n                                  ))}\n                                </List>\n                              )}\n                            </>\n                          )}\n                        </Paper>\n                      </Box>\n                    </Collapse>\n                  )}\n                </Box>\n              </>\n            )}\n            {selectedTransferUser && (\n              <>\n                <Box mt={2}>\n                  <Box mb={1} mt={2}>\n                    {selectedTransferUser?.profile?.email ===\n                    \"livepersondrive@liveperson.com\"\n                      ? \"Default:\"\n                      : \"Selected:\"}\n                  </Box>\n                  <Container m={1} className={classes.selectedContainer}>\n                    {selectedTransferUser?.profile?.email ===\n                    \"livepersondrive@liveperson.com\" ? (\n                      \"livepersondrive@liveperson.com\"\n                    ) : (\n                      <>\n                        {\" \"}\n                        {selectedTransferUser?.profile?.firstName}{\" \"}\n                        {selectedTransferUser?.profile?.lastName} |{\" \"}\n                        {selectedTransferUser?.profile?.location} |{\" \"}\n                        {selectedTransferUser?.profile?.jobTitle}{\" \"}\n                      </>\n                    )}\n                  </Container>\n                </Box>\n                <Box mt={1}>\n                  <Button\n                    size=\"small\"\n                    variant=\"outlined\"\n                    onClick={() => handleClear()}\n                  >\n                    Clear Selected\n                  </Button>\n                </Box>\n              </>\n            )}\n          </>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(TransferWhoSelect);\n","import {connect} from \"react-redux\";\nimport {setSelectedTransferUser} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport TransferWhoSelect from \"../../../components/formBlocks/dataLicensesDevicesDetails/TransferWhoSelect\";\n\nconst mapStateToProps = (state) => ({\n  selectedTransferUser: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"selectedTransferUser\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setSelectedTransferUser,\n};\n\nconst TransferWhoSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TransferWhoSelect);\n\nexport default TransferWhoSelectContainer;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ACLOUDGURU_LICENSE = gql`\n  query GetACloudGuruLicense($search: String!) {\n    get_acloudguru_license(search: $search) {\n      ok\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_SLACK_LICENSE = gql`\n  query GetSlackLicense($search: String!) {\n    get_slack_license(search: $search) {\n      ok\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_SMARTSHEET_LICENSE = gql`\n  query GetSmartsheetLicense($search: String!) {\n    get_smartsheet_license(search: $search) {\n      ok\n    }\n  }\n`;\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, FormGroup, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {GET_ACLOUDGURU_LICENSE} from \"../../../operations/queries/getACloudGuruLicense\";\nimport handleError from \"../../../data/handleError\";\nimport {GET_SLACK_LICENSE} from \"../../../operations/queries/getSlackLicense\";\nimport {GET_SMARTSHEET_LICENSE} from \"../../../operations/queries/getSmartsheetLicense\";\nimport CustomLabelCheckbox from \"../../checkboxes/CustomLabelCheckbox\";\nimport LoadingCircle from \"../../circularProgress/LoadingCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  formBox: {\n    height: 125,\n    overflow: \"auto\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nconst LicensesCheck = ({\n  selectedOffboardUser,\n  unassignLicenses,\n  setUnassignLicenses,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const selectedUserEmail = selectedOffboardUser?.profile?.email;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAllChecked, setIsAllChecked] = useState(true);\n  const [verifiedAcloudguru, setVerifiedAcloudguru] = useState(false);\n  const [verifiedSlack, setVerifiedSlack] = useState(false);\n  const [verifiedSmartsheet, setVerifiedSmartsheet] = useState(false);\n\n  const [executeAcloudguruSearch] = useLazyQuery(GET_ACLOUDGURU_LICENSE, {\n    onCompleted: async (data) => {\n      if (data?.get_acloudguru_license?.ok) {\n        const isInArr = unassignLicenses?.some(\n          (license) => license.id === \"acloudguru\"\n        );\n        if (!isInArr) {\n          await setUnassignLicenses([\n            ...unassignLicenses,\n            {id: \"acloudguru\", isChecked: true, name: \"A Cloud Guru\"},\n          ]);\n        }\n      }\n      setVerifiedAcloudguru(true);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeSlackSearch] = useLazyQuery(GET_SLACK_LICENSE, {\n    onCompleted: async (data) => {\n      if (data?.get_slack_license?.ok) {\n        const isInArr = unassignLicenses?.some(\n          (license) => license.id === \"slack\"\n        );\n        if (!isInArr) {\n          await setUnassignLicenses([\n            ...unassignLicenses,\n            {\n              id: \"slack\",\n              isChecked: true,\n              name: \"Slack (disable and rename)\",\n            },\n          ]);\n        }\n      }\n      setVerifiedSlack(true);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeSmartsheetSearch] = useLazyQuery(GET_SMARTSHEET_LICENSE, {\n    onCompleted: async (data) => {\n      if (data?.get_smartsheet_license?.ok) {\n        const isInArr = unassignLicenses?.some(\n          (license) => license.id === \"smartsheet\"\n        );\n        if (!isInArr) {\n          await setUnassignLicenses([\n            ...unassignLicenses,\n            {\n              id: \"smartsheet\",\n              isChecked: true,\n              name: \"Smartsheet\",\n            },\n          ]);\n        }\n      }\n      setVerifiedSmartsheet(true);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const verifyLicenses = useCallback(async () => {\n    if (selectedUserEmail) {\n      await executeAcloudguruSearch({variables: {search: selectedUserEmail}});\n      await executeSlackSearch({variables: {search: selectedUserEmail}});\n      await executeSmartsheetSearch({variables: {search: selectedUserEmail}});\n    }\n  }, [\n    executeAcloudguruSearch,\n    executeSlackSearch,\n    executeSmartsheetSearch,\n    selectedUserEmail,\n  ]);\n\n  useEffect(() => {\n    verifyLicenses();\n  }, [verifyLicenses]);\n\n  useEffect(() => {\n    if (verifiedAcloudguru && verifiedSlack && verifiedSmartsheet) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [verifiedSlack, verifiedSmartsheet, verifiedAcloudguru, setIsLoading]);\n\n  const handleChange = (e) => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n\n    let newState = unassignLicenses.map((license) => {\n      if (license.name === value) {\n        return {\n          ...license,\n          isChecked: checked,\n        };\n      } else return license;\n    });\n\n    setUnassignLicenses(newState);\n  };\n\n  const handleAllCheck = (e) => {\n    const checked = e.target.checked;\n    setIsAllChecked(e.target.checked);\n\n    if (checked === false) {\n      let newState = unassignLicenses.map((license) => {\n        return {\n          ...license,\n          isChecked: false,\n        };\n      });\n      setUnassignLicenses(newState);\n    } else if (checked === true) {\n      let newState = unassignLicenses.map((license) => {\n        return {\n          ...license,\n          isChecked: true,\n        };\n      });\n      setUnassignLicenses(newState);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select which licenses to remove\" />\n      </Grid>\n      <Grid item xs={5}>\n        {isLoading ? (\n          <LoadingCircle />\n        ) : (\n          <>\n            {unassignLicenses?.length > 0 ? (\n              <>\n                <FormGroup row>\n                  <CustomLabelCheckbox\n                    label={\"Check this box to remove all licenses\"}\n                    name={\"all\"}\n                    checked={isAllChecked}\n                    onChange={handleAllCheck}\n                  />\n                </FormGroup>\n                <Box className={classes.formBox}>\n                  <FormGroup>\n                    {unassignLicenses?.map((license) => (\n                      <React.Fragment key={license.id}>\n                        <CustomLabelCheckbox\n                          label={license.name}\n                          name={license.name}\n                          checked={license.isChecked}\n                          value={license.name}\n                          onChange={handleChange}\n                        />\n                      </React.Fragment>\n                    ))}\n                  </FormGroup>\n                </Box>\n              </>\n            ) : (\n              <Typography component={\"div\"}>No licenses to remove</Typography>\n            )}\n          </>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(LicensesCheck);\n","import {connect} from \"react-redux\";\nimport {setUnassignLicenses} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport LicensesCheck from \"../../../components/formBlocks/dataLicensesDevicesDetails/LicensesCheck\";\n\nconst mapStateToProps = (state) => ({\n  selectedOffboardUser: state.offboardRequest.getIn([\n    \"offboardDetails\",\n    \"selectedOffboardUser\",\n  ]),\n  unassignLicenses: state.offboardRequest.getIn([\n    \"licenseRemoval\",\n    \"unassignLicenses\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setUnassignLicenses,\n};\n\nconst LicensesCheckContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LicensesCheck);\n\nexport default LicensesCheckContainer;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_JAMF_DEVICES = gql`\n  query GetJamfDevices($search: String!) {\n    get_jamf_devices(search: $search) {\n      id\n      username\n      model\n      serialNumber\n      deviceName\n      isChecked\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_CHROME_DEVICES = gql`\n  query GetGoogleChromeDevices($search: String!) {\n    get_google_chrome_devices(search: $search) {\n      deviceId\n      serialNumber\n      status\n      annotatedUser\n      model\n      isChecked\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport ColorCheckbox from \"../../../../components/checkboxes/ColorCheckbox\";\n\nconst DeviceCheckboxes = ({ devicesData, handleChange, isChrome, ...props }) => {\n  return (\n    <FormGroup {...props}>\n      {devicesData?.map((device) => (\n        <FormControlLabel\n          key={device.id || device.deviceId}\n          control={\n            <ColorCheckbox\n              icon={<CheckBoxOutlineBlankIcon fontSize=\"small\"/>}\n              checkedIcon={<CheckBoxIcon fontSize=\"small\"/>}\n              checked={device.isChecked}\n              onChange={handleChange}\n              value={device.id || device.deviceId}\n              name={device.id || device.deviceId}\n            />\n          }\n          label={(isChrome ? \"Chrome OS Device: \" : `${device.deviceName}: `) + `${device.serialNumber}`}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n\nexport default memo(DeviceCheckboxes);\n","import React, {memo} from \"react\";\nimport {Grid, makeStyles} from \"@material-ui/core\";\nimport RequestFormTypography from \"../typographies/RequestFormTypography\";\n\nconst useStyles = makeStyles(() => ({\n  inputWrapperContainer: {\n    margin: \"16px 0 24px\",\n    paddingRight: 40,\n  },\n  inputWrapperLabel: {\n    alignSelf: \"center\",\n  },\n}));\n\nconst GridInputWrapper = ({\n  title,\n  children,\n  gridInput,\n  inputWrapperContainerStyle,\n  inputWrapperLabelStyle,\n  xsItemChild,\n}) => {\n  const classes = useStyles();\n  return (\n    <Grid\n      item\n      container\n      className={inputWrapperContainerStyle && classes.inputWrapperContainer}\n    >\n      <Grid\n        item\n        xs={4}\n        className={inputWrapperLabelStyle && classes.inputWrapperLabel}\n      >\n        <RequestFormTypography title={title} />\n      </Grid>\n      <Grid item xs={xsItemChild ? xsItemChild : 8} {...gridInput}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(GridInputWrapper);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, FormGroup, makeStyles, Typography} from \"@material-ui/core\";\nimport {GET_JAMF_DEVICES} from \"../../../operations/queries/getJamfDevices\";\nimport handleError from \"../../../data/handleError\";\nimport {GET_GOOGLE_CHROME_DEVICES} from \"../../../operations/queries/getGoogleChromeDevices\";\nimport DeviceCheckboxes from \"../../../pages/OffboardEmployeePage/CreateRequestForm/DeviceUnassignment/DeviceCheckboxes\";\nimport CustomLabelCheckbox from \"../../checkboxes/CustomLabelCheckbox\";\nimport LoadingCircle from \"../../circularProgress/LoadingCircle\";\nimport GridInputWrapper from \"../../requestFormWrapper/GridInputWrapper\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    height: 125,\n    overflow: \"auto\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nconst checkIfAllChecked = (devices) => {\n  let allChecked = true;\n  if (devices?.length) {\n    devices.forEach((device) => {\n      if (device?.isChecked === false) allChecked = false;\n    });\n  }\n  return allChecked;\n};\n\nconst changeDeviceStatus = (devices, setDevices, target) => {\n  if (devices?.length > 0) {\n    let newState = devices?.map((device) => {\n      if (device.id === target?.value || device?.deviceId === target?.value) {\n        return {...device, isChecked: target?.checked};\n      } else return device;\n    });\n    setDevices(newState);\n  }\n};\n\nconst DevicesCheck = ({\n  selectedOffboardUser,\n  jamfDevicesData,\n  setJamfDevicesData,\n  googleDevicesData,\n  setGoogleDevicesData,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAllChecked, setIsAllChecked] = useState(true);\n  const [hasJamfDevices, setHasJamfDevices] = useState(false);\n  const [hasGoogleDevices, setHasGoogleDevices] = useState(false);\n  const [verifiedJamf, setVerifiedJamf] = useState(false);\n  const [verifiedGoogle, setVerifiedGoogle] = useState(false);\n\n  const [executeJamfSearch] = useLazyQuery(GET_JAMF_DEVICES, {\n    onCompleted: (data) => {\n      const dataWithCheckedStatus = data.get_jamf_devices?.map((device) => ({\n        ...device,\n        isChecked: isAllChecked,\n      }));\n      setJamfDevicesData(dataWithCheckedStatus);\n      setHasJamfDevices(!!dataWithCheckedStatus?.length);\n      setVerifiedJamf(true);\n    },\n    onError: (error) => {\n      setJamfDevicesData(null);\n      setHasGoogleDevices(false);\n      handleError(error)(history);\n    },\n  });\n\n  const [executeGoogleSearch] = useLazyQuery(GET_GOOGLE_CHROME_DEVICES, {\n    onCompleted: (data) => {\n      const dataWithCheckedStatus = data.get_google_chrome_devices?.map(\n        (device) => ({...device, isChecked: isAllChecked})\n      );\n      setGoogleDevicesData(dataWithCheckedStatus);\n      setHasGoogleDevices(!!dataWithCheckedStatus?.length);\n      setVerifiedGoogle(true);\n    },\n    onError: (error) => {\n      setGoogleDevicesData(null);\n      setHasGoogleDevices(false);\n      handleError(error)(history);\n    },\n  });\n\n  const handleCheckedAll = (checked) => {\n    setIsAllChecked(checked);\n    if (hasJamfDevices) {\n      const newJamfDeviceState = jamfDevicesData?.map((device) => ({\n        ...device,\n        isChecked: checked,\n      }));\n      setJamfDevicesData(newJamfDeviceState);\n    }\n    if (hasGoogleDevices) {\n      const newGoogleDeviceState = googleDevicesData?.map((device) => ({\n        ...device,\n        isChecked: checked,\n      }));\n      setGoogleDevicesData(newGoogleDeviceState);\n    }\n  };\n\n  const handleGoogleDeviceChange = (e) => {\n    changeDeviceStatus(googleDevicesData, setGoogleDevicesData, e.target);\n  };\n\n  const handleJamfDeviceChange = (e) => {\n    changeDeviceStatus(jamfDevicesData, setJamfDevicesData, e.target);\n  };\n\n  useEffect(() => {\n    if (selectedOffboardUser) {\n      executeJamfSearch({\n        variables: {search: selectedOffboardUser?.profile?.userName},\n      });\n      executeGoogleSearch({\n        variables: {search: selectedOffboardUser?.profile?.email},\n      });\n    }\n  }, [selectedOffboardUser, executeJamfSearch, executeGoogleSearch]);\n\n  useEffect(() => {\n    const allJemfChecked = checkIfAllChecked(jamfDevicesData);\n    const allGoogleChecked = checkIfAllChecked(googleDevicesData);\n\n    if (allJemfChecked && allGoogleChecked) {\n      setIsAllChecked(true);\n    } else {\n      setIsAllChecked(false);\n    }\n  }, [jamfDevicesData, googleDevicesData]);\n\n  useEffect(() => {\n    if (verifiedGoogle && verifiedJamf) {\n      setIsLoading(false);\n    } else {\n      setIsLoading(true);\n    }\n  }, [verifiedGoogle, verifiedJamf]);\n\n  return (\n    <GridInputWrapper title=\"Select which devices to unassign\" xsItemChild={5}>\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          {hasGoogleDevices || hasJamfDevices ? (\n            <>\n              <FormGroup row>\n                <CustomLabelCheckbox\n                  label={\"Check this box to unassign all devices\"}\n                  name={\"all\"}\n                  checked={isAllChecked}\n                  onChange={(e) => handleCheckedAll(e.target.checked)}\n                />\n              </FormGroup>\n\n              <Box className={classes.box}>\n                {hasJamfDevices && (\n                  <DeviceCheckboxes\n                    devicesData={jamfDevicesData}\n                    handleChange={handleJamfDeviceChange}\n                  />\n                )}\n                {hasGoogleDevices && (\n                  <DeviceCheckboxes\n                    isChrome\n                    devicesData={googleDevicesData}\n                    handleChange={handleGoogleDeviceChange}\n                  />\n                )}\n              </Box>\n            </>\n          ) : (\n            <Box>\n              <Typography component={\"div\"}>No devices to unassign</Typography>\n            </Box>\n          )}\n        </>\n      )}\n    </GridInputWrapper>\n  );\n};\n\nexport default memo(DevicesCheck);\n","import {connect} from \"react-redux\";\nimport {\n  setJamfDevicesData,\n  setGoogleDevicesData,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport DevicesCheck from \"../../../components/formBlocks/dataLicensesDevicesDetails/DevicesCheck\";\n\nconst mapStateToProps = (state) => ({\n  selectedOffboardUser: state.offboardRequest.getIn([\n    \"offboardDetails\",\n    \"selectedOffboardUser\",\n  ]),\n  jamfDevicesData: state.offboardRequest.getIn([\n    \"deviceUnassign\",\n    \"jamfDevicesData\",\n  ]),\n  googleDevicesData: state.offboardRequest.getIn([\n    \"deviceUnassign\",\n    \"googleDevicesData\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setJamfDevicesData,\n  setGoogleDevicesData,\n};\n\nconst DevicesCheckContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DevicesCheck);\n\nexport default DevicesCheckContainer;\n","import React, {memo} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Divider, Grid} from \"@material-ui/core\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\nimport TransferWhatCheckContainer from \"./TransferWhatCheckContainer\";\nimport TransferWhoSelectContainer from \"./TransferWhoSelectContainer\";\nimport LicensesCheckContainer from \"./LicensesCheckContainer\";\nimport DevicesCheckContainer from \"./DevicesCheckContainer\";\nimport InfoTooltip from \"../../../components/tooltips/InfoTooltip\";\n\nconst DataLicensesDevices = ({\n  isDriveChecked,\n  isCalendarChecked,\n  isDataStudioChecked,\n}) => {\n  return (\n    <RequestFormWrapper height={\"37vh\"}>\n      <Grid container spacing={3}>\n        <Grid item xs={11} />\n        <Grid item xs={1}>\n          <InfoTooltip type={\"help\"}>\n            We recommend all data, licenses, and devices selected by default.\n          </InfoTooltip>\n        </Grid>\n      </Grid>\n      <SectionTitleBlock title=\"Data Transfer\">\n        <TransferWhatCheckContainer />\n        {(isDriveChecked || isCalendarChecked || isDataStudioChecked) && (\n          <TransferWhoSelectContainer />\n        )}\n      </SectionTitleBlock>\n      <Divider />\n      <SectionTitleBlock title=\"Licenses\">\n        <LicensesCheckContainer />\n      </SectionTitleBlock>\n      <Divider />\n      <SectionTitleBlock title=\"Devices\">\n        <DevicesCheckContainer />\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default connect((state) => ({\n  isDriveChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isDriveChecked\",\n  ]),\n  isCalendarChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isCalendarChecked\",\n  ]),\n  isDataStudioChecked: state.offboardRequest.getIn([\n    \"dataTransfer\",\n    \"isDataStudioChecked\",\n  ]),\n}))(memo(DataLicensesDevices));\n","import React, {memo} from \"react\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\n\nconst CustomFormSelect = ({\n  name,\n  label,\n  required,\n  value,\n  onValueChange,\n  onChange,\n  options,\n  width,\n  withoutEmptyOption,\n  selectClasses,\n  inputLabelClasses,\n  error,\n  setError,\n  ...props\n}) => {\n  const handleChange = (e) => {\n    onValueChange && onValueChange(e.target.value);\n    onChange && onChange(e);\n    if (error) {\n      setError(false);\n    }\n  };\n\n  return (\n    <FormControl\n      required={required}\n      color=\"secondary\"\n      variant=\"outlined\"\n      {...props}\n    >\n      <InputLabel\n        id={`select-${name}-label`}\n        classes={{outlined: inputLabelClasses}}\n      >\n        {label}\n      </InputLabel>\n      <Select\n        labelId={`select-${name}-label`}\n        label={label}\n        id={`select-${name}`}\n        value={value}\n        onChange={handleChange}\n        style={{width: width}}\n        classes={{select: selectClasses}}\n        error={error}\n      >\n        {!withoutEmptyOption && (\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n        )}\n\n        {options?.map((option) => (\n          <MenuItem\n            key={option?.value || option}\n            value={option?.value || option}\n          >\n            {option?.name || option}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomFormSelect);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_HRTERMINATION_CODES = gql`\n  query GethRTerminationCodes {\n    get_hrtermination_codes {\n      id\n      terminationCode\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport CustomFormSelect from \"../../inputs/CustomFormSelect\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_HRTERMINATION_CODES} from \"../../../operations/queries/getHRTerminationCodes\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport GridInputWrapper from \"../../requestFormWrapper/GridInputWrapper\";\n\nconst HrTerminationCodeSelect = ({...props}) => {\n  const history = useHistory();\n  const {data} = useQuery(GET_HRTERMINATION_CODES, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <GridInputWrapper title=\"Select termination code\">\n      <Box>\n        <CustomFormSelect\n          name=\"termination-code\"\n          label=\"Termination Code\"\n          width={\"25ch\"}\n          options={data?.get_hrtermination_codes?.map(\n            ({terminationCode}) => terminationCode\n          )}\n          {...props}\n        />\n      </Box>\n    </GridInputWrapper>\n  );\n};\n\nexport default memo(HrTerminationCodeSelect);\n","import {connect} from \"react-redux\";\nimport HrTerminationCodeSelect from \"../../../components/formBlocks/hrInfo/HrTerminationCodeSelect\";\nimport {setHrTerminationCode} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\n\nconst HrTerminationCodeContainer = connect(\n  (state) => ({\n    value: state.offboardRequest.getIn([\"hrInformation\", \"hrTerminationCode\"]),\n    error: state.offboardRequest.get(\"hrTerminationCodeError\"),\n  }),\n  {\n    onValueChange: setHrTerminationCode,\n  }\n)(HrTerminationCodeSelect);\n\nexport default HrTerminationCodeContainer;\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport CustomFormSelect from \"../../inputs/CustomFormSelect\";\nimport GridInputWrapper from \"../../requestFormWrapper/GridInputWrapper\";\n\nconst HrTerminationTypeSelect = ({...props}) => {\n  return (\n    <GridInputWrapper title=\"Termination is\">\n      <Box>\n        <CustomFormSelect\n          name=\"termination-reason\"\n          label=\"Termination\"\n          width={\"25ch\"}\n          options={[\"Regrettable\", \"Non-Regrettable\"]}\n          {...props}\n        />\n      </Box>\n    </GridInputWrapper>\n  );\n};\n\nexport default memo(HrTerminationTypeSelect);\n","import {connect} from \"react-redux\";\nimport HrTerminationTypeSelect from \"../../../components/formBlocks/hrInfo/HrTerminationTypeSelect\";\nimport {setHrTerminationType} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\n\nconst HrTerminationTypeContainer = connect(\n  (state) => ({\n    value: state.offboardRequest.getIn([\"hrInformation\", \"hrTerminationType\"]),\n  }),\n  {\n    onValueChange: setHrTerminationType,\n  }\n)(HrTerminationTypeSelect);\n\nexport default HrTerminationTypeContainer;\n","import React, {memo, useEffect} from \"react\";\nimport GridInputWrapper from \"../../requestFormWrapper/GridInputWrapper\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_TIME_ZONE_INFO} from \"../../../operations/queries/getTimeZoneInfo\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst HrPayrollDateTimeSelect = ({\n  hrLocationLat,\n  hrLocationLong,\n  hrSelectedDate,\n  setHrPayrollEpoch,\n  children,\n}) => {\n  const history = useHistory();\n\n  const [executeQuery] = useLazyQuery(GET_TIME_ZONE_INFO, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setHrPayrollEpoch(data?.get_time_zone_info?.epochTime);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (hrSelectedDate && hrLocationLat && hrLocationLong) {\n      executeQuery({\n        variables: {\n          latitude: hrLocationLat,\n          longitude: hrLocationLong,\n          date: hrSelectedDate,\n        },\n      });\n    }\n  }, [hrSelectedDate, hrLocationLat, hrLocationLong, executeQuery]);\n\n  return (\n    <GridInputWrapper\n      title=\"End payroll date &amp; time\"\n      gridInput={{container: true}}\n    >\n      {children}\n    </GridInputWrapper>\n  );\n};\n\nexport default memo(HrPayrollDateTimeSelect);\n","import {connect} from \"react-redux\";\nimport {setHrPayrollEpoch} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport HrPayrollDateTimeSelect from \"../../../components/formBlocks/hrInfo/HrPayrollDateTimeSelect\";\n\nconst HrPayrollDateTimeContainer = connect(\n  (state) => ({\n    hrLocationLat: state.offboardRequest.get(\"hrLocationLat\"),\n    hrLocationLong: state.offboardRequest.get(\"hrLocationLong\"),\n    hrSelectedDate: state.offboardRequest.getIn([\n      \"hrInformation\",\n      \"hrSelectedDate\",\n    ]),\n  }),\n  {setHrPayrollEpoch}\n)(HrPayrollDateTimeSelect);\n\nexport default HrPayrollDateTimeContainer;\n","import React, { memo } from \"react\";\nimport DateTextField from \"../../inputs/DateTextField\";\nimport { Grid } from \"@material-ui/core\";\n\nconst HrDateInput = ({ ...props }) => {\n  return (\n    <Grid item style={{paddingBottom: 16}}>\n      <DateTextField\n        type=\"datetime-local\"\n        label=\"End payroll date &amp; time\"\n        {...props}\n      />\n    </Grid>\n  );\n};\n\nexport default memo(HrDateInput);","import {connect} from \"react-redux\";\nimport {\n  setHrDateError,\n  setHrSelectedDate,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport HrDateInput from \"../../../components/formBlocks/hrInfo/HrDateInput\";\n\nconst HrDateContainer = connect(\n  (state) => ({\n    value: state.offboardRequest.getIn([\"hrInformation\", \"hrSelectedDate\"]),\n    error: state.offboardRequest.get(\"hrDateError\"),\n  }),\n  {\n    onValueChange: setHrSelectedDate,\n    setError: setHrDateError,\n  }\n)(HrDateInput);\n\nexport default HrDateContainer;\n","import {connect} from \"react-redux\";\nimport TimeZoneSearch from \"../../../components/formBlocks/hrInfo/TimeZoneSearch\";\nimport {\n  setHrCity,\n  setHrLocationLat,\n  setHrLocationLong,\n  setHrTimeZone,\n  setHrTimeZoneId,\n} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\n\nconst HrTimeZoneContainer = connect(\n  (state) => ({\n    hrTimeZoneError: state.offboardRequest.get(\"hrTimeZoneError\"),\n  }),\n  {\n    setHrCity,\n    setHrTimeZone,\n    setHrTimeZoneId,\n    setHrLocationLat,\n    setHrLocationLong,\n  }\n)(TimeZoneSearch);\n\nexport default HrTimeZoneContainer;\n","import React, { memo } from \"react\";\nimport { Box } from \"@material-ui/core\";\n\nconst HrDateTimezoneInfo = ({timeZone, city}) => {\n  return (\n    <>\n      {timeZone && (\n        <Box mb={3} mx={5}>\n          <p>The time zone of {city} is {timeZone}</p>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(HrDateTimezoneInfo);\n","import {connect} from \"react-redux\";\nimport HrDateTimezoneInfo from \"../../../components/formBlocks/hrInfo/HrDateTimezoneInfo\";\n\nconst HrDateTimezoneInfoContainer = connect(\n  (state) => ({\n    timeZone: state.offboardRequest.getIn([\"hrInformation\", \"hrTimeZone\"]),\n    city: state.offboardRequest.get(\"hrCity\"),\n  }),\n  {}\n)(HrDateTimezoneInfo);\n\nexport default HrDateTimezoneInfoContainer;\n","import React, { memo, useCallback } from \"react\";\nimport {TextField} from \"@material-ui/core\";\n\nexport const NotesTextField = ({onValueChange, onChange, ...props}) => {\n  const handleChange = useCallback((e) => {\n    onValueChange && onValueChange(e.target.value);\n    onChange && onChange(e);\n  }, [onValueChange, onChange]);\n\n  return (\n    <form noValidate autoComplete=\"off\">\n      <TextField\n        variant=\"outlined\"\n        multiline\n        minRows={2}\n        maxRows={4}\n        style={{width: \"100%\"}}\n        inputProps={{maxLength: 191}}\n        helperText=\"maximum length is 191 characters\"\n        onChange={handleChange}\n        {...props}\n      />\n    </form>\n  );\n};\n\nexport default memo(NotesTextField);\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport GridInputWrapper from \"../../requestFormWrapper/GridInputWrapper\";\nimport {NotesTextField} from \"../../inputs/NotesTextField\";\n\nconst HrPayrollNotesInput = ({...props}) => {\n  return (\n    <GridInputWrapper xsItemChild={7} title=\"Payroll notes\">\n      <Box>\n        <NotesTextField id=\"hr-notes\" placeholder=\"notes\" {...props} />\n      </Box>\n    </GridInputWrapper>\n  );\n};\n\nexport default memo(HrPayrollNotesInput);\n","import {connect} from \"react-redux\";\nimport {setHrNotes} from \"../../../data/redux/offboardRequest/offboardRequestActions\";\nimport HrPayrollNotesInput from \"../../../components/formBlocks/hrInfo/HrPayrollNotesInput\";\n\nconst HrPayrollNotesContainer = connect(\n  (state) => ({\n    value: state.offboardRequest.getIn([\"hrInformation\", \"hrNotes\"]),\n  }),\n  {onValueChange: setHrNotes}\n)(HrPayrollNotesInput);\n\nexport default HrPayrollNotesContainer;\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\nimport HrTerminationCodeContainer from \"./HrTerminationCodeContainer\";\nimport HrTerminationTypeContainer from \"./HrTerminationTypeContainer\";\nimport HrPayrollDateTimeContainer from \"./HrPayrollDateTimeContainer\";\nimport HrDateContainer from \"./HrDateContainer\";\nimport HrTimeZoneContainer from \"./HrTimeZoneContainer\";\nimport HrDateTimezoneInfoContainer from \"./HrDateTimezoneInfoContainer\";\nimport HrPayrollNotesContainer from \"./HrPayrollNotesContainer\";\n\nconst HrInformation = () => {\n  return (\n    <RequestFormWrapper>\n      <SectionTitleBlock title=\"HR/Payroll Information\" subtitle={\"(optional)\"}>\n        <HrTerminationCodeContainer />\n        <HrTerminationTypeContainer />\n        <HrPayrollDateTimeContainer>\n          <Box mr={2}>\n            <HrDateContainer />\n          </Box>\n          <HrTimeZoneContainer />\n          <HrDateTimezoneInfoContainer />\n        </HrPayrollDateTimeContainer>\n        <HrPayrollNotesContainer />\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default memo(HrInformation);\n","import { Grid, makeStyles } from \"@material-ui/core\";\nimport { memo } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst GridItem = ({ ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      item\n      className={classes.gridItem}\n      {...props}\n    />\n  )\n}\n\nexport default memo(GridItem);","import React, { memo } from \"react\";\nimport {makeStyles, Typography } from \"@material-ui/core\";\nimport GridItem from \"./GridItem\";\n\nconst useStyles = makeStyles(() => ({\n  sectionTitle: {\n    fontWeight: 600,\n  },\n}));\n\nconst RequestSummarySection = ({title}) => {\n  const classes = useStyles();\n\n  return (\n    <GridItem xs={12}>\n      <Typography component={\"div\"} className={classes.sectionTitle}>\n        {title}\n      </Typography>\n    </GridItem>\n  );\n};\n\nexport default memo(RequestSummarySection);","import React, { memo } from \"react\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport RequestSummarySectionTitle from \"./RequestSummarySectionTitle\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridItemContainer: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst RequestSummarySection = ({title, children}) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item container spacing={1} className={classes.gridItemContainer}>\n      <RequestSummarySectionTitle title={title}/>\n\n      {children}\n    </Grid>\n  );\n};\n\nexport default memo(RequestSummarySection);","import React, {memo} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport GridItem from \"./GridItem\";\n\nconst RequestSummaryItem = ({name, value}) => {\n  return (\n    <>\n      <Grid item xs={1} />\n      <GridItem xs={3}> {name} </GridItem>\n      <GridItem xs={8}> {value} </GridItem>\n    </>\n  );\n};\n\nexport default memo(RequestSummaryItem);\n","import React, {memo} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: \"1.25rem\",\n    fontWeight: theme.typography.fontWeightBold,\n  },\n}));\n\nconst TopTypography = ({...props}) => {\n  const classes = useStyles();\n\n  return <Typography className={classes.title} component=\"h3\" {...props} />;\n};\n\nexport default memo(TopTypography);\n","import React, {memo} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Box, Divider} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport RequestSummarySection from \"../../components/requestWrapper/RequestSummarySection\";\nimport RequestSummaryItem from \"../../components/requestWrapper/RequestSummaryItem\";\nimport SummaryTopTypography from \"../../components/typographies/TopTypography\";\nimport dateFormat from \"dateformat\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport CustomChip from \"../../components/chips/CustomChip\";\nimport SelectedOffboardEmployee from \"./OffboardWhoContainers/SelectedOffboardEmployee\";\nimport {\n  getInOffboardingRequest,\n  getOffboardingRequestObject,\n} from \"./OffboardRequestPageContent\";\n\nconst OffboardRequestSummary = ({review}) => {\n  const dataTransfer = useSelector(getOffboardingRequestObject(\"dataTransfer\"));\n  const deviceUnassign = useSelector(\n    getOffboardingRequestObject(\"deviceUnassign\")\n  );\n  const unassignLicenses = useSelector(\n    getInOffboardingRequest([\"licenseRemoval\", \"unassignLicenses\"])\n  );\n  const selectedOffboardUser = useSelector(\n    getInOffboardingRequest([\"offboardDetails\", \"selectedOffboardUser\"])\n  );\n  const taskScheduling = useSelector(\n    getOffboardingRequestObject(\"taskScheduling\")\n  );\n  const hrInformation = useSelector(\n    getOffboardingRequestObject(\"hrInformation\")\n  );\n\n  const {\n    selectedTransferUser,\n    isDriveChecked,\n    isCalendarChecked,\n    isDataStudioChecked,\n  } = dataTransfer || {};\n  const {jamfDevicesData, googleDevicesData} = deviceUnassign || {};\n  const {\n    scheduleType,\n    scheduleDate,\n    scheduleTimeZone,\n    isNotifyTerminationsChecked,\n  } = taskScheduling || {};\n  const {\n    hrTerminationCode,\n    hrTerminationType,\n    hrSelectedDate,\n    hrTimeZone,\n    hrNotes,\n  } = hrInformation || {};\n\n  return (\n    <Box height={\"37vh\"}>\n      <PaperCardWrapper>\n        <Box>\n          <SummaryTopTypography>\n            {review ? \"Review & Confirm Request\" : \"Request Completed\"}\n          </SummaryTopTypography>\n        </Box>\n\n        <RequestSummarySection title=\"Employee Details\">\n          <RequestSummaryItem\n            name=\"Offboard\"\n            value={\n              <SelectedOffboardEmployee\n                userProfile={selectedOffboardUser?.profile}\n              />\n            }\n          />\n          <RequestSummaryItem name=\"Schedule type\" value={scheduleType} />\n          {scheduleType === TaskScheduleTypes.SCHEDULED && (\n            <RequestSummaryItem\n              name=\"Scheduled date &amp; time\"\n              value={\n                <>\n                  {dateFormat(scheduleDate, \"mmmm d, yyyy h:MM TT\")}{\" \"}\n                  <p>{scheduleTimeZone}</p>\n                </>\n              }\n            />\n          )}\n          <RequestSummaryItem\n            name=\"Notification\"\n            value={\n              <p>\n                {isNotifyTerminationsChecked\n                  ? \"send to terminations@liveperson.com\"\n                  : \"do not send to terminations@liveperson.com\"}\n              </p>\n            }\n          />\n        </RequestSummarySection>\n        <Divider />\n        <RequestSummarySection title=\"Data Transfer\">\n          <RequestSummaryItem\n            name=\"Transfer data from\"\n            value={\n              <>\n                {isDriveChecked && <CustomChip label={\"Google Drive\"} />}\n                {isCalendarChecked && <CustomChip label={\"Google Calendar\"} />}\n                {isDataStudioChecked && (\n                  <CustomChip label={\"Google Data Studio\"} />\n                )}\n              </>\n            }\n          />\n          {selectedTransferUser && (\n            <RequestSummaryItem\n              name=\"Transfer data to\"\n              value={\n                <>\n                  {selectedTransferUser?.profile?.email ===\n                  \"livepersondrive@liveperson.com\" ? (\n                    \"livepersondrive@liveperson.com\"\n                  ) : (\n                    <>\n                      {selectedTransferUser?.profile?.firstName}{\" \"}\n                      {selectedTransferUser?.profile?.lastName} |{\" \"}\n                      {selectedTransferUser?.profile?.location} |{\" \"}\n                      {selectedTransferUser?.profile?.jobTitle}\n                    </>\n                  )}\n                </>\n              }\n            />\n          )}\n        </RequestSummarySection>\n        <Divider />\n        <RequestSummarySection title=\"Licenses/Devices\">\n          <RequestSummaryItem\n            name=\"Remove these licenses\"\n            value={\n              <>\n                {unassignLicenses.some((license) => license.isChecked) ? (\n                  unassignLicenses.map(\n                    (license) =>\n                      license.isChecked && <CustomChip label={license.name} />\n                  )\n                ) : (\n                  <p>No licenses selected</p>\n                )}\n              </>\n            }\n          />\n          <RequestSummaryItem\n            name=\"Unassign these devices\"\n            value={\n              <>\n                {jamfDevicesData?.length > 0 ||\n                googleDevicesData?.length > 0 ? (\n                  <>\n                    {jamfDevicesData?.map(\n                      (device) =>\n                        device?.isChecked && (\n                          <CustomChip\n                            label={`${device.deviceName} : ${device.serialNumber}`}\n                          />\n                        )\n                    )}\n                    {googleDevicesData?.map(\n                      (device) =>\n                        device?.isChecked && (\n                          <CustomChip\n                            label={`Chrome OS Device : ${device.serialNumber}`}\n                          />\n                        )\n                    )}\n                  </>\n                ) : (\n                  <Box>\n                    <p>No devices selected</p>\n                  </Box>\n                )}\n              </>\n            }\n          />\n        </RequestSummarySection>\n\n        {hrTerminationCode && (\n          <>\n            <Divider />\n            <RequestSummarySection title=\"HR/Payroll Information\">\n              <RequestSummaryItem\n                name=\"Termination Code\"\n                value={hrTerminationCode}\n              />\n              <RequestSummaryItem\n                name=\"Termination Type\"\n                value={hrTerminationType}\n              />\n              <RequestSummaryItem\n                name=\"Payroll Date &amp; Time\"\n                value={\n                  <>\n                    {dateFormat(hrSelectedDate, \"mmmm d, yyyy h:MM TT\")}{\" \"}\n                    {hrTimeZone}\n                  </>\n                }\n              />\n              <RequestSummaryItem name=\"Notes\" value={hrNotes} />\n            </RequestSummarySection>\n          </>\n        )}\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default memo(OffboardRequestSummary);\n","import React, { memo } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StepperResetRequestButton = ({ handleReset, clearData }) => {\n  const useReset = () => {\n    clearData();\n    handleReset();\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={useReset}>\n      Create Another Request\n    </Button>\n  );\n};\n\nexport default memo(StepperResetRequestButton);\n","import React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setActiveStep,\n  setDefaultState,\n} from \"../../data/redux/offboardRequest/offboardRequestActions\";\nimport OffboardRequestWrapperPage from \"./OffboardRequestWrapperPage\";\nimport OffboardWho from \"./OffboardWhoContainers\";\nimport StepperButtons from \"./StepperButtons\";\nimport OffboardWhen from \"./OffboardWhenContainers\";\nimport DataLicensesDevices from \"./DataLicensesDevicesContainers\";\nimport HrInformation from \"./HrInfoContainers\";\nimport OffboardRequestSummary from \"./OffboardRequestSummary\";\nimport StepperResetRequestButton from \"../../components/buttons/StepperResetRequestButton\";\n\nexport const getActiveStep = (state) => state?.offboardRequest.get(\"activeStep\")\nexport const getOffboardingRequestObject = field => state => state?.offboardRequest.get(field).toJS();\nexport const getInOffboardingRequest = fieldPath => state => state?.offboardRequest.getIn(fieldPath);\n\nconst OffboardRequestPageContent = () => {\n  const dispatch = useDispatch();\n  const activeStep = useSelector(getActiveStep);\n\n  useEffect(() => {\n    return () => dispatch(setDefaultState());\n  }, [dispatch]);\n\n  return (\n    <OffboardRequestWrapperPage\n      activeStep={activeStep}\n      setActiveStep={step => dispatch(setActiveStep(step))}\n      offboardWhoComponent={<OffboardWho />}\n      offboardWhenComponent={<OffboardWhen />}\n      dataLicensesDevicesComponent={<DataLicensesDevices />}\n      hrInfoComponent={<HrInformation />}\n      reviewComponent={<OffboardRequestSummary review />}\n      summaryComponent={<OffboardRequestSummary />}\n      stepperButtons={<StepperButtons />}\n      stepperResetBtn={\n        <StepperResetRequestButton clearData={() => dispatch(setDefaultState())} />\n      }\n    />\n  );\n};\n\nexport default memo(OffboardRequestPageContent);\n","import React, {memo, useContext} from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport InfoBlock from \"../../components/InfoBlock\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\nimport OffboardRequestPageContent from \"./OffboardRequestPageContent\";\n\nconst OffboardRequestPage = () => {\n  const {permOffboardingAll, permOffboardingTeam} = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Offboard Request | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"OFFBOARD REQUEST\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Offboard Request\" />\n\n        {permOffboardingAll || permOffboardingTeam ? (\n          <>\n            <InfoBlock type={\"info\"}>\n              <Typography component={\"div\"} variant=\"p\">\n                You are creating an offboarding request for an existing active\n                employee. Please ensure that all of the information is completed\n                accurately. All offboarding requests are subject to approval.\n              </Typography>\n            </InfoBlock>\n\n            <OffboardRequestPageContent />\n          </>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(OffboardRequestPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_AUTH_REQUISITION_TOTALS = gql`\n  query GetAllAuthRequisitionTotals {\n    get_all_auth_requisition_totals {\n      pendingApproval\n      rejected\n      approvedUnfilled\n    }\n  }\n`;\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  totalContainer: { width: \"100%\", display: \"flex\", flexDirection: \"row\" },\n}));\n\nconst TotalContainer = ({ children }) => {\n  const classes = useStyles();\n  return <Box className={classes.totalContainer}> {children} </Box>;\n};\n\nexport default TotalContainer;\n","import React, { memo } from \"react\";\nimport { Box, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  totalBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n\n  totalNum: {\n    fontSize: \"1.7rem\",\n  },\n  totalNumTitle: {\n    fontSize: \".8rem\",\n  },\n}));\n\nconst TotalBox = ({ totalNum, totalNumTitle }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.totalBox}>\n      <div>\n        <Typography component={\"div\"} className={classes.totalNum}>\n          {totalNum}\n        </Typography>\n      </div>\n\n      <div>\n        <Typography component={\"div\"} className={classes.totalNumTitle}>\n          {totalNumTitle}\n        </Typography>\n      </div>\n    </Box>\n  );\n};\n\nexport default memo(TotalBox);\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  divider: {\n    borderRight: \"2px solid #87889c\",\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst TotalBoxDivider = () => {\n  const classes = useStyles();\n\n  return <Box className={classes.divider} />;\n};\n\nexport default TotalBoxDivider;\n","import React, {memo, useEffect, useState} from \"react\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport TotalContainer from \"../../../components/totalContainer/TotalContainer\";\nimport TotalBox from \"../../../components/totalContainer/TotalBox\";\nimport TotalBoxDivider from \"../../../components/totalContainer/TotalBoxDivider\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst TotalsBox = ({title, statuses, isSubmitted, executeFunc}) => {\n  const history = useHistory();\n  const [totals, setTotals] = useState();\n\n  const {refetch} = executeFunc({fetchPolicy: \"no-cache\", onError: (error) => handleError(error)(history)}, setTotals);\n\n  useEffect(() => {\n    if (isSubmitted) {\n      refetch();\n    }\n  }, [isSubmitted]);\n\n  return (\n    <PaperCardWrapper>\n      <Box mb={1}>\n        <Typography> {title} </Typography>\n      </Box>\n      <TotalContainer>\n        {statuses?.map(({id, name}, index) => (\n          <React.Fragment key={id}>\n            <TotalBox\n              totalNum={totals?.[id]}\n              totalNumTitle={name}\n            />\n            {(index < statuses?.length - 1) && <TotalBoxDivider />}\n          </React.Fragment>\n        ))}\n      </TotalContainer>\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(TotalsBox);","import React, {memo} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ALL_AUTH_REQUISITION_TOTALS} from \"../../../operations/queries/getAllAuthRequisitionTotals\";\nimport TotalsBox from \"./TotalsBox\";\nimport {connect} from \"react-redux\";\n\nconst useGetAllAuthRequisitionTotals = (config, handleComplete) => useQuery(GET_ALL_AUTH_REQUISITION_TOTALS, {\n  ...config,\n  onCompleted: (data) => {\n    handleComplete(data?.get_all_auth_requisition_totals);\n  }\n});\n\nconst statuses = [\n  {id: \"pendingApproval\", name: \"Pending Approval\"},\n  {id: \"rejected\", name: \"Rejected\"},\n  {id: \"approvedUnfilled\", name: \"Approved Unfilled\"}\n];\n\nconst RequisitionTotals = ({isReqSubmitted}) => {\n\n  return (\n    <TotalsBox\n      title=\"Requisition Requests\"\n      statuses={statuses}\n      isSubmitted={isReqSubmitted}\n      executeFunc={useGetAllAuthRequisitionTotals}\n    />\n  );\n};\n\nexport default connect(state => ({\n  isReqSubmitted: state.onboardingDashboard.get(\"isReqSubmitted\")\n}), {})\n(memo(RequisitionTotals));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_AUTH_ONBOARDING_TOTALS = gql`\n  query GetAllAuthOnboardingTotals {\n    get_all_auth_onboarding_totals {\n      pendingApproval\n      rejected\n      scheduled\n      completed\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport TotalsBox from \"./TotalsBox\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ALL_AUTH_ONBOARDING_TOTALS} from \"../../../operations/queries/getAllAuthOnboardingTotals\";\nimport {connect} from \"react-redux\";\n\nconst statuses = [\n  {id: \"pendingApproval\", name: \"Pending Approval\"},\n  {id: \"scheduled\", name: \"Scheduled\"},\n  {id: \"rejected\", name: \"Rejected\"},\n  {id: \"completed\", name: \"Completed\"}\n];\n\nconst useGetAllAuthOnboardingTotals = (config, handleComplete) => useQuery(GET_ALL_AUTH_ONBOARDING_TOTALS, {\n  ...config,\n  onCompleted: (data) => {\n    handleComplete(data?.get_all_auth_onboarding_totals);\n  }\n});\n\nconst CandidateTotals = ({isCandidateSubmitted}) => {\n\n  return (\n    <TotalsBox\n      title=\"Candidate Requests\"\n      statuses={statuses}\n      isSubmitted={isCandidateSubmitted}\n      executeFunc={useGetAllAuthOnboardingTotals}\n    />\n  );\n};\n\nexport default connect(state => ({\n  isCandidateSubmitted: state.onboardingDashboard.get(\"isCandidateSubmitted\")\n}), {})\n(memo(CandidateTotals));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_AUTH_REQUISITION_TASKS = gql`\n  query GetAuthRequisitionTasks($filters: FiltersInput) {\n    get_auth_requisition_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqJobCode\n        reqJobTitle\n        reqFulfilled\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\nimport {DebounceInput} from \"react-debounce-input\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchTextField: {\n    width: \"40ch\",\n    marginBottom: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    \"& .MuiFilledInput-root\": {\n      background: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst SearchInput = ({searchQuery, onSearch, label, helperText}) => {\n  const classes = useStyles();\n  return (\n    <DebounceInput\n      className={classes.searchTextField}\n      id=\"outlined-basic\"\n      label={label}\n      variant=\"outlined\"\n      color=\"secondary\"\n      margin=\"dense\"\n      minLength={0}\n      debounceTimeout={300}\n      autoComplete=\"off\"\n      value={searchQuery}\n      helperText={helperText}\n      onChange={(event) => onSearch && onSearch(event.target.value)}\n      element={TextField}\n    />\n  );\n};\n\nexport default SearchInput;\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst OnboardingDashboardActionTypes = {\n  SET_SELECTED_TASK_DATA: \"SET_SELECTED_TASK_DATA\",\n  SET_IS_DRAWER_OPEN: \"SET_IS_DRAWER_OPEN\",\n  SET_VIEW_TASK_TYPE_DETAILS: \"SET_VIEW_TASK_TYPE_DETAILS\",\n  SET_IS_REQ_SUBMITTED: \"SET_IS_REQ_SUBMITTED\",\n  SET_IS_CANDIDATE_SUBMITTED: \"SET_IS_CANDIDATE_SUBMITTED\"\n};\n\nexport default typesWithPrefix(\"ONBOARDING_DASHBOARD\")(\n  OnboardingDashboardActionTypes\n);\n","import OnboardingDashboardActonTypes from \"./onboardingDashboardActonTypes\";\n\nexport const setSelectedTaskData = (selectedTaskData) => ({\n  type: OnboardingDashboardActonTypes.SET_SELECTED_TASK_DATA,\n  payload: {selectedTaskData},\n});\n\nexport const setIsDrawerOpen = (isDrawerOpen) => ({\n  type: OnboardingDashboardActonTypes.SET_IS_DRAWER_OPEN,\n  payload: {isDrawerOpen},\n});\n\nexport const setViewTaskTypeDetails = (viewTaskTypeDetails) => ({\n  type: OnboardingDashboardActonTypes.SET_VIEW_TASK_TYPE_DETAILS,\n  payload: {viewTaskTypeDetails},\n});\n\nexport const setIsReqSubmitted = (isReqSubmitted) => ({\n  type: OnboardingDashboardActonTypes.SET_IS_REQ_SUBMITTED,\n  payload: {isReqSubmitted},\n});\n\nexport const setIsCandidateSubmitted = (isCandidateSubmitted) => ({\n  type: OnboardingDashboardActonTypes.SET_IS_CANDIDATE_SUBMITTED,\n  payload: {isCandidateSubmitted},\n});","import React, {memo} from \"react\";\nimport {Box, Button, Toolbar} from \"@material-ui/core\";\nimport {Link} from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RefreshButton from \"../../components/buttons/RefreshButton\";\nimport BoxCardWrapper from \"../../components/blocks/BoxCardWrapper\";\n\nconst RequestSearchBar = ({children, to, btnText, handleRefresh}) => {\n  return (\n    <BoxCardWrapper>\n      <Toolbar>\n        {children}\n\n        <Box flexGrow={1} />\n        <Button\n          variant=\"contained\"\n          component={Link}\n          to={to}\n        >\n          <AddIcon/> {btnText}\n        </Button>\n        <Box ml={2}>\n          <RefreshButton handleClick={handleRefresh} />\n        </Box>\n      </Toolbar>\n    </BoxCardWrapper>\n  );\n};\n\nexport default memo(RequestSearchBar);\n","import React, { Component } from 'react';\nimport { throttle } from 'throttle-debounce';\n\nexport const ThresholdUnits = {\n  Pixel: 'Pixel',\n  Percent: 'Percent',\n};\n\nconst defaultThreshold = {\n  unit: ThresholdUnits.Percent,\n  value: 0.8,\n};\n\nexport function parseThreshold(scrollThreshold) {\n  if (typeof scrollThreshold === 'number') {\n    return {\n      unit: ThresholdUnits.Percent,\n      value: scrollThreshold * 100,\n    };\n  }\n\n  if (typeof scrollThreshold === 'string') {\n    if (scrollThreshold.match(/^(\\d*(\\.\\d+)?)px$/)) {\n      return {\n        unit: ThresholdUnits.Pixel,\n        value: parseFloat(scrollThreshold),\n      };\n    }\n\n    if (scrollThreshold.match(/^(\\d*(\\.\\d+)?)%$/)) {\n      return {\n        unit: ThresholdUnits.Percent,\n        value: parseFloat(scrollThreshold),\n      };\n    }\n\n    console.warn(\n      'scrollThreshold format is invalid. Valid formats: \"120px\", \"50%\"...'\n    );\n    return defaultThreshold;\n  }\n\n  console.warn('scrollThreshold should be string or number');\n  return defaultThreshold;\n}\n\nexport default class InfiniteScroll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showLoader: false,\n      pullToRefreshThresholdBreached: false,\n      prevDataLength: props.dataLength,\n    };\n\n    this.throttledOnScrollListener = throttle(150, this.onScrollListener).bind(\n      this\n    );\n    this.onStart = this.onStart.bind(this);\n    this.onMove = this.onMove.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n  }\n\n  throttledOnScrollListener = null//: (e: MouseEvent) => void;\n  _scrollableNode = null //: HTMLElement | undefined | null;\n  el = null //: HTMLElement | undefined | Window & typeof globalThis;\n  _infScroll = null //: HTMLDivElement | undefined;\n  lastScrollTop = 0;\n  actionTriggered = false;\n  _pullDown = null //: HTMLDivElement | undefined;\n\n  // variables to keep track of pull down behaviour\n  startY = 0;\n  currentY = 0;\n  dragging = false;\n\n  // will be populated in componentDidMount\n  // based on the height of the pull down element\n  maxPullDownDistance = 0;\n\n  componentDidMount() {\n    if (typeof this.props.dataLength === 'undefined') {\n      throw new Error(\n        `mandatory prop \"dataLength\" is missing. The prop is needed` +\n        ` when loading more content. Check README.md for usage`\n      );\n    }\n\n    this._scrollableNode = this.getScrollableTarget();\n    this.el = this.props.height\n      ? this._infScroll\n      : this._scrollableNode || window;\n\n    if (this.el) {\n      this.el.addEventListener('scroll', this\n        .throttledOnScrollListener);\n    }\n\n    if (\n      typeof this.props.initialScrollY === 'number' &&\n      this.el &&\n      this.el instanceof HTMLElement &&\n      this.el.scrollHeight > this.props.initialScrollY\n    ) {\n      this.el.scrollTo(0, this.props.initialScrollY);\n    }\n\n    if (this.props.pullDownToRefresh && this.el) {\n      this.el.addEventListener('touchstart', this.onStart);\n      this.el.addEventListener('touchmove', this.onMove);\n      this.el.addEventListener('touchend', this.onEnd);\n\n      this.el.addEventListener('mousedown', this.onStart);\n      this.el.addEventListener('mousemove', this.onMove);\n      this.el.addEventListener('mouseup', this.onEnd);\n\n      // get BCR of pullDown element to position it above\n      this.maxPullDownDistance =\n        (this._pullDown &&\n          this._pullDown.firstChild &&\n          (this._pullDown.firstChild).getBoundingClientRect()\n        .height) ||\n      0;\n      this.forceUpdate();\n\n      if (typeof this.props.refreshFunction !== 'function') {\n        throw new Error(\n          `Mandatory prop \"refreshFunction\" missing.\n          Pull Down To Refresh functionality will not work\n          as expected. Check README.md for usage'`\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.el) {\n      this.el.removeEventListener('scroll', this\n        .throttledOnScrollListener);\n\n      if (this.props.pullDownToRefresh) {\n        this.el.removeEventListener('touchstart', this.onStart);\n        this.el.removeEventListener('touchmove', this.onMove);\n        this.el.removeEventListener('touchend', this.onEnd);\n\n        this.el.removeEventListener('mousedown', this.onStart);\n        this.el.removeEventListener('mousemove', this.onMove);\n        this.el.removeEventListener('mouseup', this.onEnd);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    // do nothing when dataLength is unchanged\n    if (this.props.dataLength === prevProps.dataLength) return;\n\n    this.actionTriggered = false;\n\n    // update state when new data was sent in\n    this.setState({\n      showLoader: false,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const dataLengthChanged = nextProps.dataLength !== prevState.prevDataLength;\n\n    // reset when data changes\n    if (dataLengthChanged) {\n      return {\n        ...prevState,\n        prevDataLength: nextProps.dataLength,\n      };\n    }\n    return null;\n  }\n\n  getScrollableTarget = () => {\n    if (this.props.scrollableTarget instanceof HTMLElement)\n      return this.props.scrollableTarget;\n    if (typeof this.props.scrollableTarget === 'string') {\n      return document.getElementById(this.props.scrollableTarget);\n    }\n    if (this.props.scrollableTarget === null) {\n      console.warn(`You are trying to pass scrollableTarget but it is null. This might\n        happen because the element may not have been added to DOM yet.\n        See https://github.com/ankeetmaini/react-infinite-scroll-component/issues/59 for more info.\n      `);\n    }\n    return null;\n  };\n\n  onStart = (evt) => {\n    if (this.lastScrollTop) return;\n\n    this.dragging = true;\n\n    if (evt instanceof MouseEvent) {\n      this.startY = evt.pageY;\n    } else if (evt instanceof TouchEvent) {\n      this.startY = evt.touches[0].pageY;\n    }\n    this.currentY = this.startY;\n\n    if (this._infScroll) {\n      this._infScroll.style.willChange = 'transform';\n      this._infScroll.style.transition = `transform 0.2s cubic-bezier(0,0,0.31,1)`;\n    }\n  };\n\n  onMove = (evt) => {\n    if (!this.dragging) return;\n\n    if (evt instanceof MouseEvent) {\n      this.currentY = evt.pageY;\n    } else if (evt instanceof TouchEvent) {\n      this.currentY = evt.touches[0].pageY;\n    }\n\n    // user is scrolling down to up\n    if (this.currentY < this.startY) return;\n\n    if (\n      this.currentY - this.startY >=\n      Number(this.props.pullDownToRefreshThreshold)\n    ) {\n      this.setState({\n        pullToRefreshThresholdBreached: true,\n      });\n    }\n\n    // so you can drag upto 1.5 times of the maxPullDownDistance\n    if (this.currentY - this.startY > this.maxPullDownDistance * 1.5) return;\n\n    if (this._infScroll) {\n      this._infScroll.style.overflow = 'visible';\n      this._infScroll.style.transform = `translate3d(0px, ${this.currentY -\n      this.startY}px, 0px)`;\n    }\n  };\n\n  onEnd = () => {\n    this.startY = 0;\n    this.currentY = 0;\n\n    this.dragging = false;\n\n    if (this.state.pullToRefreshThresholdBreached) {\n      this.props.refreshFunction && this.props.refreshFunction();\n      this.setState({\n        pullToRefreshThresholdBreached: false,\n      });\n    }\n\n    requestAnimationFrame(() => {\n      // this._infScroll\n      if (this._infScroll) {\n        this._infScroll.style.overflow = 'auto';\n        this._infScroll.style.transform = 'none';\n        this._infScroll.style.willChange = 'unset';\n      }\n    });\n  };\n\n  isElementAtTop(target, scrollThreshold = 0.8) {\n    const clientHeight =\n      target === document.body || target === document.documentElement\n        ? window.screen.availHeight\n        : target.clientHeight;\n\n    const threshold = parseThreshold(scrollThreshold);\n\n    if (threshold.unit === ThresholdUnits.Pixel) {\n      return (\n        target.scrollTop <=\n        threshold.value + clientHeight - target.scrollHeight + 1\n      );\n    }\n\n    return (\n      target.scrollTop <=\n      threshold.value / 100 + clientHeight - target.scrollHeight + 1\n    );\n  }\n\n  isElementAtBottom(\n    target,\n    scrollThreshold = 0.8\n  ) {\n    const clientHeight =\n      target === document.body || target === document.documentElement\n        ? window.screen.availHeight\n        : target.clientHeight;\n\n    const threshold = parseThreshold(scrollThreshold);\n\n    if (threshold.unit === ThresholdUnits.Pixel) {\n      return (\n        target.scrollTop + clientHeight >= target.scrollHeight - threshold.value\n      );\n    }\n\n    return (\n      target.scrollTop + clientHeight >=\n      (threshold.value / 100) * target.scrollHeight\n    );\n  }\n\n  onScrollListener = (event) => {\n    if (typeof this.props.onScroll === 'function') {\n      // Execute this callback in next tick so that it does not affect the\n      // functionality of the library.\n      setTimeout(() => this.props.onScroll && this.props.onScroll(event), 0);\n    }\n\n    const target =\n      this.props.height || this._scrollableNode\n        ? (event.target)\n  : document.documentElement.scrollTop\n      ? document.documentElement\n      : document.body;\n\n    // return immediately if the action has already been triggered,\n    // prevents multiple triggers.\n    if (this.actionTriggered) return;\n\n    const atBottom = this.props.inverse\n      ? this.isElementAtTop(target, this.props.scrollThreshold)\n      : this.isElementAtBottom(target, this.props.scrollThreshold);\n\n    // call the `next` function in the props to trigger the next data fetch\n    if (atBottom && this.props.hasMore) {\n      this.actionTriggered = true;\n      this.setState({ showLoader: true });\n      this.props.next && this.props.next();\n    }\n\n    this.lastScrollTop = target.scrollTop;\n  };\n\n  render() {\n    const style = {\n      height: this.props.height || 'auto',\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      ...this.props.style,\n    };\n    const hasChildren =\n      this.props.hasChildren ||\n      !!(\n        this.props.children &&\n        this.props.children instanceof Array &&\n        this.props.children.length\n      );\n\n    // because heighted infiniteScroll visualy breaks\n    // on drag down as overflow becomes visible\n    const outerDivStyle =\n      this.props.pullDownToRefresh && this.props.height\n        ? { overflow: 'auto' }\n        : {};\n    return (\n      <div\n        style={outerDivStyle}\n        className=\"infinite-scroll-component__outerdiv\"\n      >\n        <div\n          className={`infinite-scroll-component ${this.props.className || ''}`}\n          ref={(infScroll) => (this._infScroll = infScroll)}\n          style={style}\n        >\n          {this.props.pullDownToRefresh && (\n            <div\n              style={{ position: 'relative' }}\n              ref={(pullDown) => (this._pullDown = pullDown)}\n            >\n              <div\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  right: 0,\n                  top: -1 * this.maxPullDownDistance,\n                }}\n              >\n                {this.state.pullToRefreshThresholdBreached\n                  ? this.props.releaseToRefreshContent\n                  : this.props.pullDownToRefreshContent}\n              </div>\n            </div>\n          )}\n          {this.props.children}\n          {!this.state.showLoader &&\n          !hasChildren &&\n          this.props.hasMore &&\n          this.props.loader}\n          {this.state.showLoader && this.props.hasMore && this.props.loader}\n          {!this.props.hasMore && this.props.endMessage}\n        </div>\n      </div>\n    );\n  }\n}","import React, {memo} from \"react\";\nimport {CircularProgress, makeStyles} from \"@material-ui/core\";\nimport InfiniteScroll from \"./InfinityScroll\";\n\nconst useStyles = makeStyles(() => ({\n  scrollLoader: {\n    overflow: \"unset\"\n  },\n  infinityScrollLoader: {\n    width: \"100px\",\n    height: \"100px\",\n    margin: \"auto\",\n    padding: \"50px\",\n  }\n}))\n\nconst CustomInfiniteScroll = ({children, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <InfiniteScroll\n      className={classes.scrollLoader}\n      loader={\n        <div className={classes.infinityScrollLoader}>\n          <CircularProgress color=\"secondary\"/>\n        </div>\n      }\n      {...props}\n    >\n      {children}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(CustomInfiniteScroll);","import React, {memo} from \"react\";\nimport {makeStyles, CircularProgress} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  tableCircularProgress: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: \"0\",\n    left: \"0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: \"999\",\n  },\n}));\n\nconst TableCircularProgress = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.tableCircularProgress}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default memo(TableCircularProgress);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, TableContainer} from \"@material-ui/core\";\nimport NoResultsTypography from \"../typographies/NoResultsTypography\";\nimport CustomInfiniteScroll from \"./CustomInfiniteScroll\";\nimport TableCircularProgress from \"../circularProgress/TableCircularProgress\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    height: \"calc(95vh - 1000px)\",\n    minHeight: ({minHeight}) => (minHeight ? minHeight : \"425px\"),\n  },\n}));\n\nconst BoxTableWrapper = ({\n  id,\n  dataLength,\n  loading,\n  hasMore,\n  next,\n  className,\n  children,\n  minHeight,\n}) => {\n  const classes = useStyles({minHeight});\n\n  return (\n    <Box style={{position: \"relative\", minHeight: \"50px\"}}>\n      {!dataLength && loading ? (\n        <TableCircularProgress />\n      ) : !dataLength ? (\n        <NoResultsTypography />\n      ) : (\n        <TableContainer id={id} className={className || classes.tableContainer}>\n          <CustomInfiniteScroll\n            scrollableTarget={id}\n            dataLength={dataLength}\n            next={next}\n            hasMore={hasMore}\n          >\n            {children}\n          </CustomInfiniteScroll>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(BoxTableWrapper);\n","import React, {memo} from \"react\";\nimport {TableCell} from \"@material-ui/core\";\nimport StyledTableRow from \"./StyledTableRow\";\n\nconst CustomTableRow = ({id, rowData, handleClick, align, tableCellClasses}) => {\n  return (\n    <StyledTableRow\n      hover={!!handleClick}\n      tabIndex={-1}\n      id={id}\n      onClick={handleClick}\n    >\n      {rowData?.map(rowField =>\n        <TableCell\n          className={tableCellClasses}\n          align={align || \"right\"}\n          key={rowField.id}\n        >\n          {rowField.value}\n        </TableCell>,\n      )}\n    </StyledTableRow>\n  );\n};\n\nexport default memo(CustomTableRow);","import {Table, TableBody} from \"@material-ui/core\";\nimport React, {memo, useState} from \"react\";\nimport EnhancedTableHead from \"../../components/table/EnhancedTableHead\";\nimport LoadingCircle from \"../../components/circularProgress/LoadingCircle\";\nimport {getComparator, stableSort} from \"../../data/helper/helpers\";\nimport CustomTableRow from \"../../components/table/CustomTableRow\";\n\nconst DashboardTableContent = ({valRow, headCells, data, isLoading, handleOnSelectedTask, setViewTaskTypeDetails}) => {\n  const [order, setOrder] = useState(\"desc\");\n  const [orderBy, setOrderBy] = useState(\"taskCreatedDateTime\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <Table stickyHeader size=\"small\">\n      <EnhancedTableHead\n        headAlign={\"left\"}\n        headCells={headCells}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n      />\n      {isLoading ? (<LoadingCircle/>) : (\n        <TableBody>\n          {stableSort(data, getComparator(order, orderBy)).map((task) => (\n            <CustomTableRow\n              key={task.id}\n              id={task.id}\n              rowData={valRow(task)}\n              align=\"left\"\n              handleClick={() => {\n                setViewTaskTypeDetails(task.taskType);\n                handleOnSelectedTask(task.id);\n              }}\n            />\n          ))}\n        </TableBody>\n      )}\n    </Table>\n  );\n};\n\nexport default memo(DashboardTableContent);\n","import React, {memo} from \"react\";\nimport {getDateString, getShortDateWithTimeString} from \"../../data/helper/DateTimezoneHelpers\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  requestDateTime: {\n    fontSize: \".8rem\",\n  },\n}));\n\nconst DateRowField = ({dateTime, date}) => {\n  const classes = useStyles();\n  return (\n    <Typography component=\"div\" className={classes.requestDateTime}>\n      {dateTime && getShortDateWithTimeString(dateTime)}\n      {date && getDateString(date)}\n    </Typography>\n  );\n};\n\nexport default memo(DateRowField);","import React, {memo} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  jobTitle: {\n    fontWeight: 600\n  },\n  tinyFontSize: {\n    fontSize: \".7rem\"\n  }\n}));\n\nconst ReqJobTitleCodeField = ({req}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.jobTitle}>\n        {req?.requisitionTask?.reqJobTitle}\n      </div>\n      <div className={classes.tinyFontSize}>\n        Job Code: {req?.requisitionTask?.reqJobCode}\n      </div>\n    </>\n  );\n};\n\nexport default memo(ReqJobTitleCodeField);\n","import React, {memo} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport TaskStatusBlock from \"../taskManager/TaskStatusBlock\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\n\nconst useStyles = makeStyles(() => ({\n  taskStatusDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  smallText: {\n    fontSize: \".8rem\"\n  },\n}));\n\nconst ReqStatusRowField = ({req}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.taskStatusDiv}>\n      <TaskStatusBlock\n        taskStatus={req.taskStatus}\n        id={req.id}\n        small\n      />\n      <Typography\n        component={\"div\"}\n        className={classes.smallText}\n      >\n        {req?.taskStatus ===\n        TaskStatuses.COMPLETE &&\n        !req?.requisitionTask?.reqFulfilled &&\n        \"unfilled\"}\n        {req?.taskStatus ===\n        TaskStatuses.PENDING &&\n        \"Finance Approval\"}\n      </Typography>\n    </div>\n  );\n};\n\nexport default memo(ReqStatusRowField);\n","import React, {memo} from \"react\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport {Button, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n}));\n\nconst ViewTaskButton = ({}) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" size=\"small\">\n      <VisibilityIcon className={classes.icon}/>\n      View Task\n    </Button>\n  )\n}\n\nexport default memo(ViewTaskButton);","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport {GET_AUTH_REQUISITION_TASKS} from \"../../operations/queries/getAuthRequisitionTasks\";\nimport handleError from \"../../data/handleError\";\nimport SearchInput from \"../../components/SearchInput\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport {connect} from \"react-redux\";\nimport {\n  setIsReqSubmitted,\n  setViewTaskTypeDetails,\n} from \"../../data/redux/onboardingDashboard/onboardingDashboardActions\";\nimport RequestSearchBar from \"./RequestSearchBar\";\nimport BoxTableWrapper from \"../../components/table/BoxTableWrapper\";\nimport DashboardTableContent from \"./DashboardTableContent\";\nimport DateRowField from \"../../components/taskRowFields/DateRowField\";\nimport ReqJobTitleCodeField from \"../../components/taskRowFields/ReqJobTitleCodeField\";\nimport ReqStatusRowField from \"../../components/taskRowFields/ReqStatusRowField\";\nimport ViewTaskButton from \"../../components/taskRowFields/ViewTaskButton\";\nimport InfoBlock from \"../../components/InfoBlock\";\n\nconst headCells = [\n  {id: \"id\", label: \"ID\"},\n  {id: \"taskCreatedDateTime\", label: \"Requested Date\"},\n  {id: \"taskCreatorUsername\", label: \"Requested By\"},\n  {id: \"requisitionTask.reqType\", label: \"Requisition Type\"},\n  {id: \"requisitionTask.reqJobTitle\", label: \"Job Title\"},\n  {id: \"requisitionTask.reqStartDate\", label: \"Planned Start Date\"},\n  {id: \"taskStatus\", label: \"Status\"},\n  {id: \"view\", label: \"View Task\", isNotSortable: true},\n];\n\nexport const reqValueRow = (task) => [\n  {id: \"id\", value: task?.id},\n  {\n    id: \"taskCreatedDateTime\",\n    value: <DateRowField dateTime={task?.taskCreatedDateTime} />,\n  },\n  {\n    id: \"taskCreatorUsername\",\n    value: `${task?.taskCreatorFirstName || \"\"} ${task?.taskCreatorLastName || \"\"}`\n  },\n  {id: \"requisitionTask.reqType\", value: task.requisitionTask.reqType},\n  {\n    id: \"requisitionTask.reqJobTitle\",\n    value: <ReqJobTitleCodeField req={task} />,\n  },\n  {\n    id: \"requisitionTask.reqStartDate\",\n    value: <DateRowField date={task?.requisitionTask?.reqStartDate} />,\n  },\n  {id: \"taskStatus\", value: <ReqStatusRowField req={task} />},\n  {id: \"view\", value: <ViewTaskButton />},\n];\n\nconst RequisitionRequests = ({\n  setViewTaskTypeDetails,\n  isReqSubmitted,\n  setIsReqSubmitted,\n  handleOnSelectedTask,\n}) => {\n  const history = useHistory();\n\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [reqData, setReqData] = useState([]);\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n\n  const [executeSearch] = useLazyQuery(GET_AUTH_REQUISITION_TASKS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n      setIsSearchInProgress(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    executeQuery();\n\n    if (isReqSubmitted) {\n      executeQuery();\n      setIsReqSubmitted(false);\n    }\n  }, [filters, isReqSubmitted]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...reqData, ...result.get_auth_requisition_tasks];\n        setReqData(data);\n      } else {\n        setReqData(result.get_auth_requisition_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(\n        result.get_auth_requisition_tasks?.length >= filters?.itemsPerPage\n      );\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n    }\n    setCurrentQuery(query);\n    setIsSearchInProgress(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleRefresh = async () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    await setFilters({...filters, query, pageCount});\n  };\n\n  return (\n    <Box>\n      <InfoBlock>\n        These are requisition requests that have been made where you are the\n        hiring manager or requester. Also, if you have delegate permissions to\n        manage someone else's requisitions you will see them here too.\n      </InfoBlock>\n      <RequestSearchBar\n        to={FrontendRoutes.REQUISITION_REQUEST}\n        btnText=\"new requisition request\"\n        handleRefresh={handleRefresh}\n      >\n        <SearchInput\n          onSearch={handleSearchQuery}\n          searchQuery={filters.query}\n          label={\"Search All Requisition Tasks\"}\n          helperText={\"Search by ID, Name, Type, Job Title, or Status\"}\n        />\n      </RequestSearchBar>\n\n      <BoxTableWrapper\n        id={\"requisition-table\"}\n        loading={isSearchInProgress}\n        dataLength={reqData?.length}\n        hasMore={tasksCountStatus}\n        next={() => handlePageChange && handlePageChange(filters.pageCount + 1)}\n      >\n        <DashboardTableContent\n          data={reqData}\n          headCells={headCells}\n          valRow={reqValueRow}\n          handleOnSelectedTask={handleOnSelectedTask}\n          setViewTaskTypeDetails={setViewTaskTypeDetails}\n        />\n      </BoxTableWrapper>\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    isReqSubmitted: state.onboardingDashboard.get(\"isReqSubmitted\"),\n  }),\n  {setViewTaskTypeDetails, setIsReqSubmitted}\n)(memo(RequisitionRequests));\n","import React, {memo} from \"react\";\nimport {Button, makeStyles} from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n}));\n\nconst ViewButton = ({text, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" size=\"small\" {...props}>\n      <VisibilityIcon className={classes.icon} />\n      {text ? text : \"View Task\"}\n    </Button>\n  );\n};\n\nexport default memo(ViewButton);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_AUTH_ONBOARDING_TASKS = gql`\n  query GetAuthOnboardingTasks($filters: FiltersInput) {\n    get_auth_onboarding_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      onboardingTask {\n        id\n        onboardFirstName\n        onboardLastName\n        onboardEmployeeType\n        onboardJobTitle\n      }\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport TaskStatusBlock from \"../taskManager/TaskStatusBlock\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\n\nconst useStyles = makeStyles(() => ({\n  taskStatusDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  smallText: {\n    fontSize: \".8rem\"\n  },\n}));\n\nconst CandidateStatusRowField = ({candidate}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.taskStatusDiv}>\n      <TaskStatusBlock\n        taskStatus={candidate?.taskStatus}\n        id={candidate?.id}\n        small\n      />\n      <Typography\n        component={\"div\"}\n        className={classes.smallText}\n      >\n        {candidate?.taskStatus ===\n        TaskStatuses.PENDING && \"HR/IT approval\"}\n      </Typography>\n    </div>\n  );\n};\n\nexport default memo(CandidateStatusRowField);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport handleError from \"../../data/handleError\";\nimport ViewTaskButton from \"../../components/buttons/ViewButton\";\nimport SearchInput from \"../../components/SearchInput\";\nimport {GET_AUTH_ONBOARDING_TASKS} from \"../../operations/queries/getAuthOnboardingTasks\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport {connect} from \"react-redux\";\nimport {\n  setIsCandidateSubmitted,\n  setViewTaskTypeDetails,\n} from \"../../data/redux/onboardingDashboard/onboardingDashboardActions\";\nimport RequestSearchBar from \"./RequestSearchBar\";\nimport BoxTableWrapper from \"../../components/table/BoxTableWrapper\";\nimport DashboardTableContent from \"./DashboardTableContent\";\nimport DateRowField from \"../../components/taskRowFields/DateRowField\";\nimport CandidateStatusRowField from \"../../components/taskRowFields/CandidateStatusRowField\";\nimport {getOnboardingFullName} from \"../../data/helper/helpers\";\nimport InfoBlock from \"../../components/InfoBlock\";\n\nconst headCells = [\n  {id: \"id\", label: \"ID\"},\n  {id: \"taskCreatedDateTime\", label: \"Requested Date\"},\n  {id: \"taskCreatorUsername\", label: \"Requested By\"},\n  {id: \"onboardingTask.onboardFirstName\", label: \"Candidate Name\"},\n  {id: \"onboardingTask.onboardEmployeeType\", label: \"Emp Type\"},\n  {id: \"onboardingTask.onboardJobTitle\", label: \"Job Title\"},\n  {id: \"taskScheduleDateTime\", label: \"Start Date\"},\n  {id: \"taskStatus\", label: \"Status\"},\n  {id: \"view\", label: \"View Task\", isNotSortable: true},\n];\n\nexport const candidateValueRow = (task) => [\n  {id: \"id\", value: task?.id},\n  {\n    id: \"taskCreatedDateTime\",\n    value: <DateRowField dateTime={task?.taskCreatedDateTime} />,\n  },\n  {\n    id: \"taskCreatorUsername\",\n    value: `${task?.taskCreatorFirstName || \"\"} ${task?.taskCreatorLastName || \"\"}`\n  },\n  {id: \"onboardingTask.onboardFirstName\", value: getOnboardingFullName(task)},\n  {\n    id: \"onboardingTask.onboardEmployeeType\",\n    value: task?.onboardingTask?.onboardEmployeeType,\n  },\n  {\n    id: \"onboardingTask.onboardJobTitle\",\n    value: task?.onboardingTask?.onboardJobTitle,\n  },\n  {\n    id: \"taskScheduleDateTime\",\n    value: <DateRowField date={task?.taskScheduleDateTime} />,\n  },\n  {id: \"taskStatus\", value: <CandidateStatusRowField candidate={task} />},\n  {id: \"view\", value: <ViewTaskButton />},\n];\n\nconst CandidateRequests = ({\n  setViewTaskTypeDetails,\n  isCandidateSubmitted,\n  setIsCandidateSubmitted,\n  handleOnSelectedTask,\n}) => {\n  const history = useHistory();\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [candidateData, setCandidateData] = useState([]);\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n\n  const [executeSearch] = useLazyQuery(GET_AUTH_ONBOARDING_TASKS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n      setIsSearchInProgress(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    executeQuery();\n\n    if (isCandidateSubmitted) {\n      executeQuery();\n      setIsCandidateSubmitted(false);\n    }\n  }, [filters, isCandidateSubmitted]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...candidateData, ...result.get_auth_onboarding_tasks];\n        setCandidateData(data);\n      } else {\n        setCandidateData(result.get_auth_onboarding_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(\n        result.get_auth_onboarding_tasks?.length >= filters?.itemsPerPage\n      );\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n    }\n    setCurrentQuery(query);\n    setIsSearchInProgress(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleRefresh = async () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    await setFilters({...filters, query, pageCount});\n  };\n\n  return (\n    <Box>\n      <InfoBlock>\n        These are candidate requests that have been made where you are the\n        hiring manager or requester. Also, if you have delegate permissions to\n        manage someone else's candidates you will see them here too.\n      </InfoBlock>\n      <RequestSearchBar\n        to={FrontendRoutes.CANDIDATE_REQUEST}\n        btnText=\"new candidate request\"\n        handleRefresh={handleRefresh}\n      >\n        <SearchInput\n          onSearch={handleSearchQuery}\n          searchQuery={filters.query}\n          label={\"Search All Candidate Tasks\"}\n          helperText={\"Search by ID, Name, Type, Job Title, or Status\"}\n        />\n      </RequestSearchBar>\n\n      <BoxTableWrapper\n        id={\"candidate-table\"}\n        loading={isSearchInProgress}\n        dataLength={candidateData?.length}\n        hasMore={tasksCountStatus}\n        next={() => handlePageChange && handlePageChange(filters.pageCount + 1)}\n      >\n        <DashboardTableContent\n          data={candidateData}\n          headCells={headCells}\n          valRow={candidateValueRow}\n          handleOnSelectedTask={handleOnSelectedTask}\n          setViewTaskTypeDetails={setViewTaskTypeDetails}\n        />\n      </BoxTableWrapper>\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    isCandidateSubmitted: state.onboardingDashboard.get(\"isCandidateSubmitted\"),\n  }),\n  {setViewTaskTypeDetails, setIsCandidateSubmitted}\n)(memo(CandidateRequests));\n","import {gql} from \"@apollo/client\";\n\nexport const GET_TASK = gql`\n  query GetTask($search: String!) {\n    get_task(search: $search) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      offboardingTask {\n        id\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n        offboardEmployeeType\n        transferUsername\n        transferFirstName\n        transferLastName\n        transferGdrive\n        transferGcalendar\n        transferGdataStudio\n        transferAlias\n        offboardingTransferAlias {\n          id\n          aliasName\n        }\n        unassignLicense\n        offboardingUnassignLicenses {\n          id\n          licenseName\n        }\n        unassignDevice\n        offboardingUnassignDevices {\n          id\n          deviceManager\n          deviceName\n          deviceId\n          deviceSerialNumber\n          deviceModel\n        }\n        hrTerminationCode\n        hrTerminationType\n        payrollEndDateTime\n        payrollEndTimezone\n        payrollEpochTime\n        payrollNote\n      }\n      onboardingTask {\n        id\n        onboardUsername\n        onboardEmail\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardPoNumber\n        onboardJobCode\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        reqId\n        firstApprovalBypass\n        isGoogleAccountNeeded\n        onboardingOktaGroups {\n          oktaGroupId\n          oktaGroupName\n        }\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqHiringManagerFirstName\n        reqHiringManagerLastName\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n        reqFulfilled\n        reqFulfilledID\n      }\n      badgeRequestTask {\n        badgeRequestName\n        badgeRequestType\n        badgeRequestIconName\n        badgeRequestIconImg\n      }\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport HtmlTooltip from \"../../components/tooltips/HtmlTooltips\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  number: {\n    borderRadius: \"50%\",\n    width: \"34px\",\n    height: \"34px\",\n    border: \"2px solid\" + theme.palette.text.primary,\n    textAlign: \"center\",\n    marginRight: \"1rem\",\n    lineHeight: \"28px\",\n    fontWeight: 600,\n  },\n  text: {\n    fontSize: \"1.15rem\",\n  },\n  spanText: {\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n      cursor: \"help\",\n    },\n  },\n}));\n\nconst RequestInfoBoxItem = ({number, label, question, description}) => {\n  const classes = useStyles();\n\n  return (\n    <Box my={1} className={classes.info}>\n      <div className={classes.number}>{number}</div>\n\n      <Typography className={classes.text}>\n        {label}\n        {\" - \"}\n\n        <HtmlTooltip\n          placement=\"right\"\n          title={<Typography color=\"inherit\">{description}</Typography>}\n        >\n          <span className={classes.spanText}>\n            <u>{question}</u>\n          </span>\n        </HtmlTooltip>\n      </Typography>\n    </Box>\n  );\n};\n\nexport default memo(RequestInfoBoxItem);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, Paper} from \"@material-ui/core\";\nimport RequestInfoBoxItem from \"./RequestInfoBoxItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  infoPaper: {\n    backgroundColor: theme.palette.info.dark,\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"1em 0.75em\",\n    borderRadius: \"5px\",\n    justifyContent: \"center\",\n    minWidth: \"460px\",\n    height: \"auto\",\n    minHeight: \"135px\",\n  },\n}));\n\nconst RequestInfoBox = () => {\n  const classes = useStyles();\n  return (\n    <Box pb={1} sx={{display: \"flex\"}}>\n      <Paper elevation={3} className={classes.infoPaper}>\n        <RequestInfoBoxItem\n          number=\"1\"\n          label=\"Request a requisition\"\n          question=\"Do I need to do this?\"\n          description={\n            \"Before you can onboard a candidate, a requisition must be created and approved. \" +\n            \"A requisition is requesting the finance for a new candidate (employee/partner/contractor).\"\n          }\n        />\n\n        <RequestInfoBoxItem\n          number=\"2\"\n          label=\"Request a candidate\"\n          question=\"When can I do this?\"\n          description={\n            \"You can only do this once a requisition has been created and approved. \" +\n            \"By requesting a candidate, the login details for the candidate will be sent to the candidate email address.\"\n          }\n        />\n      </Paper>\n    </Box>\n  );\n};\n\nexport default memo(RequestInfoBox);\n","import React, {memo} from \"react\";\nimport {Chip, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  chip: {\n    margin: \".25rem\",\n  },\n}));\n\nconst DelegateChip = ({delegate, className, ...props}) => {\n  const classes = useStyles();\n\n  const delegateLabel = delegate?.delegateTo\n    ? delegate?.delegateTo\n    : delegate?.delegateCompany;\n\n  return (\n    <span>\n      <Chip\n        id={delegate?.id || delegateLabel}\n        size=\"small\"\n        variant=\"outlined\"\n        label={delegateLabel}\n        className={`${classes.chip} ${className || \"\"}`}\n        {...props}\n      />\n    </span>\n  );\n};\n\nexport default memo(DelegateChip);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport InfoIcon from \"@material-ui/icons/Help\";\nimport DelegateChip from \"../../components/chips/DelegateChip\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: \"flex\",\n  },\n  chip: {\n    fontSize: \".75rem\",\n  },\n}));\n\nconst DelegatesInfoBox = ({delegateData}) => {\n  const classes = useStyles();\n  return (\n    <PaperCardWrapper>\n      <Box className={classes.box}>\n        <Box mr={2}>\n          <InfoIcon />\n        </Box>\n        <Box>\n          <Typography component={\"div\"} variant=\"p\">\n            You are also managing onboarding tasks for the following:\n            {delegateData?.map((delegate) => (\n              <DelegateChip\n                delegate={delegate}\n                key={delegate?.id}\n                className={classes.chip}\n              />\n            ))}\n          </Typography>\n        </Box>\n      </Box>\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(DelegatesInfoBox);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_AUTH_ONBOARDING_DELEGATES = gql`\n  query GetAuthOnboardingDelegates {\n    get_auth_onboarding_delegates {\n      id\n      userName\n      onboardingDelegates {\n        id\n        delegateCompany\n        delegateTo\n      }\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {\n  TimelineItem,\n  TimelineConnector,\n  TimelineContent,\n  TimelineDot,\n  TimelineSeparator,\n  TimelineOppositeContent,\n} from \"@material-ui/lab\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  \"@global\": {\n    \".MuiTimelineItem-alignAlternate:nth-child(even)\": {\n      flexDirection: \"row\",\n    },\n    \".MuiTimelineItem-alignAlternate:nth-child(even) .MuiTimelineItem-content\":\n      {\n        textAlign: \"left\",\n      },\n    \".MuiTimelineItem-alignAlternate:nth-child(even) .MuiTimelineItem-oppositeContent\":\n      {\n        textAlign: \"right\",\n      },\n  },\n  timelineRoot: {\n    minHeight: 80,\n  },\n  timelineDate: {\n    fontSize: \"0.75rem\",\n  },\n  timelineTime: {\n    fontSize: \"0.75rem\",\n    fontWeight: \"bold\",\n  },\n  timelineTitle: {\n    fontSize: \"0.875rem\",\n  },\n  timelineName: {\n    fontSize: \"1rem\",\n  },\n  timelineOppositeContent: {\n    maxWidth: 200,\n    paddingTop: 8,\n  },\n  alignCenter: {\n    maxWidth: \"auto\",\n    paddingTop: 8,\n  },\n  timelineContent: {\n    maxWidth: 450,\n    paddingTop: (props) => (props.name ? 4 : 16),\n  },\n}));\n\nconst CustomTimelineItem = ({item, isLast, alignCenter}) => {\n  const {date, icon, name, title, dotClasses, time} = item || {};\n  const classes = useStyles({name});\n\n  return (\n    <TimelineItem className={classes.timelineRoot}>\n      <TimelineOppositeContent\n        className={\n          alignCenter ? classes.alignCenter : classes.timelineOppositeContent\n        }\n      >\n        {date && (\n          <Typography color=\"textSecondary\" className={classes.timelineDate}>\n            {date}\n          </Typography>\n        )}\n        {time && (\n          <Typography color=\"textSecondary\" className={classes.timelineTime}>\n            {time}\n          </Typography>\n        )}\n      </TimelineOppositeContent>\n\n      <TimelineSeparator>\n        <TimelineDot color=\"secondary\" className={dotClasses}>\n          {icon}\n        </TimelineDot>\n        {!isLast && <TimelineConnector />}\n      </TimelineSeparator>\n\n      <TimelineContent className={classes.timelineContent}>\n        {title && (\n          <Typography color=\"textSecondary\" className={classes.timelineTitle}>\n            {title}\n          </Typography>\n        )}\n        {name && (\n          <Typography variant=\"h6\" className={classes.timelineName}>\n            {name}\n          </Typography>\n        )}\n      </TimelineContent>\n    </TimelineItem>\n  );\n};\n\nexport default memo(CustomTimelineItem);\n","import {Box, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport React, {memo} from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontSize: \"1.15rem\",\n    fontWeight: 600,\n  },\n  headingToolbar: {\n    backgroundColor: theme.palette.secondary.light,\n    borderBottom: \"1px solid \" + theme.palette.secondary.main,\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst TaskHeadingToolbar = ({title, children}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar className={classes.headingToolbar}>\n      <div>\n        <Typography component={\"div\"} className={classes.heading}>\n          {title}\n        </Typography>\n      </div>\n      <Box flexGrow={1} />\n\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default memo(TaskHeadingToolbar);\n","import { memo } from \"react\";\nimport { Container, Table, TableBody, TableContainer } from \"@material-ui/core\";\n\nconst TaskContainerTable = ({ tableProps, containerProps, ...props }) => {\n  return (\n    <Container {...containerProps}>\n      <TableContainer>\n        <Table size=\"small\" aria-label=\"task table\" {...tableProps}>\n          <TableBody {...props}/>\n        </Table>\n      </TableContainer>\n    </Container>\n  )\n};\n\nexport default memo(TaskContainerTable);","import React, { memo } from \"react\";\nimport { makeStyles, TableCell } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  tableCellKey: {\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n    width: \"30ch\",\n  },\n}));\n\nconst CustomTableTitleCell = ({ ...props }) => {\n  const classes = useStyles();\n  return (\n    <TableCell\n      component=\"th\"\n      scope=\"row\"\n      className={classes.tableCellKey}\n      {...props}\n    />\n  )\n}\nexport default memo(CustomTableTitleCell);","import React, { memo } from \"react\";\nimport { makeStyles, TableCell } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  tableCell: {\n    fontWeight: 700,\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n  },\n}));\n\nconst CustomTableValueCell = ({ ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <TableCell align=\"left\" className={classes.tableCell} {...props}/>\n  )\n}\nexport default memo(CustomTableValueCell);","import React, {memo} from \"react\";\nimport TaskHeadingToolbar from \"../../../../components/taskManager/TaskHeadingToolbar\";\nimport TaskContainerTable from \"../../../../components/taskManager/TaskContainerTable\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport CustomTableTitleCell from \"../../../../components/table/CustomTableTitleCell\";\nimport CustomTableValueCell from \"../../../../components/table/CustomTableValueCell\";\n\nconst TaskSection = ({title, statusBlock, tableRows, children}) => {\n  return (\n    <>\n      <TaskHeadingToolbar title={title}>{statusBlock}</TaskHeadingToolbar>\n\n      {tableRows && (\n        <>\n          <TaskContainerTable>\n            {tableRows?.map(\n              (tableRow) =>\n                !tableRow.hidden && (\n                  <StyledTableRow key={tableRow.id}>\n                    <CustomTableTitleCell>\n                      {\" \"}\n                      {tableRow.name}{\" \"}\n                    </CustomTableTitleCell>\n                    <CustomTableValueCell>\n                      {\" \"}\n                      {tableRow.value}{\" \"}\n                    </CustomTableValueCell>\n                  </StyledTableRow>\n                )\n            )}\n          </TaskContainerTable>\n          <br />\n        </>\n      )}\n      {children}\n    </>\n  );\n};\n\nexport default memo(TaskSection);\n","import React, {memo} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Link, makeStyles} from \"@material-ui/core\";\nimport FrontendRoutes from \"../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n      cursor: \"pointer\",\n    },\n  },\n  defaultLink: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst UserProfileLink = ({name, username}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const isRob = username === \"rob\";\n  const linkClass = isRob ? classes.defaultLink : classes.link;\n  return (\n    <Link\n      color=\"inherit\"\n      underline={isRob ? \"none\" : \"always\"}\n      onClick={() => !isRob &&\n        history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(username))\n      }\n      className={linkClass}\n    >\n      {name}\n    </Link>\n  );\n};\n\nexport default memo(UserProfileLink);\n","import React, {memo, useMemo} from \"react\";\nimport {Divider, makeStyles} from \"@material-ui/core\";\nimport {Timeline} from \"@material-ui/lab\";\nimport CustomTimelineItem from \"./CustomTimelineItem\";\nimport TaskStatuses from \"../../../../data/constants/TaskStatuses\";\nimport {getDateWithTimeString} from \"../../../../data/helper/DateTimezoneHelpers\";\nimport {getStrWithFirstUpperLetter } from \"../../../../data/helper/helpers\";\nimport DoneIcon from \"@material-ui/icons/DoneOutlined\";\nimport DescriptionIcon from \"@material-ui/icons/DescriptionTwoTone\";\nimport CheckIcon from \"@material-ui/icons/CheckCircleOutlineTwoTone\";\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\nimport EmailIcon from \"@material-ui/icons/EmailTwoTone\";\nimport ApprovalStatuses from \"../../../../data/constants/ApprovalStatuses\";\nimport TaskSection from \"./TaskSection\";\nimport UserProfileLink from \"../../../../components/UserProfileLink\";\n\nconst useStyles = makeStyles(() => ({\n  statusCancelled: {\n    backgroundColor: \"#ca2929\",\n  },\n  statusComplete: {\n    backgroundColor: \"#4bc191\",\n  },\n  statusSigned: {\n    backgroundColor: \"#2ba8d5\",\n  },\n  statusApproved: {\n    backgroundColor: \"#ff6900\",\n  },\n  statusRequested: {\n    backgroundColor: \"#df60a2\",\n  },\n}));\n\nconst TaskTimeline = ({ taskData, isOffboarding }) => {\n  const classes = useStyles();\n\n  const items = useMemo(() =>\n      taskData && getTimeLineItems(taskData, isOffboarding, classes),\n    [taskData, isOffboarding, classes],\n  );\n\n  return (\n    <TaskSection title=\"Task Timeline\">\n      <Timeline align=\"alternate\">\n        {items?.map((item, index) => (\n          <CustomTimelineItem key={index} item={item} isLast={index === items.length - 1} />\n        ))}\n      </Timeline>\n      <Divider />\n    </TaskSection>\n  );\n};\n\nconst getTimeLineItems = (taskData, isOffboarding, classes) => {\n  const {\n    taskEndDate,\n    taskStatus,\n    taskApprovals,\n    taskCreatorUsername,\n    taskCreatorFirstName,\n    taskCreatorLastName,\n    taskCreatedDateTime,\n    taskType,\n  } = taskData || {};\n\n  const creatorName = (taskCreatorFirstName || \"\") + \" \" + (taskCreatorLastName || \"\");\n  if (!taskData) {\n    return null;\n  }\n  return [\n    (taskEndDate && taskStatus === TaskStatuses.COMPLETE) && {\n      id: \"competedOn\",\n      title: `${taskType && (getStrWithFirstUpperLetter(taskType))} complete`,\n      date: getDateWithTimeString(taskEndDate),\n      icon: <DoneIcon fontSize=\"small\" />,\n      dotClasses: classes.statusComplete,\n    },\n    (taskEndDate && taskStatus === TaskStatuses.FAILED) && {\n      id: \"failedOn\",\n      title: `${taskType && (getStrWithFirstUpperLetter(taskType))} failed`,\n      date: getDateWithTimeString(taskEndDate),\n      icon: <CancelOutlinedIcon fontSize=\"small\" />,\n      dotClasses: classes.statusCancelled,\n    },\n    ...taskApprovals?.map((approval) => {\n      const { approvalStatus, approvalUsername, approvalFirstName, approvalLastName, approvalEmail, approvalDateTime }\n        = approval || {};\n\n      const approvalName = (approvalFirstName || \"\") + \" \" + (approvalLastName || \"\");\n      const email = (approvalEmail || (approvalUsername?.includes(\"@\") && approvalUsername));// FIXME remove check when update db\n      const dotOptions = getDotTaskOptions(approvalStatus, classes, email);\n\n      return {\n        id: approval?.id,\n        date: getDateWithTimeString(approvalDateTime),\n        name: (approvalUsername && !approvalUsername.includes(\"@\")) // FIXME remove check when update db\n          ? <UserProfileLink name={approvalName} username={approvalUsername} />\n          : approvalName,\n        title: getTaskApprovalStatusTitle(approvalStatus),\n        ...dotOptions,\n      };\n    }),\n    {\n      id: \"requestedBy\",\n      title: \"Requested by\",\n      name: taskCreatorUsername ? <UserProfileLink name={creatorName} username={taskCreatorUsername} /> : creatorName,\n      date: getDateWithTimeString(taskCreatedDateTime),\n      icon: <InfoIcon fontSize=\"small\" />,\n      dotClasses: classes.statusRequested,\n    }].filter(i => !!i);\n};\n\nconst getTaskApprovalStatusTitle = (approvalStatus) => {\n  switch (approvalStatus) {\n    case ApprovalStatuses.CANDIDATE_PORTAL_EMAIL_SENT:\n      return \"Candidate Portal Email sent to\";\n    case ApprovalStatuses.REMAINDER_EMAIL_SENT:\n      return \"Candidate Tasks Not Complete Reminder sent to\";\n    case ApprovalStatuses.NEW_HIRE_EMAIL_SENT:\n      return \"New Hire Email with Login Details sent to\";\n\n    case ApprovalStatuses.SIGNED_ACCEPTABLE:\n      return \"Acceptable Use Form Task signed and completed by\";\n    case ApprovalStatuses.SIGNED_SECURITY:\n      return \"Security Form Task signed and completed by\";\n    case ApprovalStatuses.SIGNED_VENDOR:\n      return \"Vendor Form Task signed and completed by\";\n\n    default:\n      return `${getStrWithFirstUpperLetter(approvalStatus)} by`;\n  }\n};\n\nconst getDotTaskOptions = (approvalStatus, classes, approvalEmail) => {\n  switch (approvalStatus) {\n    case ApprovalStatuses.APPROVED:\n      return { icon: <ThumbUpIcon fontSize=\"small\" />, dotClasses: classes.statusApproved };\n\n    case ApprovalStatuses.REJECTED:\n    case ApprovalStatuses.CANCELLED:\n    case ApprovalStatuses.EXPIRED:\n      return {\n        icon: <CancelOutlinedIcon fontSize=\"small\" />,\n        dotClasses: classes.statusCancelled,\n      };\n\n    case ApprovalStatuses.SIGNED_ACCEPTABLE:\n    case ApprovalStatuses.SIGNED_SECURITY:\n    case ApprovalStatuses.SIGNED_VENDOR:\n      return { icon: <DescriptionIcon fontSize=\"small\" />, dotClasses: classes.statusSigned };\n\n    case ApprovalStatuses.COMPLETE_SIGNING:\n      return { icon: <CheckIcon fontSize=\"small\" />, dotClasses: classes.statusSigned };\n\n    case ApprovalStatuses.REMAINDER_EMAIL_SENT:\n    case ApprovalStatuses.NEW_HIRE_EMAIL_SENT:\n    case ApprovalStatuses.CANDIDATE_PORTAL_EMAIL_SENT:\n      return { icon: <EmailIcon fontSize=\"small\" />, dotClasses: \"\", name: approvalEmail };\n\n    default:\n      return { icon: <InfoIcon fontSize=\"small\" />, dotClasses: \"\" };\n  }\n};\n\nexport default memo(TaskTimeline);\n","import React from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {\n  getOnboardingFullName,\n  getScheduleDateOrImmediate,\n  getYesOrNo,\n} from \"../../../data/helper/helpers\";\n\nexport const onboardTaskRows = (task, locationDescription) => {\n  const {id, oldTaskId, onboardingTask} = task || {};\n  return [\n    {id: \"taskId\", name: \"Task ID\", value: id},\n    {\n      id: \"oldTaskId\",\n      name: \"Old Task ID\",\n      value: oldTaskId,\n      hidden: !oldTaskId,\n    },\n    {\n      id: \"selectedReqId\",\n      name: \"Selected Requisition ID\",\n      value: getTaskValueOrNA(onboardingTask, \"reqId\"),\n    },\n    {id: \"name\", name: \"Name\", value: getOnboardingFullName(task)},\n    {id: \"username\", name: \"Username\", value: onboardingTask?.onboardUsername},\n    {id: \"email\", name: \"Email\", value: onboardingTask?.onboardEmail},\n    {\n      id: \"nonLpEmail\",\n      name: \"Non-LP Email\",\n      value: onboardingTask?.onboardNonLpEmail,\n    },\n    {id: \"company\", name: \"Company\", value: onboardingTask?.onboardCompany},\n    {id: \"jobTitle\", name: \"Job Title\", value: onboardingTask?.onboardJobTitle},\n    {\n      id: \"employeeType\",\n      name: \"Employee Type\",\n      value: onboardingTask?.onboardEmployeeType,\n    },\n    {\n      id: \"poNumber\",\n      name: \"Purchase Order Number\",\n      value: getTaskValueOrNA(onboardingTask, \"onboardPoNumber\"),\n    },\n    {\n      id: \"location\",\n      name: \"Location\",\n      value: `${onboardingTask?.onboardLocationDescription} (${onboardingTask?.onboardLocation})`,\n    },\n    {\n      id: \"manager\",\n      name: \"Manager\",\n      value: `${onboardingTask?.onboardManagerFirstName || \"\"} ${\n        onboardingTask?.onboardManagerLastName || \"\"\n      } | ${onboardingTask?.onboardManagerEmail}`,\n    },\n    {\n      id: \"department\",\n      name: \"Department\",\n      value: onboardingTask?.onboardDepartment,\n    },\n    {\n      id: \"officeNumber\",\n      name: \"Office Number\",\n      value: getTaskValueOrNA(onboardingTask, \"onboardOfficeNumber\"),\n    },\n    {\n      id: \"mobileNumber\",\n      name: \"Mobile Number\",\n      value: getTaskValueOrNA(onboardingTask, \"onboardMobileNumber\"),\n    },\n    {\n      id: \"googleAccountNeeded\",\n      name: \"Google Account Needed\",\n      value:\n        onboardingTask?.isGoogleAccountNeeded !== null\n          ? getYesOrNo(onboardingTask?.isGoogleAccountNeeded)\n          : \"n/a\",\n    },\n    {\n      id: \"onboardDevice\",\n      name: \"Device Requested\",\n      value: onboardingTask?.onboardDevice,\n    },\n    {\n      id: \"oktaGroups\",\n      name: \"Okta Groups\",\n      value: (\n        <OktaGroupBox\n          onboardingOktaGroups={onboardingTask?.onboardingOktaGroups}\n        />\n      ),\n    },\n    {\n      id: \"onboardDate\",\n      name: \"Onboarding Date\",\n      value: getScheduleDateOrImmediate(task, true),\n    },\n  ];\n};\n\nconst useStyles = makeStyles(() => ({\n  groupsBox: {\n    height: 100,\n    overflow: \"auto\",\n    border: \"1px solid #4667c8\",\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nconst OktaGroupBox = ({onboardingOktaGroups}) => {\n  const classes = useStyles();\n  return (\n    <Box\n      className={(onboardingOktaGroups?.length > 1 && classes.groupsBox) || \"\"}\n    >\n      {onboardingOktaGroups?.length > 0\n        ? onboardingOktaGroups.map((group) => (\n            <p key={group.oktaGroupId}>{group.oktaGroupName}</p>\n          ))\n        : \"No groups\"}\n    </Box>\n  );\n};\n\nconst getTaskValueOrNA = (onboardingTask, field) =>\n  onboardingTask?.[field] || \"n/a\";\n","import React, {memo} from \"react\";\nimport {Box, Button, makeStyles, Toolbar} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  closeToolbar: {\n    flexShrink: 0,\n    background: theme.palette.background.light,\n  },\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst TaskCloseButtonToolbar = ({handleClose}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar className={classes.closeToolbar}>\n      <Box className={classes.btnDiv}>\n        <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\n          <CloseIcon /> Close\n        </Button>\n      </Box>\n    </Toolbar>\n  );\n};\n\nexport default memo(TaskCloseButtonToolbar);\n","import React, {memo} from \"react\";\nimport TaskCloseButtonToolbar from \"../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport {Box, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  box: {overflowY: \"auto\"},\n  footerDiv: {height: \"3rem\", flexShrink: 0}\n}));\n\nconst SelectedTaskWrapper = ({isLoading, id, handleClose, withFooter, preChildren, children}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TaskCloseButtonToolbar handleClose={handleClose} />\n      {isLoading ? (\n        <LoadingCircle text={\"Loading task details...\"} />\n      ) : (\n        <>\n          {preChildren}\n          <Box className={classes.box} key={id} id=\"selected-task-window\">\n            {children}\n          </Box>\n        </>\n      )}\n      {withFooter && <div className={classes.footerDiv} />}\n    </>\n  );\n};\n\nexport default memo(SelectedTaskWrapper);","import React, {forwardRef, memo} from \"react\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\n\nconst useStyles = makeStyles((theme) => ({\n  approveBtn: {\n    marginRight: theme.spacing(2),\n  },\n  rejectBtn: {\n    marginRight: theme.spacing(2),\n  },\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  cancelBtn: {\n    marginTop: theme.spacing(3),\n  },\n  disabled: {\n    \"&.Mui-disabled\": {\n      pointerEvents: \"auto\",\n    },\n  },\n}));\n\nexport const CancelButton = ({handleClick}) => {\n  const classes = useStyles();\n  return (\n    <Button\n      variant=\"contained\"\n      size=\"small\"\n      onClick={handleClick}\n      className={classes.cancelBtn}\n    >\n      Cancel Task\n    </Button>\n  );\n};\nexport const SubmitApprovalButton = ({handleSubmit}) => {\n  const classes = useStyles();\n  return (\n    <Box m={2} className={classes.btnDiv}>\n      <Button size=\"small\" variant=\"contained\" onClick={handleSubmit}>\n        Submit Approval\n      </Button>\n    </Box>\n  );\n};\n\nexport const TaskRejectButton = ({isRejected, ...props}) => {\n  const classes = useStyles();\n  return (\n    <TaskActionButton\n      isAction={isRejected}\n      className={classes.rejectBtn}\n      {...props}\n    >\n      <HighlightOffIcon />\n      Reject Task\n    </TaskActionButton>\n  );\n};\n\nexport const TaskCancelButton = ({isCancelled, ...props}) => {\n  return (\n    <TaskActionButton isAction={isCancelled} {...props}>\n      <HighlightOffIcon />\n      Cancel Task\n    </TaskActionButton>\n  );\n};\n\nexport const TaskActionButton = forwardRef(\n  ({handleClick, isAction, children, ...props}, ref) => {\n    return (\n      <Button\n        size=\"small\"\n        color=\"secondary\"\n        variant={isAction ? \"contained\" : \"outlined\"}\n        onClick={handleClick}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\n\nexport const TaskApproveButton = forwardRef(({isApproved, ...props}, ref) => {\n  const classes = useStyles();\n\n  return (\n    <TaskActionButton\n      ref={ref}\n      isAction={isApproved}\n      className={classes.approveBtn}\n      classes={{root: classes.disabled}}\n      {...props}\n    >\n      <CheckCircleOutlineIcon />\n      Approve Task\n    </TaskActionButton>\n  );\n});\n\nexport default {\n  SubmitApprovalButton: memo(SubmitApprovalButton),\n  CancelButton: memo(CancelButton),\n};\n","import React, {memo, useCallback, useContext, useState} from \"react\";\nimport {Box, Container, Divider, Typography} from \"@material-ui/core\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport {useHistory} from \"react-router-dom\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {GET_TASK} from \"../../../operations/queries/getTask\";\nimport handleError from \"../../../data/handleError\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {connect} from \"react-redux\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport MissedInputModal from \"../../../components/modals/MissedInputModal\";\nimport {getOnboardingFieldValue, getOnboardingFullName, logOptions} from \"../../../data/helper/helpers\";\nimport {CancelButton} from \"../../TaskManagerPage/SelectedTasks/components/TaskButtons\";\nimport TaskSection from \"../../TaskManagerPage/SelectedTasks/components/TaskSection\";\n\nconst SelectedOnboardActionSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const history = useHistory();\n  const {authUser} = useContext(AuthUserContext);\n  const [cancelledNotes, setCancelledNotes] = useState(\"\");\n  const [isCancelledError, setIsCancelledError] = useState(false);\n  const [modalMsg, setModalMsg] = useState(\"\");\n\n\n  const [executeTaskSearch] = useLazyQuery(GET_TASK, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const taskStatus = data.get_task?.taskStatus;\n      if (\n        taskStatus === TaskStatuses.READY ||\n        taskStatus === TaskStatuses.PENDING_USER_TASKS ||\n        taskStatus === TaskStatuses.PENDING\n      ) {\n        handleCancel();\n      } else if (taskStatus === TaskStatuses.RUNNING) {\n        handleOpen(\"Task is currently in progress. It cannot be canceled.\");\n      } else {\n        handleOpen(\"Cancel Error\");\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description, \"Onboarding Dashboard\"));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${getOnboardingFullName(selectedTaskData)} (${getOnboardingFieldValue(\n        selectedTaskData,\n        \"Username\"\n      )})]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: parseInt(selectedTaskData.id),\n        taskType: TaskTypes.ONBOARDING,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const handleCloseAfterSubmit = useCallback(() => {\n    handleClose();\n    setIsCancelledError(false); //\n    setCancelledNotes(\"\"); //\n    onSubmitted(); // is needed ?\n  }, []);\n\n\n  const handleCancel = () => {\n    const taskStatus = TaskStatuses.CANCELLED;\n    const approvalStatus = ApprovalStatuses.CANCELLED;\n    const approvalInfo = {\n      approvalStage: 0,\n      approvalNote: cancelledNotes,\n      approvalStatus,\n    };\n    addApproval(taskStatus, approvalStatus, approvalInfo);\n    createLog(\n      createLogDescription(\n        \"Cancelled\",\n        `cancelledBy: ${authUser.profile.userName}; cancelledMsg: ${cancelledNotes}`\n      )\n    );\n    handleCloseAfterSubmit();\n  };\n\n  const handleCancelCheck = () => {\n    if (cancelledNotes?.trim().length === 0) {\n      setIsCancelledError(true);\n    } else {\n      setIsCancelledError(false);\n      //---check task status\n      executeTaskSearch({variables: {search: selectedTaskData?.id}});\n    }\n  };\n\n  const handleOpen = useCallback((msg) => {\n    setModalMsg(msg);\n  }, [setModalMsg]);\n\n  const handleModalClose = useCallback(() => {\n    setModalMsg(\"\");\n  }, [setModalMsg]);\n\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        <Box m={2} pb={4}>\n          <Box mt={1} mb={2}>\n            <Typography component={\"div\"} variant=\"subtitle1\">\n              <strong>\n                Candidate task is{\" \"}\n                {selectedTaskData?.taskStatus ===\n                TaskStatuses.PENDING && \"pending approval.\"}\n                {(selectedTaskData?.taskStatus ===\n                  TaskStatuses.READY ||\n                  selectedTaskData?.taskStatus ===\n                  TaskStatuses.PENDING_USER_TASKS) &&\n                \"scheduled to run.\"}\n            </strong>\n              <br />\n              You can cancel the task; a cancellation note is\n              required before you submit.\n            </Typography>\n          </Box>\n\n          <NotesTextField\n            id=\"cancellation-notes\"\n            placeholder=\"Cancellation Reason (required)\"\n            error={isCancelledError}\n            value={cancelledNotes}\n            onValueChange={setCancelledNotes}\n          />\n          <CancelButton handleClick={handleCancelCheck} />\n        </Box>\n      </Container>\n      {modalMsg && (\n        <MissedInputModal\n          open={!!modalMsg}\n          handleClose={handleModalClose}\n          modalMsg={modalMsg}\n        />\n      )}\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.onboardingDashboard.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedOnboardActionSection));\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, Paper, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  info: {\n    backgroundColor: theme.palette.secondary.dark,\n    padding: \"0.5em 0.75em 0.5em\"\n  }\n}));\n\nconst SelectedTaskInfoBlock = ({condition, text, children}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {condition &&\n      <Box>\n        <Paper className={classes.info}>\n          <Typography>\n            {text}\n          </Typography>\n        </Paper>\n        {children}\n      </Box>\n      }\n    </>\n  );\n};\n\nexport default memo(SelectedTaskInfoBlock);","import React, {memo, useCallback, useContext, useMemo} from \"react\";\nimport {Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport TaskStatusBlock from \"../../../components/taskManager/TaskStatusBlock\";\nimport TaskTimeline from \"../../TaskManagerPage/SelectedTasks/components/TaskTimeline\";\nimport {connect} from \"react-redux\";\nimport {setIsDrawerOpen, setSelectedTaskData} from \"../../../data/redux/onboardingDashboard/onboardingDashboardActions\";\nimport TaskSection from \"../../TaskManagerPage/SelectedTasks/components/TaskSection\";\nimport {onboardTaskRows} from \"../../TaskManagerPage/SelectedTasks/SelectedOnboardTaskData\";\nimport SelectedTaskWrapper from \"../../TaskManagerPage/SelectedTasks/components/SelectedTaskWrapper\";\nimport SelectedCandidateActionSection from \"./SelectedCandidateActionSection\";\nimport SelectedTaskInfoBlock from \"./SelectedTaskInfoBlock\";\n\nconst SelectedCandidateTaskContent = ({selectedTaskData, setSelectedTaskData, setIsDrawerOpen, onSubmitted}) => {\n  const {permOnboardingCancelTasks} = useContext(AuthUserContext);\n\n  const handleClose = useCallback(() => {\n    setIsDrawerOpen(false);\n    setSelectedTaskData();\n  }, [setIsDrawerOpen, setSelectedTaskData]);\n\n  const taskActionPermissions = useMemo(() =>\n      (permOnboardingCancelTasks) &&\n      (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n        selectedTaskData?.taskStatus === TaskStatuses.PENDING_USER_TASKS ||\n        selectedTaskData?.taskStatus === TaskStatuses.READY),\n    [permOnboardingCancelTasks, selectedTaskData]);\n\n  return (\n    <SelectedTaskWrapper\n      id={selectedTaskData?.id}\n      handleClose={handleClose}\n      isLoading={!selectedTaskData}\n      preChildren={\n        <SelectedTaskInfoBlock\n          condition={selectedTaskData?.taskStatus === TaskStatuses.COMPLETE}\n          text={\n            \"The candidate has been onboarded successfully. This means that \" +\n            \"they have received their IT Welcome Email which contains their \" +\n            `login details. This information was sent to ${selectedTaskData?.onboardingTask.onboardNonLpEmail}`\n          }\n        />\n      }\n    >\n      <TaskSection\n        title=\"Candidate Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={onboardTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n\n      <TaskTimeline taskData={selectedTaskData} />\n\n      {taskActionPermissions && (\n        <SelectedCandidateActionSection\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n        />\n      )}\n\n    </SelectedTaskWrapper>\n  );\n};\n\nexport default connect(state => ({\n  selectedTaskData: state.onboardingDashboard.get(\"selectedTaskData\")\n}), {setSelectedTaskData, setIsDrawerOpen})\n(memo(SelectedCandidateTaskContent));\n","import {getFullDateString} from \"../../../data/helper/DateTimezoneHelpers\";\n\nexport const requisitionTaskRows = (task) => {\n  const {id, oldTaskId, requisitionTask} = task || {};\n  const {\n    reqHiringManagerFirstName, reqHiringManagerLastName, reqHiringManagerEmail,\n    isBackfill, reqBackfillFirstName, reqBackfillLastName, reqBackfillUsername, reqCountryDesc,\n    reqCompanyCode, reqParentMgmtCC, reqManagementCC, reqFunctionalAreaDesc, reqFulfilled, reqFulfilledID,\n    reqBonusAmount, reqBonusType, reqCommissionAmount, reqCommissionCurrency, comments,\n  } = requisitionTask || {};\n  return [\n    {id: \"taskId\", name: \"Task ID\", value: id},\n    {id: \"oldTaskId\", name: \"Old Task ID\", value: oldTaskId, hidden: !oldTaskId},\n    {\n      id: \"requisitionFulfilled\",\n      name: \"Requisition Fulfilled\",\n      value: reqFulfilled ? `Yes; Candidate Task ID: ${reqFulfilledID}` : \"No\"\n    }, // different from task manager\n    {id: \"requisitionTask\", name: \"Requisition Type\", value: requisitionTask?.reqType},\n    {id: \"plannedStartDate\", name: \"Planned Start Date\", value: getFullDateString(requisitionTask?.reqStartDate)},\n    {\n      id: \"hiringManager\",\n      name: \"Hiring Manager\",\n      value: `${reqHiringManagerFirstName || \"\"} ${reqHiringManagerLastName || \"\"} | ${reqHiringManagerEmail}`,\n    },\n    {\n      id: \"businessUnit\",\n      name: \"Business Unit\",\n      value: requisitionTask?.reqBusinessUnit,\n    },\n    {\n      id: \"department\",\n      name: \"Department\",\n      value: requisitionTask?.reqDepartment,\n    },\n    {\n      id: \"location\",\n      name: \"Location\",\n      value: `${requisitionTask?.reqLocationDescription} (${requisitionTask?.reqLocation})`,\n    },\n    {\n      id: \"isBackfill\",\n      name: \"Backfill?\",\n      value: isBackfill ? `yes; ${reqBackfillFirstName} ${reqBackfillLastName} | ${reqBackfillUsername}` : \"no\",\n    },\n    {\n      id: \"costCenter\",\n      name: \"Cost Center\",\n      value: `${reqCompanyCode}-${reqParentMgmtCC}-${reqManagementCC}-${reqFunctionalAreaDesc}-${reqCountryDesc}-00`,\n    },\n    {\n      id: \"jobCode\",\n      name: \"Job Code\",\n      value: `${requisitionTask?.reqJobCode} | ${requisitionTask?.reqJobTitle}`,\n    },\n    {\n      id: \"requisitionSpend\",\n      name: \"Requisition Spend\",\n      value: `${requisitionTask?.reqSpendCurrency} ${requisitionTask?.reqSpendAmount} ${requisitionTask?.reqSpendPeriod}`,\n    },\n    {\n      id: \"bonus\",\n      name: \"Bonus\",\n      value: reqBonusAmount ? `${reqBonusAmount} ${reqBonusType}` : \"not entered\",\n    },\n    {\n      id: \"commission\",\n      name: \"Commission\",\n      value: reqCommissionAmount ? `${reqCommissionAmount} ${reqCommissionCurrency}` : \"not entered\",\n    },\n    {\n      id: \"contractLength\",\n      name: \"Contract Length\",\n      value: `${requisitionTask?.reqContractMonths} months at ${requisitionTask?.reqContractHoursPerWeek} hours per week`,\n    },\n    {\n      id: \"comments\",\n      name: \"Comments\",\n      value: comments?.length > 0 ? `${comments}` : \"not entered\",\n    },\n  ];\n};","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst CandidateRequestActonTypes = {\n  SET_REQUISITION_TYPE: \"SET_REQUISITION_TYPE\",\n  SET_START_DATE: \"SET_START_DATE\",\n  SET_HIRING_MANAGER: \"SET_HIRING_MANAGER\",\n  SET_BUSINESS_UNIT: \"SET_BUSINESS_UNIT\",\n  SET_DEPARTMENT: \"SET_DEPARTMENT\",\n  SET_LOCATION: \"SET_LOCATION\",\n  SET_EMPLOYEE_TYPE: \"SET_EMPLOYEE_TYPE\",\n  SET_REQUISITION_DETAILS: \"SET_REQUISITION_DETAILS\",\n\n  SET_FIRST_NAME: \"SET_FIRST_NAME\",\n  SET_LAST_NAME: \"SET_LAST_NAME\",\n  SET_NON_LP_EMAIL: \"SET_NON_LP_EMAIL\",\n  SET_JOB: \"SET_JOB\",\n  SET_JOB_TITLE: \"SET_JOB_TITLE\",\n  SET_JOB_CODE: \"SET_JOB_CODE\",\n  SET_SELECTED_COMPANY: \"SET_SELECTED_COMPANY\",\n  SET_OFFICE_NUMBER: \"SET_OFFICE_NUMBER\",\n  SET_MOBILE_NUMBER: \"SET_MOBILE_NUMBER\",\n\n  SET_USERNAME: \"SET_USERNAME\",\n  SET_IS_DEVICE_NOTE_CONFIRMED: \"SET_IS_DEVICE_NOTE_CONFIRMED\",\n  SET_REQUEST_DEVICE: \"SET_REQUEST_DEVICE\",\n\n  SET_DEFAULT_STATE: \"SET_DEFAULT_STATE\",\n\n  SET_IS_FILLED_BY_REQUISITION: \"SET_IS_FILLED_BY_REQUISITION\",\n  SET_IS_GOOGLE_ACCOUNT_NEEDED: \"SET_IS_GOOGLE_ACCOUNT_NEEDED\",\n\n  SET_REQUISITION_TYPE_ERROR: \"SET_REQUISITION_TYPE_ERROR\",\n  SET_START_DATE_ERROR: \"SET_START_DATE_ERROR\",\n  SET_HIRING_MANAGER_ERROR: \"SET_HIRING_MANAGER_ERROR\",\n  SET_BUSINESS_UNIT_ERROR: \"SET_BUSINESS_UNIT_ERROR\",\n  SET_DEPARTMENT_ERROR: \"SET_DEPARTMENT_ERROR\",\n  SET_LOCATION_ERROR: \"SET_LOCATION_ERROR\",\n  SET_EMPLOYEE_TYPE_ERROR: \"SET_EMPLOYEE_TYPE_ERROR\",\n\n  SET_FIRST_NAME_ERROR: \"SET_FIRST_NAME_ERROR\",\n  SET_LAST_NAME_ERROR: \"SET_LAST_NAME_ERROR\",\n  SET_NON_LP_EMAIL_ERROR: \"SET_NON_LP_EMAIL_ERROR\",\n  SET_JOB_ERROR: \"SET_JOB_ERROR\",\n  SET_SELECTED_COMPANY_ERROR: \"SET_SELECTED_COMPANY_ERROR\",\n\n  SET_USERNAME_ERROR: \"SET_USERNAME_ERROR\",\n  SET_REQUEST_DEVICE_ERROR: \"SET_DEVICE_ERROR\",\n\n  SET_ACTIVE_STEP: \"SET_ACTIVE_STEP\",\n};\n\nexport default typesWithPrefix(\"CANDIDATE_REQUEST_\")(\n  CandidateRequestActonTypes\n);\n","import CandidateRequestActonTypes from \"./candidateRequestActonTypes\";\n\nexport const setRequisitionType = (requisitionType) => ({\n  type: CandidateRequestActonTypes.SET_REQUISITION_TYPE,\n  payload: {requisitionType},\n});\n\nexport const setStartDate = (startDate) => ({\n  type: CandidateRequestActonTypes.SET_START_DATE,\n  payload: {startDate},\n});\n\nexport const setHiringManager = (hiringManager) => ({\n  type: CandidateRequestActonTypes.SET_HIRING_MANAGER,\n  payload: {hiringManager},\n});\n\nexport const setBusinessUnit = (businessUnit) => ({\n  type: CandidateRequestActonTypes.SET_BUSINESS_UNIT,\n  payload: {businessUnit},\n});\n\nexport const setDepartment = (department) => ({\n  type: CandidateRequestActonTypes.SET_DEPARTMENT,\n  payload: {department},\n});\n\nexport const setLocation = (location) => ({\n  type: CandidateRequestActonTypes.SET_LOCATION,\n  payload: {location},\n});\n\nexport const setEmployeeType = (employeeType) => ({\n  type: CandidateRequestActonTypes.SET_EMPLOYEE_TYPE,\n  payload: {employeeType},\n});\n\nexport const setRequisitionDetails = (requisitionDetails) => ({\n  type: CandidateRequestActonTypes.SET_REQUISITION_DETAILS,\n  payload: {requisitionDetails},\n});\n\nexport const setFirstName = (firstName) => ({\n  type: CandidateRequestActonTypes.SET_FIRST_NAME,\n  payload: {firstName},\n});\n\nexport const setLastName = (lastName) => ({\n  type: CandidateRequestActonTypes.SET_LAST_NAME,\n  payload: {lastName},\n});\n\nexport const setNonLpEmail = (nonLpEmail) => ({\n  type: CandidateRequestActonTypes.SET_NON_LP_EMAIL,\n  payload: {nonLpEmail},\n});\n\nexport const setJob = (job) => ({\n  type: CandidateRequestActonTypes.SET_JOB,\n  payload: {job},\n});\n\nexport const setJobCode = (jobCode) => ({\n  type: CandidateRequestActonTypes.SET_JOB_CODE,\n  payload: {jobCode},\n});\n\nexport const setJobTitle = (jobTitle) => ({\n  type: CandidateRequestActonTypes.SET_JOB_TITLE,\n  payload: {jobTitle},\n});\n\nexport const setSelectedCompany = (selectedCompany) => ({\n  type: CandidateRequestActonTypes.SET_SELECTED_COMPANY,\n  payload: {selectedCompany},\n});\n\nexport const setOfficeNumber = (officeNumber) => ({\n  type: CandidateRequestActonTypes.SET_OFFICE_NUMBER,\n  payload: {officeNumber},\n});\n\nexport const setMobileNumber = (mobileNumber) => ({\n  type: CandidateRequestActonTypes.SET_MOBILE_NUMBER,\n  payload: {mobileNumber},\n});\n\nexport const setUsername = (userName) => ({\n  type: CandidateRequestActonTypes.SET_USERNAME,\n  payload: {userName},\n});\n\nexport const setIsDeviceNoteConfirmed = (isDeviceNoteConfirmed) => ({\n  type: CandidateRequestActonTypes.SET_IS_DEVICE_NOTE_CONFIRMED,\n  payload: {isDeviceNoteConfirmed},\n});\n\nexport const setSelectedDevice = (selectedDevice) => ({\n  type: CandidateRequestActonTypes.SET_REQUEST_DEVICE,\n  payload: {selectedDevice},\n});\n\nexport const setDefaultState = () => ({\n  type: CandidateRequestActonTypes.SET_DEFAULT_STATE,\n});\n\nexport const setFilledByRequisition = (isFilledByRequisition) => ({\n  type: CandidateRequestActonTypes.SET_IS_FILLED_BY_REQUISITION,\n  payload: {isFilledByRequisition},\n});\n\nexport const setIsGoogleAccountNeeded = (isGoogleAccountNeeded) => ({\n  type: CandidateRequestActonTypes.SET_IS_GOOGLE_ACCOUNT_NEEDED,\n  payload: {isGoogleAccountNeeded},\n});\n\n// errors\nexport const setRequisitionTypeError = (requisitionTypeError) => ({\n  type: CandidateRequestActonTypes.SET_REQUISITION_TYPE_ERROR,\n  payload: {requisitionTypeError},\n});\n\nexport const setStartDateError = (startDateError) => ({\n  type: CandidateRequestActonTypes.SET_START_DATE_ERROR,\n  payload: {startDateError},\n});\n\nexport const setHiringManagerError = (hiringManagerError) => ({\n  type: CandidateRequestActonTypes.SET_HIRING_MANAGER_ERROR,\n  payload: {hiringManagerError},\n});\n\nexport const setBusinessUnitError = (businessUnitError) => ({\n  type: CandidateRequestActonTypes.SET_BUSINESS_UNIT_ERROR,\n  payload: {businessUnitError},\n});\n\nexport const setDepartmentError = (departmentError) => ({\n  type: CandidateRequestActonTypes.SET_DEPARTMENT_ERROR,\n  payload: {departmentError},\n});\n\nexport const setLocationError = (locationError) => ({\n  type: CandidateRequestActonTypes.SET_LOCATION_ERROR,\n  payload: {locationError},\n});\n\nexport const setEmployeeTypeError = (employeeTypeError) => ({\n  type: CandidateRequestActonTypes.SET_EMPLOYEE_TYPE_ERROR,\n  payload: {employeeTypeError},\n});\n\nexport const setFirstNameError = (firstNameError) => ({\n  type: CandidateRequestActonTypes.SET_FIRST_NAME_ERROR,\n  payload: {firstNameError},\n});\n\nexport const setLastNameError = (lastNameError) => ({\n  type: CandidateRequestActonTypes.SET_LAST_NAME_ERROR,\n  payload: {lastNameError},\n});\n\nexport const setNonLpEmailError = (nonLpEmailError) => ({\n  type: CandidateRequestActonTypes.SET_NON_LP_EMAIL_ERROR,\n  payload: {nonLpEmailError},\n});\n\nexport const setJobError = (jobError) => ({\n  type: CandidateRequestActonTypes.SET_JOB_ERROR,\n  payload: {jobError},\n});\n\nexport const setSelectedCompanyError = (selectedCompanyError) => ({\n  type: CandidateRequestActonTypes.SET_SELECTED_COMPANY_ERROR,\n  payload: {selectedCompanyError},\n});\n\nexport const setUsernameError = (userNameError) => ({\n  type: CandidateRequestActonTypes.SET_USERNAME_ERROR,\n  payload: {userNameError},\n});\n\nexport const setSelectedDeviceError = (selectedDeviceError) => ({\n  type: CandidateRequestActonTypes.SET_REQUEST_DEVICE_ERROR,\n  payload: {selectedDeviceError},\n});\n\nexport const setActiveStep = (activeStep) => ({\n  type: CandidateRequestActonTypes.SET_ACTIVE_STEP,\n  payload: {activeStep},\n});\n","import React, {memo} from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\n\nconst ActionSection = ({text, children}) => {\n  return (\n    <Box m={2}>\n      {text && (\n        <Box mt={1} mb={2}>\n          <Typography component={\"div\"} variant=\"subtitle1\">\n            {text}\n          </Typography>\n        </Box>\n      )}\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(ActionSection);","import React, {memo, useContext, useState} from \"react\";\nimport {Box, Container, Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport handleError from \"../../../data/handleError\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport {logOptions} from \"../../../data/helper/helpers\";\nimport TaskSection from \"../../TaskManagerPage/SelectedTasks/components/TaskSection\";\nimport ActionSection from \"../../TaskManagerPage/SelectedTasks/components/ActionSection\";\nimport {\n  SubmitApprovalButton,\n  TaskCancelButton,\n} from \"../../TaskManagerPage/SelectedTasks/components/TaskButtons\";\n\nconst SelectedRequisitionActionsSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n  selfCreatedTask,\n}) => {\n  const history = useHistory();\n  const {authUser} = useContext(AuthUserContext);\n  const [cancelledNotes, setCancelledNotes] = useState(\"\");\n  const [isCancelledError, setIsCancelledError] = useState(false);\n  const [status, setStatus] = useState(null);\n  const {CANCELLED} = ApprovalStatuses;\n\n  const showCancelButton =\n    !selectedTaskData?.requisitionTask?.reqFulfilled &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.COMPLETE);\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onCompleted() {\n      onSubmitted(\"req\");\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const checkStatus = (statuses) => {\n    return statuses.includes(status);\n  };\n\n  const btnClick = (status) => {\n    setStatus(status);\n  };\n\n  const handleCloseAfterSubmit = () => {\n    handleClose();\n    onSubmitted();\n    setIsCancelledError(false);\n    setCancelledNotes(\"\");\n  };\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${selectedTaskData.requisitionTask.reqType}, ${selectedTaskData.requisitionTask.reqBusinessUnit}, ${selectedTaskData.requisitionTask.reqDepartment}]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (id, status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: id,\n        taskType: TaskTypes.REQUISITION,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const handleCancel = () => {\n    if (cancelledNotes?.trim().length === 0) {\n      setIsCancelledError(true);\n    } else {\n      setIsCancelledError(false);\n      const id = parseInt(selectedTaskData.id);\n      const taskStatus = TaskStatuses.CANCELLED;\n      const approvalStatus = ApprovalStatuses.CANCELLED;\n      const approvalInfo = {\n        approvalStage: 0,\n        approvalNote: cancelledNotes,\n        approvalStatus,\n      };\n\n      addApproval(id, taskStatus, approvalStatus, approvalInfo);\n      createLog(\n        createLogDescription(\n          \"Cancelled\",\n          `cancelledBy: ${authUser.profile.userName}; cancelledMsg: ${cancelledNotes}`\n        )\n      );\n      handleCloseAfterSubmit();\n    }\n  };\n\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        <Box pb={4}>\n          <ActionSection\n            text={\n              <>\n                <strong>Pending Financial Approval</strong>\n                <br />\n                You can cancel the request; a cancellation note is required\n                before you submit.\n              </>\n            }\n          >\n            {selfCreatedTask && showCancelButton && (\n              <TaskCancelButton\n                isCancelled={checkStatus([CANCELLED])}\n                handleClick={() => {\n                  btnClick(CANCELLED);\n                }}\n              />\n            )}\n          </ActionSection>\n\n          {checkStatus([CANCELLED]) && (\n            <ActionSection>\n              <NotesTextField\n                id=\"cancellation-notes\"\n                placeholder=\"Cancellation Reason (required)\"\n                error={isCancelledError}\n                value={cancelledNotes}\n                onValueChange={setCancelledNotes}\n              />\n            </ActionSection>\n          )}\n          {checkStatus([CANCELLED]) && (\n            <SubmitApprovalButton handleSubmit={handleCancel} />\n          )}\n        </Box>\n      </Container>\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    selectedTaskData: state.onboardingDashboard.get(\"selectedTaskData\"),\n  }),\n  {}\n)(memo(SelectedRequisitionActionsSection));\n","import React, {memo, useCallback, useContext, useMemo} from \"react\";\nimport {Box, Button, Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport TaskStatusBlock from \"../../../components/taskManager/TaskStatusBlock\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TaskTimeline from \"../../TaskManagerPage/SelectedTasks/components/TaskTimeline\";\nimport {connect} from \"react-redux\";\nimport {\n  setIsDrawerOpen,\n  setSelectedTaskData,\n} from \"../../../data/redux/onboardingDashboard/onboardingDashboardActions\";\nimport TaskSection from \"../../TaskManagerPage/SelectedTasks/components/TaskSection\";\nimport SelectedTaskWrapper from \"../../TaskManagerPage/SelectedTasks/components/SelectedTaskWrapper\";\nimport {requisitionTaskRows} from \"./SelectedRequisitionTaskData\";\nimport SelectedTaskInfoBlock from \"./SelectedTaskInfoBlock\";\nimport {\n  setFilledByRequisition,\n  setRequisitionDetails,\n  setJob,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport SelectedRequisitionActionSection from \"./SelectedRequisitionActionSection\";\n\nconst SelectedRequisitionTaskContent = ({\n  selectedTaskData,\n  setSelectedTaskData,\n  setIsDrawerOpen,\n  onSubmitted,\n  setRequisitionDetails,\n  setFilledByRequisition,\n  setJob,\n}) => {\n  const history = useHistory();\n  const {authUser, permRequisitionCancelTasks} = useContext(AuthUserContext);\n\n  const handleClose = useCallback(() => {\n    setIsDrawerOpen(false);\n    setSelectedTaskData();\n  }, [setIsDrawerOpen, setSelectedTaskData]);\n\n  const handleOnboard = useCallback(() => {\n    const {\n      reqStartDate: startDate,\n      reqHiringManagerEmail: email,\n      reqHiringManagerFirstName: firstName,\n      reqHiringManagerLastName: lastName,\n      reqHiringManagerId: employeeNumber,\n      reqBusinessUnit: businessUnit,\n      reqDepartment: department,\n      reqLocationDescription: locationDescription,\n      reqLocationCode: locationCode,\n      reqType: employeeType,\n      reqJobTitle: jobTitle,\n      reqJobCode: jobCode,\n      // companyCode,\n      // isBackfill, backfillFirstName, backfillLastName,\n    } = selectedTaskData?.requisitionTask || {};\n    const reqDetails = {\n      requisitionType: {id: selectedTaskData?.id, jobCode, jobTitle, startDate},\n      startDate: startDate,\n      hiringManager: {firstName, lastName, email, employeeNumber},\n      businessUnit,\n      department,\n      location: {locationCode, locationDescription},\n      employeeType,\n    };\n    setRequisitionDetails(reqDetails);\n    setJob({jobTitle, jobCode});\n    setFilledByRequisition(true);\n    history.push(FrontendRoutes.REQUISITION_REQUEST);\n  }, [selectedTaskData, setRequisitionDetails]);\n\n  const taskActionPermissions = useMemo(\n    () =>\n      permRequisitionCancelTasks &&\n      selectedTaskData?.taskStatus === TaskStatuses.PENDING,\n    [permRequisitionCancelTasks, selectedTaskData]\n  );\n\n  const checkSelfCreatedTask = (data, user) => {\n    const taskUsername = data?.taskCreatorUsername;\n    const username = user?.profile?.userName;\n    if (!username || !taskUsername) return false;\n    return taskUsername === username;\n  };\n\n  const selfTaskActionPermissions =\n    checkSelfCreatedTask(selectedTaskData, authUser) &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.COMPLETE);\n\n  return (\n    <SelectedTaskWrapper\n      id={selectedTaskData?.id}\n      handleClose={handleClose}\n      isLoading={!selectedTaskData}\n      preChildren={\n        <SelectedTaskInfoBlock\n          condition={\n            selectedTaskData?.taskStatus === TaskStatuses.COMPLETE &&\n            !selectedTaskData?.requisitionTask?.reqFulfilled\n          }\n          text={\n            \"Your Requisition Request has been approved meaning you can now onboard a candidate against the requisition\"\n          }\n        >\n          <Box mt={1}>\n            <Button\n              variant=\"contained\"\n              component={Link}\n              onClick={handleOnboard}\n              to={FrontendRoutes.CANDIDATE_REQUEST}\n            >\n              <AddIcon /> onboard candidate\n            </Button>\n          </Box>\n        </SelectedTaskInfoBlock>\n      }\n    >\n      <TaskSection\n        title=\"Requisition Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={requisitionTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n\n      {selfTaskActionPermissions && (\n        <SelectedRequisitionActionSection\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n          selfCreatedTask={selfTaskActionPermissions}\n        />\n      )}\n\n      <TaskTimeline taskData={selectedTaskData} />\n    </SelectedTaskWrapper>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    selectedTaskData: state.onboardingDashboard.get(\"selectedTaskData\"),\n  }),\n  {\n    setSelectedTaskData,\n    setIsDrawerOpen,\n    setRequisitionDetails,\n    setFilledByRequisition,\n    setJob,\n  }\n)(memo(SelectedRequisitionTaskContent));\n","import React, {memo} from \"react\";\nimport {Drawer, makeStyles} from \"@material-ui/core\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport SelectedCandidateTaskContent from \"./SelectedTaskContent/SelectedCandidateTaskContent\";\nimport SelectedRequisitionTaskContent from \"./SelectedTaskContent/SelectedRequisitionTaskContent\";\nimport {connect} from \"react-redux\";\nimport {\n  setIsCandidateSubmitted,\n  setIsDrawerOpen,\n  setIsReqSubmitted,\n  setSelectedTaskData,\n} from \"../../data/redux/onboardingDashboard/onboardingDashboardActions\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst SelectedTaskDrawer = ({\n  isDrawerOpen,\n  setIsDrawerOpen,\n  setSelectedTaskData,\n  viewTaskTypeDetails,\n  setIsReqSubmitted,\n  setIsCandidateSubmitted,\n  setIsSubmitted,\n}) => {\n  const classes = useStyles();\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    if (!open) {\n      setSelectedTaskData();\n    }\n    setIsDrawerOpen(open);\n  };\n\n  const onSubmitted = (type) => {\n    setIsSubmitted(true);\n    if (type === \"req\") {\n      setIsReqSubmitted(true);\n    }\n    if (type === \"candidate\") {\n      setIsCandidateSubmitted(true);\n    }\n    resetSubmitted();\n  };\n\n  const resetSubmitted = () => {\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 5000);\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={isDrawerOpen}\n      onClose={toggleDrawer(false)}\n      classes={{paper: classes.paper}}\n    >\n      {viewTaskTypeDetails === TaskTypes.ONBOARDING ? (\n        <SelectedCandidateTaskContent onSubmitted={onSubmitted} />\n      ) : viewTaskTypeDetails === TaskTypes.REQUISITION ? (\n        <SelectedRequisitionTaskContent onSubmitted={onSubmitted} />\n      ) : (\n        <></>\n      )}\n    </Drawer>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    isDrawerOpen: state.onboardingDashboard.get(\"isDrawerOpen\"),\n    viewTaskTypeDetails: state.onboardingDashboard.get(\"viewTaskTypeDetails\"),\n  }),\n  {\n    setIsDrawerOpen,\n    setSelectedTaskData,\n    setIsReqSubmitted,\n    setIsCandidateSubmitted,\n  }\n)(memo(SelectedTaskDrawer));\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst CustomTabPanel = ({children, value, index, vertical, name, ...other}) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`${name}-tabpanel-${index}`}\n      aria-labelledby={`${name}-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3} style={{height: \"100%\"}}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n};\n\nCustomTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport const a11yProps = (name, index) => ({\n  id: `${name}-tab-${index}`,\n  \"aria-controls\": `${name}-tabpanel-${index}`,\n});\n\nexport default memo(CustomTabPanel);\n","import React, {memo} from \"react\";\nimport {Tab, withStyles} from \"@material-ui/core\";\n\nconst StyledTab = withStyles((theme) => ({\n  root: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.primary.main,\n    \"&:hover\": {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  selected: {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.primary.main,\n  },\n}))((props) => <Tab {...props} />);\n\nexport default memo(StyledTab);\n","import React, {memo} from \"react\";\nimport {AppBar, Box, makeStyles, Paper, Tab, Tabs} from \"@material-ui/core\";\nimport CustomTabPanel, {a11yProps} from \"./CustomTabPanel\";\nimport StyledTab from \"./StyledTab\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    paddingBottom: theme.spacing(2)\n  },\n  tabs: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst TabsPaper = ({\n  value,\n  handleChange,\n  tabs,\n  tabName,\n  tabPanelClasses,\n  styled,\n  className,\n  ...props\n}) => {\n  const classes = useStyles();\n  return (\n    <Box pb={1}>\n      <Paper elevation={3} className={classes.paper}>\n        <AppBar position=\"static\">\n          <Tabs\n            className={className || classes.tabs}\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n            {...props}\n          >\n            {tabs?.map(({label}, index) =>\n              styled ? (\n                <StyledTab\n                  key={index}\n                  label={label}\n                  {...a11yProps(tabName, index)}\n                />\n              ) : (\n                <Tab key={index} label={label} {...a11yProps(tabName, index)} />\n              )\n            )}\n          </Tabs>\n        </AppBar>\n\n        {tabs?.map(({content}, index) => (\n          <CustomTabPanel\n            key={index}\n            index={index}\n            value={value}\n            className={tabPanelClasses}\n            name={tabName}\n          >\n            {content}\n          </CustomTabPanel>\n        ))}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default memo(TabsPaper);\n","import React, {useState, useEffect, memo} from \"react\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useLazyQuery, useQuery} from \"@apollo/client\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport RequisitionTotals from \"./TotalContainers/RequisitionTotals\";\nimport CandidateTotals from \"./TotalContainers/CandidateTotals\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport RequisitionRequests from \"./RequisitionRequests\";\nimport CandidateRequests from \"./CandidateRequests\";\nimport {GET_TASK} from \"../../operations/queries/getTask\";\nimport handleError from \"../../data/handleError\";\nimport RequestInfoBox from \"./RequestInfoBox\";\nimport DelegatesInfoBox from \"./DelegatesInfoBox\";\nimport {GET_AUTH_ONBOARDING_DELEGATES} from \"../../operations/queries/getAuthOnboardingDelegates\";\nimport SelectedTaskDrawer from \"./SelectedTaskDrawer\";\nimport {useDispatch} from \"react-redux\";\nimport {\n  setIsDrawerOpen,\n  setSelectedTaskData,\n} from \"../../data/redux/onboardingDashboard/onboardingDashboardActions\";\nimport TabsPaper from \"../../components/tabs/TabsPaper\";\nimport AlertBox from \"../../components/AlertBox\";\n\nconst useStyles = makeStyles(() => ({\n  totalBox: {\n    display: \"flex\",\n  },\n  infoBoxWrapper: {\n    display: \"flex\",\n  },\n}));\n\nconst tabName = \"scrollable-auto\";\n\nconst OnboardingDashboardPageContent = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  let match = useRouteMatch(FrontendRoutes.ONBOARDING_DASHBOARD_VIEW());\n\n  const [value, setValue] = useState(0);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  useEffect(() => {\n    const dashView = match ? match.params.hash : null;\n\n    if (dashView) {\n      if (dashView === \"requisition-requests\") {\n        setValue(0);\n      } else if (dashView === \"candidate-requests\") {\n        setValue(1);\n      }\n    }\n  }, [match]);\n\n  const {data} = useQuery(GET_AUTH_ONBOARDING_DELEGATES, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeSearch] = useLazyQuery(GET_TASK, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      dispatch(setSelectedTaskData(data.get_task));\n      dispatch(setIsDrawerOpen(true));\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleTabsChange = (event, newValue) => {\n    setValue(newValue);\n    let dashView;\n    if (newValue === 0) {\n      dashView = \"requisition-requests\";\n    } else if (newValue === 1) {\n      dashView = \"candidate-requests\";\n    }\n    history.push(FrontendRoutes.ONBOARDING_DASHBOARD_VIEW(dashView));\n  };\n\n  const handleOnSelectedTask = (taskId) => {\n    executeSearch({variables: {search: taskId}});\n    dispatch(setIsDrawerOpen(true));\n  };\n\n  const onboardingDashboardTabs = [\n    {\n      label: \"Requisition Requests\",\n      content: (\n        <RequisitionRequests handleOnSelectedTask={handleOnSelectedTask} />\n      ),\n    },\n    {\n      label: \"Candidate Requests\",\n      content: (\n        <CandidateRequests handleOnSelectedTask={handleOnSelectedTask} />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Box>\n        {isSubmitted && (\n          <AlertBox message={\"Task Updated\"} severity=\"success\" my={1} />\n        )}\n      </Box>\n\n      <Box mb={2} className={classes.totalBox}>\n        <Box mr={2} className={classes.infoBoxWrapper}>\n          <RequestInfoBox />\n        </Box>\n        <Box mr={2}>\n          <RequisitionTotals />\n        </Box>\n        <Box>\n          <CandidateTotals />\n        </Box>\n      </Box>\n      {data?.get_auth_onboarding_delegates?.onboardingDelegates?.length > 0 && (\n        <DelegatesInfoBox\n          delegateData={\n            data?.get_auth_onboarding_delegates?.onboardingDelegates\n          }\n        />\n      )}\n\n      <Box mt={3} minWidth={1050}>\n        <Box minWidth={1050}>\n          <TabsPaper\n            value={value}\n            handleChange={handleTabsChange}\n            tabs={onboardingDashboardTabs}\n            tabName={tabName}\n            aria-label=\"onboarding dashboard tabs navigation\"\n            styled\n          />\n        </Box>\n      </Box>\n\n      <SelectedTaskDrawer setIsSubmitted={setIsSubmitted} />\n    </div>\n  );\n};\n\nexport default memo(OnboardingDashboardPageContent);\n","import React, {memo, useContext} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport OnboardingDashboardPageContent from \"./OnboardingDashboardPageContent\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst OnboardingDashboardPage = () => {\n  const {permOnboardingDashboardView} = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Onboarding Dashboard | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"ONBOARDING DASHBOARD\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Onboarding Dashboard\" />\n\n        {permOnboardingDashboardView ? (\n          <OnboardingDashboardPageContent />\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(OnboardingDashboardPage);\n","import React, { useState, useEffect, memo } from \"react\";\nimport { CircularProgress, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  landingLogoText: {\n    paddingTop: 20,\n    width: \"100%\",\n    textAlign: \"center\"\n  },\n  landingLogo: {\n    width: \"200px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst LoadingLogo = () => {\n  const classes = useStyles();\n  const [viewErrorMsg, setViewErrorMsg] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setViewErrorMsg(true);\n    }, 15000);\n  }, []);\n\n  return (\n    <div className={classes.landingLogo}>\n      <CircularProgress color=\"secondary\" size={80}/>\n      <div className={classes.landingLogoText}>\n        {viewErrorMsg ? (\n          <strong>Error loading users... please refresh the page</strong>\n        ) : (\n          <p>Loading users...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(LoadingLogo);\n","export const NAME_LABEL = \"Name\";\nexport const TITLE_LABEL = \"Title\";\nexport const EMAIL_LABEL = \"Email Address\";\nexport const DEPARTMENT_LABEL = \"Department\";\nexport const LOCATION_LABEL = \"Location\";\nexport const EMPLOYEE_TYPE_LABEL = \"Employee Type\";\nexport const DIRECT_REPORTS_TOTAL_LABEL = \"Direct Reports Total\";\nexport const DIRECT_REPORTS_FULL_TIME_LABEL = \"Direct Reports Full-Time\";\nexport const DIRECT_REPORTS_CONTRACTOR_LABEL = \"Direct Reports Contractor\";\nexport const DIRECT_REPORTS_PARTNER_LABEL = \"Direct Reports Partner\";\nexport const ROLL_UPS_LABEL = \"Roll Ups\";\nexport const ROLL_UPS_BREAKDOWN_LABEL = \"Roll Ups Breakdown\";\nexport const ROLL_UPS_BREAKDOWN_LABEL_FULL_TIME = \"Full Time\";\nexport const ROLL_UPS_BREAKDOWN_LABEL_CONTRACTOR = \"Contractor\";\nexport const ROLL_UPS_BREAKDOWN_LABEL_PARTNER = \"Partner\";\nexport const ROLL_UPS_BREAKDOWN_LABEL_INTERN = \"Intern\";\nexport const ROLL_UPS_BREAKDOWN_LABEL_STUDENT = \"Student\";\nexport const LINK_LABEL = \"link\";\nexport const ID_LABEL = \"id\";\nexport const PID_LABEL = \"pid\";\nexport const TAGS_LABEL = \"tags\";\nexport const IMG_LABEL = \"img\";\n","import React, {PureComponent, createRef} from \"react\";\nimport OrgChart from \"@balkangraph/orgchart.js\";\nimport \"../../index.css\";\nimport {\n  DEPARTMENT_LABEL,\n  DIRECT_REPORTS_CONTRACTOR_LABEL,\n  DIRECT_REPORTS_FULL_TIME_LABEL,\n  DIRECT_REPORTS_PARTNER_LABEL,\n  DIRECT_REPORTS_TOTAL_LABEL,\n  EMAIL_LABEL,\n  EMPLOYEE_TYPE_LABEL,\n  ID_LABEL,\n  IMG_LABEL,\n  LOCATION_LABEL,\n  NAME_LABEL,\n  ROLL_UPS_BREAKDOWN_LABEL_CONTRACTOR,\n  ROLL_UPS_BREAKDOWN_LABEL_FULL_TIME,\n  ROLL_UPS_BREAKDOWN_LABEL_INTERN,\n  ROLL_UPS_BREAKDOWN_LABEL_PARTNER,\n  ROLL_UPS_BREAKDOWN_LABEL_STUDENT,\n  ROLL_UPS_LABEL,\n  TITLE_LABEL,\n  LINK_LABEL, ROLL_UPS_BREAKDOWN_LABEL,\n} from \"../../data/constants/OrgChart\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\n\nexport default class BalkanOrgChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.divRef = createRef();\n  }\n\n  componentDidMount() {\n    var children_count = 0;\n    let fulltime_children_count_full_time,\n      fulltime_children_count_contractor,\n      fulltime_children_count_partner,\n      fulltime_children_count_intern,\n      fulltime_children_count_student = 0;\n\n    OrgChart.templates.ula.field_7 =\n      '<circle cx=\"60\" cy=\"110\" r=\"15\" fill=\"#FA772E\"></circle><text fill=\"#ffffff\" x=\"60\" y=\"115\" text-anchor=\"middle\">{val}</text>';\n    OrgChart.templates.ula.field_0 =\n      '<text width=\"140\" text-overflow=\"ellipsis\"  style=\"font-size: 18px;\" fill=\"#1C1D22\" x=\"160\" y=\"40\" text-anchor=\"middle\">{val}</text>';\n    OrgChart.templates.ula.field_1 =\n      '<text width=\"140\" text-overflow=\"multiline\"  style=\"font-size: 14px;\" fill=\"#363944\" x=\"160\" y=\"70\" text-anchor=\"middle\">{val}</text>';\n\n    var chart = new OrgChart(this.divRef.current, {\n      nodes: this.props.nodes,\n      template: \"ula\",\n      scaleInitial: 0.75,\n      mouseScrool: OrgChart.action.zoom,\n      layout: OrgChart.treeRightOffset,\n      lazyLoading: true,\n      enableDragDrop: false,\n      align: OrgChart.ORIENTATION,\n      zoom: {speed: 120, smooth: 6},\n      toolbar: {\n        fullScreen: true,\n        zoom: true,\n        fit: true,\n        expandAll: true,\n      },\n      collapse: {\n        level: 2,\n        allChildren: true,\n      },\n      searchFields: [\n        IMG_LABEL,\n        NAME_LABEL,\n        TITLE_LABEL,\n        EMAIL_LABEL,\n        DEPARTMENT_LABEL,\n        LOCATION_LABEL,\n        EMPLOYEE_TYPE_LABEL,\n      ],\n      nodeBinding: {\n        img_0: IMG_LABEL,\n        field_0: NAME_LABEL,\n        field_1: TITLE_LABEL,\n        field_2: EMAIL_LABEL,\n        field_3: DEPARTMENT_LABEL,\n        field_4: LOCATION_LABEL,\n        field_5: EMPLOYEE_TYPE_LABEL,\n        field_6: LINK_LABEL,\n        field_7: DIRECT_REPORTS_TOTAL_LABEL,\n        field_8: DIRECT_REPORTS_FULL_TIME_LABEL,\n        field_9: DIRECT_REPORTS_CONTRACTOR_LABEL,\n        field_10: DIRECT_REPORTS_PARTNER_LABEL,\n        field_number_children2: ROLL_UPS_LABEL,\n        field_number_children3: ROLL_UPS_BREAKDOWN_LABEL\n      },\n    });\n\n    chart.editUI.on(\"field\", function (sender, args) {\n      if (args.name === ROLL_UPS_LABEL) {\n        args.field.querySelector(\"input\").value = children_count;\n      }\n      if (args.name === ROLL_UPS_BREAKDOWN_LABEL) {\n        const inputElement = args.field.querySelector(\"input\");\n        inputElement.outerHTML = inputElement.outerHTML.replace(/input/g,\"textarea\");\n\n        const textareaElement = args.field.querySelector(\"textarea\");\n        textareaElement.rows = '5';\n        textareaElement.style.resize = 'none';\n        textareaElement.value = `${ROLL_UPS_BREAKDOWN_LABEL_FULL_TIME}: ${fulltime_children_count_full_time}\\n${ROLL_UPS_BREAKDOWN_LABEL_CONTRACTOR}: ${fulltime_children_count_contractor}\\n${ROLL_UPS_BREAKDOWN_LABEL_PARTNER}: ${fulltime_children_count_partner}\\n${ROLL_UPS_BREAKDOWN_LABEL_STUDENT}: ${fulltime_children_count_student}\\n${ROLL_UPS_BREAKDOWN_LABEL_INTERN}: ${fulltime_children_count_intern}`;\n      }\n    });\n\n    chart.editUI.on(\"show\", function (sender, nodeId) {\n      var children = {\n        count: 0,\n      };\n      var fulltimechildren = {\n        count: 0,\n      };\n      var partnerchildren = {\n        count: 0,\n      };\n      var contractorchildren = {\n        count: 0,\n      };\n      var internchildren = {\n        count: 0,\n      };\n      var studentchildren = {\n        count: 0,\n      };\n\n      childrenCount(children, nodeId);\n      children_count = children.count;\n      rollupChildrenCount(\n        fulltimechildren,\n        partnerchildren,\n        contractorchildren,\n        internchildren,\n        studentchildren,\n        nodeId\n      );\n      fulltime_children_count_full_time = fulltimechildren.count;\n      fulltime_children_count_contractor = contractorchildren.count;\n      fulltime_children_count_partner = partnerchildren.count;\n      fulltime_children_count_intern = internchildren.count;\n      fulltime_children_count_student = studentchildren.count;\n    });\n\n    function childrenCount(children, nodeId) {\n      var node = chart.getNode(nodeId);\n\n      for (var i = 0; i < node.childrenIds?.length; i++) {\n        chart.get(node.childrenIds[i]);\n        children.count++;\n        childrenCount(children, node.childrenIds[i]);\n      }\n    }\n\n    chart.editUI.on(\"field\", function (sender, args) {\n      var txt;\n      if (args.name === \"link\") {\n        txt = args.field.querySelector(\"input\");\n        if (txt) {\n          txt.style.color = \"black\";\n\n          var link = document.createElement(\"a\");\n          link.style.color = \"blue\";\n          link.style.textDecoration = \"underline\";\n          link.style.fontSize = \"16px\";\n          link.innerHTML = \"View user profile\";\n          link.target = \"\";\n          link.href = FrontendRoutes.USER_DIRECTORY_PROFILE(txt.value);\n\n          txt.parentNode.appendChild(link);\n          txt.parentNode.removeChild(txt);\n        }\n      }\n    });\n\n    function rollupChildrenCount(\n      fulltimechildren,\n      partnerchildren,\n      contractorchildren,\n      internchildren,\n      studentchildren,\n      nodeId\n    ) {\n      var node = chart.getNode(nodeId);\n\n      for (var i = 0; i < node.childrenIds?.length; i++) {\n        var childNodeData = chart.get(node.childrenIds[i]);\n        if (childNodeData[EMPLOYEE_TYPE_LABEL] != null) {\n          if (\"Full Time Employee\" === childNodeData[EMPLOYEE_TYPE_LABEL]) {\n            fulltimechildren.count++;\n            rollupChildrenCount(\n              fulltimechildren,\n              partnerchildren,\n              contractorchildren,\n              internchildren,\n              studentchildren,\n              node.childrenIds[i]\n            );\n          }\n          if (\"Partner\" === childNodeData[EMPLOYEE_TYPE_LABEL]) {\n            partnerchildren.count++;\n            rollupChildrenCount(\n              fulltimechildren,\n              partnerchildren,\n              contractorchildren,\n              internchildren,\n              studentchildren,\n              node.childrenIds[i]\n            );\n          }\n          if (\"Contractor/consultant\" === childNodeData[EMPLOYEE_TYPE_LABEL]) {\n            contractorchildren.count++;\n            rollupChildrenCount(\n              fulltimechildren,\n              partnerchildren,\n              contractorchildren,\n              internchildren,\n              studentchildren,\n              node.childrenIds[i]\n            );\n          }\n          if (\"Student\" === childNodeData[EMPLOYEE_TYPE_LABEL]) {\n            studentchildren.count++;\n            rollupChildrenCount(\n              fulltimechildren,\n              partnerchildren,\n              contractorchildren,\n              internchildren,\n              studentchildren,\n              node.childrenIds[i]\n            );\n          }\n          if (\"Intern\" === childNodeData[EMPLOYEE_TYPE_LABEL]) {\n            internchildren.count++;\n            rollupChildrenCount(\n              fulltimechildren,\n              partnerchildren,\n              contractorchildren,\n              internchildren,\n              studentchildren,\n              node.childrenIds[i]\n            );\n          }\n        }\n      }\n    }\n\n    chart.editUI.on(\"field\", function (sender, args) {\n      var txt;\n\n      if (args.name === DIRECT_REPORTS_TOTAL_LABEL) {\n        txt = args.field.querySelector(\"input\");\n        if (txt.value === \"0\") {\n          return false;\n        }\n      }\n\n      if (args.name === DIRECT_REPORTS_PARTNER_LABEL) {\n        txt = args.field.querySelector(\"input\");\n        if (txt.value === \"0\") {\n          return false;\n        }\n      }\n\n      if (args.name === DIRECT_REPORTS_CONTRACTOR_LABEL) {\n        txt = args.field.querySelector(\"input\");\n        if (txt.value === \"0\") {\n          return false;\n        }\n      }\n\n      if (args.name === DIRECT_REPORTS_FULL_TIME_LABEL) {\n        txt = args.field.querySelector(\"input\");\n        if (txt.value === \"0\") {\n          return false;\n        }\n      }\n    });\n  }\n\n  render() {\n    return <div id=\"tree\" ref={this.divRef} />;\n  }\n}\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_OKTA_USERS = gql`\n  query GetAllOktaUsers {\n    get_all_okta_users {\n      id\n      email\n      employeeNumber\n      employeeType\n      department\n      firstName\n      jobTitle\n      lastName\n      location\n      managerOktaId\n      managerEmail\n      managerEmployeeNumber\n      photo\n      userName\n      totalDirectReports\n      totalFullTimeDirects\n      totalContractorDirects\n      totalPartnerDirects\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport LoadingLogo from \"../../components/LoadingLogo\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport BalkanOrgChart from \"./BalkanOrgChart\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ALL_OKTA_USERS} from \"../../operations/queries/getAllOktaUsers\";\nimport handleError from \"../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n  DEPARTMENT_LABEL,\n  DIRECT_REPORTS_CONTRACTOR_LABEL,\n  DIRECT_REPORTS_FULL_TIME_LABEL,\n  DIRECT_REPORTS_PARTNER_LABEL,\n  DIRECT_REPORTS_TOTAL_LABEL,\n  EMAIL_LABEL,\n  EMPLOYEE_TYPE_LABEL,\n  ID_LABEL,\n  IMG_LABEL,\n  LINK_LABEL,\n  LOCATION_LABEL,\n  NAME_LABEL,\n  PID_LABEL,\n  TAGS_LABEL,\n  TITLE_LABEL,\n} from \"../../data/constants/OrgChart\";\n\nconst useStyles = makeStyles(() => ({\n  loadingBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"60vh\",\n  },\n}));\n\nconst OrganizationChartPage = ({email}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {permOrgChartView} = useContext(AuthUserContext);\n  const [display, setDisplay] = useState(false);\n  const [nodesList, setNodesList] = useState([]);\n  const [isChartReady, setIsChartReady] = useState(false);\n\n  useQuery(GET_ALL_OKTA_USERS, {\n    onCompleted: (data) => {\n      getNodes(data.get_all_okta_users);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    setDisplay(true);\n    return () => setDisplay(false);\n  }, []);\n\n  const getNodes = async (allData) => {\n    const allObj = [\n      {\n        [ID_LABEL]: 0,\n        [NAME_LABEL]: \"LivePerson\",\n        [TITLE_LABEL]: \"\",\n        [IMG_LABEL]:\n          \"https://storage.googleapis.com/lpsync/orange_lp_symbol_logo.png\",\n      },\n    ];\n\n    await allData?.forEach((data) => {\n      const mgrId = data.managerOktaId\n        ? data.managerOktaId\n        : \"00u1wd2tyuFt34lFn2p6\";\n\n      const drTotal =\n        data.totalDirectReports === 0 ? \"IC\" : data.totalDirectReports;\n\n      const userPhoto = data.photo ? data.photo : \"/images/silhouette.jpeg\";\n\n      const obj = {\n        [ID_LABEL]: data.id,\n        [PID_LABEL]: mgrId,\n        [TAGS_LABEL]: [data.employeeType],\n        [IMG_LABEL]: userPhoto,\n        [NAME_LABEL]: `${data.firstName} ${data.lastName}`,\n        [TITLE_LABEL]: data.jobTitle,\n        [EMAIL_LABEL]: data.email,\n        [DEPARTMENT_LABEL]: data.department,\n        [LOCATION_LABEL]: data.location,\n        [EMPLOYEE_TYPE_LABEL]: data.employeeType,\n        [LINK_LABEL]: data.userName,\n        [DIRECT_REPORTS_TOTAL_LABEL]: drTotal,\n        [DIRECT_REPORTS_FULL_TIME_LABEL]: data.totalFullTimeDirects,\n        [DIRECT_REPORTS_CONTRACTOR_LABEL]: data.totalContractorDirects,\n        [DIRECT_REPORTS_PARTNER_LABEL]: data.totalPartnerDirects,\n      };\n\n      allObj.push(obj);\n    });\n\n    setNodesList(allObj);\n    setIsChartReady(true);\n  };\n\n  return (\n    <Page title=\"Organization Chart | LPSYNC\">\n      <Box mt={1} ml={1}>\n        <BreadcrumbHomeBox>\n          <BreadcrumbText title={\"ORGANIZATION CHART\"} />\n        </BreadcrumbHomeBox>\n      </Box>\n      <Box ml={2}>\n        {permOrgChartView ? (\n          <Box className={`${!isChartReady ? classes.loadingBox : \"\"}`}>\n            {!isChartReady && display ? (\n              <LoadingLogo />\n            ) : (\n              <BalkanOrgChart nodes={nodesList} email={email} />\n            )}\n          </Box>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default connect(\n  (state) => ({email: state.common.get(\"orgChartEmail\")}),\n  {}\n)(memo(OrganizationChartPage));\n","import React, { createContext, useState } from \"react\";\n\nexport const RequisitionRequestContext = createContext();\n\nconst RequisitionRequestContextProvider = ({ children }) => {\n  const [requisitionType, setRequisitionType] = useState(null);\n  const [requisitionTypeError, setRequisitionTypeError] = useState(false);\n  const [plannedStartDate, setPlannedStartDate] = useState(\"\");\n  const [plannedStartDateError, setPlannedStartDateError] = useState(false);\n  const [selectedManager, setSelectedManager] = useState();\n  const [selectedManagerError, setSelectedManagerError] = useState(false);\n  const [selectedBusinessUnit, setSelectedBusinessUnit] = useState(null);\n  const [selectedBusinessUnitError, setSelectedBusinessUnitError] =\n    useState(false);\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n  const [selectedDepartmentError, setSelectedDepartmentError] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [locationError, setLocationError] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [isBackfillChecked, setIsBackfillChecked] = useState(false);\n  const [selectedBackfill, setSelectedBackfill] = useState(null);\n  const [selectedBackfillError, setSelectedBackfillError] = useState();\n  const [isCostCenterDisabled, setIsCostCenterDisabled] = useState(true);\n  const [costCenterData, setCostCenterData] = useState();\n  const [managerCostCenter, setManagerCostCenter] = useState();\n  const [selectedCompanyCode, setSelectedCompanyCode] = useState();\n  const [selectedCompanyCodeError, setSelectedCompanyCodeError] =\n    useState(false);\n  const [selectedParentMgmtCostCenter, setSelectedParentMgmtCostCenter] =\n    useState();\n  const [\n    selectedParentMgmtCostCenterError,\n    setSelectedParentMgmtCostCenterError,\n  ] = useState(false);\n  const [selectedMgmtCostCenter, setSelectedMgmtCostCenter] = useState();\n  const [selectedMgmtCostCenterError, setSelectedMgmtCostCenterError] =\n    useState(false);\n  const [selectedFunctionalAreaDesc, setSelectedFunctionalAreaDesc] =\n    useState();\n  const [selectedFunctionalAreaDescError, setSelectedFunctionalAreaDescError] =\n    useState(false);\n  const [selectedCountryDesc, setSelectedCountryDesc] = useState();\n  const [selectedCountryDescError, setSelectedCountryDescError] =\n    useState(false);\n  const [jobCode, setJobCode] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobCodeError, setJobCodeError] = useState(false);\n  const [jobTitleError, setJobTitleError] = useState(false);\n  const [selectedReqSpendCurrency, setSelectedReqSpendCurrency] =\n    useState(null);\n  const [selectedReqSpendCurrencyError, setSelectedReqSpendCurrencyError] =\n    useState(false);\n  const [reqSpendAmount, setReqSpendAmount] = useState(\"\");\n  const [reqSpendAmountError, setReqSpendAmountError] = useState(false);\n  const [selectedReqSpendPeriod, setSelectedReqSpendPeriod] = useState(\"\");\n  const [selectedReqSpendPeriodError, setSelectedReqSpendPeriodError] =\n    useState(false);\n  const [reqBonusAmount, setReqBonusAmount] = useState(\"\");\n  const [reqBonusAmountError, setReqBonusAmountError] = useState(false);\n  const [selectedReqBonusType, setSelectedReqBonusType] = useState(\"%\");\n  const [reqBonusTypeCurrencyError, setReqBonusTypeCurrencyError] =\n    useState(false);\n  const [reqCommissionAmount, setReqCommissionAmount] = useState(\"\");\n  const [reqCommissionAmountError, setReqCommissionAmountError] =\n    useState(false);\n  const [selectedReqCommissionCurrency, setSelectedReqCommissionCurrency] =\n    useState(null);\n  const [\n    selectedReqCommissionCurrencyError,\n    setSelectedReqCommissionCurrencyError,\n  ] = useState(false);\n  const [contractMonths, setContractMonths] = useState(\"\");\n  const [contractMonthsError, setContractMonthsError] = useState(false);\n  const [contractHours, setContractHours] = useState(\"\");\n  const [contractHoursError, setContractHoursError] = useState(false);\n  const [comments, setComments] = useState();\n  const [commentsError, setCommentsError] = useState(false);\n  const [isCodeChanged, setIsCodeChanged] = useState(false);\n\n  return (\n    <RequisitionRequestContext.Provider\n      value={{\n        requisitionType,\n        setRequisitionType,\n        requisitionTypeError,\n        setRequisitionTypeError,\n        plannedStartDate,\n        setPlannedStartDate,\n        plannedStartDateError,\n        setPlannedStartDateError,\n        selectedManager,\n        setSelectedManager,\n        selectedManagerError,\n        setSelectedManagerError,\n        selectedBusinessUnit,\n        setSelectedBusinessUnit,\n        selectedBusinessUnitError,\n        setSelectedBusinessUnitError,\n        selectedDepartment,\n        setSelectedDepartment,\n        selectedDepartmentError,\n        setSelectedDepartmentError,\n        location,\n        setLocation,\n        locationError,\n        setLocationError,\n        selectedLocation,\n        setSelectedLocation,\n        isBackfillChecked,\n        setIsBackfillChecked,\n        selectedBackfill,\n        setSelectedBackfill,\n        selectedBackfillError,\n        setSelectedBackfillError,\n        isCostCenterDisabled,\n        setIsCostCenterDisabled,\n        costCenterData,\n        setCostCenterData,\n        managerCostCenter,\n        setManagerCostCenter,\n        selectedCompanyCode,\n        setSelectedCompanyCode,\n        selectedCompanyCodeError,\n        setSelectedCompanyCodeError,\n        selectedParentMgmtCostCenter,\n        setSelectedParentMgmtCostCenter,\n        selectedParentMgmtCostCenterError,\n        setSelectedParentMgmtCostCenterError,\n        selectedMgmtCostCenter,\n        setSelectedMgmtCostCenter,\n        selectedMgmtCostCenterError,\n        setSelectedMgmtCostCenterError,\n        selectedFunctionalAreaDesc,\n        setSelectedFunctionalAreaDesc,\n        selectedFunctionalAreaDescError,\n        setSelectedFunctionalAreaDescError,\n        selectedCountryDesc,\n        setSelectedCountryDesc,\n        selectedCountryDescError,\n        setSelectedCountryDescError,\n        jobCode,\n        setJobCode,\n        jobCodeError,\n        setJobCodeError,\n        jobTitle,\n        setJobTitle,\n        jobTitleError,\n        setJobTitleError,\n        selectedReqSpendCurrency,\n        setSelectedReqSpendCurrency,\n        selectedReqSpendCurrencyError,\n        setSelectedReqSpendCurrencyError,\n        reqSpendAmount,\n        setReqSpendAmount,\n        reqSpendAmountError,\n        setReqSpendAmountError,\n        selectedReqSpendPeriod,\n        setSelectedReqSpendPeriod,\n        selectedReqSpendPeriodError,\n        setSelectedReqSpendPeriodError,\n        reqBonusAmount,\n        setReqBonusAmount,\n        reqBonusAmountError,\n        setReqBonusAmountError,\n        selectedReqBonusType,\n        setSelectedReqBonusType,\n        reqBonusTypeCurrencyError,\n        setReqBonusTypeCurrencyError,\n        reqCommissionAmount,\n        setReqCommissionAmount,\n        reqCommissionAmountError,\n        setReqCommissionAmountError,\n        selectedReqCommissionCurrency,\n        setSelectedReqCommissionCurrency,\n        selectedReqCommissionCurrencyError,\n        setSelectedReqCommissionCurrencyError,\n        contractMonths,\n        setContractMonths,\n        contractMonthsError,\n        setContractMonthsError,\n        contractHours,\n        setContractHours,\n        contractHoursError,\n        setContractHoursError,\n        comments,\n        setComments,\n        commentsError,\n        setCommentsError,\n        isCodeChanged,\n        setIsCodeChanged,\n      }}\n    >\n      {children}\n    </RequisitionRequestContext.Provider>\n  );\n};\n\nexport default RequisitionRequestContextProvider;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_REQUISITION_TASK = gql`\n  mutation CreateRequisitionTask($input: LpsyncTaskInput) {\n    createRequisitionTask(input: $input) {\n      id\n      taskType\n      taskStatus\n      taskScheduleType\n      taskCreatedDateTime\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqHiringManagerFirstName\n        reqHiringManagerLastName\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n      }\n    }\n  }\n`;\n","import React, {memo, useContext, useState} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {Button} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"./RequisitionRequestContextProvider\";\nimport {CREATE_LOG_ENTRY} from \"../../operations/mutations/createLogEntry\";\nimport {CREATE_REQUISITION_TASK} from \"../../operations/mutations/createRequisitionTask\";\nimport MissedInputModal from \"../../components/modals/MissedInputModal\";\nimport {\n  isEmpty, isMoreThan25Char,\n  isPastDate,\n  validateNumberInput,\n  validateSalaryInput\n} from \"../../data/helper/validation\";\nimport {getValidationMessage} from \"../../data/helper/helpers\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\n\nconst StepperButtons = (props) => {\n  const {\n    requisitionType,\n    setRequisitionTypeError,\n    plannedStartDate,\n    setPlannedStartDateError,\n    selectedManager,\n    setSelectedManagerError,\n    selectedBusinessUnit,\n    setSelectedBusinessUnitError,\n    selectedDepartment,\n    setSelectedDepartmentError,\n    location,\n    setLocationError,\n    isBackfillChecked,\n    selectedBackfill,\n    setSelectedBackfillError,\n    selectedCompanyCode,\n    setSelectedCompanyCodeError,\n    selectedParentMgmtCostCenter,\n    setSelectedParentMgmtCostCenterError,\n    selectedMgmtCostCenter,\n    setSelectedMgmtCostCenterError,\n    selectedFunctionalAreaDesc,\n    setSelectedFunctionalAreaDescError,\n    selectedCountryDesc,\n    setSelectedCountryDescError,\n    jobCode,\n    setJobCodeError,\n    jobTitle,\n    setJobTitleError,\n    selectedReqSpendCurrency,\n    setSelectedReqSpendCurrencyError,\n    reqSpendAmount,\n    setReqSpendAmountError,\n    selectedReqSpendPeriod,\n    setSelectedReqSpendPeriodError,\n    reqBonusAmount,\n    selectedReqBonusType,\n    setReqBonusTypeCurrencyError,\n    reqCommissionAmount,\n    selectedReqCommissionCurrency,\n    contractMonths,\n    setContractMonthsError,\n    contractHours,\n    setContractHoursError,\n    comments,\n    setCommentsError,\n  } = useContext(RequisitionRequestContext);\n  const [open, setOpen] = useState(false);\n  const [modalMsg, setModalMsg] = useState(\"\");\n\n  const [createRequisitionTask] = useMutation(CREATE_REQUISITION_TASK, {\n    onCompleted(data) {\n      createLog(\n        \"info\",\n        `Requisition Task Created (${data.createRequisitionTask.id}); Type: ${requisitionType}; Planned Start Date: ${plannedStartDate};  Manager: ${selectedManager.profile.email}; Business Unit: ${selectedBusinessUnit.businessUnit}; Department: ${selectedDepartment.department}; Location: ${location.description} (${location.locationCode}); Backfill?: ${isBackfillChecked}; Cost Center: ${selectedCompanyCode.costCenterCode}-${selectedParentMgmtCostCenter.costCenterCode}-${selectedMgmtCostCenter.costCenterCode}-${selectedFunctionalAreaDesc.costCenterCode}-${selectedCountryDesc.costCenterCode}-00; Job Code: ${jobCode};`\n      );\n    },\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"Requisition\",\n          logNotification: info,\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  const createTask = (backfill) => {\n    createRequisitionTask({\n      variables: {\n        input: {\n          taskType: TaskTypes.REQUISITION,\n          taskStatus: TaskStatuses.PENDING,\n          taskScheduleType: TaskScheduleTypes.IMMEDIATE,\n          requisitionTask: {\n            reqType: requisitionType,\n            reqStartDate: `${plannedStartDate}T00:00`,\n            reqHiringManagerEmail: selectedManager?.profile?.email,\n            reqHiringManagerFirstName: selectedManager?.profile?.firstName,\n            reqHiringManagerLastName: selectedManager?.profile?.lastName,\n            reqHiringManagerId: selectedManager?.profile?.employeeNumber,\n            reqBusinessUnit: selectedBusinessUnit?.businessUnit,\n            reqDepartment: selectedDepartment?.department,\n            reqLocation: location?.locationCode,\n            reqLocationDescription: location?.description,\n            isBackfill: isBackfillChecked,\n            reqBackfillFirstName: backfill?.firstName,\n            reqBackfillLastName: backfill?.lastName,\n            reqBackfillUsername: backfill?.userName,\n            reqCompanyCode: selectedCompanyCode?.costCenterCode,\n            reqParentMgmtCC: selectedParentMgmtCostCenter?.costCenterCode,\n            reqManagementCC: selectedMgmtCostCenter?.costCenterCode,\n            reqFunctionalAreaDesc: selectedFunctionalAreaDesc?.costCenterCode,\n            reqCountryDesc: selectedCountryDesc?.costCenterCode,\n            reqJobCode: jobCode,\n            reqJobTitle: jobTitle,\n            reqSpendCurrency: selectedReqSpendCurrency?.AlphabeticCode,\n            reqSpendAmount: parseFloat(reqSpendAmount),\n            reqSpendPeriod: selectedReqSpendPeriod,\n            reqBonusAmount: parseFloat(reqBonusAmount),\n            reqBonusType: selectedReqBonusType,\n            reqCommissionCurrency: selectedReqCommissionCurrency\n              ? selectedReqCommissionCurrency.AlphabeticCode\n              : \"\",\n            reqCommissionAmount: parseFloat(reqCommissionAmount),\n            reqContractMonths: parseInt(contractMonths),\n            reqContractHoursPerWeek: parseInt(contractHours),\n            comments: comments,\n          },\n        },\n      },\n    });\n  };\n\n  const handleCheck = () => {\n    const errorMessage =\n      getValidationMessage(\n        requisitionType,\n        [isEmpty],\n        \"Requisition Type\",\n        setRequisitionTypeError\n      ) ||\n      getValidationMessage(\n        plannedStartDate,\n        [isEmpty],\n        \"Start Date\",\n        setPlannedStartDateError\n      ) ||\n      getValidationMessage(\n        plannedStartDate,\n        [isPastDate],\n        \"Start Date\",\n        setPlannedStartDateError\n      ) ||\n      getValidationMessage(\n        selectedManager,\n        [isEmpty],\n        \"Manager\",\n        setSelectedManagerError\n      ) ||\n      getValidationMessage(\n        selectedBusinessUnit,\n        [isEmpty],\n        \"Business Unit\",\n        setSelectedBusinessUnitError\n      ) ||\n      getValidationMessage(\n        selectedDepartment,\n        [isEmpty],\n        \"Department\",\n        setSelectedDepartmentError\n      ) ||\n      getValidationMessage(location, [isEmpty], \"Location\", setLocationError) ||\n      getValidationMessage(\n        selectedCompanyCode,\n        [isEmpty],\n        \"Company Code\",\n        setSelectedCompanyCodeError\n      ) ||\n      getValidationMessage(\n        selectedParentMgmtCostCenter,\n        [isEmpty],\n        \"Parent Management Cost Center\",\n        setSelectedParentMgmtCostCenterError\n      ) ||\n      getValidationMessage(\n        selectedMgmtCostCenter,\n        [isEmpty],\n        \"Management Cost Center\",\n        setSelectedMgmtCostCenterError\n      ) ||\n      getValidationMessage(\n        selectedFunctionalAreaDesc,\n        [isEmpty],\n        \"Functional Area Description\",\n        setSelectedFunctionalAreaDescError\n      ) ||\n      getValidationMessage(\n        selectedCountryDesc,\n        [isEmpty],\n        \"Country Description\",\n        setSelectedCountryDescError\n      ) ||\n      getValidationMessage(\n        jobCode,\n        [isEmpty],\n        \"Job Code\",\n        setJobCodeError\n      )||\n      getValidationMessage(\n        jobTitle,\n        [isEmpty, isMoreThan25Char],\n        \"Job Title\",\n        setJobTitleError\n      ) ||\n      getValidationMessage(\n        selectedReqSpendCurrency,\n        [isEmpty],\n        \"Requisition Spend Currency\",\n        setSelectedReqSpendCurrencyError\n      ) ||\n      getValidationMessage(\n        reqSpendAmount,\n        [isEmpty, validateSalaryInput],\n        \"Requisition Spend Amount\",\n        setReqSpendAmountError\n      ) ||\n      getValidationMessage(\n        selectedReqSpendPeriod,\n        [isEmpty],\n        \"Requisition Spend Period\",\n        setSelectedReqSpendPeriodError\n      ) ||\n      (reqBonusAmount &&\n        getValidationMessage(\n          reqBonusAmount,\n          [validateSalaryInput],\n          \"Requisition Bonus Amount\"\n        )) ||\n      (reqBonusAmount &&\n        selectedReqBonusType !== \"%\" &&\n        getValidationMessage(\n          selectedReqBonusType,\n          [isEmpty],\n          \"Requisition Bonus Currency\",\n          setReqBonusTypeCurrencyError\n        )) ||\n      ((selectedReqCommissionCurrency || reqCommissionAmount) &&\n        getValidationMessage(\n          reqCommissionAmount,\n          [validateSalaryInput],\n          \"Requisition Commission Amount\"\n        )) ||\n      ((selectedReqCommissionCurrency || reqCommissionAmount) &&\n        getValidationMessage(\n          selectedReqCommissionCurrency,\n          [isEmpty],\n          \"Requisition Commission Currency\"\n        )) ||\n      getValidationMessage(\n        contractMonths,\n        [isEmpty, validateNumberInput],\n        \"Contract Months\",\n        setContractMonthsError\n      ) ||\n      getValidationMessage(\n        contractHours,\n        [isEmpty, validateNumberInput],\n        \"Contract Hours\",\n        setContractHoursError\n      ) ||\n      getValidationMessage(comments, [isEmpty], \"Comments\", setCommentsError) ||\n      (isBackfillChecked &&\n        getValidationMessage(\n          selectedBackfill,\n          [isEmpty],\n          \"Backfill\",\n          setSelectedBackfillError\n        ));\n\n    if (errorMessage) {\n      handleOpen(errorMessage);\n    } else {\n      props.handleNext();\n    }\n  };\n\n  const handleOnClick = () => {\n    handleCheck();\n\n    if (props?.activeStep === props?.steps?.length - 2) {\n      const backfill = isBackfillChecked\n        ? {\n            firstName: selectedBackfill.firstName,\n            lastName: selectedBackfill.lastName,\n            userName: selectedBackfill.userName,\n          }\n        : {\n            firstName: \"\",\n            lastName: \"\",\n            userName: \"\",\n          };\n\n      createTask(backfill);\n    }\n  };\n\n  const handleOpen = (msg) => {\n    setModalMsg(msg + \"!\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <>\n        <Button\n          disabled={props?.activeStep === 0}\n          onClick={() => props?.handleBack()}\n        >\n          Back\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleOnClick}>\n          {props?.activeStep === props.steps?.length - 2 ? \"Confirm\" : \"Next\"}\n        </Button>\n      </>\n\n      <MissedInputModal\n        open={open}\n        handleClose={handleClose}\n        modalMsg={modalMsg}\n      />\n    </>\n  );\n};\n\nexport default memo(StepperButtons);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ULTI_LOCATIONS = gql`\n  query GetUltiLocations {\n    get_ulti_locations {\n      id\n      locationCode\n      locationCountry\n      locationCountryCode\n      locationDescription\n      locationRegion\n    }\n  }\n`;\n","import React, {useContext} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {GET_ULTI_LOCATIONS} from \"../../../../operations/queries/getUltiLocations\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst LocationSelect = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    setLocation,\n    locationError,\n    setLocationError,\n    selectedLocation,\n    setSelectedLocation,\n  } = useContext(RequisitionRequestContext);\n\n  const {data} = useQuery(GET_ULTI_LOCATIONS, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleChange = (value) => {\n    setSelectedLocation(value);\n    if (value) {\n      setLocation({\n        description: value.locationDescription,\n        countryCode: value.locationCountryCode,\n        locationCode: value.locationCode,\n      });\n    } else {\n      setLocation(null);\n    }\n\n    setLocationError(false);\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography\n            component={\"div\"}\n            variant=\"subtitle1\"\n            className={classes.leftText}\n          >\n            Select location\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            {data && (\n              <Autocomplete\n                value={selectedLocation}\n                options={data.get_ulti_locations}\n                getOptionLabel={(option) =>\n                  `${option.locationDescription} (${option.locationCountryCode})`\n                }\n                style={{width: 400}}\n                renderInput={(params) => (\n                  <AutocompleteTextField\n                    {...params}\n                    required\n                    error={locationError}\n                    label=\"Select Location\"\n                  />\n                )}\n                onChange={(event, newValue) => {\n                  handleChange(newValue);\n                }}\n              />\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default LocationSelect;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ULTI_BU_DEPT = gql`\n  query GetUltiBUDept {\n    get_ulti_bu_dept {\n      id\n      businessUnit\n      department\n    }\n  }\n`;\n","import React, {useContext, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {GET_ULTI_BU_DEPT} from \"../../../../operations/queries/getUltiBUDept\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst BusinessUnitDeptSelect = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    selectedBusinessUnit,\n    setSelectedBusinessUnit,\n    selectedBusinessUnitError,\n    setSelectedBusinessUnitError,\n    selectedDepartment,\n    setSelectedDepartment,\n    selectedDepartmentError,\n    setSelectedDepartmentError,\n  } = useContext(RequisitionRequestContext);\n  const [buData, setBuData] = useState();\n  const [deptData, setDeptData] = useState();\n\n  const {data} = useQuery(GET_ULTI_BU_DEPT, {\n    onCompleted: (data) =>\n      setBuData([\n        ...new Map(\n          data.get_ulti_bu_dept.map((item) => [item.businessUnit, item])\n        ).values(),\n      ]),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleBusinessChange = (value) => {\n    if (value) {\n      setSelectedBusinessUnit(value);\n      setSelectedDepartment(null);\n\n      const result = data.get_ulti_bu_dept.filter((obj) => {\n        return obj.businessUnit === value.businessUnit;\n      });\n\n      const sorted = result.sort((a, b) =>\n        a.department > b.department ? 1 : b.department > a.department ? -1 : 0\n      );\n\n      setDeptData(sorted);\n    } else {\n      setSelectedBusinessUnit(null);\n      setDeptData(null);\n      setSelectedDepartment(null);\n    }\n\n    setSelectedBusinessUnitError(false);\n  };\n\n  const handleDepartmentChange = (value) => {\n    if (value) {\n      setSelectedDepartment(value);\n    } else {\n      setSelectedDepartment(null);\n    }\n\n    setSelectedDepartmentError(false);\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography\n            component={\"div\"}\n            variant=\"subtitle1\"\n            className={classes.leftText}\n          >\n            Select business unit\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            {buData && (\n              <Autocomplete\n                value={selectedBusinessUnit}\n                options={buData}\n                getOptionLabel={(option) => option.businessUnit}\n                style={{width: 400}}\n                renderInput={(params) => (\n                  <AutocompleteTextField\n                    {...params}\n                    required\n                    error={selectedBusinessUnitError}\n                    label=\"Select Business Unit\"\n                  />\n                )}\n                onChange={(event, newValue) => {\n                  handleBusinessChange(newValue);\n                }}\n              />\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n      {deptData && (\n        <Grid item container>\n          <Grid item xs={4}>\n            <Typography\n              component={\"div\"}\n              variant=\"subtitle1\"\n              className={classes.leftText}\n            >\n              Select department\n            </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Box>\n              {buData && (\n                <Autocomplete\n                  value={selectedDepartment}\n                  options={deptData}\n                  getOptionLabel={(option) => option.department}\n                  style={{width: 400}}\n                  renderInput={(params) => (\n                    <AutocompleteTextField\n                      {...params}\n                      required\n                      error={selectedDepartmentError}\n                      label=\"Select Department\"\n                    />\n                  )}\n                  onChange={(event, newValue) => {\n                    handleDepartmentChange(newValue);\n                  }}\n                />\n              )}\n            </Box>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default BusinessUnitDeptSelect;\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {SEARCH_USERS_QUERY} from \"../../../../operations/queries/searchUsersQuery\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport SelectCircularProgress from \"../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport useDebouncedChangeHandler from \"../../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  textField: {\n    width: \"60ch\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    width: \"60ch\",\n    marginLeft: 0,\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n}));\n\nconst ManagerSelect = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    selectedManager,\n    setSelectedManager,\n    selectedManagerError,\n    setSelectedManagerError,\n    setManagerCostCenter,\n    setSelectedCompanyCode,\n    setSelectedParentMgmtCostCenter,\n    setSelectedMgmtCostCenter,\n    setSelectedFunctionalAreaDesc,\n    setSelectedCountryDesc,\n    setIsBackfillChecked,\n    setSelectedBackfill,\n  } = useContext(RequisitionRequestContext);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [usersData, setUsersData] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [isResultsLoading, setIsResultsLoading] = useState(false);\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERS_QUERY, {\n    onCompleted: (data) => {\n      setUsersData(data?.search_users);\n      setIsResultsLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchQuery?.length > 0) {\n      executeSearch({variables: {search: searchQuery}});\n    } else if (searchQuery?.length === 0) {\n      setResultsOpen(false);\n      setUsersData(\"\");\n    }\n  }, [searchQuery, executeSearch]);\n\n  const handleClick = (selected) => {\n    setSelectedManager(selected);\n    setSelectedManagerError(false);\n    setSearchQuery(\"\");\n  };\n\n  const clearSelectedManager = () => {\n    setSelectedManager(\"\");\n    setIsBackfillChecked(false);\n    setSelectedBackfill();\n    setManagerCostCenter();\n    setSelectedCompanyCode();\n    setSelectedParentMgmtCostCenter();\n    setSelectedMgmtCostCenter();\n    setSelectedFunctionalAreaDesc();\n    setSelectedCountryDesc();\n  };\n\n  const searchOnChange = useCallback((value) => {\n    setIsResultsLoading(true);\n    setResultsOpen(true);\n    setSearchQuery(value);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(searchOnChange);\n  useEffect(() => {debouncedChangeHandler(query)}, [query]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <Typography\n          component={\"div\"}\n          variant=\"subtitle1\"\n          className={classes.leftText}\n        >\n          Select hiring manager\n        </Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <>\n            {!selectedManager && (\n              <Box mb={2} className={classes.box}>\n                <TextField\n                  required\n                  label=\"Search\"\n                  variant=\"standard\"\n                  helperText=\"Search by Name, Email, or HRIS ID\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  error={selectedManagerError}\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  className={classes.textField}\n                />\n\n                {searchQuery?.length > 0 && (\n                  <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n                    <Box className={classes.resultsBox}>\n                      <Paper>\n                        {isResultsLoading && <SelectCircularProgress />}\n                        {usersData && (\n                          <>\n                            {usersData?.length === 0 ? (\n                              <Box m={1}>\n                                <NoResultsTypography />\n                              </Box>\n                            ) : (\n                              <List>\n                                {usersData.map((user) => (\n                                  <React.Fragment key={user.id}>\n                                    <ListItem\n                                      key={user.id}\n                                      button\n                                      onClick={() => handleClick(user)}\n                                    >\n                                      <ListItemText\n                                        primary={\n                                          <>\n                                            <Typography\n                                              component={\"div\"}\n                                              variant=\"subtitle1\"\n                                            >\n                                              {user.profile.firstName}{\" \"}\n                                              {user.profile.lastName} |{\" \"}\n                                              {user.profile.location} |{\" \"}\n                                              {user.profile.jobTitle}\n                                            </Typography>\n                                          </>\n                                        }\n                                      />\n                                    </ListItem>\n                                    {usersData?.length > 1 && <Divider />}\n                                  </React.Fragment>\n                                ))}\n                              </List>\n                            )}\n                          </>\n                        )}\n                      </Paper>\n                    </Box>\n                  </Collapse>\n                )}\n              </Box>\n            )}\n            {selectedManager && (\n              <>\n                <Box mt={2}>\n                  <Box mb={1} mt={2}>\n                    Selected:\n                  </Box>\n                  <Container m={1} className={classes.selectedContainer}>\n                    {selectedManager.profile.firstName}{\" \"}\n                    {selectedManager.profile.lastName} |{\" \"}\n                    {selectedManager.profile.location} |{\" \"}\n                    {selectedManager.profile.jobTitle}\n                  </Container>\n                </Box>\n                <Box mt={1}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={() => clearSelectedManager()}\n                  >\n                    Clear Selected\n                  </Button>\n                </Box>\n              </>\n            )}\n          </>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ManagerSelect;\n","import React, {memo, useContext} from \"react\";\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport EmployeeTypes from \"../../../../data/constants/EmployeeTypes\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst RequisitionTypeInput = () => {\n  const classes = useStyles();\n  const {\n    requisitionType,\n    setRequisitionType,\n    requisitionTypeError,\n    setRequisitionTypeError,\n  } = useContext(RequisitionRequestContext);\n\n  const handleChange = (value) => {\n    if (value) {\n      setRequisitionType(value);\n    } else {\n      setRequisitionType(null);\n    }\n\n    setRequisitionTypeError(false);\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <Typography\n          component={\"div\"}\n          variant=\"subtitle1\"\n          className={classes.leftText}\n        >\n          Select requisition type\n        </Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <Autocomplete\n            value={requisitionType}\n            options={Object.values(EmployeeTypes)?.filter(\n              (type) => type !== EmployeeTypes.FULL_TIME\n            )}\n            getOptionLabel={(option) => option}\n            style={{width: 400}}\n            renderInput={(params) => (\n              <AutocompleteTextField\n                {...params}\n                required\n                error={requisitionTypeError}\n                label=\"Select Requisition Type\"\n              />\n            )}\n            onChange={(event, newValue) => {\n              handleChange(newValue);\n            }}\n          />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(RequisitionTypeInput);\n","import React, {memo, useContext} from \"react\";\nimport {Box, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport DateTextField from \"../../../../components/inputs/DateTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst StartDateInput = () => {\n  const classes = useStyles();\n  const {\n    plannedStartDate,\n    setPlannedStartDate,\n    plannedStartDateError,\n    setPlannedStartDateError,\n  } = useContext(RequisitionRequestContext);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <Typography\n          component={\"div\"}\n          variant=\"subtitle1\"\n          className={classes.leftText}\n        >\n          Enter planned start date\n        </Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <DateTextField\n            type=\"date\"\n            label=\"Start Date\"\n            error={plannedStartDateError}\n            setError={setPlannedStartDateError}\n            value={plannedStartDate}\n            onValueChange={setPlannedStartDate}\n            minDateInDays={14}\n          />\n\n          <Typography\n            component={\"div\"}\n            variant=\"subtitle1\"\n            style={{color: \"#a8a9b8\"}}\n          >\n            must be at least 10 business days or more from today\n          </Typography>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(StartDateInput);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_BACKFILL_DIRECT_REPORTS = gql`\n  query GetBackfillDirectReports($search: String!) {\n    get_backfill_direct_reports(search: $search) {\n      id\n      totalCount\n      profile {\n        businessUnit\n        companyName\n        department\n        email\n        employeeNumber\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        userName\n      }\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  Box,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport {GET_BACKFILL_DIRECT_REPORTS} from \"../../../../operations/queries/getBackfillDirectReports\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport ColorCheckbox from \"../../../../components/checkboxes/ColorCheckbox\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport SelectCircularProgress from \"../../../../components/circularProgress/SelectCircularProgress\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  label: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst BackfillSelect = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    selectedManager,\n    isBackfillChecked,\n    setIsBackfillChecked,\n    selectedBackfill,\n    setSelectedBackfill,\n    selectedBackfillError,\n    setSelectedBackfillError,\n  } = useContext(RequisitionRequestContext);\n  const [backfillData, setBackfillData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [executeSearch] = useLazyQuery(GET_BACKFILL_DIRECT_REPORTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const mapped = data.get_backfill_direct_reports.map((backfill) => {\n        return backfill.profile;\n      });\n\n      setBackfillData(mapped);\n      setIsLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleCheckboxChange = (event) => {\n    setIsBackfillChecked(event.target.checked);\n    if (!event.target.checked) {\n      setSelectedBackfill(null);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedManager) {\n      if (isBackfillChecked) {\n        setIsLoading(true);\n        executeSearch({\n          variables: {search: selectedManager?.profile?.email},\n        });\n      }\n    } else {\n      setBackfillData(null);\n    }\n  }, [selectedManager, isBackfillChecked]);\n\n  const handleSelectChange = (value) => {\n    if (value) {\n      setSelectedBackfill(value);\n    } else {\n      setSelectedBackfill(null);\n    }\n\n    setSelectedBackfillError(false);\n  };\n\n  return (\n    <>\n      {selectedManager && (\n        <>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography\n                component={\"div\"}\n                variant=\"subtitle1\"\n                className={classes.leftText}\n              >\n                Is this a backfill?\n              </Typography>\n            </Grid>\n            <Grid item xs={8}>\n              <Box>\n                <FormGroup row>\n                  <FormControlLabel\n                    classes={{label: classes.label}}\n                    control={\n                      <ColorCheckbox\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        checked={isBackfillChecked}\n                        onChange={handleCheckboxChange}\n                        name=\"isBackfillChecked\"\n                      />\n                    }\n                    label=\"Check this box if it is a backfill\"\n                  />\n                </FormGroup>\n              </Box>\n            </Grid>\n          </Grid>\n          {isBackfillChecked && (\n            <Grid item container>\n              <Grid item xs={4}>\n                <Typography\n                  component={\"div\"}\n                  variant=\"subtitle1\"\n                  className={classes.leftText}\n                >\n                  Select backfill\n                </Typography>\n              </Grid>\n              <Grid item xs={8}>\n                {isLoading ? (\n                  <SelectCircularProgress />\n                ) : (\n                  <>\n                    {backfillData && (\n                      <>\n                        {backfillData?.length > 0 ? (\n                          <Box>\n                            <Autocomplete\n                              value={selectedBackfill}\n                              options={backfillData}\n                              getOptionLabel={(option) =>\n                                `${option.firstName} ${option.lastName} | ${option.userName}`\n                              }\n                              style={{width: 400}}\n                              renderInput={(params) => (\n                                <AutocompleteTextField\n                                  {...params}\n                                  required\n                                  error={selectedBackfillError}\n                                  label=\"Select Backfill\"\n                                />\n                              )}\n                              onChange={(event, newValue) => {\n                                handleSelectChange(newValue);\n                              }}\n                            />\n                          </Box>\n                        ) : (\n                          <Box>No results for the selected hiring manager</Box>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(BackfillSelect);\n","import React from \"react\";\nimport LocationSelect from \"./LocationSelect\";\nimport BusinessUnitDeptSelect from \"./BusinessUnitDeptSelect\";\nimport ManagerSelect from \"./ManagerSelect\";\nimport RequisitionTypeSelect from \"./RequisitionTypeSelect\";\nimport StartDateInput from \"./StartDateInput\";\nimport BackfillSelect from \"./BackfillSelect\";\n\nconst RequisitionDetails = () => {\n  return (\n    <>\n      <RequisitionTypeSelect />\n      <StartDateInput />\n      <ManagerSelect />\n      <BusinessUnitDeptSelect />\n      <LocationSelect />\n      <BackfillSelect />\n    </>\n  );\n};\n\nexport default RequisitionDetails;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_COST_CENTERS = gql`\n  query GetCostCenters {\n    get_cost_centers {\n      id\n      costCenterCategory\n      costCenterCode\n      costCenterDescription\n    }\n  }\n`;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst CompanyCodeSelect = () => {\n  const {\n    selectedCompanyCode,\n    setSelectedCompanyCode,\n    selectedCompanyCodeError,\n    setSelectedCompanyCodeError,\n    managerCostCenter,\n    costCenterData,\n    isCostCenterDisabled,\n    isCodeChanged,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n  const [codeData, setCodeData] = useState();\n\n  useEffect(() => {\n    if (costCenterData) {\n      const codeFiltered = costCenterData.filter((data) => {\n        return data.costCenterCategory === \"Company Code\";\n      });\n\n      setCodeData(codeFiltered);\n\n      if (!isCodeChanged) {\n        if (managerCostCenter && codeFiltered) {\n          codeFiltered.forEach((data) => {\n            if (\n              data.costCenterCategory === \"Company Code\" &&\n              data.costCenterCode === managerCostCenter[0]\n            ) {\n              setSelectedCompanyCode(data);\n            }\n          });\n        }\n      }\n    }\n  }, [\n    managerCostCenter,\n    costCenterData,\n    isCodeChanged,\n    setSelectedCompanyCode,\n  ]);\n\n  const handleChange = (value) => {\n    if (value) {\n      setIsCodeChanged(true);\n      setSelectedCompanyCode(value);\n    } else {\n      setSelectedCompanyCode(null);\n    }\n\n    setSelectedCompanyCodeError(false);\n  };\n\n  return (\n    <Box>\n      {codeData && selectedCompanyCode && (\n        <Autocomplete\n          disableClearable\n          disabled={isCostCenterDisabled}\n          value={selectedCompanyCode}\n          options={codeData}\n          getOptionLabel={(option) =>\n            `${option.costCenterCode} | ${option.costCenterDescription}`\n          }\n          style={{width: 400}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              error={selectedCompanyCodeError}\n              label=\"Select Company Code\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default CompanyCodeSelect;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst ParentMgmtCostCenterSelect = () => {\n  const {\n    selectedParentMgmtCostCenter,\n    setSelectedParentMgmtCostCenter,\n    selectedParentMgmtCostCenterError,\n    setSelectedParentMgmtCostCenterError,\n    managerCostCenter,\n    costCenterData,\n    isCostCenterDisabled,\n    isCodeChanged,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n  const [codeData, setCodeData] = useState();\n\n  useEffect(() => {\n    if (costCenterData) {\n      const codeFiltered = costCenterData.filter((data) => {\n        return data.costCenterCategory === \"Parent Management Cost Center\";\n      });\n\n      setCodeData(codeFiltered);\n      if (!isCodeChanged) {\n        if (managerCostCenter && codeFiltered) {\n          codeFiltered.forEach((data) => {\n            if (\n              data.costCenterCategory === \"Parent Management Cost Center\" &&\n              data.costCenterCode === managerCostCenter[1]\n            ) {\n              setSelectedParentMgmtCostCenter(data);\n            }\n          });\n        }\n      }\n    }\n  }, [\n    managerCostCenter,\n    costCenterData,\n    isCodeChanged,\n    setSelectedParentMgmtCostCenter,\n  ]);\n\n  const handleChange = (value) => {\n    if (value) {\n      setIsCodeChanged(true);\n      setSelectedParentMgmtCostCenter(value);\n    } else {\n      setSelectedParentMgmtCostCenter(null);\n    }\n\n    setSelectedParentMgmtCostCenterError(false);\n  };\n\n  return (\n    <Box>\n      {codeData && selectedParentMgmtCostCenter && (\n        <Autocomplete\n          disableClearable\n          disabled={isCostCenterDisabled}\n          value={selectedParentMgmtCostCenter}\n          options={codeData}\n          getOptionLabel={(option) =>\n            `${option.costCenterCode} | ${option.costCenterDescription}`\n          }\n          style={{width: 400}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              error={selectedParentMgmtCostCenterError}\n              label=\"Select Parent Management Cost Center\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default ParentMgmtCostCenterSelect;\n","import React, {useState, useEffect, useContext} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst MgmtCostCenterSelect = () => {\n  const {\n    selectedMgmtCostCenter,\n    setSelectedMgmtCostCenter,\n    selectedMgmtCostCenterError,\n    setSelectedMgmtCostCenterError,\n    managerCostCenter,\n    costCenterData,\n    isCostCenterDisabled,\n    isCodeChanged,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n  const [codeData, setCodeData] = useState();\n\n  useEffect(() => {\n    if (costCenterData) {\n      const codeFiltered = costCenterData.filter((data) => {\n        return data.costCenterCategory === \"Management Cost Center\";\n      });\n\n      setCodeData(codeFiltered);\n\n      if (!isCodeChanged) {\n        if (managerCostCenter && codeFiltered) {\n          codeFiltered.forEach((data) => {\n            if (\n              data.costCenterCategory === \"Management Cost Center\" &&\n              data.costCenterCode === managerCostCenter[2]\n            ) {\n              setSelectedMgmtCostCenter(data);\n            }\n          });\n        }\n      }\n    }\n  }, [\n    managerCostCenter,\n    costCenterData,\n    isCodeChanged,\n    setSelectedMgmtCostCenter,\n  ]);\n\n  const handleChange = (value) => {\n    if (value) {\n      setIsCodeChanged(true);\n      setSelectedMgmtCostCenter(value);\n    } else {\n      setSelectedMgmtCostCenter(null);\n    }\n\n    setSelectedMgmtCostCenterError(false);\n  };\n\n  return (\n    <Box>\n      {codeData && selectedMgmtCostCenter && (\n        <Autocomplete\n          disableClearable\n          disabled={isCostCenterDisabled}\n          value={selectedMgmtCostCenter}\n          options={codeData}\n          getOptionLabel={(option) =>\n            `${option.costCenterCode} | ${option.costCenterDescription}`\n          }\n          style={{width: 400}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              error={selectedMgmtCostCenterError}\n              label=\"Select Management Cost Center\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default MgmtCostCenterSelect;\n","import React, {useState, useEffect, useContext, memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst FunctionalAreaDescSelect = () => {\n  const {\n    selectedFunctionalAreaDesc,\n    setSelectedFunctionalAreaDesc,\n    selectedFunctionalAreaDescError,\n    setSelectedFunctionalAreaDescError,\n    managerCostCenter,\n    costCenterData,\n    isCostCenterDisabled,\n    isCodeChanged,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n  const [codeData, setCodeData] = useState();\n\n  useEffect(() => {\n    if (costCenterData) {\n      const codeFiltered = costCenterData.filter((data) => {\n        return data.costCenterCategory === \"Functional Area Description\";\n      });\n\n      setCodeData(codeFiltered);\n\n      if (!isCodeChanged) {\n        if (managerCostCenter && codeFiltered) {\n          codeFiltered.forEach((data) => {\n            if (\n              data.costCenterCategory === \"Functional Area Description\" &&\n              data.costCenterCode === managerCostCenter[3]\n            ) {\n              setSelectedFunctionalAreaDesc(data);\n            }\n          });\n        }\n      }\n    }\n  }, [\n    managerCostCenter,\n    costCenterData,\n    isCodeChanged,\n    setSelectedFunctionalAreaDesc,\n  ]);\n\n  const handleChange = (value) => {\n    if (value) {\n      setIsCodeChanged(true);\n      setSelectedFunctionalAreaDesc(value);\n    } else {\n      setSelectedFunctionalAreaDesc(null);\n    }\n\n    setSelectedFunctionalAreaDescError(false);\n  };\n\n  return (\n    <Box>\n      {codeData && selectedFunctionalAreaDesc && (\n        <Autocomplete\n          disableClearable\n          disabled={isCostCenterDisabled}\n          value={selectedFunctionalAreaDesc}\n          options={codeData}\n          getOptionLabel={(option) =>\n            `${option.costCenterCode} | ${option.costCenterDescription}`\n          }\n          style={{width: 400}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              error={selectedFunctionalAreaDescError}\n              label=\"Select Functional Area Description\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(FunctionalAreaDescSelect);\n","import React, {useState, useEffect, useContext, memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst CountryDescSelect = () => {\n  const {\n    selectedCountryDesc,\n    setSelectedCountryDesc,\n    selectedCountryDescError,\n    setSelectedCountryDescError,\n    managerCostCenter,\n    costCenterData,\n    isCostCenterDisabled,\n    isCodeChanged,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n  const [codeData, setCodeData] = useState();\n\n  useEffect(() => {\n    if (costCenterData) {\n      const codeFiltered = costCenterData.filter((data) => {\n        return data.costCenterCategory === \"Country Description\";\n      });\n\n      setCodeData(codeFiltered);\n\n      if (!isCodeChanged) {\n        if (managerCostCenter && codeFiltered) {\n          codeFiltered.forEach((data) => {\n            if (\n              data.costCenterCategory === \"Country Description\" &&\n              data.costCenterCode === managerCostCenter[4]\n            ) {\n              setSelectedCountryDesc(data);\n            }\n          });\n        }\n      }\n    }\n  }, [\n    managerCostCenter,\n    costCenterData,\n    isCodeChanged,\n    setSelectedCountryDesc,\n  ]);\n\n  const handleChange = (value) => {\n    if (value) {\n      setIsCodeChanged(true);\n      setSelectedCountryDesc(value);\n    } else {\n      setSelectedCountryDesc(null);\n    }\n\n    setSelectedCountryDescError(false);\n  };\n\n  return (\n    <Box>\n      {codeData && selectedCountryDesc && (\n        <Autocomplete\n          disableClearable\n          disabled={isCostCenterDisabled}\n          value={selectedCountryDesc}\n          options={codeData}\n          getOptionLabel={(option) =>\n            `${option.costCenterCode} | ${option.costCenterDescription}`\n          }\n          style={{width: 400}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              required\n              error={selectedCountryDescError}\n              label=\"Select Country Description\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(CountryDescSelect);\n","import React, { useContext, useEffect } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Box, Button, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport { GET_COST_CENTERS } from \"../../../../operations/queries/getCostCenters\";\nimport { RequisitionRequestContext } from \"../../RequisitionRequestContextProvider\";\nimport CompanyCodeSelect from \"./CompanyCodeSelect\";\nimport ParentMgmtCostCenterSelect from \"./ParentMgmtCostCenterSelect\";\nimport MgmtCostCenterSelect from \"./MgmtCostCenterSelect\";\nimport FunctionalAreaDescSelect from \"./FunctionalAreaDescSelect\";\nimport CountryDescSelect from \"./CountryDescSelect\";\nimport handleError from \"../../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  leftText: {\n    paddingLeft: theme.spacing(5)\n  }\n}));\n\nconst CostCenter = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    costCenterData,\n    setCostCenterData,\n    setManagerCostCenter,\n    selectedManager,\n    setIsCostCenterDisabled\n  } = useContext(RequisitionRequestContext);\n\n  useEffect(() => {\n    if (selectedManager) {\n      const array = selectedManager.profile.costCenter.split(\"-\");\n      setManagerCostCenter(array);\n    }\n  }, [selectedManager, setManagerCostCenter]);\n\n  useQuery(GET_COST_CENTERS, {\n    onCompleted: (data) => setCostCenterData(data.get_cost_centers),\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <>\n      {costCenterData && selectedManager && (\n        <>\n          <Grid item container>\n            <Grid item xs={4}>\n              <Typography\n                component={\"div\"}\n                variant=\"subtitle1\"\n                className={classes.leftText}\n              >\n                Select requisition cost center\n              </Typography>\n              <Typography\n                component={\"div\"}\n                variant=\"subtitle2\"\n                className={classes.leftText}\n              >\n                code | code description\n              </Typography>\n              <Box pl={5} mt={3}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => setIsCostCenterDisabled(false)}\n                >\n                  Click here to change\n                </Button>\n              </Box>\n            </Grid>\n            <Grid item xs={8}>\n              <Box>\n                <CompanyCodeSelect/>\n              </Box>\n              <Box mt={1.5}>\n                <ParentMgmtCostCenterSelect/>\n              </Box>\n              <Box mt={1.5}>\n                <MgmtCostCenterSelect/>\n              </Box>\n              <Box mt={1.5}>\n                <FunctionalAreaDescSelect/>\n              </Box>\n              <Box mt={1.5}>\n                <CountryDescSelect/>\n              </Box>\n              <Box mt={1.5}>\n                <Typography>-00 (every cost center ends with -00)</Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default CostCenter;\n","import React, {useContext} from \"react\";\nimport {Box, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    width: \"100%\",\n  },\n}));\n\nconst CommentsInput = () => {\n  const classes = useStyles();\n  const {comments, setComments, commentsError, setCommentsError} = useContext(\n    RequisitionRequestContext\n  );\n\n  const handleChange = (e) => {\n    setComments(e.target.value);\n    setCommentsError(false);\n  };\n\n  return (\n    <Box>\n      <Typography component={\"div\"}>\n        Please provide the business reason for this request and ensure your\n        Finance Partner is aligned.\n      </Typography>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          color={\"secondary\"}\n          id=\"comments\"\n          label=\"comments\"\n          multiline\n          minRows={2}\n          maxRows={4}\n          error={commentsError}\n          className={classes.textField}\n          value={comments}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default CommentsInput;\n","import React from \"react\";\nimport { Box, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport CommentsInput from \"./CommentsInput\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst AdditionalInformation = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography\n            component={\"div\"}\n            variant=\"subtitle1\"\n            className={classes.leftText}\n          >\n            Comments\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box className={classes.box}>\n            <CommentsInput />\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AdditionalInformation;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_REQUISITION_JOB_CODE = gql`\n  query GetRequisitionJobCode($search: String!) {\n    get_requisition_job_code(search: $search) {\n        id\n        USJobCode\n        IntJobCode\n        typeName\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {GET_REQUISITION_JOB_CODE} from \"../../../../operations/queries/getRequisitionJobCode\";\nimport RequestFormLabel from \"../../../../components/typographies/RequestFormTypography\";\n\nconst JobCodeSelect = () => {\n  const history = useHistory();\n  const {\n    jobCode,\n    setJobCode,\n    location,\n    requisitionType\n  } = useContext(RequisitionRequestContext);\n  const [reqJobCode, setReqJobCode] = useState();\n\n  const [executeSearch] = useLazyQuery(GET_REQUISITION_JOB_CODE, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setReqJobCode(data.get_requisition_job_code?.[0]);\n    },\n    onError: error => handleError(error)(history)\n  });\n\n  useEffect(() => {\n    if (requisitionType && location) {\n      executeSearch({variables: {search: requisitionType}});\n    } else {\n      setJobCode(\"\");\n    }\n  }, [requisitionType, location]);\n\n  useEffect(() => {\n    if (location?.countryCode && (reqJobCode?.IntJobCode || reqJobCode?.USJobCode)) {\n      if (location?.countryCode === \"USA\") {\n        setJobCode(reqJobCode?.USJobCode);\n      } else {\n        setJobCode(reqJobCode?.IntJobCode);\n      }\n    } else {\n      setJobCode(\"\");\n    }\n  }, [reqJobCode, location, setJobCode]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormLabel title=\"Job Code\" subtitle=\"(auto-generated)\" />\n      </Grid>\n      <Grid item xs={8}>\n        {jobCode && <Typography component={\"div\"}>{jobCode}</Typography>}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(JobCodeSelect);\n","export const currencyData = [\n  {\n    AlphabeticCode: \"AED\",\n    Currency: \"UAE Dirham\",\n    Entity: \"UNITED ARAB EMIRATES (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 784,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AFN\",\n    Currency: \"Afghani\",\n    Entity: \"AFGHANISTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 971,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ALL\",\n    Currency: \"Lek\",\n    Entity: \"ALBANIA\",\n    MinorUnit: \"2\",\n    NumericCode: 8,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AMD\",\n    Currency: \"Armenian Dram\",\n    Entity: \"ARMENIA\",\n    MinorUnit: \"2\",\n    NumericCode: 51,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ANG\",\n    Currency: \"Netherlands Antillean Guilder\",\n    Entity: \"CURAÇAO\",\n    MinorUnit: \"2\",\n    NumericCode: 532,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AOA\",\n    Currency: \"Kwanza\",\n    Entity: \"ANGOLA\",\n    MinorUnit: \"2\",\n    NumericCode: 973,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ARS\",\n    Currency: \"Argentine Peso\",\n    Entity: \"ARGENTINA\",\n    MinorUnit: \"2\",\n    NumericCode: 32,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AUD\",\n    Currency: \"Australian Dollar\",\n    Entity: \"AUSTRALIA\",\n    MinorUnit: \"2\",\n    NumericCode: 36,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AWG\",\n    Currency: \"Aruban Florin\",\n    Entity: \"ARUBA\",\n    MinorUnit: \"2\",\n    NumericCode: 533,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"AZN\",\n    Currency: \"Azerbaijan Manat\",\n    Entity: \"AZERBAIJAN\",\n    MinorUnit: \"2\",\n    NumericCode: 944,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BAM\",\n    Currency: \"Convertible Mark\",\n    Entity: \"BOSNIA AND HERZEGOVINA\",\n    MinorUnit: \"2\",\n    NumericCode: 977,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BBD\",\n    Currency: \"Barbados Dollar\",\n    Entity: \"BARBADOS\",\n    MinorUnit: \"2\",\n    NumericCode: 52,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BDT\",\n    Currency: \"Taka\",\n    Entity: \"BANGLADESH\",\n    MinorUnit: \"2\",\n    NumericCode: 50,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BGN\",\n    Currency: \"Bulgarian Lev\",\n    Entity: \"BULGARIA\",\n    MinorUnit: \"2\",\n    NumericCode: 975,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BHD\",\n    Currency: \"Bahraini Dinar\",\n    Entity: \"BAHRAIN\",\n    MinorUnit: \"3\",\n    NumericCode: 48,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BIF\",\n    Currency: \"Burundi Franc\",\n    Entity: \"BURUNDI\",\n    MinorUnit: \"0\",\n    NumericCode: 108,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BMD\",\n    Currency: \"Bermudian Dollar\",\n    Entity: \"BERMUDA\",\n    MinorUnit: \"2\",\n    NumericCode: 60,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BND\",\n    Currency: \"Brunei Dollar\",\n    Entity: \"BRUNEI DARUSSALAM\",\n    MinorUnit: \"2\",\n    NumericCode: 96,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BOB\",\n    Currency: \"Boliviano\",\n    Entity: \"BOLIVIA (PLURINATIONAL STATE OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 68,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BOV\",\n    Currency: \"Mvdol\",\n    Entity: \"BOLIVIA (PLURINATIONAL STATE OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 984,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BRL\",\n    Currency: \"Brazilian Real\",\n    Entity: \"BRAZIL\",\n    MinorUnit: \"2\",\n    NumericCode: 986,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BSD\",\n    Currency: \"Bahamian Dollar\",\n    Entity: \"BAHAMAS (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 44,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BTN\",\n    Currency: \"Ngultrum\",\n    Entity: \"BHUTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 64,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BWP\",\n    Currency: \"Pula\",\n    Entity: \"BOTSWANA\",\n    MinorUnit: \"2\",\n    NumericCode: 72,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BYN\",\n    Currency: \"Belarusian Ruble\",\n    Entity: \"BELARUS\",\n    MinorUnit: \"2\",\n    NumericCode: 933,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"BZD\",\n    Currency: \"Belize Dollar\",\n    Entity: \"BELIZE\",\n    MinorUnit: \"2\",\n    NumericCode: 84,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CAD\",\n    Currency: \"Canadian Dollar\",\n    Entity: \"CANADA\",\n    MinorUnit: \"2\",\n    NumericCode: 124,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CDF\",\n    Currency: \"Congolese Franc\",\n    Entity: \"CONGO (THE DEMOCRATIC REPUBLIC OF THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 976,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CHE\",\n    Currency: \"WIR Euro\",\n    Entity: \"SWITZERLAND\",\n    MinorUnit: \"2\",\n    NumericCode: 947,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CHF\",\n    Currency: \"Swiss Franc\",\n    Entity: \"LIECHTENSTEIN\",\n    MinorUnit: \"2\",\n    NumericCode: 756,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CHW\",\n    Currency: \"WIR Franc\",\n    Entity: \"SWITZERLAND\",\n    MinorUnit: \"2\",\n    NumericCode: 948,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CLF\",\n    Currency: \"Unidad de Fomento\",\n    Entity: \"CHILE\",\n    MinorUnit: \"4\",\n    NumericCode: 990,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CLP\",\n    Currency: \"Chilean Peso\",\n    Entity: \"CHILE\",\n    MinorUnit: \"0\",\n    NumericCode: 152,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CNY\",\n    Currency: \"Yuan Renminbi\",\n    Entity: \"CHINA\",\n    MinorUnit: \"2\",\n    NumericCode: 156,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"COP\",\n    Currency: \"Colombian Peso\",\n    Entity: \"COLOMBIA\",\n    MinorUnit: \"2\",\n    NumericCode: 170,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"COU\",\n    Currency: \"Unidad de Valor Real\",\n    Entity: \"COLOMBIA\",\n    MinorUnit: \"2\",\n    NumericCode: 970,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CRC\",\n    Currency: \"Costa Rican Colon\",\n    Entity: \"COSTA RICA\",\n    MinorUnit: \"2\",\n    NumericCode: 188,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CUC\",\n    Currency: \"Peso Convertible\",\n    Entity: \"CUBA\",\n    MinorUnit: \"2\",\n    NumericCode: 931,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CUP\",\n    Currency: \"Cuban Peso\",\n    Entity: \"CUBA\",\n    MinorUnit: \"2\",\n    NumericCode: 192,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CVE\",\n    Currency: \"Cabo Verde Escudo\",\n    Entity: \"CABO VERDE\",\n    MinorUnit: \"2\",\n    NumericCode: 132,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"CZK\",\n    Currency: \"Czech Koruna\",\n    Entity: \"CZECHIA\",\n    MinorUnit: \"2\",\n    NumericCode: 203,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"DJF\",\n    Currency: \"Djibouti Franc\",\n    Entity: \"DJIBOUTI\",\n    MinorUnit: \"0\",\n    NumericCode: 262,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"DKK\",\n    Currency: \"Danish Krone\",\n    Entity: \"DENMARK\",\n    MinorUnit: \"2\",\n    NumericCode: 208,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"DOP\",\n    Currency: \"Dominican Peso\",\n    Entity: \"DOMINICAN REPUBLIC (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 214,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"DZD\",\n    Currency: \"Algerian Dinar\",\n    Entity: \"ALGERIA\",\n    MinorUnit: \"2\",\n    NumericCode: 12,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"EGP\",\n    Currency: \"Egyptian Pound\",\n    Entity: \"EGYPT\",\n    MinorUnit: \"2\",\n    NumericCode: 818,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ERN\",\n    Currency: \"Nakfa\",\n    Entity: \"ERITREA\",\n    MinorUnit: \"2\",\n    NumericCode: 232,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ETB\",\n    Currency: \"Ethiopian Birr\",\n    Entity: \"ETHIOPIA\",\n    MinorUnit: \"2\",\n    NumericCode: 230,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"EUR\",\n    Currency: \"Euro\",\n    Entity: \"ÅLAND ISLANDS\",\n    MinorUnit: \"2\",\n    NumericCode: 978,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"FJD\",\n    Currency: \"Fiji Dollar\",\n    Entity: \"FIJI\",\n    MinorUnit: \"2\",\n    NumericCode: 242,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"FKP\",\n    Currency: \"Falkland Islands Pound\",\n    Entity: \"FALKLAND ISLANDS (THE) [MALVINAS]\",\n    MinorUnit: \"2\",\n    NumericCode: 238,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GBP\",\n    Currency: \"Pound Sterling\",\n    Entity: \"GUERNSEY\",\n    MinorUnit: \"2\",\n    NumericCode: 826,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GEL\",\n    Currency: \"Lari\",\n    Entity: \"GEORGIA\",\n    MinorUnit: \"2\",\n    NumericCode: 981,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GHS\",\n    Currency: \"Ghana Cedi\",\n    Entity: \"GHANA\",\n    MinorUnit: \"2\",\n    NumericCode: 936,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GIP\",\n    Currency: \"Gibraltar Pound\",\n    Entity: \"GIBRALTAR\",\n    MinorUnit: \"2\",\n    NumericCode: 292,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GMD\",\n    Currency: \"Dalasi\",\n    Entity: \"GAMBIA (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 270,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GNF\",\n    Currency: \"Guinean Franc\",\n    Entity: \"GUINEA\",\n    MinorUnit: \"0\",\n    NumericCode: 324,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GTQ\",\n    Currency: \"Quetzal\",\n    Entity: \"GUATEMALA\",\n    MinorUnit: \"2\",\n    NumericCode: 320,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"GYD\",\n    Currency: \"Guyana Dollar\",\n    Entity: \"GUYANA\",\n    MinorUnit: \"2\",\n    NumericCode: 328,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"HKD\",\n    Currency: \"Hong Kong Dollar\",\n    Entity: \"HONG KONG\",\n    MinorUnit: \"2\",\n    NumericCode: 344,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"HNL\",\n    Currency: \"Lempira\",\n    Entity: \"HONDURAS\",\n    MinorUnit: \"2\",\n    NumericCode: 340,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"HRK\",\n    Currency: \"Kuna\",\n    Entity: \"CROATIA\",\n    MinorUnit: \"2\",\n    NumericCode: 191,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"HTG\",\n    Currency: \"Gourde\",\n    Entity: \"HAITI\",\n    MinorUnit: \"2\",\n    NumericCode: 332,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"HUF\",\n    Currency: \"Forint\",\n    Entity: \"HUNGARY\",\n    MinorUnit: \"2\",\n    NumericCode: 348,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"IDR\",\n    Currency: \"Rupiah\",\n    Entity: \"INDONESIA\",\n    MinorUnit: \"2\",\n    NumericCode: 360,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ILS\",\n    Currency: \"New Israeli Sheqel\",\n    Entity: \"ISRAEL\",\n    MinorUnit: \"2\",\n    NumericCode: 376,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"INR\",\n    Currency: \"Indian Rupee\",\n    Entity: \"BHUTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 356,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"IQD\",\n    Currency: \"Iraqi Dinar\",\n    Entity: \"IRAQ\",\n    MinorUnit: \"3\",\n    NumericCode: 368,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"IRR\",\n    Currency: \"Iranian Rial\",\n    Entity: \"IRAN (ISLAMIC REPUBLIC OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 364,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ISK\",\n    Currency: \"Iceland Krona\",\n    Entity: \"ICELAND\",\n    MinorUnit: \"0\",\n    NumericCode: 352,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"JMD\",\n    Currency: \"Jamaican Dollar\",\n    Entity: \"JAMAICA\",\n    MinorUnit: \"2\",\n    NumericCode: 388,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"JOD\",\n    Currency: \"Jordanian Dinar\",\n    Entity: \"JORDAN\",\n    MinorUnit: \"3\",\n    NumericCode: 400,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"JPY\",\n    Currency: \"Yen\",\n    Entity: \"JAPAN\",\n    MinorUnit: \"0\",\n    NumericCode: 392,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KES\",\n    Currency: \"Kenyan Shilling\",\n    Entity: \"KENYA\",\n    MinorUnit: \"2\",\n    NumericCode: 404,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KGS\",\n    Currency: \"Som\",\n    Entity: \"KYRGYZSTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 417,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KHR\",\n    Currency: \"Riel\",\n    Entity: \"CAMBODIA\",\n    MinorUnit: \"2\",\n    NumericCode: 116,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KMF\",\n    Currency: \"Comorian Franc\",\n    Entity: \"COMOROS (THE)\",\n    MinorUnit: \"0\",\n    NumericCode: 174,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KPW\",\n    Currency: \"North Korean Won\",\n    Entity: \"KOREA (THE DEMOCRATIC PEOPLE'S REPUBLIC OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 408,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KRW\",\n    Currency: \"Won\",\n    Entity: \"KOREA (THE REPUBLIC OF)\",\n    MinorUnit: \"0\",\n    NumericCode: 410,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KWD\",\n    Currency: \"Kuwaiti Dinar\",\n    Entity: \"KUWAIT\",\n    MinorUnit: \"3\",\n    NumericCode: 414,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KYD\",\n    Currency: \"Cayman Islands Dollar\",\n    Entity: \"CAYMAN ISLANDS (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 136,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"KZT\",\n    Currency: \"Tenge\",\n    Entity: \"KAZAKHSTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 398,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LAK\",\n    Currency: \"Lao Kip\",\n    Entity: \"LAO PEOPLE'S DEMOCRATIC REPUBLIC (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 418,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LBP\",\n    Currency: \"Lebanese Pound\",\n    Entity: \"LEBANON\",\n    MinorUnit: \"2\",\n    NumericCode: 422,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LKR\",\n    Currency: \"Sri Lanka Rupee\",\n    Entity: \"SRI LANKA\",\n    MinorUnit: \"2\",\n    NumericCode: 144,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LRD\",\n    Currency: \"Liberian Dollar\",\n    Entity: \"LIBERIA\",\n    MinorUnit: \"2\",\n    NumericCode: 430,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LSL\",\n    Currency: \"Loti\",\n    Entity: \"LESOTHO\",\n    MinorUnit: \"2\",\n    NumericCode: 426,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"LYD\",\n    Currency: \"Libyan Dinar\",\n    Entity: \"LIBYA\",\n    MinorUnit: \"3\",\n    NumericCode: 434,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MAD\",\n    Currency: \"Moroccan Dirham\",\n    Entity: \"MOROCCO\",\n    MinorUnit: \"2\",\n    NumericCode: 504,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MDL\",\n    Currency: \"Moldovan Leu\",\n    Entity: \"MOLDOVA (THE REPUBLIC OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 498,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MGA\",\n    Currency: \"Malagasy Ariary\",\n    Entity: \"MADAGASCAR\",\n    MinorUnit: \"2\",\n    NumericCode: 969,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MKD\",\n    Currency: \"Denar\",\n    Entity: \"NORTH MACEDONIA\",\n    MinorUnit: \"2\",\n    NumericCode: 807,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MMK\",\n    Currency: \"Kyat\",\n    Entity: \"MYANMAR\",\n    MinorUnit: \"2\",\n    NumericCode: 104,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MNT\",\n    Currency: \"Tugrik\",\n    Entity: \"MONGOLIA\",\n    MinorUnit: \"2\",\n    NumericCode: 496,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MOP\",\n    Currency: \"Pataca\",\n    Entity: \"MACAO\",\n    MinorUnit: \"2\",\n    NumericCode: 446,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MRU\",\n    Currency: \"Ouguiya\",\n    Entity: \"MAURITANIA\",\n    MinorUnit: \"2\",\n    NumericCode: 929,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MUR\",\n    Currency: \"Mauritius Rupee\",\n    Entity: \"MAURITIUS\",\n    MinorUnit: \"2\",\n    NumericCode: 480,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MVR\",\n    Currency: \"Rufiyaa\",\n    Entity: \"MALDIVES\",\n    MinorUnit: \"2\",\n    NumericCode: 462,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MWK\",\n    Currency: \"Malawi Kwacha\",\n    Entity: \"MALAWI\",\n    MinorUnit: \"2\",\n    NumericCode: 454,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MXN\",\n    Currency: \"Mexican Peso\",\n    Entity: \"MEXICO\",\n    MinorUnit: \"2\",\n    NumericCode: 484,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MXV\",\n    Currency: \"Mexican Unidad de Inversion (UDI)\",\n    Entity: \"MEXICO\",\n    MinorUnit: \"2\",\n    NumericCode: 979,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MYR\",\n    Currency: \"Malaysian Ringgit\",\n    Entity: \"MALAYSIA\",\n    MinorUnit: \"2\",\n    NumericCode: 458,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"MZN\",\n    Currency: \"Mozambique Metical\",\n    Entity: \"MOZAMBIQUE\",\n    MinorUnit: \"2\",\n    NumericCode: 943,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NAD\",\n    Currency: \"Namibia Dollar\",\n    Entity: \"NAMIBIA\",\n    MinorUnit: \"2\",\n    NumericCode: 516,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NGN\",\n    Currency: \"Naira\",\n    Entity: \"NIGERIA\",\n    MinorUnit: \"2\",\n    NumericCode: 566,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NIO\",\n    Currency: \"Cordoba Oro\",\n    Entity: \"NICARAGUA\",\n    MinorUnit: \"2\",\n    NumericCode: 558,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NOK\",\n    Currency: \"Norwegian Krone\",\n    Entity: \"BOUVET ISLAND\",\n    MinorUnit: \"2\",\n    NumericCode: 578,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NPR\",\n    Currency: \"Nepalese Rupee\",\n    Entity: \"NEPAL\",\n    MinorUnit: \"2\",\n    NumericCode: 524,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"NZD\",\n    Currency: \"New Zealand Dollar\",\n    Entity: \"COOK ISLANDS (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 554,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"OMR\",\n    Currency: \"Rial Omani\",\n    Entity: \"OMAN\",\n    MinorUnit: \"3\",\n    NumericCode: 512,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PAB\",\n    Currency: \"Balboa\",\n    Entity: \"PANAMA\",\n    MinorUnit: \"2\",\n    NumericCode: 590,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PEN\",\n    Currency: \"Sol\",\n    Entity: \"PERU\",\n    MinorUnit: \"2\",\n    NumericCode: 604,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PGK\",\n    Currency: \"Kina\",\n    Entity: \"PAPUA NEW GUINEA\",\n    MinorUnit: \"2\",\n    NumericCode: 598,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PHP\",\n    Currency: \"Philippine Peso\",\n    Entity: \"PHILIPPINES (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 608,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PKR\",\n    Currency: \"Pakistan Rupee\",\n    Entity: \"PAKISTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 586,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PLN\",\n    Currency: \"Zloty\",\n    Entity: \"POLAND\",\n    MinorUnit: \"2\",\n    NumericCode: 985,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"PYG\",\n    Currency: \"Guarani\",\n    Entity: \"PARAGUAY\",\n    MinorUnit: \"0\",\n    NumericCode: 600,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"QAR\",\n    Currency: \"Qatari Rial\",\n    Entity: \"QATAR\",\n    MinorUnit: \"2\",\n    NumericCode: 634,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"RON\",\n    Currency: \"Romanian Leu\",\n    Entity: \"ROMANIA\",\n    MinorUnit: \"2\",\n    NumericCode: 946,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"RSD\",\n    Currency: \"Serbian Dinar\",\n    Entity: \"SERBIA\",\n    MinorUnit: \"2\",\n    NumericCode: 941,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"RUB\",\n    Currency: \"Russian Ruble\",\n    Entity: \"RUSSIAN FEDERATION (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 643,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"RWF\",\n    Currency: \"Rwanda Franc\",\n    Entity: \"RWANDA\",\n    MinorUnit: \"0\",\n    NumericCode: 646,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SAR\",\n    Currency: \"Saudi Riyal\",\n    Entity: \"SAUDI ARABIA\",\n    MinorUnit: \"2\",\n    NumericCode: 682,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SBD\",\n    Currency: \"Solomon Islands Dollar\",\n    Entity: \"SOLOMON ISLANDS\",\n    MinorUnit: \"2\",\n    NumericCode: 90,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SCR\",\n    Currency: \"Seychelles Rupee\",\n    Entity: \"SEYCHELLES\",\n    MinorUnit: \"2\",\n    NumericCode: 690,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SDG\",\n    Currency: \"Sudanese Pound\",\n    Entity: \"SUDAN (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 938,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SEK\",\n    Currency: \"Swedish Krona\",\n    Entity: \"SWEDEN\",\n    MinorUnit: \"2\",\n    NumericCode: 752,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SGD\",\n    Currency: \"Singapore Dollar\",\n    Entity: \"SINGAPORE\",\n    MinorUnit: \"2\",\n    NumericCode: 702,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SHP\",\n    Currency: \"Saint Helena Pound\",\n    Entity: \"SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA\",\n    MinorUnit: \"2\",\n    NumericCode: 654,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SLL\",\n    Currency: \"Leone\",\n    Entity: \"SIERRA LEONE\",\n    MinorUnit: \"2\",\n    NumericCode: 694,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SOS\",\n    Currency: \"Somali Shilling\",\n    Entity: \"SOMALIA\",\n    MinorUnit: \"2\",\n    NumericCode: 706,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SRD\",\n    Currency: \"Surinam Dollar\",\n    Entity: \"SURINAME\",\n    MinorUnit: \"2\",\n    NumericCode: 968,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SSP\",\n    Currency: \"South Sudanese Pound\",\n    Entity: \"SOUTH SUDAN\",\n    MinorUnit: \"2\",\n    NumericCode: 728,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"STN\",\n    Currency: \"Dobra\",\n    Entity: \"SAO TOME AND PRINCIPE\",\n    MinorUnit: \"2\",\n    NumericCode: 930,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SVC\",\n    Currency: \"El Salvador Colon\",\n    Entity: \"EL SALVADOR\",\n    MinorUnit: \"2\",\n    NumericCode: 222,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SYP\",\n    Currency: \"Syrian Pound\",\n    Entity: \"SYRIAN ARAB REPUBLIC\",\n    MinorUnit: \"2\",\n    NumericCode: 760,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"SZL\",\n    Currency: \"Lilangeni\",\n    Entity: \"ESWATINI\",\n    MinorUnit: \"2\",\n    NumericCode: 748,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"THB\",\n    Currency: \"Baht\",\n    Entity: \"THAILAND\",\n    MinorUnit: \"2\",\n    NumericCode: 764,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TJS\",\n    Currency: \"Somoni\",\n    Entity: \"TAJIKISTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 972,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TMT\",\n    Currency: \"Turkmenistan New Manat\",\n    Entity: \"TURKMENISTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 934,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TND\",\n    Currency: \"Tunisian Dinar\",\n    Entity: \"TUNISIA\",\n    MinorUnit: \"3\",\n    NumericCode: 788,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TOP\",\n    Currency: \"Pa'anga\",\n    Entity: \"TONGA\",\n    MinorUnit: \"2\",\n    NumericCode: 776,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TRY\",\n    Currency: \"Turkish Lira\",\n    Entity: \"TURKEY\",\n    MinorUnit: \"2\",\n    NumericCode: 949,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TTD\",\n    Currency: \"Trinidad and Tobago Dollar\",\n    Entity: \"TRINIDAD AND TOBAGO\",\n    MinorUnit: \"2\",\n    NumericCode: 780,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TWD\",\n    Currency: \"New Taiwan Dollar\",\n    Entity: \"TAIWAN (PROVINCE OF CHINA)\",\n    MinorUnit: \"2\",\n    NumericCode: 901,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"TZS\",\n    Currency: \"Tanzanian Shilling\",\n    Entity: \"TANZANIA, UNITED REPUBLIC OF\",\n    MinorUnit: \"2\",\n    NumericCode: 834,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UAH\",\n    Currency: \"Hryvnia\",\n    Entity: \"UKRAINE\",\n    MinorUnit: \"2\",\n    NumericCode: 980,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UGX\",\n    Currency: \"Uganda Shilling\",\n    Entity: \"UGANDA\",\n    MinorUnit: \"0\",\n    NumericCode: 800,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"USD\",\n    Currency: \"US Dollar\",\n    Entity: \"AMERICAN SAMOA\",\n    MinorUnit: \"2\",\n    NumericCode: 840,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"USN\",\n    Currency: \"US Dollar (Next day)\",\n    Entity: \"UNITED STATES OF AMERICA (THE)\",\n    MinorUnit: \"2\",\n    NumericCode: 997,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UYI\",\n    Currency: \"Uruguay Peso en Unidades Indexadas (UI)\",\n    Entity: \"URUGUAY\",\n    MinorUnit: \"0\",\n    NumericCode: 940,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UYU\",\n    Currency: \"Peso Uruguayo\",\n    Entity: \"URUGUAY\",\n    MinorUnit: \"2\",\n    NumericCode: 858,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UYW\",\n    Currency: \"Unidad Previsional\",\n    Entity: \"URUGUAY\",\n    MinorUnit: \"4\",\n    NumericCode: 927,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"UZS\",\n    Currency: \"Uzbekistan Sum\",\n    Entity: \"UZBEKISTAN\",\n    MinorUnit: \"2\",\n    NumericCode: 860,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"VES\",\n    Currency: \"Bolívar Soberano\",\n    Entity: \"VENEZUELA (BOLIVARIAN REPUBLIC OF)\",\n    MinorUnit: \"2\",\n    NumericCode: 928,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"VND\",\n    Currency: \"Dong\",\n    Entity: \"VIET NAM\",\n    MinorUnit: \"0\",\n    NumericCode: 704,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"VUV\",\n    Currency: \"Vatu\",\n    Entity: \"VANUATU\",\n    MinorUnit: \"0\",\n    NumericCode: 548,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"WST\",\n    Currency: \"Tala\",\n    Entity: \"SAMOA\",\n    MinorUnit: \"2\",\n    NumericCode: 882,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XAF\",\n    Currency: \"CFA Franc BEAC\",\n    Entity: \"CAMEROON\",\n    MinorUnit: \"0\",\n    NumericCode: 950,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XCD\",\n    Currency: \"East Caribbean Dollar\",\n    Entity: \"ANGUILLA\",\n    MinorUnit: \"2\",\n    NumericCode: 951,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XDR\",\n    Currency: \"SDR (Special Drawing Right)\",\n    Entity: \"INTERNATIONAL MONETARY FUND (IMF)\",\n    MinorUnit: \"-\",\n    NumericCode: 960,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XOF\",\n    Currency: \"CFA Franc BCEAO\",\n    Entity: \"BENIN\",\n    MinorUnit: \"0\",\n    NumericCode: 952,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XPF\",\n    Currency: \"CFP Franc\",\n    Entity: \"FRENCH POLYNESIA\",\n    MinorUnit: \"0\",\n    NumericCode: 953,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"XUA\",\n    Currency: \"ADB Unit of Account\",\n    Entity: \"MEMBER COUNTRIES OF THE AFRICAN DEVELOPMENT BANK GROUP\",\n    MinorUnit: \"-\",\n    NumericCode: 965,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"YER\",\n    Currency: \"Yemeni Rial\",\n    Entity: \"YEMEN\",\n    MinorUnit: \"2\",\n    NumericCode: 886,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ZAR\",\n    Currency: \"Rand\",\n    Entity: \"LESOTHO\",\n    MinorUnit: \"2\",\n    NumericCode: 710,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ZMW\",\n    Currency: \"Zambian Kwacha\",\n    Entity: \"ZAMBIA\",\n    MinorUnit: \"2\",\n    NumericCode: 967,\n    WithdrawalDate: null,\n  },\n  {\n    AlphabeticCode: \"ZWL\",\n    Currency: \"Zimbabwe Dollar\",\n    Entity: \"ZIMBABWE\",\n    MinorUnit: \"2\",\n    NumericCode: 932,\n    WithdrawalDate: null,\n  },\n];\n","import React, {useContext} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../../RequisitionRequestContextProvider\";\nimport {currencyData} from \"../../../../../data/CurrencyData\";\nimport AutocompleteTextField from \"../../../../../components/inputs/AutocompleteTextField\";\n\nconst ReqSpendCurrencySelect = () => {\n  const {\n    selectedReqSpendCurrency,\n    setSelectedReqSpendCurrency,\n    selectedReqSpendCurrencyError,\n    setSelectedReqSpendCurrencyError,\n  } = useContext(RequisitionRequestContext);\n\n  const handleChange = (value) => {\n    if (value) {\n      setSelectedReqSpendCurrency(value);\n    } else {\n      setSelectedReqSpendCurrency(null);\n    }\n\n    setSelectedReqSpendCurrencyError(false);\n  };\n\n  return (\n    <>\n      <Autocomplete\n        size=\"small\"\n        value={selectedReqSpendCurrency}\n        options={currencyData}\n        getOptionLabel={(option) => option.AlphabeticCode}\n        style={{width: 150}}\n        renderInput={(params) => (\n          <AutocompleteTextField\n            {...params}\n            required\n            error={selectedReqSpendCurrencyError}\n            label=\"Currency\"\n          />\n        )}\n        onChange={(event, newValue) => {\n          handleChange(newValue);\n        }}\n      />\n    </>\n  );\n};\n\nexport default ReqSpendCurrencySelect;\n","import React, { useContext } from \"react\";\nimport { TextField, makeStyles, Box } from \"@material-ui/core\";\nimport { RequisitionRequestContext } from \"../../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"30ch\",\n  },\n}));\n\nconst ReqSpendAmountInput = () => {\n  const classes = useStyles();\n  const {\n    reqSpendAmount,\n    setReqSpendAmount,\n    reqSpendAmountError,\n    setReqSpendAmountError,\n  } = useContext(RequisitionRequestContext);\n\n  const validate = (num) => {\n    const regex = /^(?=.*[0-9])[.0-9]+$/;\n\n    return regex.test(num);\n  };\n\n  const handleChange = async (e) => {\n    const num = e.target.value;\n\n    setReqSpendAmount(num);\n\n    if (num !== \"\") {\n      const check = await validate(num);\n\n      if (check) {\n        setReqSpendAmountError(false);\n      } else {\n        setReqSpendAmountError(true);\n      }\n    }\n  };\n\n  return (\n    <Box ml={1.5} mr={1.5}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          color=\"secondary\"\n          id=\"req-spend-amount-input\"\n          label=\"Amount\"\n          helperText=\"must contain numbers and/or .\"\n          error={reqSpendAmountError}\n          className={classes.textField}\n          value={reqSpendAmount}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default ReqSpendAmountInput;\n","export const SalaryPeriodOptions = [\"Annually\", \"Hourly\", \"Monthly\", \"Weekly\"];\n","import React, {useContext} from \"react\";\nimport {\n  makeStyles,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"../../../RequisitionRequestContextProvider\";\nimport {SalaryPeriodOptions} from \"../../../../../data/constants/SalaryPeriodOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"19ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst ReqSpendPeriodSelect = () => {\n  const classes = useStyles();\n  const {\n    selectedReqSpendPeriod,\n    setSelectedReqSpendPeriod,\n    selectedReqSpendPeriodError,\n    setSelectedReqSpendPeriodError,\n  } = useContext(RequisitionRequestContext);\n\n  const handleChange = (event) => {\n    setSelectedReqSpendPeriod(event.target.value);\n    setSelectedReqSpendPeriodError(false);\n  };\n\n  return (\n    <FormControl required color={\"secondary\"} size=\"small\" variant=\"outlined\">\n      <InputLabel id=\"select-company-label\">Salary Period</InputLabel>\n      <Select\n        labelId=\"select-company-label\"\n        id=\"select-company\"\n        error={selectedReqSpendPeriodError}\n        value={selectedReqSpendPeriod}\n        onChange={handleChange}\n        className={classes.select}\n        label={\"Salary Period\"}\n        color={\"secondary\"}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n\n        {SalaryPeriodOptions.map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default ReqSpendPeriodSelect;\n","import React from \"react\";\nimport { Box, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport ReqSpendCurrencySelect from \"./ReqSpendCurrencySelect\";\nimport ReqSpendAmountInput from \"./ReqSpendAmountInput\";\nimport ReqSpendPeriodSelect from \"./ReqSpendPeriodSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst RequisitionSpend = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography component={'div'} variant=\"subtitle1\" className={classes.leftText}>\n            Enter requisition spend\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box className={classes.box}>\n            <ReqSpendCurrencySelect />\n            <ReqSpendAmountInput />\n            <ReqSpendPeriodSelect />\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default RequisitionSpend;\n","import React, { useContext } from \"react\";\nimport { TextField, makeStyles, Box } from \"@material-ui/core\";\nimport { RequisitionRequestContext } from \"../../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"30ch\",\n  },\n}));\n\nconst ReqBonusAmountInput = () => {\n  const classes = useStyles();\n  const {\n    reqBonusAmount,\n    setReqBonusAmount,\n    reqBonusAmountError,\n    setReqBonusAmountError,\n  } = useContext(RequisitionRequestContext);\n\n  const validate = (num) => {\n    const regex = /^(?=.*[0-9])[.0-9]+$/;\n\n    return regex.test(num);\n  };\n\n  const handleChange = async (e) => {\n    const num = e.target.value;\n\n    setReqBonusAmount(num);\n\n    if (num !== \"\") {\n      const check = await validate(num);\n\n      if (check) {\n        setReqBonusAmountError(false);\n      } else {\n        setReqBonusAmountError(true);\n      }\n    }\n  };\n\n  return (\n    <Box ml={1.5} mr={1.5}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          color=\"secondary\"\n          id=\"req-bonus-amount-input\"\n          label=\"Amount\"\n          helperText=\"must contain numbers and/or .\"\n          error={reqBonusAmountError}\n          className={classes.textField}\n          value={reqBonusAmount}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default ReqBonusAmountInput;\n","import React, {memo, useContext, useState} from \"react\";\nimport {\n  makeStyles,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  withStyles,\n  Box,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../../RequisitionRequestContextProvider\";\nimport {currencyData} from \"../../../../../data/CurrencyData\";\nimport AutocompleteTextField from \"../../../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles(() => ({\n  select: {\n    width: \"30ch\",\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ColorRadio = withStyles((theme) => ({\n  root: {\n    color: theme.palette.warning.main,\n    fontSize: \"5rem\",\n\n    \"&$checked\": {\n      color: theme.palette.warning.main,\n      fontSize: \"5rem\",\n    },\n  },\n}))((props) => <Radio color=\"default\" {...props} />);\n\nconst ReqBonusTypeSelect = () => {\n  const classes = useStyles();\n  const {\n    setSelectedReqBonusType,\n    reqBonusTypeCurrencyError,\n    setReqBonusTypeCurrencyError,\n  } = useContext(RequisitionRequestContext);\n  const [radioValue, setRadioValue] = React.useState(\"%\");\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [isViewCurrency, setIsViewCurrency] = useState(false);\n\n  const handleCurrencyChange = (value) => {\n    if (value) {\n      setSelectedCurrency(value);\n      setSelectedReqBonusType(value.AlphabeticCode);\n      setReqBonusTypeCurrencyError(false);\n    } else {\n      setSelectedCurrency(null);\n      setSelectedReqBonusType(null);\n    }\n  };\n\n  const handleTypeChange = (event) => {\n    setRadioValue(event.target.value);\n\n    if (event.target.value === \"%\") {\n      setSelectedCurrency(null);\n      setSelectedReqBonusType(\"%\");\n      setIsViewCurrency(false);\n      setReqBonusTypeCurrencyError(false);\n    } else {\n      setSelectedReqBonusType(null);\n      setIsViewCurrency(true);\n    }\n  };\n\n  return (\n    <Box className={classes.box}>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Select type</FormLabel>\n        <RadioGroup\n          row\n          aria-label=\"type\"\n          name=\"type\"\n          value={radioValue}\n          onChange={handleTypeChange}\n        >\n          <FormControlLabel\n            value=\"%\"\n            control={<ColorRadio size=\"small\" />}\n            label=\"%\"\n          />\n          <FormControlLabel\n            value=\"currency\"\n            control={<ColorRadio size=\"small\" />}\n            label=\"currency\"\n          />\n        </RadioGroup>\n      </FormControl>\n\n      {isViewCurrency && (\n        <Autocomplete\n          size=\"small\"\n          value={selectedCurrency}\n          options={currencyData}\n          getOptionLabel={(option) => option.AlphabeticCode}\n          style={{width: 200}}\n          renderInput={(params) => (\n            <AutocompleteTextField\n              {...params}\n              error={reqBonusTypeCurrencyError}\n              label=\"Select Currency\"\n            />\n          )}\n          onChange={(event, newValue) => {\n            handleCurrencyChange(newValue);\n          }}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(ReqBonusTypeSelect);\n","import React from \"react\";\nimport { Box, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport ReqBonusAmountInput from \"./ReqBonusAmountInput\";\nimport ReqBonusTypeSelect from \"./ReqBonusTypeSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst RequisitionSpend = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <Typography component={'div'} variant=\"subtitle1\" className={classes.leftText}>\n          Enter requisition bonus\n        </Typography>\n        <Typography component={'div'} variant=\"subtitle2\" className={classes.leftText}>\n          (optional)\n        </Typography>\n      </Grid>\n      <Grid item xs={8}>\n        <Box className={classes.box}>\n          <ReqBonusAmountInput />\n          <ReqBonusTypeSelect />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RequisitionSpend;\n","import React, { useContext } from \"react\";\nimport { TextField, makeStyles, Box } from \"@material-ui/core\";\nimport { RequisitionRequestContext } from \"../../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"30ch\",\n  },\n}));\n\nconst ReqCommissionAmountInput = () => {\n  const classes = useStyles();\n  const {\n    reqCommissionAmount,\n    setReqCommissionAmount,\n    reqCommissionAmountError,\n    setReqCommissionAmountError,\n  } = useContext(RequisitionRequestContext);\n\n  const validate = (num) => {\n    const regex = /^(?=.*[0-9])[.0-9]+$/;\n\n    return regex.test(num);\n  };\n\n  const handleChange = async (e) => {\n    const num = e.target.value;\n\n    setReqCommissionAmount(num);\n\n    if (num !== \"\") {\n      const check = await validate(num);\n\n      if (check) {\n        setReqCommissionAmountError(false);\n      } else {\n        setReqCommissionAmountError(true);\n      }\n    }\n  };\n\n  return (\n    <Box ml={1.5} mr={1.5}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          color=\"secondary\"\n          id=\"req-commission-amount-input\"\n          label=\"Amount\"\n          helperText=\"must contain numbers and/or .\"\n          error={reqCommissionAmountError}\n          className={classes.textField}\n          value={reqCommissionAmount}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default ReqCommissionAmountInput;\n","import React, {useContext} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {RequisitionRequestContext} from \"../../../RequisitionRequestContextProvider\";\nimport {currencyData} from \"../../../../../data/CurrencyData\";\nimport AutocompleteTextField from \"../../../../../components/inputs/AutocompleteTextField\";\n\nconst ReqCommissionCurrencySelect = () => {\n  const {\n    selectedReqCommissionCurrency,\n    setSelectedReqCommissionCurrency,\n    selectedReqCommissionCurrencyError,\n    setSelectedReqCommissionCurrencyError,\n  } = useContext(RequisitionRequestContext);\n\n  const handleChange = (value) => {\n    if (value) {\n      setSelectedReqCommissionCurrency(value);\n    } else {\n      setSelectedReqCommissionCurrency(null);\n    }\n\n    setSelectedReqCommissionCurrencyError(false);\n  };\n\n  return (\n    <>\n      <Autocomplete\n        size=\"small\"\n        value={selectedReqCommissionCurrency}\n        options={currencyData}\n        getOptionLabel={(option) => option.AlphabeticCode}\n        style={{width: 150}}\n        renderInput={(params) => (\n          <AutocompleteTextField\n            {...params}\n            error={selectedReqCommissionCurrencyError}\n            label=\"Currency\"\n          />\n        )}\n        onChange={(event, newValue) => {\n          handleChange(newValue);\n        }}\n      />\n    </>\n  );\n};\n\nexport default ReqCommissionCurrencySelect;\n","import React from \"react\";\nimport { Box, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport ReqCommissionAmountInput from \"./ReqCommissionAmountInput\";\nimport ReqCommissionCurrencySelect from \"./ReqCommissionCurrencySelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst RequisitionCommission = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography component={'div'} variant=\"subtitle1\" className={classes.leftText}>\n            Enter requisition commission\n          </Typography>\n          <Typography component={'div'} variant=\"subtitle2\" className={classes.leftText}>\n            (optional)\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box className={classes.box}>\n            <ReqCommissionCurrencySelect />\n            <ReqCommissionAmountInput />\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default RequisitionCommission;\n","import React, { useContext } from \"react\";\nimport { TextField, makeStyles, Box } from \"@material-ui/core\";\nimport { RequisitionRequestContext } from \"../../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"20ch\",\n  },\n}));\n\nconst ContractMonthsInput = () => {\n  const classes = useStyles();\n  const {\n    contractMonths,\n    setContractMonths,\n    contractMonthsError,\n    setContractMonthsError,\n  } = useContext(RequisitionRequestContext);\n\n  const validate = (num) => {\n    const regex = /^(?=.*[0-9])[0-9]+$/;\n\n    return regex.test(num);\n  };\n\n  const handleChange = async (e) => {\n    const num = e.target.value;\n\n    setContractMonths(num);\n\n    if (num !== \"\") {\n      const check = await validate(num);\n\n      if (check) {\n        setContractMonthsError(false);\n      } else {\n        setContractMonthsError(true);\n      }\n    }\n  };\n\n  return (\n    <Box ml={1.5} mr={1.5}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          color=\"secondary\"\n          id=\"contract-months-input\"\n          label=\"Number of Months\"\n          helperText=\"must contain numbers only\"\n          error={contractMonthsError}\n          className={classes.textField}\n          value={contractMonths}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default ContractMonthsInput;\n","import React, { useContext } from \"react\";\nimport { TextField, makeStyles, Box } from \"@material-ui/core\";\nimport { RequisitionRequestContext } from \"../../../RequisitionRequestContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"20ch\",\n  },\n}));\n\nconst ContractHoursInput = () => {\n  const classes = useStyles();\n  const {\n    contractHours,\n    setContractHours,\n    contractHoursError,\n    setContractHoursError,\n  } = useContext(RequisitionRequestContext);\n\n  const validate = (num) => {\n    const regex = /^(?=.*[0-9])[0-9]+$/;\n\n    return regex.test(num);\n  };\n\n  const handleChange = async (e) => {\n    const num = e.target.value;\n\n    setContractHours(num);\n\n    if (num !== \"\") {\n      const check = await validate(num);\n\n      if (check) {\n        setContractHoursError(false);\n      } else {\n        setContractHoursError(true);\n      }\n    }\n  };\n\n  return (\n    <Box ml={1.5} mr={1.5}>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n        <TextField\n          required\n          color=\"secondary\"\n          id=\"contract-hours-input\"\n          label=\"Hours per Week\"\n          helperText=\"must contain numbers only\"\n          error={contractHoursError}\n          className={classes.textField}\n          value={contractHours}\n          onChange={handleChange}\n        />\n      </form>\n    </Box>\n  );\n};\n\nexport default ContractHoursInput;\n","import React from \"react\";\nimport { Box, Grid, Typography, makeStyles } from \"@material-ui/core\";\nimport ContractMonthsInput from \"./ContractMonthsInput\";\nimport ContractHoursInput from \"./ContractHoursInput\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst ContractInformation = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <Typography component={'div'} variant=\"subtitle1\" className={classes.leftText}>\n            Enter contract length\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Box className={classes.box}>\n            <ContractMonthsInput />\n            <ContractHoursInput />\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ContractInformation;\n","import React, {memo, useContext} from \"react\";\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {RequisitionRequestContext} from \"../../RequisitionRequestContextProvider\";\nimport RequestFormLabel from \"../../../../components/typographies/RequestFormTypography\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"30ch\",\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst JobTitle = () => {\n  const classes = useStyles();\n  const {jobCode, jobTitle, setJobTitle, jobTitleError, setJobTitleError} =\n    useContext(RequisitionRequestContext);\n\n  const handleChange = (value) => {\n    setJobTitle(value);\n\n    if (value !== \"\" && jobTitleError) {\n      setJobTitleError(false);\n    }\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4} className={classes.box}>\n          <RequestFormLabel title=\"Enter Job Title\" />\n        </Grid>\n\n        <Grid item xs={8} className={classes.box}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              color=\"secondary\"\n              id=\"job-title-amount-input\"\n              label=\"Job Title*\"\n              helperText=\"must be up to 25 characters\"\n              error={jobTitleError}\n              className={classes.textField}\n              value={jobTitle}\n              onChange={(e) => handleChange(e.target.value)}\n              inputProps={{maxLength: 25}}\n            />\n          </form>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default memo(JobTitle);\n","import React from \"react\";\nimport JobCodeSelect from \"./JobCodeSelect\";\nimport RequisitionSpend from \"./RequisitionSpend\";\nimport RequisitionBonus from \"./RequisitionBonus\";\nimport RequisitionCommission from \"./RequisitionCommission\";\nimport ContractInformation from \"./ContractInformation\";\nimport JobTitle from \"./JobTitle\";\n\nconst JobFinanceDetails = () => {\n  return (\n    <>\n      <JobCodeSelect />\n      <JobTitle />\n      <RequisitionSpend />\n      <RequisitionBonus />\n      <RequisitionCommission />\n      <ContractInformation />\n    </>\n  );\n};\n\nexport default JobFinanceDetails;\n","import React, {memo} from \"react\";\nimport {Typography} from \"@material-ui/core\";\n\nconst SubtitleTypography = ({...props}) => {\n  return <Typography component={\"div\"} variant=\"subtitle2\" {...props} />;\n};\n\nexport default memo(SubtitleTypography);\n","import React, {memo} from \"react\";\nimport {Box, Divider} from \"@material-ui/core\";\nimport RequisitionDetails from \"./RequisitionDetails\";\nimport CostCenter from \"./CostCenter\";\nimport AdditionalInformation from \"./AdditionalInformation\";\nimport JobFinanceDetails from \"./JobFinanceDetails\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\nimport TopTypography from \"../../../components/typographies/TopTypography\";\nimport SubtitleTypography from \"../../../components/typographies/SubtitleTypography\";\n\nconst CreateRequisitionRequestForm = () => {\n  return (\n    <RequestFormWrapper>\n      <Box>\n        <TopTypography>{\"Create Request\"}</TopTypography>\n        <SubtitleTypography>\n          All fields marked with * are required.\n        </SubtitleTypography>\n      </Box>\n\n      <SectionTitleBlock title=\"Requisition Details\">\n        <RequisitionDetails />\n      </SectionTitleBlock>\n\n      <Divider />\n\n      <SectionTitleBlock title=\"Cost Center\">\n        <CostCenter />\n      </SectionTitleBlock>\n\n      <Divider />\n\n      <SectionTitleBlock title=\"Job/Finance Details\">\n        <JobFinanceDetails />\n      </SectionTitleBlock>\n\n      <Divider />\n\n      <SectionTitleBlock title=\"Additional Information\">\n        <AdditionalInformation />\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default memo(CreateRequisitionRequestForm);\n","import React, {\n  Children,\n  cloneElement,\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport RequestStepper from \"./RequestStepper\";\nimport RequestStepperButtonWrapper from \"./RequestStepperButtonWrapper\";\nimport CustomPortal from \"../CustomPortal\";\n\nconst useStyles = makeStyles((theme) => ({\n  contentBodyBox: {\n    marginTop: theme.spacing(3),\n    height: \"100%\",\n    maxHeight: \"51vh\",\n    overflow: \"auto\",\n    [theme.breakpoints.up(\"xl\")]: {\n      maxHeight: \"57vh\",\n    },\n  },\n  gradientPaper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst RequestWrapperPage = ({\n  activeStep,\n  setActiveStep,\n  steps,\n  createFormComponent,\n  reviewComponent,\n  stepperButtons,\n  stepperResetBtn,\n  summaryComponent,\n}) => {\n  const classes = useStyles();\n\n  const isLastStep = activeStep === steps?.length - 1;\n\n  useEffect(() => {\n    if (!isLastStep) {\n      const contentBox = document.getElementById(\"content-box\");\n      contentBox.scroll(0, 0);\n    }\n  }, [activeStep, isLastStep]);\n\n  const handleNext = useCallback(() => {\n    setActiveStep(activeStep + 1);\n  }, [activeStep, setActiveStep]);\n\n  const handleBack = useCallback(() => {\n    setActiveStep(activeStep - 1);\n  }, [activeStep, setActiveStep]);\n\n  const handleReset = useCallback(() => {\n    setActiveStep(0);\n  }, [setActiveStep]);\n\n  const stepperButtonWithProps = Children.map(stepperButtons, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement(child, {steps, activeStep, handleNext, handleBack});\n    }\n    return child;\n  });\n  const stepperResetBtnWithProps = Children.map(stepperResetBtn, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement(child, {handleReset});\n    }\n    return null;\n  });\n\n  return (\n    <Box>\n      <RequestStepper steps={steps} activeStep={activeStep} />\n      <Box className={classes.gradientPaper} height={\"10px\"} width={\"100%\"} />\n      <Box>\n        {isLastStep ? (\n          <>\n            <RequestStepperButtonWrapper topMargin={3}>\n              {stepperResetBtnWithProps}\n            </RequestStepperButtonWrapper>\n\n            {summaryComponent}\n          </>\n        ) : (\n          <>\n            <Box className={classes.contentBodyBox} id=\"content-box\">\n              {activeStep === 0\n                ? createFormComponent\n                : activeStep === 1\n                ? reviewComponent\n                : \"unknown step\"}\n            </Box>\n\n            <CustomPortal>\n              <Box px={2} mx={2}>\n              <RequestStepperButtonWrapper>\n                {stepperButtonWithProps}\n              </RequestStepperButtonWrapper>\n              </Box>\n            </CustomPortal>\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(RequestWrapperPage);\n","import React, { memo, useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { RequisitionRequestContext } from \"./RequisitionRequestContextProvider\";\n\nconst StepperResetBtn = ({ handleReset }) => {\n  const {\n    setRequisitionType,\n    setPlannedStartDate,\n    setSelectedManager,\n    setSelectedBusinessUnit,\n    setSelectedDepartment,\n    setSelectedLocation,\n    setIsBackfillChecked,\n    setSelectedBackfill,\n    setIsCostCenterDisabled,\n    setCostCenterData,\n    setManagerCostCenter,\n    setSelectedCompanyCode,\n    setSelectedParentMgmtCostCenter,\n    setSelectedMgmtCostCenter,\n    setSelectedFunctionalAreaDesc,\n    setSelectedCountryDesc,\n    setJobCode,\n    setJobTitle,\n    setSelectedReqSpendCurrency,\n    setReqSpendAmount,\n    setSelectedReqBonusType,\n    setReqCommissionAmount,\n    setSelectedReqCommissionCurrency,\n    setContractMonths,\n    setContractHours,\n    setComments,\n    setSelectedReqSpendPeriod,\n    setReqBonusAmount,\n    setIsCodeChanged,\n  } = useContext(RequisitionRequestContext);\n\n  const userReset = () => {\n    setRequisitionType();\n    setPlannedStartDate();\n    setSelectedManager();\n    setSelectedBusinessUnit();\n    setSelectedDepartment();\n    setSelectedLocation();\n    setIsBackfillChecked(false);\n    setSelectedBackfill(null);\n    setIsCostCenterDisabled(true);\n    setCostCenterData();\n    setManagerCostCenter();\n    setSelectedCompanyCode();\n    setSelectedParentMgmtCostCenter();\n    setSelectedMgmtCostCenter();\n    setSelectedFunctionalAreaDesc();\n    setSelectedCountryDesc();\n    setJobCode(\"\");\n    setJobTitle(\"\");\n    setSelectedReqSpendCurrency();\n    setReqSpendAmount();\n    setSelectedReqBonusType(\"%\");\n    setReqCommissionAmount();\n    setSelectedReqCommissionCurrency();\n    setContractMonths();\n    setContractHours();\n    setComments();\n    setSelectedReqSpendPeriod(\"\");\n    setReqBonusAmount();\n    setIsCodeChanged(false);\n    handleReset();\n  };\n\n  return (\n    <Button variant=\"contained\" color=\"secondary\" onClick={userReset}>\n      Create Another Request\n    </Button>\n  );\n};\n\nexport default memo(StepperResetBtn);\n","import React, { memo } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport TopTypography from \"../typographies/TopTypography\";\n\nconst RequestTopBox = ({ review, reviewText, summaryText }) => {\n  return (\n    <Box>\n      <TopTypography>{review ? reviewText : summaryText}</TopTypography>\n\n      {review &&\n      <Typography component={\"div\"} variant=\"body2\">\n        Please review and ensure that all of the information is correct.\n        You must click the CONFIRM button to finalize your response.\n      </Typography>\n      }\n    </Box>\n  );\n};\n\nexport default memo(RequestTopBox);","import React, { memo, useContext } from \"react\";\nimport { RequisitionRequestContext } from \"./RequisitionRequestContextProvider\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport RequestSummaryItem from \"../../components/requestWrapper/RequestSummaryItem\";\nimport RequestSummarySection from \"../../components/requestWrapper/RequestSummarySection\";\nimport dateFormat from \"dateformat\";\nimport RequestTopBox from \"../../components/blocks/RequestTopBox\";\n\nconst RequestSummary = ({ review }) => {\n  const {\n    requisitionType,\n    plannedStartDate,\n    selectedManager,\n    selectedBusinessUnit,\n    selectedDepartment,\n    location,\n    isBackfillChecked,\n    selectedBackfill,\n    selectedCompanyCode,\n    selectedParentMgmtCostCenter,\n    selectedMgmtCostCenter,\n    selectedFunctionalAreaDesc,\n    selectedCountryDesc,\n    jobCode,\n    jobTitle,\n    selectedReqSpendCurrency,\n    reqSpendAmount,\n    selectedReqSpendPeriod,\n    reqBonusAmount,\n    selectedReqBonusType,\n    reqCommissionAmount,\n    selectedReqCommissionCurrency,\n    contractMonths,\n    contractHours,\n    comments,\n  } = useContext(RequisitionRequestContext);\n\n  return (\n    <PaperCardWrapper>\n      <RequestTopBox\n        review={review}\n        reviewText=\"Review Requisition Request\"\n        summaryText=\"Requisition Request Summary\"\n      />\n\n      <RequestSummarySection title=\"Requisition Details\">\n        <RequestSummaryItem name=\"Requisition Type\" value={requisitionType} />\n        <RequestSummaryItem\n          name=\"Start Date\"\n          value={dateFormat(`${plannedStartDate}T00:00`, \"mmmm d, yyyy\")}\n        />\n        <RequestSummaryItem\n          name=\"Hiring Manager\"\n          value={selectedManager?.profile?.email}\n        />\n        <RequestSummaryItem\n          name=\"Business Unit\"\n          value={selectedBusinessUnit?.businessUnit}\n        />\n        <RequestSummaryItem\n          name=\"Department\"\n          value={selectedDepartment?.department}\n        />\n        <RequestSummaryItem\n          name=\"Location\"\n          value={`${location?.description} (${location?.locationCode})`}\n        />\n        <RequestSummaryItem\n          name=\"Backfill?\"\n          value={isBackfillChecked ? \"yes\" : \"no\"}\n        />\n        {isBackfillChecked && (\n          <RequestSummaryItem\n            name=\"Selected Backfill\"\n            value={\n              selectedBackfill?.firstName +\n              \" \" +\n              selectedBackfill?.lastName +\n              \" | \" +\n              selectedBackfill?.userName\n            }\n          />\n        )}\n      </RequestSummarySection>\n\n      <RequestSummarySection title=\"Cost Center\">\n        <RequestSummaryItem\n          name=\"Requisition Cost Center\"\n          value={[\n            selectedCompanyCode?.costCenterCode,\n            selectedParentMgmtCostCenter?.costCenterCode,\n            selectedMgmtCostCenter?.costCenterCode,\n            selectedFunctionalAreaDesc?.costCenterCode,\n            selectedCountryDesc?.costCenterCode,\n            \"00\",\n          ].join(\"-\")}\n        />\n      </RequestSummarySection>\n\n      <RequestSummarySection title=\"Job/Finance Details\">\n        <RequestSummaryItem\n          name=\"Job Code\"\n          value={jobCode + \" | \" + jobTitle}\n        />\n        <RequestSummaryItem\n          name=\"Requisition Spend\"\n          value={[\n            selectedReqSpendCurrency?.AlphabeticCode,\n            reqSpendAmount,\n            selectedReqSpendPeriod,\n          ].join(\" \")}\n        />\n        <RequestSummaryItem\n          name=\"Requisition Bonus\"\n          value={\n            reqBonusAmount\n              ? `${reqBonusAmount} ${selectedReqBonusType}`\n              : \"not entered\"\n          }\n        />\n        <RequestSummaryItem\n          name=\"Requisition Commission\"\n          value={\n            reqCommissionAmount\n              ? `${reqCommissionAmount} ${selectedReqCommissionCurrency?.AlphabeticCode}`\n              : \"not entered\"\n          }\n        />\n        <RequestSummaryItem\n          name=\"Contract Length\"\n          value={`${contractMonths || \"\"} Months; ${\n            contractHours || \"\"\n          } Hours per Week`}\n        />\n        <RequestSummaryItem\n          name=\"Comments\"\n          value={comments?.length > 0 ? comments : \"not entered\"}\n        />\n      </RequestSummarySection>\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(RequestSummary);\n","import React, { memo, useState } from 'react'\nimport StepperButtons from \"./StepperButtons\";\nimport CreateRequisitionRequestForm from \"./CreateRequisitionRequestForm\";\nimport RequestWrapperPage from \"../../components/requestWrapper/RequestWrapperPage\";\nimport StepperResetBtn from \"./StepperResetBtn\";\nimport RequestSummary from \"./RequestSummary\";\n\nconst steps = [\n  \"Create Requisition Request\",\n  \"Review & Confirm Request\",\n  \"Request Completed\",\n];\n\nconst RequisitionRequestPageContent = () => {\n  const [activeStep , setActiveStep] = useState(0);\n\n  return (\n    <RequestWrapperPage\n      steps={steps} activeStep={activeStep} setActiveStep={setActiveStep}\n      createFormComponent={<CreateRequisitionRequestForm/>}\n      reviewComponent={<RequestSummary review/>}\n      summaryComponent={<RequestSummary/>}\n      stepperButtons={<StepperButtons/>}\n      stepperResetBtn={<StepperResetBtn/>}\n    />\n  );\n};\n\nexport default memo(RequisitionRequestPageContent);","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport RequisitionRequestContextProvider from \"./RequisitionRequestContextProvider\";\nimport RequisitionRequestPageContent from \"./RequisitionRequestPageContent\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport InfoBlock from \"../../components/InfoBlock\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst RequisitionRequestPage = () => {\n  const {permRequisitionAll} = useContext(AuthUserContext);\n  const [viewRequisition, setViewRequisition] = useState(false);\n\n  useEffect(() => {\n    if (permRequisitionAll) {\n      setViewRequisition(true);\n    }\n  }, [permRequisitionAll]);\n\n  return (\n    <RequisitionRequestContextProvider>\n      <Page title=\"Requisition Request | LPSYNC\">\n        <BreadcrumbHomeBox>\n          <BreadcrumbText title={\"REQUISITION REQUEST\"} />\n        </BreadcrumbHomeBox>\n\n        <Box mx={3}>\n          <PageTitleBox title=\"Requisition Request\" />\n\n          {viewRequisition ? (\n            <>\n              <InfoBlock type={\"info\"}>\n                <Typography component={\"div\"} variant=\"p\">\n                  A requisition request is required for all candidate types. All\n                  requests will need to be approved by the Finance team.\n                  <br />\n                  Once approved, you will be able to onboard a candidate against\n                  the requisition.\n                </Typography>\n              </InfoBlock>\n              <RequisitionRequestPageContent />\n            </>\n          ) : (\n            <NoPermissionsError />\n          )}\n        </Box>\n      </Page>\n    </RequisitionRequestContextProvider>\n  );\n};\n\nexport default memo(RequisitionRequestPage);\n","import React, { memo } from \"react\";\n\nconst SystemStatusPage = () => {\n  return (\n    <div>\n      <p>System Status Page</p>\n    </div>\n  );\n};\n\nexport default memo(SystemStatusPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_REQUISITION_REPORTS_GENERATOR_INFO = gql`\n    query GetReportGeneratorFieldsInfo($reportType: String) {\n        get_report_generator_fields_info(reportType: $reportType) {\n            reqType\n            reqStatus\n            isBackfill\n            reqHiringManagerEmail {\n                reqHiringManagerEmail,\n                reqHiringManagerFirstName,\n                reqHiringManagerLastName,\n            }\n            reqJobCode\n            reqBusinessUnit\n            reqDepartment\n            reqLocationDescription\n        }\n    }\n`;\n\nexport const GET_ONBOARDING_REPORTS_GENERATOR_INFO = gql`\n    query GetReportGeneratorFieldsInfo($reportType: String) {\n        get_report_generator_fields_info(reportType: $reportType) {\n            onboardingType\n            onboardingStatus\n            onboardEmployeeType\n            onboardCompany\n            onboardJobTitle\n            onboardBusinessUnit\n            onboardDepartment\n            onboardLocationDescription\n        }\n    }\n`;\n\nexport const GET_OFFBOARDING_REPORTS_GENERATOR_INFO = gql`\n    query GetReportGeneratorFieldsInfo($reportType: String) {\n        get_report_generator_fields_info(reportType: $reportType) {\n            offboardingType\n            offboardingStatus\n            offboardEmployeeType\n            offboardLocation\n            hrTerminationType\n            hrTerminationCode\n        }\n    }\n`;\n\nexport const GET_EMPLOYEES_REPORTS_GENERATOR_INFO = gql`\n    query GetReportGeneratorFieldsInfo($reportType: String) {\n        get_report_generator_fields_info(reportType: $reportType) {\n            employeeType\n            employeeManagerEmail\n            employeeBusinessUnit\n            employeeDepartment\n            employeeLocation\n            companyName\n        }\n    }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_REQUISITION_GENERATED_REPORT = gql`\n    query GetGeneratedReport($search: GetGeneratedReportInput) {\n        get_generated_report(search: $search) {\n            requisitionTasks {\n                id\n                reqStartDate\n                reqType\n                reqHiringManagerFirstName\n                reqHiringManagerLastName\n                reqHiringManagerEmail\n                isBackfill\n                reqFulfilledID\n                reqJobCode\n                reqJobTitle\n                reqDepartment\n                reqBusinessUnit\n                reqLocationDescription\n                task {\n                    id\n                    taskStatus\n                }\n            }\n        }\n    }\n`;\n\nexport const GET_OFFBOARDING_GENERATED_REPORT = gql`\n    query GetGeneratedReport($search: GetGeneratedReportInput) {\n        get_generated_report(search: $search) {\n            offboardingTasks {\n                id\n                offboardFirstName\n                offboardLastName\n                offboardEmail\n                offboardEmployeeType\n                offboardLocation\n                hrTerminationCode\n                hrTerminationType\n                payrollEndDateTime\n                payrollEndTimezone\n                offboardEmployeeNumber\n                transferFirstName\n                transferLastName\n                transferGdrive\n                transferGcalendar\n                task {\n                    id\n                    taskStatus\n                    taskEndDate\n                    taskScheduleType\n                }\n            }\n        }\n    }\n`;\n\nexport const GET_ONBOARDING_GENERATED_REPORT = gql`\n    query GetGeneratedReport($search: GetGeneratedReportInput) {\n        get_generated_report(search: $search) {\n            onboardingTasks {\n                id\n                onboardFirstName\n                onboardLastName\n                onboardEmail\n                onboardNonLpEmail\n                onboardEmployeeType\n                reqId\n                onboardManagerFirstName\n                onboardManagerLastName\n                onboardManagerEmail\n                onboardCompany\n                onboardJobTitle\n                onboardBusinessUnit\n                onboardDepartment\n                onboardLocationDescription\n                task {\n                    id\n                    taskStatus\n                    taskScheduleDateTime\n                    taskScheduleTimezone\n                    taskEndDate\n                    taskScheduleType\n                }\n            }\n        }\n    }\n`;\n\nexport const GET_EMPLOYEES_GENERATED_REPORT = gql`\n    query GetGeneratedReport($search: GetGeneratedReportInput) {\n        get_generated_report(search: $search) {\n            employees {\n                id\n                employeeType\n                firstName\n                lastName\n                department\n                businessUnit\n                location\n                managerEmail\n                oktaLastLogin\n                lastHireDate\n                companyName\n            }\n        }\n    }\n`;\n","import {\n  GET_EMPLOYEES_REPORTS_GENERATOR_INFO,\n  GET_OFFBOARDING_REPORTS_GENERATOR_INFO,\n  GET_ONBOARDING_REPORTS_GENERATOR_INFO,\n  GET_REQUISITION_REPORTS_GENERATOR_INFO\n} from \"../../operations/queries/getReportGeneratorInfo\";\nimport {\n  GET_EMPLOYEES_GENERATED_REPORT,\n  GET_OFFBOARDING_GENERATED_REPORT,\n  GET_ONBOARDING_GENERATED_REPORT,\n  GET_REQUISITION_GENERATED_REPORT\n} from \"../../operations/queries/getGeneratedReport\";\n\nconst DEFAULT_NO_DATA_LABEL = 'No data';\n\nexport const getDefaultValue = (fieldType) => {\n  switch (fieldType) {\n    case 'multiselect':\n      return [];\n    default:\n      return null;\n  }\n};\n\nexport const REPORT_GENERATOR_CONFIG = {\n  reportTypes: {\n    requisition: {\n      selectsInfoQuery: GET_REQUISITION_REPORTS_GENERATOR_INFO,\n      tableDataQuery: GET_REQUISITION_GENERATED_REPORT,\n      fields: {\n        reqStartDateFrom: {\n          label: 'Planned Start Date Between',\n          type: 'date'\n        },\n        reqStartDateTo: {\n          label: 'And',\n          type: 'date'\n        },\n        reqType: {\n          label: 'Requisition Type',\n          type: 'multiselect'\n        },\n        reqStatus: {\n          label: 'Requisition Status',\n          type: 'multiselect'\n        },\n        isBackfill: {\n          label: 'BackFill',\n          type: 'select',\n          booleanItems: true\n        },\n        reqHiringManagerEmail: {\n          label: 'Hiring Manager',\n          type: 'multiselect',\n          actualValue: ({ reqHiringManagerEmail }) => reqHiringManagerEmail,\n          displayValue: ({ reqHiringManagerFirstName, reqHiringManagerLastName }) => `${reqHiringManagerFirstName} ${reqHiringManagerLastName}`\n        },\n        reqJobCode: {\n          label: 'Job Code',\n          type: 'multiselect'\n        },\n        reqBusinessUnit: {\n          label: 'Business Unit',\n          type: 'multiselect'\n        },\n        reqDepartment: {\n          label: 'Department',\n          type: 'multiselect'\n        },\n        reqLocationDescription: {\n          label: 'Location',\n          type: 'multiselect'\n        },\n        hasReqFulfilledID: {\n          label: 'Has linked candidate',\n          type: 'select',\n          booleanItems: true,\n          menuItems: [true, false]\n        }\n      },\n      tableColumnsOptions: [\n        {\n          field: \"id\",\n          headerName: \"ID\",\n          width: 150,\n          valueGetter: ({ row }) => row.task.id ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqStartDate\",\n          headerName: \"Planned Start Date\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqStartDate ? new Date(row.reqStartDate) : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqType\",\n          headerName: \"Requisition Type\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"hiringManager\",\n          headerName: \"Hiring Manager\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqHiringManagerFirstName && row.reqHiringManagerLastName ?\n            `${row.reqHiringManagerFirstName} ${row.reqHiringManagerLastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqHiringManagerEmail\",\n          headerName: \"Hiring Manager E-Mail\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqHiringManagerEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"isBackfill\",\n          headerName: \"BackFill\",\n          width: 200,\n          valueGetter: ({ row }) => row.isBackfill ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqFulfilledID\",\n          headerName: \"Matched Candidate Number\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqFulfilledID ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqJobCode\",\n          headerName: \"Job Code\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqJobCode ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqJobTitle\",\n          headerName: \"Job Title\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqJobTitle ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqDepartment\",\n          headerName: \"Department\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqDepartment ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqBusinessUnit\",\n          headerName: \"Business Unit\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqBusinessUnit ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqLocationDescription\",\n          headerName: \"Location\",\n          width: 200,\n          valueGetter: ({ row }) => row.reqLocationDescription ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"status\",\n          headerName: \"Status\",\n          width: 200,\n          valueGetter: ({ row }) => row.task.taskStatus ?? DEFAULT_NO_DATA_LABEL\n        },\n      ]\n    },\n    offboarding: {\n      selectsInfoQuery: GET_OFFBOARDING_REPORTS_GENERATOR_INFO,\n      tableDataQuery: GET_OFFBOARDING_GENERATED_REPORT,\n      fields: {\n        offboardedFrom: {\n          label: 'Offboarding between',\n          type: 'date'\n        },\n        offboardedTo: {\n          label: 'And',\n          type: 'date'\n        },\n        payrollEndDateFrom: {\n          label: 'Payroll end date between',\n          type: 'date'\n        },\n        payrollEndDateTo: {\n          label: 'And',\n          type: 'date'\n        },\n        offboardingType: {\n          label: 'Termination Type',\n          type: 'multiselect'\n        },\n        offboardingStatus: {\n          label: 'Offboarding Status',\n          type: 'multiselect'\n        },\n        offboardEmployeeType: {\n          label: 'Employment Type',\n          type: 'multiselect'\n        },\n        offboardLocation: {\n          label: 'Location',\n          type: 'multiselect'\n        },\n        hrTerminationType: {\n          label: 'HR Reason',\n          type: 'multiselect'\n        },\n        hrTerminationCode: {\n          label: 'HR Code',\n          type: 'multiselect'\n        },\n      },\n      tableColumnsOptions: [\n        {\n          field: \"id\",\n          headerName: \"ID\",\n          width: 150,\n          valueGetter: ({ row }) => row.task.id ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"taskEndDate\",\n          headerName: \"Offboarded Date\",\n          width: 320,\n          valueGetter: ({ row }) => row.task.taskEndDate ? new Date(+row.task.taskEndDate) : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"terminationType\",\n          headerName: \"Termination Type\",\n          width: 260,\n          valueGetter: ({ row }) => row.task.taskScheduleType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"fullName\",\n          headerName: \"Full Name\",\n          width: 200,\n          valueGetter: ({ row }) => row.offboardFirstName && row.offboardLastName ? `${row.offboardFirstName} ${row.offboardLastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"offboardEmail\",\n          headerName: \"E-Mail Address\",\n          width: 200,\n          valueGetter: ({ row }) => row.offboardEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"offboardLocation\",\n          headerName: \"Location\",\n          width: 200,\n          valueGetter: ({ row }) => row.offboardLocation ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"offboardEmployeeType\",\n          headerName: \"Employment Type\",\n          width: 270,\n          valueGetter: ({ row }) => row.offboardEmployeeType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"hrTerminationCode\",\n          headerName: \"HR Code\",\n          width: 200,\n          valueGetter: ({ row }) => row.hrTerminationCode ? row.hrTerminationCode : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"hrTerminationType\",\n          headerName: \"HR Reason\",\n          width: 200,\n          valueGetter: ({ row }) => row.hrTerminationType ? row.hrTerminationType : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"payrollEndDate\",\n          headerName: \"Payroll End Date\",\n          width: 200,\n          valueGetter: ({ row }) => row.payrollEndDateTime && row.payrollEndTimezone ? `${new Date(row.payrollEndDateTime)} ${row.payrollEndTimezone}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"offboardEmployeeNumber\",\n          headerName: \"Employee ID\",\n          width: 200,\n          valueGetter: ({ row }) => row.offboardEmployeeNumber ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"transferToFullName\",\n          headerName: \"Transfer To Name\",\n          width: 200,\n          valueGetter: ({ row }) => row.transferFirstName && row.transferLastName && row.transferFirstName !== '-' && row.transferLastName !== '-'\n            ? `${row.transferFirstName} ${row.transferLastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"transferGdrive\",\n          headerName: \"Transfer Drive\",\n          width: 200,\n          valueGetter: ({ row }) => row.transferGdrive ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"transferGCalendar\",\n          headerName: \"Transfer Calendar\",\n          width: 200,\n          valueGetter: ({ row }) => row.transferGcalendar ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"status\",\n          headerName: \"Status\",\n          width: 200,\n          valueGetter: ({ row }) => row.task.taskStatus ?? DEFAULT_NO_DATA_LABEL\n        },\n      ]\n    },\n    onboarding: {\n      selectsInfoQuery: GET_ONBOARDING_REPORTS_GENERATOR_INFO,\n      tableDataQuery: GET_ONBOARDING_GENERATED_REPORT,\n      fields: {\n        onboardedFrom: {\n          label: 'Onboarded between',\n          type: 'date'\n        },\n        onboardedTo: {\n          label: 'And',\n          type: 'date'\n        },\n        onboardCompany: {\n          label: 'Company Name',\n          type: 'multiselect'\n        },\n        onboardingType: {\n          label: 'Onboarding Type',\n          type: 'multiselect'\n        },\n        onboardingStatus: {\n          label: 'Onboarding Status',\n          type: 'multiselect'\n        },\n        onboardEmployeeType: {\n          label: 'Employment Type',\n          type: 'multiselect'\n        },\n        onboardJobTitle: {\n          label: 'Job Title',\n          type: 'multiselect'\n        },\n        onboardBusinessUnit: {\n          label: 'Business Unit',\n          type: 'multiselect'\n        },\n        onboardDepartment: {\n          label: 'Department',\n          type: 'multiselect'\n        },\n        onboardLocationDescription: {\n          label: 'Location',\n          type: 'multiselect'\n        },\n        hasReqId: {\n          label: 'Has linked candidate',\n          type: 'select',\n          booleanItems: true,\n          menuItems: [true, false]\n        },\n      },\n      tableColumnsOptions: [\n        {\n          field: \"id\",\n          headerName: \"ID\",\n          width: 150,\n          valueGetter: ({ row }) => row.task.id ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"reqStartDate\",\n          headerName: \"Onboarded Date\",\n          width: 320,\n          valueGetter: ({ row }) => (\n            row.task.taskScheduleType === 'Scheduled' ?\n              (row.task.taskScheduleDateTime && row.task.taskScheduleTimezone ? `${new Date(row.task.taskScheduleDateTime)} ${row.task.taskScheduleTimezone}` : DEFAULT_NO_DATA_LABEL) :\n              (row.task.taskEndDate ? new Date(+row.task.taskEndDate) : DEFAULT_NO_DATA_LABEL)\n          )\n        },\n        {\n          field: \"onboardingType\",\n          headerName: \"Onboarding Type\",\n          width: 280,\n          valueGetter: ({ row }) => row.task.taskScheduleType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"fullName\",\n          headerName: \"Full Name\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardFirstName && row.onboardLastName ? `${row.onboardFirstName} ${row.onboardLastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardEmail\",\n          headerName: \"LP E-Mail Address\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardNonLpEmail\",\n          headerName: \"Non-LP E-Mail Address\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardNonLpEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardEmployeeType\",\n          headerName: \"Employment Type\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardEmployeeType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"managerName\",\n          headerName: \"Manager Name\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardManagerFirstName && row.onboardManagerLastName ?\n            `${row.onboardManagerFirstName} ${row.onboardManagerLastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardManagerEmail\",\n          headerName: \"Manager Email\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardManagerEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardCompany\",\n          headerName: \"Company\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardCompany ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardJobTitle\",\n          headerName: \"Job Title\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardJobTitle ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardBusinessUnit\",\n          headerName: \"Business Unit\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardBusinessUnit ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardDepartment\",\n          headerName: \"Department\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardDepartment ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"onboardLocationDescription\",\n          headerName: \"Location\",\n          width: 250,\n          valueGetter: ({ row }) => row.onboardLocationDescription ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"status\",\n          headerName: \"Status\",\n          width: 250,\n          valueGetter: ({ row }) => row.task.taskStatus ?? DEFAULT_NO_DATA_LABEL\n        },\n      ]\n    },\n    employees: {\n      selectsInfoQuery: GET_EMPLOYEES_REPORTS_GENERATOR_INFO,\n      tableDataQuery: GET_EMPLOYEES_GENERATED_REPORT,\n      fields: {\n        employeeLastLoginFrom: {\n          label: 'Last login date between',\n          type: 'date'\n        },\n        employeeLastLoginTo: {\n          label: 'And',\n          type: 'date'\n        },\n        employeeLastHireFrom: {\n          label: 'Last hire date between',\n          type: 'date'\n        },\n        employeeLastHireTo: {\n          label: 'And',\n          type: 'date'\n        },\n        companyName: {\n          label: 'Company Name',\n          type: 'multiselect'\n        },\n        employeeType: {\n          label: 'Employee Type',\n          type: 'multiselect'\n        },\n        employeeManagerEmail: {\n          label: 'Manager Email',\n          type: 'multiselect'\n        },\n        employeeBusinessUnit: {\n          label: 'Business Unit',\n          type: 'multiselect'\n        },\n        employeeDepartment: {\n          label: 'Department',\n          type: 'multiselect'\n        },\n        employeeLocation: {\n          label: 'Location',\n          type: 'multiselect'\n        },\n      },\n      tableColumnsOptions: [\n        {\n          field: \"fullName\",\n          headerName: \"Full Name\",\n          width: 280,\n          valueGetter: ({ row }) => row.firstName && row.lastName ? `${row.firstName} ${row.lastName}` : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"companyName\",\n          headerName: \"Company Name\",\n          width: 250,\n          valueGetter: ({ row }) => row.companyName ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"employeeType\",\n          headerName: \"Employee Type\",\n          width: 250,\n          valueGetter: ({ row }) => 'Active' ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"employeeType\",\n          headerName: \"Employee Type\",\n          width: 280,\n          valueGetter: ({ row }) => row.employeeType ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"managerEmail\",\n          headerName: \"Manager Email\",\n          width: 290,\n          valueGetter: ({ row }) => row.managerEmail ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"companyName\",\n          headerName: \"Company Name\",\n          width: 250,\n          valueGetter: ({ row }) => row.companyName ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"department\",\n          headerName: \"Department\",\n          width: 250,\n          valueGetter: ({ row }) => row.department ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"businessUnit\",\n          headerName: \"Business Unit\",\n          width: 250,\n          valueGetter: ({ row }) => row.businessUnit ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"location\",\n          headerName: \"Location\",\n          width: 250,\n          valueGetter: ({ row }) => row.location ?? DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"employeeLastLogin\",\n          headerName: \"Last Login Date\",\n          width: 520,\n          valueGetter: ({ row }) => row.oktaLastLogin ? new Date(row.oktaLastLogin) : DEFAULT_NO_DATA_LABEL\n        },\n        {\n          field: \"employeeLastHire\",\n          headerName: \"Last Hire Date\",\n          width: 520,\n          valueGetter: ({ row }) => row.lastHireDate ? new Date(row.lastHireDate) : DEFAULT_NO_DATA_LABEL\n        },\n      ]\n    },\n  }\n};\n","import React from \"react\";\nimport {Box, TextField, FormControl} from \"@material-ui/core\";\n\nconst DatePicker = ({label, setDate}) => {\n  const handleChange = (value) => {\n    setDate(value);\n  };\n\n  return (\n    <Box>\n      <FormControl fullWidth>\n        <TextField\n          id={`date-${label}`}\n          label={label ?? 'Select date'}\n          type=\"date\"\n          defaultValue={null}\n          onChange={(e) => handleChange(e.target.value)}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default DatePicker;\n","import React, {memo} from \"react\";\nimport {InputLabel, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  inputLabel: {\n    color: theme.palette.text.primary,\n    \"&.Mui-focused\": {\n      color: theme.palette.text.primary,\n    },\n  },\n}));\n\nconst StyledInputLabel = ({id, children}) => {\n  const classes = useStyles();\n  return (\n    <InputLabel id={id} className={classes.inputLabel}>\n      {children}\n    </InputLabel>\n  );\n};\n\nexport default memo(StyledInputLabel);\n","import {\n  FormControlLabel,\n  Grid,\n  MenuItem,\n  Select,\n  FormControl,\n  Checkbox,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport DatePicker from \"./DatePicker\";\nimport {cloneDeep} from \"lodash\";\nimport {getDefaultValue, REPORT_GENERATOR_CONFIG} from \"../../../data/constants/ReportGenerator\";\nimport StyledInputLabel from \"../../../components/inputs/StyledInputLabel\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    display: \"flex\",\n    padding: 8,\n  },\n  button: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst generateValuesObject = (fields) => {\n  return Object.entries(fields).reduce(\n    (accumulator, currentValue) =>\n        ({ ...accumulator, [currentValue[0]]: getDefaultValue(currentValue[1].type) }),\n    {}\n  );\n};\n\nconst prepareValuesInfoObject = (fields = {}, reportType) => {\n  const valuesCopy = cloneDeep(fields);\n\n  for (let key in valuesCopy) {\n    if (\n      (Array.isArray(valuesCopy[key]) && !valuesCopy[key].length) ||\n        valuesCopy[key] === null ||\n      (valuesCopy[key] === null &&\n        REPORT_GENERATOR_CONFIG.reportTypes[reportType].fields[key]\n          .booleanItems)\n    ) {\n      delete valuesCopy[key];\n    }\n  }\n\n  valuesCopy.reportType = reportType;\n\n  return valuesCopy;\n};\n\nconst FieldsBox = ({\n  fields,\n  setSearchInfoObject,\n  reportType,\n  disableGenerating,\n}) => {\n  const classes = useStyles();\n  const [valuesInfo, setValuesInfo] = useState(generateValuesObject(fields));\n\n  const createSelectField = (key, currentField, multiple) => {\n    const onValueChange = (event) => {\n      setValuesInfo({ ...valuesInfo, [key]: event.target.value });\n    };\n\n    return (\n      <Grid item xs={3}>\n        <FormControl fullWidth>\n          <StyledInputLabel id={`${key}-label`}>\n            { currentField.label }\n          </StyledInputLabel>\n          <Select\n            color={\"secondary\"}\n            labelId={`${key}-label`}\n            id={key}\n            value={valuesInfo[key]}\n            renderValue={(selected) => multiple ? selected.join(', ') : selected}\n            label={currentField.label}\n            onChange={onValueChange}\n            multiple={multiple}\n          >\n            {[\n              !multiple && <MenuItem value={null} key={\"none\"}>\n                None\n              </MenuItem>,\n              ...currentField.menuItems?.map((item) => {\n                let itemName, itemValue;\n\n                if (typeof item === \"boolean\") {\n                  [itemName, itemValue] = [item ? \"Yes\" : \"No\", item];\n                } else if (\n                  currentField.displayValue &&\n                  currentField.actualValue\n                ) {\n                  [itemName, itemValue] = [\n                    currentField.displayValue(item),\n                    currentField.actualValue(item),\n                  ];\n                } else {\n                  [itemName, itemValue] = [item, item];\n                }\n\n                return (\n                  <MenuItem value={itemValue} key={itemName}>\n                    {multiple ? <Checkbox checked={valuesInfo[key].indexOf(itemValue) !== -1}/> : null}\n                    {itemValue}\n                  </MenuItem>\n                );\n              }),\n            ]}\n          </Select>\n        </FormControl>\n      </Grid>\n    );\n  };\n\n  const createDatePickedField = (key, label) => {\n    return (\n      <Grid item xs={3}>\n        <DatePicker\n          label={label}\n          setDate={(value) => setValuesInfo({ ...valuesInfo, [key]: value })}\n        />\n      </Grid>\n    );\n  };\n\n  const createCheckBoxField = (key, label) => {\n    return (\n      <Grid item xs={2}>\n        <FormControlLabel control={<Checkbox defaultChecked />} label={label} />\n      </Grid>\n    );\n  };\n\n  const generateFields = () => {\n    return (\n      fields &&\n      Object.entries(fields).map((field) => {\n        switch (field[1].type) {\n          case \"date\":\n            return createDatePickedField(field[0], field[1].label);\n          case \"select\":\n            return createSelectField(field[0], field[1], false);\n          case \"multiselect\":\n            return createSelectField(field[0], field[1], true);\n          case \"checkbox\":\n            return createCheckBoxField(field[0], field[1].label);\n        }\n      })\n    );\n  };\n\n  return (\n    <Grid item container spacing={4}>\n      <Grid item container spacing={2}>\n        { generateFields() }\n      </Grid>\n      <Grid item container className={classes.box}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          disabled={disableGenerating}\n          onClick={() =>\n            setSearchInfoObject(prepareValuesInfoObject(valuesInfo, reportType))\n          }\n        >\n          Generate Report\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FieldsBox;\n","import React, {memo} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {\n  DataGrid,\n  GridToolbarColumnsButton,\n  GridToolbarContainer,\n  GridToolbarDensitySelector,\n  GridToolbarExport,\n  GridToolbarFilterButton,\n} from \"@material-ui/data-grid\";\n\nconst GRID_BOX_HEIGHT = 500,\n  CONTENT_HEIGHT_COEFFICIENT = 1.3054830287;\n\nconst useStyles = makeStyles((theme) => ({\n  noRowsOverlay: {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: `${GRID_BOX_HEIGHT / CONTENT_HEIGHT_COEFFICIENT}px`,\n    height: \"100%\",\n  },\n  toolbarButton: {\n    color: theme.palette.secondary.main,\n  },\n  \"@global\": {\n    \"div[role=tooltip]\": {\n      \".MuiPaper-elevation1, & .MuiGridPanel-paper\": {\n        backgroundColor: theme.palette.background.light,\n      },\n    },\n  },\n  dataGrid: {\n    \"& .MuiCheckbox-colorPrimary.Mui-checked\": {\n      color: theme.palette.warning.main,\n    },\n    \"& .MuiDataGrid-columnHeader\": {\n      backgroundColor: theme.palette.primary.light,\n    },\n    \"& .MuiDataGrid-row.Mui-odd\": {\n      backgroundColor: theme.palette.background.default,\n    },\n    \"& .MuiDataGrid-row\": {\n      \"&:hover\": {\n        backgroundColor: theme.palette.secondary.light,\n      },\n    },\n    \"& .MuiDataGrid-cell\": {\n      overflowX: \"auto\",\n      overflowY: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"clip\",\n    },\n  },\n}));\n\nconst StyledDataGrid = ({rows, columns, ...props}) => {\n  const classes = useStyles();\n\n  const CustomToolbar = () => (\n    <GridToolbarContainer>\n      <GridToolbarColumnsButton className={classes.toolbarButton} />\n      <GridToolbarFilterButton className={classes.toolbarButton} />\n      <GridToolbarDensitySelector className={classes.toolbarButton} />\n      <GridToolbarExport className={classes.toolbarButton} />\n    </GridToolbarContainer>\n  );\n\n  const NoRowsOverlay = () => (\n    <Box className={classes.noRowsOverlay}>No results found</Box>\n  );\n\n  return (\n    <DataGrid\n      className={classes.dataGrid}\n      columns={columns}\n      rows={rows}\n      components={{Toolbar: CustomToolbar, NoRowsOverlay}}\n      {...props}\n    />\n  );\n};\n\nexport default memo(StyledDataGrid);\n","import React, {memo} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport StyledDataGrid from \"../../../components/table/StyledDataGrid\";\n\nconst GRID_BOX_HEIGHT = 500;\n\nconst TableBox = ({tableData, tableColumnsOptions}) => {\n  return (\n    <Grid item container style={{height: GRID_BOX_HEIGHT}} xs={12}>\n      <StyledDataGrid columns={tableColumnsOptions} rows={tableData} />\n    </Grid>\n  );\n};\n\nexport default memo(TableBox);\n","import {\n  Box,\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  Grow,\n  makeStyles,\n  Slide,\n} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport React, {useState, useEffect} from \"react\";\nimport {REPORT_GENERATOR_CONFIG} from \"../../../data/constants/ReportGenerator\";\nimport FieldsBox from \"./FieldsBox\";\nimport {cloneDeep, clone} from \"lodash\";\nimport TableBox from \"./TableBox\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../data/handleError\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport StyledInputLabel from \"../../../components/inputs/StyledInputLabel\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\n\nconst DEFAULT_LOADING_INFO = {selectsInfo: false, tableData: false};\n\nconst useStyles = makeStyles((theme) => ({\n  loaderBox: {\n    margin: \"0 auto 0 auto\",\n  },\n}));\n\nconst getReportTypeNameForSpecificReportType = (reportType) => {\n  switch (reportType) {\n    case \"onboarding\":\n      return \"onboard\";\n    case \"offboarding\":\n      return \"offboard\";\n    case \"requisition\":\n      return \"requisition\";\n    default:\n      return reportType ?? \"\";\n  }\n};\n\nconst filterMenuItems = (data) =>\n  data?.filter(\n    (item) =>\n      typeof item === \"boolean\" || (typeof item === \"string\" && item.length)\n  );\n\nconst ReportGeneratorPageContent = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [loadingInfo, setLoadingInfo] = useState(clone(DEFAULT_LOADING_INFO));\n  const [reportType, setReportType] = useState(\"\");\n  const [fieldsWithItems, setFieldsWithItems] = useState(null);\n  const [fetchedData, setFetchedData] = useState(null);\n  const [searchInfo, setSearchInfo] = useState(null);\n  const [tableData, setTableData] = useState(null);\n\n  const [getSelectsInfo] = useLazyQuery(\n    REPORT_GENERATOR_CONFIG?.reportTypes?.[reportType]?.selectsInfoQuery,\n    {\n      fetchPolicy: \"no-cache\",\n      variables: {\n        reportType: getReportTypeNameForSpecificReportType(reportType),\n      },\n      onCompleted: (data) => {\n        setFetchedData(data.get_report_generator_fields_info);\n        setLoadingInfo({...loadingInfo, selectsInfo: false});\n      },\n      onError: (error) => {\n        handleError(error)(history);\n        setLoadingInfo({...loadingInfo, selectsInfo: false});\n      },\n    }\n  );\n\n  const [getTableData] = useLazyQuery(\n    REPORT_GENERATOR_CONFIG?.reportTypes?.[reportType]?.tableDataQuery,\n    {\n      fetchPolicy: \"no-cache\",\n      variables: {search: searchInfo},\n      onCompleted: (data) => {\n        setTableData(\n          data.get_generated_report[\n            reportType === \"employees\" ? \"employees\" : `${reportType}Tasks`\n          ]\n        );\n        setLoadingInfo({...loadingInfo, tableData: false});\n      },\n      onError: (error) => {\n        handleError(error)(history);\n        setLoadingInfo({...loadingInfo, tableData: false});\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (reportType) {\n      resetData();\n      setLoadingInfo({...loadingInfo, selectsInfo: true});\n      getSelectsInfo({\n        fetchPolicy: \"no-cache\",\n        variables: {\n          reportType: getReportTypeNameForSpecificReportType(reportType),\n        },\n      });\n    }\n  }, [reportType]);\n\n  useEffect(() => {\n    if (searchInfo) {\n      setLoadingInfo({...loadingInfo, tableData: true});\n      getTableData();\n    }\n  }, [searchInfo]);\n\n  useEffect(() => {\n    if (fetchedData) {\n      setFieldsWithItems(generateFieldsObjectWithItems(fetchedData));\n    }\n  }, [fetchedData]);\n\n  const setSearchInfoObject = (searchInfoObject) => {\n    setSearchInfo(searchInfoObject);\n  };\n\n  const getCurrentReportTypeColumnsOptions = () =>\n    reportType &&\n    REPORT_GENERATOR_CONFIG.reportTypes[reportType].tableColumnsOptions;\n\n  const generateFieldsObjectWithItems = (menuItems) => {\n    const fields = cloneDeep(\n      REPORT_GENERATOR_CONFIG.reportTypes[reportType].fields\n    );\n\n    Object.keys(fields).forEach((key) => {\n      if (!fields[key].menuItems) {\n        fields[key].menuItems = !fields[key].displayValue\n          ? filterMenuItems(menuItems?.[key])\n          : menuItems?.[key];\n      }\n    });\n\n    return fields;\n  };\n\n  const selectReportType = (event) => {\n    setReportType(event.target.value);\n  };\n\n  const resetData = () => {\n    setLoadingInfo(clone(DEFAULT_LOADING_INFO));\n    setFieldsWithItems(null);\n    setTableData(null);\n  };\n\n  const showFieldsBox = () => !!fieldsWithItems && !loadingInfo?.selectsInfo;\n\n  const showTableBox = () => !!tableData && !loadingInfo?.tableData;\n\n  const getFieldsBox = () =>\n    showFieldsBox() ? (\n      <Grow in={showFieldsBox()}>\n        <Grid item container xs={12}>\n          <FieldsBox\n            fields={fieldsWithItems}\n            setSearchInfoObject={setSearchInfoObject}\n            disableGenerating={loadingInfo?.tableData}\n            reportType={reportType}\n          />\n        </Grid>\n      </Grow>\n    ) : null;\n\n  const getTableBox = () =>\n    showTableBox() ? (\n      <Grow in={showTableBox()}>\n        <TableBox\n          tableData={tableData}\n          tableColumnsOptions={getCurrentReportTypeColumnsOptions()}\n        />\n      </Grow>\n    ) : null;\n\n  const getReportTypeSelect = () => (\n    <Grid item container xs={12}>\n      <FormControl fullWidth>\n        <StyledInputLabel id=\"select-report-type-label\">\n          Select report type\n        </StyledInputLabel>\n        <Select\n          labelId=\"select-report-type-label\"\n          id=\"select-device\"\n          value={reportType}\n          label=\"Report type\"\n          disabled={loadingInfo?.selectsInfo || loadingInfo?.tableData}\n          onChange={selectReportType}\n          color={\"secondary\"}\n        >\n          {Object.keys(REPORT_GENERATOR_CONFIG.reportTypes).map((type) => (\n            <MenuItem value={type} key={type}>\n              {type}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Grid>\n  );\n\n  const getLoaderBox = (stateValue) => {\n    return (\n      stateValue && (\n        <Slide in={stateValue} direction=\"left\" timeout={1000}>\n          <Grid item className={classes.loaderBox}>\n            <LoadingCircle />\n          </Grid>\n        </Slide>\n      )\n    );\n  };\n\n  return (\n    <PaperCardWrapper>\n      <Box bgcolor=\"#FCFCFC\" p={4} minWidth={1050}>\n        <Grid container spacing={3} xs={12}>\n          {getReportTypeSelect()}\n          {getLoaderBox(!!loadingInfo?.selectsInfo)}\n          {getFieldsBox()}\n          {getLoaderBox(!!loadingInfo?.tableData)}\n          {getTableBox()}\n        </Grid>\n      </Box>\n    </PaperCardWrapper>\n  );\n};\n\nexport default ReportGeneratorPageContent;\n","import React, {memo, useContext} from \"react\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport {Box} from \"@material-ui/core\";\nimport ReportGeneratorPageContent from \"./ReportGeneratorPageContent\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport Page from \"../../components/Page\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst ReportGeneratorPage = () => {\n  const { permReportGeneratorView } = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Report Generator | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"REPORT GENERATOR\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mr={2} ml={2}>\n        <PageTitleBox title=\"Report Generator\"/>\n\n        {permReportGeneratorView ? (\n          <ReportGeneratorPageContent />\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(ReportGeneratorPage);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_AUTH_TASKS = gql`\n  query GetAuthTasks {\n    get_auth_tasks {\n      id\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      offboardingTask {\n        offboardFirstName\n        offboardLastName\n      }\n      onboardingTask {\n        onboardFirstName\n        onboardLastName\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n      }\n      badgeRequestTask {\n        badgeRequestName\n        badgeRequestType\n      }\n    }\n  }\n`;\n","import React, { memo, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport {\n  getOffboardingFullName,\n  getOnboardingFullName,\n  transformDashToSpace,\n} from \"../../data/helper/helpers\";\nimport { getDateString, getDateWithTimeString } from \"../../data/helper/DateTimezoneHelpers\";\n\nconst useStyles = makeStyles(() => ({\n  tinyFontSize: {\n    fontSize: \".7rem\",\n  },\n  tinyBoldFontSize: {\n    fontWeight: 600,\n    fontSize: \".7rem\",\n  },\n  title: {\n    fontWeight: 600,\n  },\n}));\n\nconst getImmediateText = taskEndDate => {\n  return <>\n    Immediate\n    {taskEndDate && <>; completed on <br /> {getDateWithTimeString(taskEndDate)}</>}\n  </>;\n};\n\nconst getScheduleText = (taskScheduleDateTime, taskScheduleTimezone) => {\n  return <>\n    Scheduled for <br /> {taskScheduleTimezone\n    ? getDateWithTimeString(taskScheduleDateTime, taskScheduleTimezone)\n    : getDateString(taskScheduleDateTime)\n  }</>;\n};\n\nconst isScheduled = taskScheduleType => taskScheduleType === TaskScheduleTypes.SCHEDULED;\n\nconst getTaskDetails = task => {\n  switch (task.taskType) {\n    case TaskTypes.OFFBOARDING:\n      return {\n        title: task?.offboardingTask ? getOffboardingFullName(task) : \"Unknown User\",\n        description: isScheduled(task?.taskScheduleType)\n            ? getScheduleText(task?.taskScheduleDateTime, task?.taskScheduleTimezone)\n            : getImmediateText(task?.taskEndDate),\n      };\n    case TaskTypes.ONBOARDING:\n      return {\n        title: task?.onboardingTask && getOnboardingFullName(task),\n        description: isScheduled(task?.taskScheduleType)\n          ? getScheduleText(task?.taskScheduleDateTime)\n          : getImmediateText(task?.taskEndDate),\n      };\n    case TaskTypes.REQUISITION:\n      return {\n        title: task.requisitionTask?.reqType,\n        description: <>\n          Planned start date: <br /> {getDateString(task.requisitionTask?.reqStartDate)}\n        </>,\n      };\n    case TaskTypes.BADGE_REQUEST:\n      return {\n        title: task.badgeRequestTask?.badgeRequestName,\n        description: <>\n          Badge category: <br /> {transformDashToSpace(task.badgeRequestTask?.badgeRequestType)}\n        </>,\n      };\n    default:\n      return { title: \"\", description: \"\" };\n  }\n};\n\nconst TaskDetailsRowField = ({ task }) => {\n  const classes = useStyles();\n  const details = useMemo(() => getTaskDetails(task), [task.id]);//, [task]);\n\n  return (\n    <>\n      <div className={classes.title}>\n        {details?.title || \"\"}\n      </div>\n\n      <div className={classes.tinyFontSize}>\n        {details?.description || \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default memo(TaskDetailsRowField);\n","import React, {memo} from \"react\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport {makeStyles, Tooltip} from \"@material-ui/core\";\nimport TaskStatusBlock from \"../taskManager/TaskStatusBlock\";\n\nconst useStyles = makeStyles(() => ({\n  taskStatusDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  tinyFontSize: {\n    fontSize: \".7rem\",\n  },\n}));\n\nconst TaskStatusRowField = ({task}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.taskStatusDiv}>\n      {task.taskStatus === TaskStatuses.COMPLETE &&\n      task.taskType === TaskTypes.ONBOARDING ? (\n        <Tooltip title=\"IT accounts created. Credentials sent to users Non-LP email address.\">\n          <TaskStatusBlock taskStatus={task.taskStatus} small />\n        </Tooltip>\n      ) : (\n        <TaskStatusBlock taskStatus={task.taskStatus} small />\n      )}\n      <div className={classes.tinyFontSize}>\n        {task.taskStatus === TaskStatuses.PENDING &&\n          !task.taskApprovalStatus &&\n          (task.taskType === TaskTypes.REQUISITION\n            ? \"Finance approval\"\n            : task.taskType === TaskTypes.ONBOARDING ||\n              task.taskType === TaskTypes.OFFBOARDING\n            ? \"HR/IT approval\"\n            : null)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TaskStatusRowField);\n","import React, { memo, useState } from \"react\";\nimport { Table, TableBody } from \"@material-ui/core\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport LoadingCircle from \"../circularProgress/LoadingCircle\";\nimport { getComparator, stableSort } from \"../../data/helper/helpers\";\n\nconst TableContent = ({data, isLoading, headCells, headAlign, tableRow, initOrderBy,\n  sliceFrom, sliceTo }) => {\n  const [order, setOrder] = useState(\"desc\");\n  const [orderBy, setOrderBy] = useState(initOrderBy);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <Table stickyHeader size=\"small\">\n      <EnhancedTableHead\n        headAlign={headAlign}\n        headCells={headCells}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n      />\n      {isLoading ? (<LoadingCircle />) : (\n        <TableBody>\n          {stableSort(data, getComparator(order, orderBy))?.slice(sliceFrom, sliceTo)?.map(tableRow)}\n        </TableBody>\n      )}\n    </Table>\n  );\n};\n\nexport default memo(TableContent);","import React, {memo} from \"react\";\nimport CreatedDateRowField from \"../../../components/taskRowFields/DateRowField\";\nimport TaskDetailsRowField from \"../../../components/taskRowFields/TaskDetailsRowField\";\nimport TaskStatusRowField from \"../../../components/taskRowFields/TaskStatusRowField\";\nimport ViewTaskButton from \"../../../components/buttons/ViewButton\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport CustomTableRow from \"../../../components/table/CustomTableRow\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport TableContent from \"../../../components/table/TableContent\";\n\nconst headCells = [\n  {id: \"id\", label: \"Task ID\"},\n  {id: \"taskCreatedDateTime\", label: \"Requested Date\"},\n  {id: \"taskCreatorUsername\", label: \"Requested By\"},\n  {id: \"taskType\", label: \"Task Type\", isNotSortable: true},\n  {id: \"TaskDetails\", label: \"Task Details\", isNotSortable: true},\n  {id: \"taskStatus\", label: \"Task Status\"},\n];\n\nconst getCreatorName = (task) =>\n  task?.taskCreatorFirstName && task?.taskCreatorFirstName !== \"-\"\n    ? `${task.taskCreatorFirstName} ${task.taskCreatorLastName}`\n    : task.taskCreatorUsername;\n\nexport const taskManagerRow = (task) => [\n  {id: \"id\", value: task?.id},\n  {\n    id: \"taskCreatedDateTime\",\n    value: <CreatedDateRowField dateTime={task?.taskCreatedDateTime} />,\n  },\n  {id: \"taskCreatorUsername\", value: getCreatorName(task)},\n  {\n    id: \"taskType\",\n    value:\n      task?.taskType === \"badge-request\" ? \"badge request\" : task?.taskType,\n  },\n  {id: \"taskDetails\", value: <TaskDetailsRowField task={task} />},\n  {id: \"taskStatus\", value: <TaskStatusRowField task={task} />},\n  {id: \"view\", value: <ViewTaskButton />},\n];\n\nconst TaskTableRow = (task) => {\n  const history = useHistory();\n  const match = useRouteMatch(FrontendRoutes.TASK_MANAGER_VIEW());\n  const matchTaskManager = useRouteMatch(FrontendRoutes.TASK_MANAGER);\n\n  const handleOnSelectedTask = (taskId) => {\n    if ((match?.params?.hash || matchTaskManager.isExact) && taskId) {\n      history.push(\n        FrontendRoutes.TASK_MANAGER_VIEW_TASK(\n          match?.params?.hash || \"mytasks\",\n          taskId\n        )\n      );\n    }\n  };\n\n  return (\n    <CustomTableRow\n      key={task?.id}\n      id={task?.id}\n      rowData={taskManagerRow(task)}\n      handleClick={() => handleOnSelectedTask(task?.id)}\n    />\n  );\n};\n\nconst TaskManagerTableContent = ({data, isLoading}) => {\n  return (\n    <TableContent\n      initOrderBy=\"taskCreatedDateTime\"\n      headCells={headCells}\n      data={data}\n      isLoading={isLoading}\n      tableRow={TaskTableRow}\n    />\n  );\n};\n\nexport default memo(TaskManagerTableContent);\n","import React, { memo, useMemo } from \"react\";\nimport {Box, CircularProgress, makeStyles, TableContainer} from \"@material-ui/core\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport CustomInfiniteScroll from \"../../../components/table/CustomInfiniteScroll\";\nimport TaskManagerTableContent from \"./TaskManagerTableContent\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    maxHeight: \"calc(95vh - 278px)\",\n    height: \"100%\",\n    minHeight: 300\n  },\n  taskManagerCircularProgressBlock: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    top: \"0\",\n    left: \"0\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgb(22 23 63)\",\n    zIndex: \"999\"\n  }\n}));\n\nconst TaskManagerTable = ({data, tasksCountStatus, onPageChange, isSearchInProgress, currentPage}) => {\n  const classes = useStyles();\n  const dataLength = useMemo(() =>\n      data?.length,\n    [data]);\n\n  return (\n    <Box style={{position: \"relative\"}}>\n      {!dataLength && isSearchInProgress ? (\n          <div className={classes.taskManagerCircularProgressBlock}>\n            <CircularProgress color=\"secondary\" />\n          </div>\n        ) :\n        !dataLength ? (\n          <NoResultsTypography />\n        ) : (\n          <TableContainer\n            className={classes.tableContainer}\n            id={\"task-manager\"}\n          >\n            <CustomInfiniteScroll\n              scrollableTarget=\"task-manager\"\n              dataLength={dataLength}\n              next={() => onPageChange && onPageChange(currentPage + 1)}\n              hasMore={tasksCountStatus}\n            >\n              <TaskManagerTableContent data={data} />\n            </CustomInfiniteScroll>\n          </TableContainer>\n        )\n      }\n    </Box>\n  );\n};\n\nexport default memo(TaskManagerTable);\n","import React, {memo} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport {GET_AUTH_TASKS} from \"../../../operations/queries/getAuthTasks\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport TaskManagerTable from \"./TaskManagerTable\";\nimport handleError from \"../../../data/handleError\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport {Toolbar, Box} from \"@material-ui/core\";\n\nconst MyTasks = () => {\n  const history = useHistory();\n\n  const {data, refetch} = useQuery(GET_AUTH_TASKS, {\n    fetchPolicy: \"cache-and-network\",\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <>\n      {data ? (\n        <>\n          <Toolbar>\n            <Box flexGrow={1} />\n            <RefreshButton handleClick={() => refetch()} />\n          </Toolbar>\n\n          <TaskManagerTable data={data.get_auth_tasks} />\n        </>\n      ) : (\n        <LoadingCircle text={\"Loading tasks...\"} />\n      )}\n    </>\n  );\n};\n\nexport default memo(MyTasks);\n","import React, {memo, useMemo} from \"react\";\nimport {Box, Typography, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  countContainer: {width: \"100%\", display: \"flex\", flexDirection: \"row\"},\n  countBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  line: {\n    borderRight: \"2px solid #87889c\",\n    marginRight: theme.spacing(2),\n  },\n  countNum: {\n    fontSize: \"1.7rem\",\n  },\n  countNumTitle: {\n    fontSize: \".8rem\",\n  },\n}));\n\nconst countBoxItems = (allTasks) => [\n  {id: \"pending\", name: \"Pending Approval\", value: allTasks?.pendingApproval},\n  {id: \"scheduled\", name: \"Scheduled\", value: allTasks?.scheduled},\n  {id: \"inProgress\", name: \" In Progress\", value: allTasks?.inProgress},\n];\n\nconst CountBox = (props) => {\n  const {data} = props;\n  const classes = useStyles();\n\n  const boxItems = useMemo(() => data && countBoxItems(data), [data]);\n\n  return (\n    <>\n      {data && (\n        <Box className={classes.countContainer}>\n          {boxItems?.map((item, id) => (\n            <React.Fragment key={item.id}>\n              <Box className={classes.countBox}>\n                <Typography component={\"div\"} className={classes.countNum}>\n                  {item.value}\n                </Typography>\n                <Typography component={\"div\"} className={classes.countNumTitle}>\n                  {item.name}\n                </Typography>\n              </Box>\n              {id + 1 < boxItems.length && <Box className={classes.line} />}\n            </React.Fragment>\n          ))}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(CountBox);\n","import React, {memo} from \"react\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  dateTextField: {\n    fontSize: \"1rem\",\n    margin: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n\nconst SmallDataTextField = ({...props}) => {\n  const classes = useStyles();\n  return (\n    <form noValidate>\n      <TextField\n        size=\"small\"\n        type=\"date\"\n        className={classes.dateTextField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        {...props}\n      />\n    </form>\n  )\n};\n\nexport default memo(SmallDataTextField);","import React, {memo, useState} from \"react\";\nimport {Box, Collapse, makeStyles} from \"@material-ui/core\";\nimport TaskTypes from \"../../../../data/constants/TaskTypes\";\nimport ResetFiltersButton from \"../../../../components/buttons/ResetFilterButton\";\nimport ApplyFiltersButton from \"../../../../components/buttons/ApplyFiltersButton\";\nimport TaskStatuses from \"../../../../data/constants/TaskStatuses\";\nimport {connect} from \"react-redux\";\nimport SelectTextField from \"../../../../components/inputs/SelectTextfield\";\nimport SmallDataTextField from \"../../../../components/inputs/SmallDataTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"70%\",\n  },\n  filterFields: {\n    marginBottom: theme.spacing(3),\n  },\n  datesDiv: {display: \"flex\"},\n  rowOneDiv: {display: \"flex\"},\n}));\n\nconst FilterBox = ({filters, onFilterChange, filterOpen, setIsFilterApplied, allTasksData}) => {\n  const classes = useStyles();\n  const [taskTypeFilter, setTaskTypeFilter] = useState(filters.taskType);\n  const [taskStatusFilter, setTaskStatusFilter] = useState(filters.taskStatus);\n  const [taskCreatorFilter, setTaskCreatorFilter] = useState(filters.taskCreator);\n  const [dateFromFilter, setDateFromFilter] = useState(filters.dateFrom);\n  const [dateToFilter, setDateToFilter] = useState(filters.dateTo);\n  const [dateFromError, setDateFromError] = useState(false);\n  const [dateToError, setDateToError] = useState(false);\n  const [taskData, setTaskData] = useState(null);\n\n  const handleApply = () => {\n    const newFilters = {\n      ...filters,\n      taskType: taskTypeFilter.toLowerCase(),\n      taskStatus: taskStatusFilter.toLowerCase(),\n      taskCreator: taskCreatorFilter.toLowerCase(),\n      dateFrom: dateFromFilter,\n      dateTo: dateToFilter,\n      pageCount: 0,\n    };\n    onFilterChange(newFilters);\n  };\n\n  const handleDateFromChange = (e) => {\n    setDateFromError(false);\n    setDateFromFilter(e.target.value);\n  };\n\n  const handleDateToChange = (e) => {\n    setDateToError(false);\n    setDateToFilter(e.target.value);\n  };\n\n  const handleFilterQuery = () => {\n    if (dateFromFilter && !dateToFilter) {\n      setDateToError(true);\n    } else if (!dateFromFilter && dateToFilter) {\n      setDateFromError(true);\n    } else if (!dateFromError && !dateToError) {\n      handleApply();\n    }\n  };\n\n  const handleClearFilters = () => {\n    setTaskTypeFilter(\"\");\n    setTaskStatusFilter(\"\");\n    setTaskCreatorFilter(\"\");\n    setDateFromFilter(\"\");\n    setDateToFilter(\"\");\n    setDateToError(false);\n    setDateFromError(false);\n    setIsFilterApplied(false);\n    setTaskData(allTasksData);\n  };\n\n  return (\n    <Collapse in={filterOpen} timeout=\"auto\" unmountOnExit>\n      <Box className={classes.filterBox}>\n        <div className={classes.filterFields}>\n          <div className={classes.rowOneDiv}>\n            <SelectTextField\n              id=\"select-task-type\"\n              label=\"Task Type\"\n              value={taskTypeFilter}\n              onValueChange={setTaskTypeFilter}\n              dataList={Object.values(TaskTypes)}\n            />\n            <SelectTextField\n              id=\"select-task-status\"\n              label=\"Task Status\"\n              value={taskStatusFilter}\n              onValueChange={setTaskStatusFilter}\n              dataList={Object.values(TaskStatuses)}\n            />\n            {taskData && (\n              <SelectTextField\n                id=\"select-task-creator\"\n                label=\"Task Creator\"\n                value={taskCreatorFilter}\n                onValueChange={setTaskCreatorFilter}\n                dataList={taskData.map((data) => data.taskCreatorUsername)}\n              />\n            )}\n          </div>\n          <div className={classes.datesDiv}>\n            <SmallDataTextField\n              label=\"Requested Date From\"\n              value={dateFromFilter}\n              onChange={handleDateFromChange}\n              error={dateFromError}\n            />\n            <SmallDataTextField\n              label=\"Requested Date To\"\n              value={dateToFilter}\n              onChange={handleDateToChange}\n              error={dateToError}\n            />\n          </div>\n        </div>\n        <div>\n          <ResetFiltersButton handleClick={handleClearFilters} small/>\n\n          <ApplyFiltersButton handleClick={handleFilterQuery}/>\n        </div>\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default connect(\n  state => ({allTasksData: state.taskManager.get(\"allTasksData\")}),\n  {})\n(memo(FilterBox));\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_TASK_SUBSCRIPTION = gql`\n  subscription createTaskSubscription {\n    createTaskSubscription {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskScheduleEpochTime\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      offboardingTask {\n        id\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n        transferUsername\n        transferFirstName\n        transferLastName\n        transferGdrive\n        transferGcalendar\n        transferAlias\n        unassignLicense\n        unassignDevice\n        offboardingUnassignDevices {\n          id\n          deviceManager\n          deviceName\n          deviceId\n          deviceSerialNumber\n          deviceModel\n        }\n        hrTerminationCode\n        hrTerminationType\n        payrollEndDateTime\n        payrollEndTimezone\n        payrollNote\n      }\n      onboardingTask {\n        id\n        onboardUsername\n        onboardEmail\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardJobCode\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        reqId\n        onboardingOktaGroups {\n          oktaGroupId\n          oktaGroupName\n        }\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n      }\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_TASKS = gql`\n  query GetTasks($filters: FiltersInput) {\n    get_tasks(filters: $filters) {\n      id\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      offboardingTask {\n        offboardFirstName\n        offboardLastName\n        offboardEmployeeType\n      }\n      onboardingTask {\n        onboardFirstName\n        onboardLastName\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n      }\n      badgeRequestTask {\n        badgeRequestName\n        badgeRequestType\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const UPDATE_TASK_SUBSCRIPTION = gql`\n  subscription updateTaskSubscription {\n    updateTaskSubscription {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskScheduleEpochTime\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      offboardingTask {\n        id\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n        transferUsername\n        transferFirstName\n        transferLastName\n        transferGdrive\n        transferGcalendar\n        transferAlias\n        unassignLicense\n        unassignDevice\n        offboardingUnassignDevices {\n          id\n          deviceManager\n          deviceName\n          deviceId\n          deviceSerialNumber\n          deviceModel\n        }\n        hrTerminationCode\n        hrTerminationType\n        payrollEndDateTime\n        payrollEndTimezone\n        payrollNote\n      }\n      onboardingTask {\n        id\n        onboardUsername\n        onboardEmail\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        reqId\n        onboardingOktaGroups {\n          oktaGroupId\n          oktaGroupName\n        }\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n      }\n    }\n  }\n`;\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst TaskManagerActonTypes = {\n  SET_ALL_TASKS_DATA: \"SET_ALL_TASKS_DATA\",\n  ADD_TASK_DATA: \"ADD_TASK_DATA\",\n  SET_IS_DRAWER_OPEN: \"SET_IS_DRAWER_OPEN\",\n  SET_SELECTED_TASK_DATA: \"SET_SELECTED_TASK_DATA\",\n  SET_VIEW_TASK_TYPE_DETAILS: \"SET_VIEW_TASK_TYPE_DETAILS\"\n};\n\nexport default typesWithPrefix(\"TASK_MANAGER_\")(\n  TaskManagerActonTypes\n);\n","import TaskManagerActonTypes from \"./taskManagerActonTypes\";\n\nexport const setAllTasksData = (allTasksData) => ({\n  type: TaskManagerActonTypes.SET_ALL_TASKS_DATA,\n  payload: {allTasksData},\n});\n\nexport const addTaskData = (taskData) => ({\n  type: TaskManagerActonTypes.ADD_TASK_DATA,\n  payload: {taskData},\n});\n\nexport const setIsDrawerOpen = (isDrawerOpen) => ({\n  type: TaskManagerActonTypes.SET_IS_DRAWER_OPEN,\n  payload: {isDrawerOpen},\n});\n\nexport const setSelectedTaskData = (selectedTaskData) => ({\n  type: TaskManagerActonTypes.SET_SELECTED_TASK_DATA,\n  payload: {selectedTaskData},\n});\n\nexport const setViewTaskTypeDetails = (viewTaskTypeDetails) => ({\n  type: TaskManagerActonTypes.SET_VIEW_TASK_TYPE_DETAILS,\n  payload: {viewTaskTypeDetails},\n});\n","import React, {memo} from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginRight: theme.spacing(1),\n    minWidth: 250,\n  },\n}));\n\nconst taskNames = [\n  { value: \"active\", label: \"Active Tasks Only\" },\n  { value: \"all\", label: \"All Tasks\" },\n  { value: \"inactive\", label: \"Inactive Tasks Only\" },\n];\n\nconst CurrentView = ({ currentView, onCurrentViewChange }) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      size=\"small\"\n      className={classes.formControl}\n    >\n      <InputLabel id=\"viewing-label\">Current View</InputLabel>\n      <Select\n        labelId=\"viewing-label\"\n        id=\"select-viewing\"\n        value={currentView}\n        onChange={(event) => onCurrentViewChange && onCurrentViewChange(event.target.value)}\n        label=\"Current View\"\n      >\n        {taskNames?.map((task) => (\n          <MenuItem key={task.value} value={task.value}>\n            {task.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CurrentView);\n","import React, {memo} from \"react\";\nimport {TextField, makeStyles} from \"@material-ui/core\";\nimport {DebounceInput} from \"react-debounce-input\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchTextField: {\n    width: \"40ch\",\n    marginBottom: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Search = ({searchQuery, onSearch}) => {\n  const classes = useStyles();\n\n  return (\n    <DebounceInput\n      className={classes.searchTextField}\n      id=\"outlined-basic\"\n      label=\"Search All Tasks\"\n      color=\"secondary\"\n      variant=\"outlined\"\n      margin=\"dense\"\n      minLength={0}\n      debounceTimeout={300}\n      value={searchQuery}\n      onChange={(event) => onSearch && onSearch(event.target.value)}\n      element={TextField}\n    />\n  );\n};\n\nexport default memo(Search);\n","import React, {memo} from \"react\";\nimport {Box, Button, Toolbar} from \"@material-ui/core\";\nimport CurrentView from \"./AllTasks/CurrentView\";\nimport Search from \"./AllTasks/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\n\nconst TableToolbar = ({\n  currentView,\n  query,\n  handleCurrentView,\n  handleSearchQuery,\n  handleFilterClick,\n  isFilterApplied,\n  handleRefresh,\n  children,\n}) => {\n  return (\n    <Box>\n      <Toolbar>\n        <CurrentView\n          currentView={currentView}\n          onCurrentViewChange={handleCurrentView}\n        />\n        <Box flexGrow={1} />\n        <Search\n          searchQuery={query}\n          onSearch={handleSearchQuery}\n        />\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={handleFilterClick}\n        >\n          <FilterListIcon /> Filter All Tasks{\" \"}\n          {isFilterApplied && \"(Applied)\"}\n        </Button>\n\n        {children && <Box ml={2}> {children} </Box>}\n\n        <Box ml={2}>\n          <RefreshButton handleClick={handleRefresh} />\n        </Box>\n      </Toolbar>\n    </Box>\n  );\n};\n\nexport default memo(TableToolbar);","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_TASKS_TOTALS = gql`\n  query GetAllTasksTotals {\n    get_all_tasks_totals {\n      pendingApproval\n      scheduled\n      inProgress\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { Box, Button, makeStyles, Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(() => ({\n  modalTopBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst ModalTopBar = ({ title, handleClose }) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.modalTopBox}>\n      <Typography component={\"div\"} variant=\"body1\"> {title} </Typography>\n      <Button variant=\"outlined\" size=\"small\" onClick={handleClose}>\n        <CloseIcon /> Close\n      </Button>\n    </Box>\n  );\n};\n\nexport default memo(ModalTopBar);","import React, { memo } from \"react\";\nimport ColorCheckbox from \"./ColorCheckbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nconst CustomCheckbox = ({ ...props }) => {\n  return (\n    <ColorCheckbox\n      icon={<CheckBoxOutlineBlankIcon fontSize=\"small\"/>}\n      checkedIcon={<CheckBoxIcon fontSize=\"small\"/>}\n      {...props}\n    />\n  );\n};\n\nexport default memo(CustomCheckbox);","import React, { forwardRef, memo } from \"react\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport CustomCheckbox from \"../../../../components/checkboxes/CustomCheckbox\";\n\nconst useStyles = makeStyles(theme => ({\n  topBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: theme.palette.primary.light,\n    padding: theme.spacing(0.5, 1.5, 0.5, 0.5),\n  },\n  topTaskInfoBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  topBoxTypography: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst BulkApprovalTaskTopBar = forwardRef(\n  ({ task, selected, toggleSelect, ...props }, ref) => {\n    const { id, taskType, requestedDate, requestedBy, disabled } = task || {};\n    const classes = useStyles();\n    return (\n      <div ref={ref} {...props}>\n        <Box className={classes.topBox}>\n          <Box className={classes.topTaskInfoBox}>\n            <CustomCheckbox\n              disabled={disabled}\n              checked={selected}\n              onChange={toggleSelect}\n            />\n            <Typography className={classes.topBoxTypography} style={{ textTransform: \"capitalize\" }}>\n              <strong> {taskType} task </strong>\n              {id}\n            </Typography>\n          </Box>\n\n          <Typography className={classes.topBoxTypography}>\n            <strong>Requested on: </strong>\n            {requestedDate}\n            <strong> By: </strong>\n            {requestedBy}\n          </Typography>\n        </Box>\n      </div>\n    );\n  },\n);\n\nexport default memo(BulkApprovalTaskTopBar);","import React, { memo } from \"react\";\nimport { Box, Grid, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  taskSection: {\n    padding: \"16px 16px 8px\",\n    borderRight: \"1px solid #ffffff\",\n  },\n  titleSection: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  taskRowTypography: {\n    // \"&::first-line\": {\n    //   textIndent: 50,\n    // }\n  },\n}));\n\nconst BulkApprovalTaskMainSection = ({ columnSize, title, icon, rows }) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={columnSize} className={classes.taskSection}>\n      <Box className={classes.titleSection}>\n        {icon}\n        <Typography variant=\"subtitle1\" style={{ paddingLeft: 4 }}>\n          <strong> {title}: </strong>\n        </Typography>\n      </Box>\n\n      <Box pl={3.5}>\n        {rows?.map(({ label, value }, index) => value && (\n          <Typography key={index} variant=\"subtitle1\" className={classes.taskRowTypography}>\n            {label && label + \": \"}\n            {value}\n          </Typography>\n        ))}\n      </Box>\n    </Grid>\n  );\n};\n\nexport default memo(BulkApprovalTaskMainSection);","import React, { memo } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nconst BulkApprovalTaskCommentSection = ({ commentSection }) => {\n  if (!commentSection) {\n    return null;\n  }\n  return (\n    <Box pl={5.5} pr={2} pt={2}>\n      <Typography variant=\"subtitle1\">\n        <strong> Comments: </strong>\n        {commentSection}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default memo(BulkApprovalTaskCommentSection);","import React, { createRef, memo } from \"react\";\nimport { Box, Grid, makeStyles, Tooltip } from \"@material-ui/core\";\nimport BulkApprovalTaskTopBar from \"./BulkApprovalTaskTopBar\";\nimport BulkApprovalTaskMainSection from \"./BulkApprovalTaskMainSection\";\nimport BulkApprovalTaskCommentSection from \"./BulkApprovalTaskCommentSection\";\n\nconst useStyles = makeStyles(theme => ({\n  bulkApprovalTask: {\n    boxShadow: theme.shadows[5],\n    margin: theme.spacing(1, 1, 2),\n  },\n  taskSectionsContainer: {\n    \"& :last-child\": {\n      borderRight: \"none\",\n    },\n  },\n}));\n\nconst BulkApprovalTask = ({ task, selected, setSelected }) => {\n  const classes = useStyles();\n  const ref = createRef();\n\n  const toggleSelect = () => {\n    setSelected(taskIds => taskIds?.includes(task.id)\n      ? taskIds?.filter(id => id !== task.id)\n      : [...taskIds, task.id]);\n  };\n\n  return (\n    <Box className={classes.bulkApprovalTask}>\n      {(task?.disabled && task?.hoverText) ? (\n          <Tooltip title={task?.disabled && task?.hoverText}>\n            <BulkApprovalTaskTopBar ref={ref} task={task} selected={selected} toggleSelect={toggleSelect} />\n          </Tooltip>\n        )\n        : <BulkApprovalTaskTopBar task={task} selected={selected} toggleSelect={toggleSelect} />\n      }\n\n      <Box p={2}>\n        <Grid container className={classes.taskSectionsContainer}>\n          {task?.sections?.map((section, index) => (\n            <BulkApprovalTaskMainSection key={index} {...section} />\n          ))}\n        </Grid>\n\n        <BulkApprovalTaskCommentSection commentSection={task?.commentSection} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(BulkApprovalTask);","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_BULK_APPROVAL_TASKS = gql`\n  query GetAllBulkApprovalTasks($filters: PageFilters) {\n      get_all_bulk_approval_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      offboardingTask {\n        id\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n        offboardEmployeeType\n        transferUsername\n        transferFirstName\n        transferLastName\n        transferGdrive\n        transferGcalendar\n        transferAlias\n         \n        offboardingTransferAlias {\n            id\n            aliasName\n        }\n        unassignLicense\n        offboardingUnassignLicenses {\n            id\n            licenseName\n        }\n        unassignDevice\n        offboardingUnassignDevices {\n            id\n            deviceManager\n            deviceName\n            deviceId\n            deviceSerialNumber\n            deviceModel\n        }\n        hrTerminationCode\n        hrTerminationType\n        payrollEpochTime\n        payrollEndTimezone\n        payrollEndDateTime\n        payrollNote\n      }\n      onboardingTask {\n        id\n        onboardUsername\n        onboardEmail\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardPoNumber\n        onboardJobCode\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        reqId\n        firstApprovalBypass\n        isGoogleAccountNeeded\n        onboardingOktaGroups {\n            oktaGroupId\n            oktaGroupName\n        }\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerEmail\n        reqHiringManagerFirstName\n        reqHiringManagerLastName\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n        reqFulfilled\n        reqFulfilledID\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport TaskTypes from \"../../../../data/constants/TaskTypes\";\nimport { joinWith, joinWithSpace } from \"../../../../data/helper/helpers\";\nimport { getDateString, getDateWithTimeString } from \"../../../../data/helper/DateTimezoneHelpers\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport SyncAltIcon from \"@material-ui/icons/SyncAlt\";\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\nimport { isFullTimeEmployee } from \"../../../../data/constants/EmployeeTypes\";\n\nexport const getBulkApprovalTaskData = task => {\n  if (!task || !Object.values(TaskTypes).includes(task?.taskType)) {\n    return null;\n  }\n  const {\n    id,\n    taskType,\n    taskScheduleType,\n    taskScheduleDateTime,\n    taskScheduleTimezone,\n    taskCreatedDateTime,\n    taskCreatorFirstName,\n    taskCreatorLastName,\n    taskCreatorUsername,\n    onboardingTask,\n    requisitionTask,\n    offboardingTask,\n  } = task;\n  const topSection = {\n    id,\n    taskType,\n    requestedDate: taskCreatedDateTime && getDateWithTimeString(taskCreatedDateTime),\n    requestedBy: joinWithSpace(taskCreatorFirstName, taskCreatorLastName),\n  };\n  if (task?.taskType === TaskTypes.ONBOARDING) {\n    return getOnboardingDetails(topSection, onboardingTask, taskScheduleType, taskScheduleDateTime && getDateWithTimeString(taskScheduleDateTime, taskScheduleTimezone));\n  }\n  if (task?.taskType === TaskTypes.REQUISITION) {\n    return getRequisitionDetails(topSection, requisitionTask);\n  }\n  if (task?.taskType === TaskTypes.OFFBOARDING) {\n    return getOffboardingDetails(topSection, offboardingTask, taskScheduleType, taskScheduleDateTime && getDateWithTimeString(taskScheduleDateTime, taskScheduleTimezone));\n  }\n};\n\nconst getOnboardingDetails = (topSection, onboardingTask, taskScheduleType, taskScheduleDate) => {\n  const {\n    onboardFirstName,\n    onboardLastName,\n    onboardEmail,\n    onboardNonLpEmail,\n    reqId,\n    onboardManagerFirstName,\n    onboardManagerLastName,\n    onboardJobTitle,\n    onboardLocationDescription,\n  } = onboardingTask || {};\n  return {\n    ...topSection,\n    sections: [\n      {\n        icon: <PersonIcon fontSize=\"small\" />,\n        title: \"Onboard Who\",\n        columnSize: 3,\n        rows: [\n          { value: joinWithSpace(onboardFirstName, onboardLastName) },\n          { value: onboardEmail },\n          { value: onboardNonLpEmail },\n        ],\n      },\n      {\n        icon: <ScheduleIcon fontSize=\"small\" />,\n        title: \"Onboard When\",\n        columnSize: 4,\n        rows: [\n          { value: taskScheduleType },\n          { value: taskScheduleDate },\n        ],\n      },\n      {\n        icon: <SyncAltIcon fontSize=\"small\" />,\n        title: \"Onboard Specifics\",\n        columnSize: 5,\n        rows: [\n          { label: \"Req No\", value: reqId || \"n/a\" },\n          { label: \"Manager\", value: joinWithSpace(onboardManagerFirstName, onboardManagerLastName) },\n          { label: \"Job Title\", value: onboardJobTitle },\n          { label: \"Location\", value: onboardLocationDescription },\n        ],\n      },\n    ],\n  };\n};\n\nconst getRequisitionDetails = (topSection, requisitionTask) => {\n  const {\n    reqStartDate,\n    reqType,\n    reqHiringManagerFirstName,\n    reqHiringManagerLastName,\n    isBackfill,\n    reqBackfillFirstName,\n    reqBackfillLastName,\n    reqBackfillUsername,\n    reqJobCode,\n    reqJobTitle,\n    reqBusinessUnit,\n    reqDepartment,\n    reqLocation,\n    reqLocationDescription,\n    reqSpendAmount,\n    reqSpendCurrency,\n    reqBonusAmount,\n    reqBonusType,\n    reqCompanyCode,\n    reqParentMgmtCC,\n    reqManagementCC,\n    reqFunctionalAreaDesc,\n    reqCountryDesc,\n    reqContractHoursPerWeek,\n    reqContractMonths,\n    comments,\n  } = requisitionTask || {};\n\n  return {\n    ...topSection,\n    sections: [\n      {\n        icon: <PersonIcon fontSize=\"small\" />,\n        title: \"What\",\n        columnSize: 3,\n        rows: [\n          { value: reqType },\n          { label: \"Job Code\", value: joinWith(\" | \")(reqJobCode, reqJobTitle) },\n          { label: \"Manager\", value: joinWithSpace(reqHiringManagerFirstName, reqHiringManagerLastName) },\n          {\n            label: \"Backfill\",\n            value: isBackfill\n              ? joinWith(\" | \")(joinWithSpace(reqBackfillFirstName, reqBackfillLastName), reqBackfillUsername)\n              : \"no\",\n          },\n        ],\n      },\n      {\n        icon: <ScheduleIcon fontSize=\"small\" />,\n        title: \"When and Where\",\n        columnSize: 4,\n        rows: [\n          { label: \"Start Date\", value: getDateString(reqStartDate) },\n          { label: \"Location\", value: `${reqLocationDescription} (${reqLocation})` },\n          { label: \"Business Unit\", value: reqBusinessUnit },\n          { label: \"Department\", value: reqDepartment },\n        ],\n      },\n      {\n        icon: <AssignmentTurnedInOutlinedIcon fontSize=\"small\" />,\n        title: \"Financial Info\",\n        columnSize: 5,\n        rows: [\n          {\n            label: \"Cost Center\",\n            value: joinWith(\"-\")\n            (reqCompanyCode, reqParentMgmtCC, reqManagementCC, reqFunctionalAreaDesc, reqCountryDesc, \"00\"),\n          },\n          { label: \"Req Spend\", value: joinWithSpace(reqSpendCurrency, reqSpendAmount) },\n          { label: \"Bonus\", value: joinWithSpace(reqBonusAmount, reqBonusType) },\n          {\n            label: \"Contract Length\",\n            value: `${(reqContractMonths || \"\") + \" Months;\"} ${reqContractHoursPerWeek || \"\"} Hours per Week`,\n          },\n        ],\n      },\n    ],\n    commentSection: comments,\n  };\n};\n\nconst getOffboardingDetails = (topSection, offboardingTask, taskScheduleType, taskScheduleDate) => {\n  const {\n    offboardFirstName,\n    offboardLastName,\n    offboardUsername,\n    offboardEmployeeType,\n    transferFirstName,\n    transferLastName,\n    transferGdrive,\n    transferGcalendar,\n    offboardingTransferAlias,\n    hrTerminationCode,\n    hrTerminationType,\n    payrollEpochTime,\n    payrollEndTimezone,\n    payrollEndDateTime\n  } = offboardingTask || {};\n  const disabled = isFullTimeEmployee(offboardEmployeeType) &&\n    !(hrTerminationCode && hrTerminationType && payrollEpochTime && payrollEndTimezone && payrollEndDateTime);\n  console.log(isFullTimeEmployee(offboardEmployeeType), hrTerminationCode, hrTerminationType, payrollEpochTime, payrollEndTimezone, payrollEndDateTime, disabled)\n  return {\n    ...topSection,\n    disabled,\n    hoverText: \"This task contains details that need to be submitted individually.\",\n    sections: [\n      {\n        icon: <PersonIcon fontSize=\"small\" />,\n        title: \"Offboard Who\",\n        columnSize: 3,\n        rows: [\n          { value: joinWithSpace(offboardFirstName, offboardLastName) },\n          { value: offboardUsername },\n        ],\n      },\n      {\n        icon: <ScheduleIcon fontSize=\"small\" />,\n        title: \"Offboard When\",\n        columnSize: 4,\n        rows: [\n          { value: taskScheduleType },\n          { value: taskScheduleDate },\n        ],\n      },\n      {\n        icon: <SyncAltIcon fontSize=\"small\" />,\n        title: \"Offboard What\",\n        columnSize: 5,\n        rows: [\n          {\n            label: \"Transfer\",\n            value: joinWith(\", \")(\n              transferGdrive && \"Google Drive\",\n              transferGcalendar && \"Google Calendar\",\n              ...offboardingTransferAlias?.map(alias => alias?.aliasName)),\n          },\n          { label: \"To\", value: joinWithSpace(transferFirstName, transferLastName) },\n        ],\n      },\n    ],\n  };\n};","import React, { memo, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { getTaskFieldValue, getTaskFullName, logOptions, trailingS } from \"../../../../data/helper/helpers\";\nimport ApprovalStatuses from \"../../../../data/constants/ApprovalStatuses\";\nimport TaskStatuses from \"../../../../data/constants/TaskStatuses\";\nimport TaskTypes from \"../../../../data/constants/TaskTypes\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_TASK_APPROVAL } from \"../../../../operations/mutations/addTaskApproval\";\nimport handleError from \"../../../../data/handleError\";\nimport { CREATE_LOG_ENTRY } from \"../../../../operations/mutations/createLogEntry\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthUserContext } from \"../../../../AuthUserContextProvider\";\n\nconst getTaskStatus = (taskType, employeeType) => {\n  if (taskType === TaskTypes.ONBOARDING) {\n    return employeeType === \"Full Time\"\n      ? TaskStatuses.READY\n      : TaskStatuses.PENDING_USER_TASKS;\n  }\n  if (taskType === TaskTypes.REQUISITION) {\n    return TaskStatuses.COMPLETE;\n  }\n  if (taskType === TaskTypes.OFFBOARDING) {\n    return TaskStatuses.READY;\n  }\n};\n\nconst createLogDescription = (taskData, operation, taskType, info) => {\n  if (taskType === TaskTypes.REQUISITION) {\n    return (\n      `Task ${operation} >> Task ID: ${taskData.id} ` +\n      `[${getTaskFieldValue(taskData, taskType, \"Type\")}, ` +\n      `${getTaskFieldValue(taskData, taskType, \"BusinessUnit\")}, ` +\n      `${getTaskFieldValue(taskData, taskType, \"Department\")}]; ` +\n      `${info}`\n    );\n  }\n  if (taskType === TaskTypes.ONBOARDING || taskType === TaskTypes.OFFBOARDING) {\n    return (\n      `Task ${operation} >> Task ID: ${taskData.id} ` +\n      `[${getTaskFullName(taskData, taskType)} ` +\n      `(${getTaskFieldValue(taskData, taskType, \"Username\")})]; ` +\n      `${info}`\n    );\n  }\n};\n\nconst BulkApprovalSubmitButton = ({ taskIds, tasks, handleSubmitClose }) => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const length = useMemo(() => taskIds?.length, [taskIds]);\n  const [approvedAmount, setApprovedAmount] = useState(0);\n\n  const { authUser } = useContext(AuthUserContext);\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onCompleted: () => setApprovedAmount(amount => amount + 1),\n    onError: (error) => {\n      setApprovedAmount(amount => amount + 1);\n      handleError(error)(history);\n    },\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const addApproval = (id, taskType, taskStatus, taskApprovalStatus, input) => {\n    addTaskApproval({\n      variables: { id, taskType, taskStatus, taskApprovalStatus, input },\n    });\n  };\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const handleSubmit = () => {\n    setLoading(true);\n    const selectedTasks = tasks?.filter(task => taskIds?.includes(task?.id));\n    selectedTasks?.map(taskData => {\n      const approvalStatus = ApprovalStatuses.APPROVED;\n      const approvalInfo = {\n        approvalStage: 1,\n        approvalStatus,\n      };\n      const taskType = taskData.taskType;\n      const taskStatus = getTaskStatus(taskType, taskData?.onboardingTask?.onboardEmployeeType);\n      addApproval(\n        parseInt(taskData?.id),\n        taskType,\n        taskStatus,\n        approvalStatus,\n        approvalInfo,\n      );\n      createLog(\n        createLogDescription(taskData,\n          \"Approved\",\n          taskType,\n          `approvedBy: ${authUser.profile.userName};`,\n        ),\n      );\n    });\n  };\n\n  useEffect(() => {\n    if (length && length === approvedAmount) {\n      setLoading(false);\n      setApprovedAmount(0);\n      handleSubmitClose();\n    }\n  }, [length, approvedAmount]);\n\n  if (!length) {\n    return null;\n  }\n  return (\n    <Box mx={2} mt={2}>\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={() => !loading && handleSubmit()}\n      >\n        {loading && <CircularProgress size={20} color=\"inherit\" style={{ marginRight: 4 }} />}\n        Approve selected ({length} Task{trailingS(length)})\n      </Button>\n    </Box>\n  );\n};\n\nexport default memo(BulkApprovalSubmitButton);","import React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport ModalTopBar from \"../../../../components/modals/ModalTopBar\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\nimport BulkApprovalTask from \"./BulkApprovalTask\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport CircularIndeterminate from \"../../../../components/circularProgress/LoadingCircle\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport { GET_ALL_BULK_APPROVAL_TASKS } from \"../../../../operations/queries/getAllBulkApprovalTasks\";\nimport { getBulkApprovalTaskData } from \"./BulkApprovalData\";\nimport BulkApprovalSubmitButton from \"./BulkApprovalSubmitButton\";\nimport CustomInfiniteScroll from \"../../../../components/table/CustomInfiniteScroll\";\n\nconst useStyles = makeStyles(() => ({\n  bulkApprovalModalContainer: {\n    overflow: \"auto\",\n    maxHeight: \"calc(95vh - 190px)\",\n  },\n}));\n\nconst itemsPerPage = 15;\n\nconst BulkApprovalModal = ({ open, handleClose, handleRefresh }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [tasks, setTasks] = useState();\n  const tasksData = useMemo(() => tasks?.map(getBulkApprovalTaskData), [tasks]);\n  const [selectedTaskIds, setSelectedTaskIds] = useState([]);\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [pageCount, setPageCount] = useState(0);\n\n  const [executeAllBulkSearch, { loading }] = useLazyQuery(GET_ALL_BULK_APPROVAL_TASKS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data) {\n        if (pageCount > 0) {\n          setTasks([...tasks, ...data.get_all_bulk_approval_tasks]);\n        } else {\n          setTasks(data.get_all_bulk_approval_tasks);\n        }\n        setTasksCountStatus(data.get_all_bulk_approval_tasks?.length >= itemsPerPage);\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    executeAllBulkSearch(\n      { variables: { filters: { pageCount, itemsPerPage } } },\n    );\n  }, [pageCount]);\n\n  const handlePageChange = (page) => {\n    if (!loading) {\n      setPageCount(page);\n    }\n  };\n\n  const handleSubmitClose = useCallback(() => {\n    setTasks([]);\n    setSelectedTaskIds([]);\n    setTasksCountStatus(true);\n    handleRefresh && handleRefresh();\n    handleClose();\n    if (pageCount) {\n      setPageCount(0);\n    }\n  }, []);\n\n  return (\n    <CustomModal\n      minwidth={900}\n      width={1200}\n      height={\"auto\"}\n      open={open}\n      onClose={handleClose}\n      middlePosition\n      aria-labelledby=\"request-form-alert\"\n      aria-describedby=\"request-form-description\"\n    >\n      <ModalTopBar title=\"Task Manager - Bulk Approval\" handleClose={handleClose} />\n\n      <Box m={2} mr={0} className={classes.bulkApprovalModalContainer} id={\"bulk-approval-pending-tasks\"}>\n        {(loading && !tasks?.length)\n          ? <CircularIndeterminate />\n          : (!tasks?.length || !tasksData?.length)\n            ? <NoResultsTypography />\n            : (\n              <Box mr={2}>\n                <CustomInfiniteScroll\n                  scrollableTarget=\"bulk-approval-pending-tasks\"\n                  dataLength={tasksData?.length}\n                  next={() => handlePageChange(pageCount + 1)}\n                  hasMore={tasksCountStatus}\n                >\n                  {tasksData?.map(task => (\n                    <BulkApprovalTask\n                      key={task.id}\n                      task={task}\n                      selected={selectedTaskIds?.includes(task?.id)}\n                      setSelected={setSelectedTaskIds}\n                    />\n                  ))}\n                </CustomInfiniteScroll>\n              </Box>\n            )\n        }\n      </Box>\n\n      <BulkApprovalSubmitButton\n        tasks={tasks}\n        taskIds={selectedTaskIds}\n        handleSubmitClose={handleSubmitClose}\n      />\n    </CustomModal>\n  );\n};\n\nexport default memo(BulkApprovalModal);","import React, { memo } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nconst BulkApprovalButton = ({ handleClick, ...props }) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={handleClick}\n      {...props}\n    >\n      Bulk Approve\n    </Button>\n  );\n};\n\nexport default memo(BulkApprovalButton);\n","import React, {memo, useCallback, useContext, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery, useQuery, useSubscription} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport CountBox from \"./CountBox\";\nimport FilterBox from \"./FilterBox\";\nimport TaskManagerTable from \"../TaskManagerTable\";\nimport {CREATE_TASK_SUBSCRIPTION} from \"../../../../operations/subscription/createTaskSubscription\";\nimport {GET_TASKS} from \"../../../../operations/queries/getTasks\";\nimport {UPDATE_TASK_SUBSCRIPTION} from \"../../../../operations/subscription/updateTaskSubscription\";\nimport {connect} from \"react-redux\";\nimport {\n  addTaskData,\n  setAllTasksData,\n} from \"../../../../data/redux/taskManager/taskManagerActions\";\nimport BoxCardWrapper from \"../../../../components/blocks/BoxCardWrapper\";\nimport handleError from \"../../../../data/handleError\";\nimport TableToolbar from \"../TableToolbar\";\nimport {GET_ALL_TASKS_TOTALS} from \"../../../../operations/queries/getAllTasksTotals\";\nimport BulkApprovalModal from \"../BulkModal/BulkApprovalModal\";\nimport BulkApprovalButton from \"../BulkApprovalButton\";\nimport {AuthUserContext} from \"../../../../AuthUserContextProvider\";\n\nconst AllTasks = ({allTasksData, setAllTasksData, addTaskData}) => {\n  const history = useHistory();\n  const {\n    permBulkApproverOnboarding,\n    permBulkApproverRequisition,\n    permBulkApproverOffboarding,\n  } = useContext(AuthUserContext);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    taskType: \"\",\n    taskStatus: \"\",\n    taskCreator: \"\",\n    currentView: \"all\",\n    query: \"\",\n    dateFrom: \"\",\n    dateTo: \"\",\n  });\n\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [isResetFilters, setIsResetFilters] = useState(false);\n  const [openBulkModal, setOpenBulkModal] = useState(false);\n\n  const createTaskSubscription = useSubscription(CREATE_TASK_SUBSCRIPTION);\n  const updateTaskSubscription = useSubscription(UPDATE_TASK_SUBSCRIPTION);\n\n  const [executeSearch] = useLazyQuery(GET_TASKS, {\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const {data: totalData, refetch} = useQuery(GET_ALL_TASKS_TOTALS, {\n    fetchPolicy: \"cache-and-network\",\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  }, [filters, executeSearch]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...allTasksData, ...result.get_tasks];\n        setAllTasksData(data);\n      } else {\n        setAllTasksData(result.get_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(result.get_tasks?.length >= filters?.itemsPerPage);\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n      setAllTasksData(null);\n    }\n    setAllTasksData([]);\n    setIsSearchInProgress(true);\n    setCurrentQuery(query);\n    setIsResetFilters(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleCurrentView = (currentView) => {\n    setAllTasksData([]);\n    setIsSearchInProgress(true);\n    setFilters({\n      currentView,\n      pageCount: 0,\n      query: \"\",\n      taskType: \"\",\n      taskStatus: \"\",\n      dateFrom: \"\",\n      dateTo: \"\",\n      itemsPerPage: 25,\n      taskCreator: \"\",\n    });\n  };\n\n  const handleFilterChange = (filters) => {\n    setIsSearchInProgress(true);\n    setAllTasksData([]);\n    setFilters({\n      ...filters,\n      pageCount: 0,\n    });\n  };\n\n  const handleFilterClick = useCallback(() => {\n    setFilterOpen(!filterOpen);\n  }, [setFilterOpen, filterOpen]);\n\n  // todo check filters before unshift\n  useEffect(() => {\n    const subData = createTaskSubscription?.data?.createTaskSubscription;\n    if (subData) {\n      addTaskData(subData);\n    }\n  }, [createTaskSubscription.data, createTaskSubscription.error]);\n\n  useEffect(() => {\n    const subData = updateTaskSubscription?.data?.updateTaskSubscription;\n    if (subData) {\n      let updatedData = [];\n      let isUpdatedArray = false;\n      for (let i = 0; i < allTasksData.length; i++) {\n        if (allTasksData[i].id === subData.id) {\n          updatedData.push(subData);\n          isUpdatedArray = true;\n        } else {\n          updatedData.push(allTasksData[i]);\n        }\n      }\n      if (isUpdatedArray) {\n        setAllTasksData(updatedData);\n      }\n    }\n  }, [updateTaskSubscription.data, updateTaskSubscription.error]);\n\n  const handleRefresh = () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    setFilters({...filters, query, pageCount});\n    refetch();\n  };\n\n  const hasBulkApprovePermission =\n    permBulkApproverOnboarding ||\n    permBulkApproverRequisition ||\n    permBulkApproverOffboarding;\n\n  const handleOpenBulkModal = useCallback(() => {\n    setOpenBulkModal(true);\n  }, [setOpenBulkModal]);\n\n  const handleCloseBulkModal = useCallback(() => {\n    setOpenBulkModal(false);\n  }, [setOpenBulkModal]);\n\n  return (\n    <Box minWidth={1050}>\n      <CountBox data={totalData?.get_all_tasks_totals} />\n\n      <BoxCardWrapper>\n        <TableToolbar\n          currentView={filters.currentView}\n          query={filters.query}\n          handleCurrentView={handleCurrentView}\n          handleSearchQuery={handleSearchQuery}\n          handleFilterClick={handleFilterClick}\n          isFilterApplied={isFilterApplied}\n          handleRefresh={handleRefresh}\n        >\n          {hasBulkApprovePermission && (\n            <BulkApprovalButton handleClick={handleOpenBulkModal} />\n          )}\n        </TableToolbar>\n\n        <FilterBox\n          filterOpen={filterOpen}\n          setIsFilterApplied={setIsFilterApplied}\n          filters={filters}\n          onFilterChange={handleFilterChange}\n          isResetFilters={isResetFilters}\n        />\n      </BoxCardWrapper>\n\n      <Box>\n        <TaskManagerTable\n          currentPage={filters.pageCount}\n          data={allTasksData}\n          tasksCountStatus={tasksCountStatus}\n          onPageChange={handlePageChange}\n          isSearchInProgress={isSearchInProgress}\n        />\n      </Box>\n      {openBulkModal && (\n        <BulkApprovalModal\n          open={openBulkModal}\n          handleClose={handleCloseBulkModal}\n          handleRefresh={handleRefresh}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({allTasksData: state.taskManager.get(\"allTasksData\")}),\n  {setAllTasksData, addTaskData}\n)(memo(AllTasks));\n","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_OFFBOARDING_TASKS = gql`\n  query GetAllOffboardingTasks($filters: FiltersInput) {\n    get_all_offboarding_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      offboardingTask {\n        id\n        offboardUsername\n        offboardFirstName\n        offboardLastName\n      }\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Toolbar} from \"@material-ui/core\";\nimport TaskManagerTable from \"./TaskManagerTable\";\nimport handleError from \"../../../data/handleError\";\nimport {GET_ALL_OFFBOARDING_TASKS} from \"../../../operations/queries/getAllOffboardingTasks\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport SearchInput from \"../../../components/SearchInput\";\nimport BoxCardWrapper from \"../../../components/blocks/BoxCardWrapper\";\n\nconst AllOffboardingTasks = () => {\n  const history = useHistory();\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [offData, setOffData] = useState([]);\n\n  const [executeSearch] = useLazyQuery(GET_ALL_OFFBOARDING_TASKS, {\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n      setIsSearchInProgress(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    executeQuery();\n  }, [filters]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...offData, ...result.get_all_offboarding_tasks];\n        setOffData(data);\n      } else {\n        setOffData(result.get_all_offboarding_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(\n        result.get_all_offboarding_tasks?.length >= filters?.itemsPerPage\n      );\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n    }\n    setCurrentQuery(query);\n    setIsSearchInProgress(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleRefresh = async () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    await setFilters({...filters, query, pageCount});\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  return (\n    <Box>\n      <BoxCardWrapper>\n        <Box>\n          <Toolbar>\n            <SearchInput\n              onSearch={handleSearchQuery}\n              searchQuery={filters.query}\n              label={\"Search All Tasks\"}\n              helperText={\"Search by ID, Name, or Status\"}\n            />\n            <Box flexGrow={1} />\n\n            <RefreshButton handleClick={handleRefresh} />\n          </Toolbar>\n        </Box>\n      </BoxCardWrapper>\n\n      <Box mt={2}>\n        <TaskManagerTable\n          currentPage={filters.pageCount}\n          data={offData}\n          tasksCountStatus={tasksCountStatus}\n          onPageChange={handlePageChange}\n          isSearchInProgress={isSearchInProgress}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(AllOffboardingTasks);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_PENDING_TASKS = gql`\n  query GetAllPendingTasks {\n    get_all_pending_tasks {\n      id\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      offboardingTask {\n        offboardFirstName\n        offboardLastName\n      }\n      onboardingTask {\n        onboardFirstName\n        onboardLastName\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n      }\n      badgeRequestTask {\n        badgeRequestName\n        badgeRequestType\n      }\n    }\n  }\n`;\n","import React, { memo, useCallback, useContext, useEffect, useState } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport TaskManagerTable from \"./TaskManagerTable\";\nimport { GET_ALL_PENDING_TASKS } from \"../../../operations/queries/getAllPendingTasks\";\nimport handleError from \"../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Toolbar } from \"@material-ui/core\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport { AuthUserContext } from \"../../../AuthUserContextProvider\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport BulkApprovalButton from \"./BulkApprovalButton\";\nimport BulkApprovalModal from \"./BulkModal/BulkApprovalModal\";\n\nconst PendingApprovalTasks = () => {\n  const history = useHistory();\n  const {\n    permOffboardingApproveTasks,\n    permOnboardingApproveTasks,\n    permRequisitionApproveTasks,\n    permBulkApproverOnboarding,\n    permBulkApproverRequisition,\n    permBulkApproverOffboarding,\n  } = useContext(AuthUserContext);\n  const [pendingTasksData, setPendingTasksData] = useState(null);\n  const [openBulkModal, setOpenBulkModal] = useState(false);\n\n  const [executeAllSearch, { loading }] = useLazyQuery(GET_ALL_PENDING_TASKS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setPendingTasksData(data.get_all_pending_tasks);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (\n      permOffboardingApproveTasks ||\n      permOnboardingApproveTasks ||\n      permRequisitionApproveTasks\n    ) {\n      executeAllSearch();\n    }\n  }, [\n    permOffboardingApproveTasks,\n    permOnboardingApproveTasks,\n    permRequisitionApproveTasks,\n    executeAllSearch,\n  ]);\n\n  const hasBulkApprovePermission = permBulkApproverOnboarding\n    || permBulkApproverRequisition\n    || permBulkApproverOffboarding;\n\n  const handleOpenBulkModal = useCallback(() => {\n    setOpenBulkModal(true);\n  }, [setOpenBulkModal]);\n\n  const handleCloseBulkModal = useCallback(() => {\n    setOpenBulkModal(false);\n  }, [setOpenBulkModal]);\n\n  const handleRefresh = () => {\n    executeAllSearch()\n  };\n\n  return (\n    <>\n      {loading ? (\n        <LoadingCircle text={\"Loading tasks...\"} />\n      ) : pendingTasksData ? (\n        <>\n          <Toolbar>\n            <Box flexGrow={1} />\n            {hasBulkApprovePermission && <BulkApprovalButton handleClick={handleOpenBulkModal} />}\n            <Box ml={2}>\n              <RefreshButton handleClick={executeAllSearch} />\n            </Box>\n          </Toolbar>\n\n          <TaskManagerTable data={pendingTasksData} />\n\n          {openBulkModal &&\n          <BulkApprovalModal\n            open={openBulkModal}\n            handleClose={handleCloseBulkModal}\n            handleRefresh={handleRefresh}\n          />\n          }\n        </>\n      ) : (\n        <Box>\n          <NoResultsTypography />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(PendingApprovalTasks);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_REQUISITION_TASKS = gql`\n  query GetAllRequisitionTasks($filters: FiltersInput) {\n    get_all_requisition_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      taskApprovals {\n        id\n        approvalStage\n        approvalStatus\n        approvalDateTime\n        approvalUsername\n        approvalFirstName\n        approvalLastName\n        approvalEmail\n        approvalNote\n      }\n      requisitionTask {\n        reqType\n        reqStartDate\n      }\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Toolbar} from \"@material-ui/core\";\nimport TaskManagerTable from \"./TaskManagerTable\";\nimport handleError from \"../../../data/handleError\";\nimport {GET_ALL_REQUISITION_TASKS} from \"../../../operations/queries/getAllRequisitionTasks\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport SearchInput from \"../../../components/SearchInput\";\nimport BoxCardWrapper from \"../../../components/blocks/BoxCardWrapper\";\n\nconst AllRequisitionTasks = () => {\n  const history = useHistory();\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [reqData, setReqData] = useState([]);\n\n  const [executeSearch] = useLazyQuery(GET_ALL_REQUISITION_TASKS, {\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n      setIsSearchInProgress(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    executeQuery();\n  }, [filters]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...reqData, ...result.get_all_requisition_tasks];\n        setReqData(data);\n      } else {\n        setReqData(result.get_all_requisition_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(\n        result.get_all_requisition_tasks?.length >= filters?.itemsPerPage\n      );\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n    }\n    setCurrentQuery(query);\n    setIsSearchInProgress(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleRefresh = async () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    await setFilters({...filters, query, pageCount});\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  return (\n    <Box>\n      <Box>\n        <BoxCardWrapper>\n          <Box>\n            <Toolbar>\n              <SearchInput\n                onSearch={handleSearchQuery}\n                searchQuery={filters.query}\n                label={\"Search All Tasks\"}\n                helperText={\"Search by ID, Name, Type, Job Title or Status\"}\n              />\n              <Box flexGrow={1} />\n\n              <RefreshButton handleClick={handleRefresh} />\n            </Toolbar>\n          </Box>\n        </BoxCardWrapper>\n\n        <Box mt={2}>\n          <TaskManagerTable\n            currentPage={filters.pageCount}\n            data={reqData}\n            tasksCountStatus={tasksCountStatus}\n            onPageChange={handlePageChange}\n            isSearchInProgress={isSearchInProgress}\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(AllRequisitionTasks);\n","import React from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {\n  getOffboardingFullName,\n  getScheduleDateOrImmediate,\n  getTaskValueOrNotEntered,\n  getYesOrNo,\n} from \"../../../data/helper/helpers\";\nimport TaskScheduleTypes from \"../../../data/constants/TaskScheduleTypes\";\n\nexport const offboardTaskRows = (task) => {\n  const {\n    id,\n    oldTaskId,\n    offboardingTask,\n    taskScheduleTimezone,\n    taskScheduleType,\n  } = task || {};\n  const {\n    offboardUsername,\n    offboardEmployeeType,\n    transferGdrive,\n    transferGcalendar,\n    transferGdataStudio,\n    offboardingUnassignDevices,\n    offboardingUnassignLicenses,\n    unassignLicense,\n    transferAlias,\n    offboardingTransferAlias,\n    transferUsername,\n    transferFirstName,\n    transferLastName,\n  } = offboardingTask || {};\n  return [\n    {id: \"taskId\", name: \"Task ID\", value: id},\n    {\n      id: \"oldTaskId\",\n      name: \"Old Task ID\",\n      value: oldTaskId,\n      hidden: !oldTaskId,\n    },\n    {id: \"name\", name: \"Name\", value: getOffboardingFullName(task)},\n    {id: \"username\", name: \"Username\", value: offboardUsername},\n    {is: \"employeeType\", name: \"Employee Type\", value: offboardEmployeeType},\n    {\n      id: \"transferGdrive\",\n      name: \"Transfer Google Drive?\",\n      value: getYesOrNo(transferGdrive),\n    },\n    {\n      id: \"transferGcalendar\",\n      name: \"Transfer Google Calendar?\",\n      value: getYesOrNo(transferGcalendar),\n    },\n    {\n      id: \"transferGdataStudio\",\n      name: \"Transfer Google Data Studio?\",\n      value: getYesOrNo(transferGdataStudio),\n    },\n    {\n      id: \"separateDevices\",\n      name: \"Separate Devices\",\n      value: <UnassignDevicesBox devices={offboardingUnassignDevices} />,\n    },\n    {\n      id: \"removeLicenses\",\n      name: \"Remove Licenses\",\n      value: (\n        <UnassignLicensesBox\n          licenses={offboardingUnassignLicenses}\n          unassignLicense={unassignLicense}\n        />\n      ),\n    },\n    {\n      id: \"transferAliases\",\n      name: \"Transfer Aliases\",\n      value: transferAlias\n        ? offboardingTransferAlias?.map((alias) => (\n            <p key={alias?.id}>{alias?.aliasName}</p>\n          ))\n        : \"No aliases\",\n    },\n    {\n      id: \"transferTo\",\n      name: \"Transfer to\",\n      value: transferUsername\n        ? (transferFirstName !== \"-\" && transferFirstName) +\n          \" \" +\n          (transferLastName !== \"-\" && transferLastName + \" | \") +\n          transferUsername\n        : \"Not entered\",\n    },\n    {\n      id: \"transferDateTime\",\n      name: \"Transfer Date/Time\",\n      value: getScheduleDateOrImmediate(task),\n    },\n    {\n      id: \"transferTimezone\",\n      name: \"Transfer Timezone\",\n      value: taskScheduleTimezone,\n      hidden: !(taskScheduleType === TaskScheduleTypes.SCHEDULED),\n    },\n  ];\n};\n\nexport const hrPayrollRows = (task) => {\n  const offboardingTask = task?.offboardingTask;\n  return [\n    {\n      id: \"terminationCode\",\n      name: \"Termination Code\",\n      value: getTaskValueOrNotEntered(offboardingTask, \"hrTerminationCode\"),\n    },\n    {\n      id: \"terminationType\",\n      name: \"Termination Type\",\n      value: getTaskValueOrNotEntered(offboardingTask, \"hrTerminationType\"),\n    },\n    {\n      id: \"payrollEndDate\",\n      name: \" Payroll End Date & Time\",\n      value: getTaskValueOrNotEntered(\n        offboardingTask,\n        \"payrollEndDateTime\",\n        \"payrollEndTimezone\"\n      ),\n    },\n    {\n      id: \"payrollNotes\",\n      name: \"Payroll Notes\",\n      value: getTaskValueOrNotEntered(offboardingTask, \"payrollNote\"),\n    },\n  ];\n};\n\nconst useStyles = makeStyles((theme) => ({\n  licenseBox: {\n    height: 100,\n    overflow: \"auto\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nconst UnassignLicensesBox = ({unassignLicense, licenses}) => {\n  const classes = useStyles();\n  return (\n    <Box className={(licenses?.length > 1 && classes.licenseBox) || \"\"}>\n      {unassignLicense\n        ? licenses?.map((license) => (\n            <p key={license.id}>{license.licenseName}</p>\n          ))\n        : \"No licenses\"}\n    </Box>\n  );\n};\n\nconst UnassignDevicesBox = ({devices}) => {\n  return (\n    <>\n      {devices?.length > 0\n        ? devices?.map((device) => (\n            <p key={device.id}>\n              {device.deviceName}{\" \"}\n              {device.deviceSerialNumber !== \"-\" &&\n                ` : ${device.deviceSerialNumber}`}\n            </p>\n          ))\n        : \"No devices\"}\n    </>\n  );\n};\n","import React, {createRef, memo, useContext, useEffect, useState} from \"react\";\nimport {Box, Container, Divider, Tooltip, Typography} from \"@material-ui/core\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {GET_TASK} from \"../../../operations/queries/getTask\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport {\n  getOffboardingFieldValue,\n  getOffboardingFullName,\n  logOptions,\n} from \"../../../data/helper/helpers\";\nimport {\n  CancelButton,\n  SubmitApprovalButton,\n  TaskApproveButton,\n  TaskRejectButton,\n} from \"./components/TaskButtons\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport MissedInputModal from \"../../../components/modals/MissedInputModal\";\nimport ActionSection from \"./components/ActionSection\";\nimport TaskSection from \"./components/TaskSection\";\nimport {connect} from \"react-redux\";\n\nconst SelectedOffboardActionSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n  approveDisabled,\n}) => {\n  let history = useHistory();\n  const {\n    authUser,\n    permOffboardingApproveTasks,\n    permOffboardingCancelTasks,\n    permOffboardingRejectTasks,\n  } = useContext(AuthUserContext);\n\n  const [isApproved, setIsApproved] = useState(false);\n  const [isRejected, setIsRejected] = useState(false);\n  const [isRejectedError, setIsRejectedError] = useState(false);\n  const [rejectedNotes, setRejectedNotes] = useState(\"\");\n  const [isCancelledError, setIsCancelledError] = useState(false);\n  const [cancelledNotes, setCancelledNotes] = useState(\"\");\n  const [modalMsg, setModalMsg] = useState(\"\");\n\n  const [executeSearch] = useLazyQuery(GET_TASK, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      if (data.get_task?.taskStatus === TaskStatuses.READY) {\n        handleCancel();\n      } else if (data.get_task?.taskStatus === TaskStatuses.RUNNING) {\n        setModalMsg(\"Task is currently in progress. It cannot be canceled.\");\n      } else {\n        setModalMsg(\"Cancel Error: Please refresh and try again.\");\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL);\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${getOffboardingFullName(selectedTaskData)} (${getOffboardingFieldValue(\n        selectedTaskData,\n        \"Username\"\n      )})]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: parseInt(selectedTaskData.id),\n        taskType: TaskTypes.OFFBOARDING,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const handleCloseAfterSubmit = () => {\n    handleClose();\n    onSubmitted();\n  };\n\n  const handleSubmit = () => {\n    if (isRejected) {\n      if (!rejectedNotes?.length) {\n        setIsRejectedError(true);\n      } else {\n        setIsRejectedError(false);\n        const approvalStatus = ApprovalStatuses.REJECTED;\n        const approvalInfo = {\n          approvalStage: 0,\n          approvalStatus,\n          approvalNote: rejectedNotes,\n        };\n        addApproval(TaskStatuses.CANCELLED, approvalStatus, approvalInfo);\n        createLog(\n          createLogDescription(\n            \"Rejected\",\n            `rejectedBy: ${authUser.profile.userName};`,\n            `rejectMsg: ${rejectedNotes}`\n          )\n        );\n        handleCloseAfterSubmit();\n      }\n    }\n    if (isApproved) {\n      const approvalStatus = ApprovalStatuses.APPROVED;\n      const approvalInfo = {\n        approvalStage: 1,\n        approvalStatus,\n      };\n      addApproval(TaskStatuses.READY, approvalStatus, approvalInfo);\n      createLog(\n        createLogDescription(\n          \"Approved\",\n          `approvedBy: ${authUser.profile.userName};`\n        )\n      );\n      handleCloseAfterSubmit();\n    }\n  };\n\n  const handleCancel = () => {\n    const approvalStatus = ApprovalStatuses.CANCELLED;\n    const approvalInfo = {\n      approvalStage: 0,\n      approvalNote: cancelledNotes,\n      approvalStatus,\n    };\n    addApproval(TaskStatuses.CANCELLED, approvalStatus, approvalInfo);\n    createLog(\n      createLogDescription(\n        \"Cancelled\",\n        `cancelledBy: ${authUser.profile.userName}; cancelledMsg: ${cancelledNotes}`\n      )\n    );\n    handleCloseAfterSubmit();\n  };\n\n  const handleCancelCheck = () => {\n    if (cancelledNotes?.length === 0) {\n      setIsCancelledError(true);\n    } else {\n      setIsCancelledError(false);\n\n      //---check task status\n      executeSearch({variables: {search: selectedTaskData?.id}});\n    }\n  };\n\n  const approveBtnOnClick = () => {\n    setIsApproved(true);\n    setIsRejected(false);\n  };\n\n  const rejectBtnOnClick = () => {\n    setIsApproved(false);\n    setIsRejected(true);\n  };\n\n  const handleModalClose = () => {\n    setModalMsg(\"\");\n  };\n\n  useEffect(() => {\n    scrollDown();\n  }, [isRejected, isApproved]);\n\n  const scrollDown = () => {\n    const taskWindow = document.getElementById(\"selected-task-window\");\n    taskWindow.scroll(0, taskWindow.scrollHeight);\n  };\n  const ref = createRef();\n\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        {selectedTaskData?.taskStatus === TaskStatuses.PENDING && (\n          <div>\n            <Box m={2}>\n              <Box mt={1} mb={2}>\n                <Typography component={\"div\"} variant=\"subtitle1\">\n                  <strong>Pending Approval</strong> <br />\n                  If you approve and submit, the offboarding will proceed. If\n                  you reject, a rejection note is required before you submit.\n                </Typography>\n              </Box>\n              {permOffboardingApproveTasks && (\n                <TaskApproveButton\n                  ref={ref}\n                  disabled={approveDisabled}\n                  isApproved={isApproved}\n                  handleClick={approveBtnOnClick}\n                />\n              )}\n              {permOffboardingRejectTasks && (\n                <TaskRejectButton\n                  isRejected={isRejected}\n                  handleClick={rejectBtnOnClick}\n                />\n              )}\n            </Box>\n            {isRejected && (\n              <Box m={2}>\n                <NotesTextField\n                  id=\"rejection-notes\"\n                  placeholder=\"Rejection Reason (required)\"\n                  error={isRejectedError}\n                  value={rejectedNotes}\n                  onValueChange={setRejectedNotes}\n                />\n              </Box>\n            )}\n            {(isApproved || isRejected) && (\n              <SubmitApprovalButton handleSubmit={handleSubmit} />\n            )}\n          </div>\n        )}\n        {permOffboardingCancelTasks &&\n          selectedTaskData?.taskStatus === TaskStatuses.READY && (\n            <ActionSection\n              text={\n                <>\n                  Offboarding task is scheduled to run. <br />\n                  You can cancel the task; a cancellation note is required\n                  before you submit.\n                </>\n              }\n            >\n              <NotesTextField\n                id=\"cancellation-notes\"\n                placeholder=\"Cancellation Reason (required)\"\n                error={isCancelledError}\n                value={cancelledNotes}\n                onValueChange={setCancelledNotes}\n              />\n              <CancelButton handleClick={handleCancelCheck} />\n            </ActionSection>\n          )}\n        {modalMsg && (\n          <MissedInputModal\n            open={!!modalMsg}\n            handleClose={handleModalClose}\n            modalMsg={modalMsg}\n          />\n        )}\n      </Container>\n\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedOffboardActionSection));\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst TaskManagerHrInfoActonTypes = {\n  SET_HR_INFORMATION: \"SET_HR_INFORMATION\",\n  CLEAR_HR_INFORMATION: \"CLEAR_HR_INFORMATION\",\n\n  SET_HR_TERMINATION_CODE: \"SET_HR_TERMINATION_CODE\",\n  SET_HR_TERMINATION_TYPE: \"SET_HR_TERMINATION_TYPE\",\n  SET_HR_SELECTED_DATE: \"SET_HR_SELECTED_DATE\",\n  SET_HR_TIMEZONE: \"SET_HR_TIMEZONE\",\n  SET_HR_TIMEZONE_ID: \"SET_HR_TIMEZONE_ID\",\n  SET_HR_PAYROLL_EPOCH: \"SET_HR_PAYROLL_EPOCH\",\n  SET_HR_NOTES: \"SET_HR_NOTES\",\n\n  SET_HR_LOCATION_LAT: \"SET_HR_LOCATION_LAT\",\n  SET_HR_LOCATION_LONG: \"SET_HR_LOCATION_LONG\",\n  SET_HR_CITY: \"SET_HR_CITY\",\n\n  SET_HR_TERMINATION_CODE_ERROR: \"SET_HR_TERMINATION_CODE_ERROR\",\n  SET_HR_TERMINATION_TYPE_ERROR: \"SET_HR_TERMINATION_TYPE_ERROR\",\n  SET_HR_DATE_ERROR: \"SET_HR_DATE_ERROR\",\n  SET_HR_TIME_ZONE_ERROR: \"SET_HR_TIME_ZONE_ERROR\",\n};\n\nexport default typesWithPrefix(\"TASK_MANAGER_HR_INFO_\")(\n  TaskManagerHrInfoActonTypes\n);\n","import TaskManagerHrInfoActonTypes from \"./taskManagerHrInfoActonTypes\";\n\nexport const clearHrInformation = () => ({\n  type: TaskManagerHrInfoActonTypes.CLEAR_HR_INFORMATION,\n});\n\nexport const setHrInformation = (hrInformation) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_INFORMATION,\n  payload: { hrInformation },\n});\n\nexport const setHrTerminationCode = (hrTerminationCode) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_CODE,\n  payload: { hrTerminationCode },\n});\n\nexport const setHrTerminationType = (hrTerminationType) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_TYPE,\n  payload: { hrTerminationType },\n});\n\nexport const setHrSelectedDate = (hrSelectedDate) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_SELECTED_DATE,\n  payload: { hrSelectedDate },\n});\n\nexport const setHrPayrollEpoch = (hrPayrollEpoch) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_PAYROLL_EPOCH,\n  payload: { hrPayrollEpoch },\n});\n\nexport const setHrTimeZone = (hrTimeZone) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TIMEZONE,\n  payload: { hrTimeZone },\n});\n\nexport const setHrTimeZoneId = (hrTimeZoneId) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TIMEZONE_ID,\n  payload: { hrTimeZoneId },\n});\n\nexport const setHrNotes = (hrNotes) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_NOTES,\n  payload: { hrNotes },\n});\n\nexport const setHrLocationLong = (hrLocationLat) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_LOCATION_LAT,\n  payload: { hrLocationLat },\n});\nexport const setHrLocationLat = (hrLocationLong) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_LOCATION_LONG,\n  payload: { hrLocationLong },\n});\nexport const setHrCity = (hrCity) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_CITY,\n  payload: { hrCity },\n});\n\nexport const setHrTerminationCodeError = (hrTerminationCodeError) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_CODE_ERROR,\n  payload: { hrTerminationCodeError },\n})\n\nexport const setHrTerminationTypeError = (hrTerminationTypeError) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_TYPE_ERROR,\n  payload: { hrTerminationTypeError },\n})\n\nexport const setHrDateError = (hrDateError) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_DATE_ERROR,\n  payload: { hrDateError },\n});\nexport const setHrTimeZoneError = (hrTimeZoneError) => ({\n  type: TaskManagerHrInfoActonTypes.SET_HR_TIME_ZONE_ERROR,\n  payload: { hrTimeZoneError },\n});","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport HrTerminationCodeSelect from \"../../../../components/formBlocks/hrInfo/HrTerminationCodeSelect\";\nimport {\n  setHrTerminationCode,\n  setHrTerminationCodeError,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\n\nconst HrTerminationCodeContainer = connect(\n  state => ({\n    value: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrTerminationCode\"]),\n    error: state.taskManagerHrInfo.get(\"hrTerminationCodeError\"),\n  }),\n  {\n    onValueChange: setHrTerminationCode,\n    setError: setHrTerminationCodeError\n  },\n)(HrTerminationCodeSelect);\n\nexport default HrTerminationCodeContainer;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport HrTerminationTypeSelect from \"../../../../components/formBlocks/hrInfo/HrTerminationTypeSelect\";\nimport {\n  setHrTerminationCodeError,\n  setHrTerminationType,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\n\nconst HrTerminationTypeContainer = connect(\n  state => ({\n    value: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrTerminationType\"]),\n    error: state.taskManagerHrInfo.get(\"hrTerminationTypeError\"),\n  }),\n  {\n    onValueChange: setHrTerminationType,\n    setError: setHrTerminationCodeError\n  },\n)(HrTerminationTypeSelect);\n\nexport default HrTerminationTypeContainer;","import {connect} from \"react-redux\";\nimport { setHrNotes } from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\nimport HrPayrollNotesInput from \"../../../../components/formBlocks/hrInfo/HrPayrollNotesInput\";\n\nconst HrPayrollNotesContainer = connect(\n  state => ({\n    value: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrNotes\"]),\n  }),\n  { onValueChange: setHrNotes },\n)(HrPayrollNotesInput);\n\nexport default HrPayrollNotesContainer;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n  setHrDateError, setHrSelectedDate,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\nimport HrDateInput from \"../../../../components/formBlocks/hrInfo/HrDateInput\";\n\nconst HrDateContainer = connect(\n  state => ({\n    value: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrSelectedDate\"]),\n    error: state.taskManagerHrInfo.get(\"hrDateError\")\n  }),\n  {\n    onValueChange: setHrSelectedDate,\n    setError: setHrDateError\n  },\n)(HrDateInput);\n\nexport default HrDateContainer;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HrDateTimezoneInfo from \"../../../../components/formBlocks/hrInfo/HrDateTimezoneInfo\";\n\nconst HrDateTimezoneInfoContainer = connect(\n  state => ({\n    timeZone: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrTimeZone\"]),\n    city: state.taskManagerHrInfo.get(\"hrCity\"),\n  }),\n  {},\n)(HrDateTimezoneInfo);\n\nexport default HrDateTimezoneInfoContainer;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setHrPayrollEpoch } from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\nimport HrPayrollDateTimeSelect from \"../../../../components/formBlocks/hrInfo/HrPayrollDateTimeSelect\";\n\nconst HrPayrollDateTimeContainer = connect(\n  state => ({\n    hrLocationLat: state.taskManagerHrInfo.get(\"hrLocationLat\"),\n    hrLocationLong: state.taskManagerHrInfo.get(\"hrLocationLong\"),\n    hrSelectedDate: state.taskManagerHrInfo.getIn([\"hrInformation\", \"hrSelectedDate\"]),\n  }),\n  {setHrPayrollEpoch},\n)(HrPayrollDateTimeSelect);\n\nexport default HrPayrollDateTimeContainer;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TimeZoneSearch from \"../../../../components/formBlocks/hrInfo/TimeZoneSearch\";\nimport {\n  setHrCity,\n  setHrLocationLat,\n  setHrLocationLong,\n  setHrTimeZone,\n  setHrTimeZoneId,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\n\nconst HrTimeZoneContainer = connect(\n  state => ({\n    hrTimeZoneError: state.taskManagerHrInfo.get(\"hrTimeZoneError\"),\n  }),\n  {\n    setHrCity, setHrTimeZone, setHrTimeZoneId, setHrLocationLat, setHrLocationLong,\n  },\n)(TimeZoneSearch);\n\nexport default HrTimeZoneContainer;","import { gql } from \"@apollo/client\";\n\nexport const ADD_OFFBOARDING_HR_INFORMATION = gql`\n  mutation CreateOffboardingTask($input: HrInformationInput) {\n    addOffboardingHrInformation(input: $input) {\n        id\n        oldTaskId\n        taskType\n        taskCreatedDateTime\n        taskCreatorUsername\n        taskCreatorFirstName\n        taskCreatorLastName\n        taskStatus\n        taskScheduleType\n        taskScheduleDateTime\n        taskScheduleTimezone\n        taskSendNotification\n        taskEndDate\n        taskApprovalStatus\n        taskApprovals {\n            id\n            approvalStage\n            approvalStatus\n            approvalDateTime\n            approvalUsername\n            approvalFirstName\n            approvalLastName\n            approvalEmail\n            approvalNote\n        }\n        offboardingTask {\n            id\n            offboardUsername\n            offboardFirstName\n            offboardLastName\n            offboardEmployeeType\n            transferUsername\n            transferFirstName\n            transferLastName\n            transferGdrive\n            transferGcalendar\n            transferAlias\n            offboardingTransferAlias {\n                id\n                aliasName\n            }\n            unassignLicense\n            offboardingUnassignLicenses {\n                id\n                licenseName\n            }\n            unassignDevice\n            offboardingUnassignDevices {\n                id\n                deviceManager\n                deviceName\n                deviceId\n                deviceSerialNumber\n                deviceModel\n            }\n            hrTerminationCode\n            hrTerminationType\n            payrollEndDateTime\n            payrollEndTimezone\n            payrollEpochTime\n            payrollNote\n        }\n     \n    }\n}`;\n","import { Box, Button, CircularProgress } from \"@material-ui/core\";\nimport React, { memo, useCallback, useContext, useState } from \"react\";\nimport { ADD_OFFBOARDING_HR_INFORMATION } from \"../../../../operations/mutations/addOffboardingHrInformation\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_TASK_APPROVAL } from \"../../../../operations/mutations/addTaskApproval\";\nimport { CREATE_LOG_ENTRY } from \"../../../../operations/mutations/createLogEntry\";\nimport { getValidationMessage, logOptions } from \"../../../../data/helper/helpers\";\nimport TaskTypes from \"../../../../data/constants/TaskTypes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isEmpty, isEmptyString, isPastDate } from \"../../../../data/helper/validation\";\nimport {\n  clearHrInformation,\n  setHrDateError,\n  setHrTerminationCodeError,\n  setHrTerminationTypeError,\n  setHrTimeZoneError,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\nimport handleError from \"../../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport { setSelectedTaskData } from \"../../../../data/redux/taskManager/taskManagerActions\";\nimport ApprovalStatuses from \"../../../../data/constants/ApprovalStatuses\";\nimport { AuthUserContext } from \"../../../../AuthUserContextProvider\";\nimport MissedInputModal from \"../../../../components/modals/MissedInputModal\";\nimport { isFullTimeEmployee } from \"../../../../data/constants/EmployeeTypes\";\n\nconst HrButtonSubmit = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { authUser } = useContext(AuthUserContext);\n  const hrInformation = useSelector(state => state?.taskManagerHrInfo?.get(\"hrInformation\")?.toJS());\n  const taskId = useSelector(state => state?.taskManager?.get(\"selectedTaskData\")?.id);\n  const offboardEmployeeType = useSelector(state => state?.taskManager?.get(\"selectedTaskData\")\n    ?.offboardingTask?.offboardEmployeeType);\n  const [open, setOpen] = useState();\n  const [modalMsg, setModalMessage] = useState();\n\n  const [addOffboardingHrInformation, { loading }] = useMutation(ADD_OFFBOARDING_HR_INFORMATION, {\n      onCompleted: (data) => {\n        const approvalStatus = ApprovalStatuses.CONFIRMED_HR_INFORMATION;\n        const approvalInfo = {\n          approvalStage: 0,\n          approvalStatus,\n        };\n        addApproval(approvalStatus, approvalInfo);\n        createLog(\n          createLogDescription(\n            \"confirmed HrInformation\",\n            `confirmedBy: ${authUser.profile.userName};`,\n          ),\n        );\n        dispatch(setSelectedTaskData(data?.addOffboardingHrInformation));\n        dispatch(clearHrInformation());\n      },\n      onError: (error) => handleError(error)(history),\n    },\n  );\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL);\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${taskId} ` + `${info}`\n    );\n  };\n\n  const addApproval = (approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: parseInt(taskId),\n        taskType: TaskTypes.OFFBOARDING,\n        // taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const handleSubmit = useCallback(() => {\n    const {\n      hrTerminationCode,\n      hrTerminationType,\n      hrSelectedDate,\n      hrPayrollEpoch,\n      hrTimeZoneId,\n      hrNotes,\n    } = hrInformation || {};\n\n    const errorMessage = getValidationMessage(\n      taskId,\n      [isEmpty],\n      \"id\",\n    ) || getValidationMessage(\n      hrTerminationCode,\n      [isEmpty],\n      \"HR Termination Code\",\n      (error) => dispatch(setHrTerminationCodeError(error)),\n    ) || getValidationMessage(\n      hrTerminationType,\n      [isEmpty],\n      \"HR Termination Type\",\n      (error) => dispatch(setHrTerminationTypeError(error)),\n    ) || (isFullTimeEmployee(offboardEmployeeType)\n      && (getValidationMessage(\n          hrSelectedDate,\n          [isEmpty, isPastDate],\n          \"HR Scheduled Date\",\n          (error) => dispatch(setHrDateError(error)),\n        ) ||\n        getValidationMessage(\n          hrTimeZoneId,\n          [isEmptyString],\n          \"HR Scheduled Time Zone\",\n          (error) => dispatch(setHrTimeZoneError(error)),\n        ) || getValidationMessage(\n          hrPayrollEpoch,\n          [isEmpty],\n          \"HR Payroll Epoch\",\n        )));\n\n    if (errorMessage) {\n      return handleOpen(errorMessage);\n    }\n    const input = {\n      taskId: parseInt(taskId),\n      hrTerminationCode: hrTerminationCode,\n      hrTerminationType: hrTerminationType,\n      payrollEndDateTime: hrSelectedDate,\n      payrollEpochTime: hrPayrollEpoch,\n      payrollEndTimezone: hrTimeZoneId,\n      payrollNote: hrNotes,\n    };\n\n    addOffboardingHrInformation({\n      variables: { input },\n    });\n  }, [taskId, hrInformation]);\n\n  const handleOpen = (msg) => {\n    setModalMessage(msg + \"!\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box pb={2} px={5}>\n      <Button color=\"secondary\" variant=\"contained\" size=\"small\" onClick={handleSubmit}>\n        {loading && <CircularProgress size={20} color=\"inherit\" style={{ marginRight: 4 }} />}\n        Submit\n      </Button>\n\n      <MissedInputModal\n        open={open}\n        handleClose={handleClose}\n        modalMsg={modalMsg}\n      />\n    </Box>\n  );\n};\n\nexport default memo(HrButtonSubmit);","import React, {memo, useEffect} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport HrTerminationCodeContainer from \"./HrTerminatonCodeContainer\";\nimport HrTerminationTypeContainer from \"./HrTerminatonTypeContainer\";\nimport HrPayrollNotesContainer from \"./HrPayrollNotesContainer\";\nimport HrDateContainer from \"./HrDateContainer\";\nimport HrDateTimezoneInfoContainer from \"./HrDateTimezoneInfoContainer\";\nimport HrPayrollDateTimeContainer from \"./HrPayrollDateTimeContainer\";\nimport HrTimeZoneContainer from \"./HrTimeZoneContainer\";\nimport HrButtonSubmit from \"./HrButtonSubmit\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  clearHrInformation,\n  setHrInformation,\n} from \"../../../../data/redux/taskManagerHrInfo/taskManagerHrInfoActions\";\n\nconst HrInformation = () => {\n  const dispatch = useDispatch();\n  const offboardingTask = useSelector(\n    (state) => state?.taskManager?.get(\"selectedTaskData\")?.offboardingTask\n  );\n  useEffect(() => {\n    dispatch(clearHrInformation());\n  }, []);\n\n  useEffect(() => {\n    if (offboardingTask) {\n      const {\n        hrTerminationCode,\n        hrTerminationType,\n        payrollEndDateTime,\n        payrollEpochTime,\n        payrollEndTimezone,\n        payrollNote,\n      } = offboardingTask || {};\n      dispatch(\n        setHrInformation({\n          hrTerminationCode,\n          hrTerminationType,\n          hrSelectedDate: payrollEndDateTime,\n          hrPayrollEpoch: payrollEpochTime,\n          hrTimeZoneId: payrollEndTimezone,\n          hrNotes: payrollNote,\n        })\n      );\n    }\n  }, [offboardingTask]);\n\n  return (\n    <Box mt={3}>\n      <HrTerminationCodeContainer />\n      <Box mt={2}>\n        <HrTerminationTypeContainer />\n      </Box>\n      <Box mt={2}>\n        <HrPayrollDateTimeContainer>\n          <HrDateContainer />\n\n          <HrTimeZoneContainer />\n        </HrPayrollDateTimeContainer>\n      </Box>\n      <Box mt={2}>\n        <HrDateTimezoneInfoContainer />\n      </Box>\n      <Box mt={2}>\n        <HrPayrollNotesContainer />\n      </Box>\n      <HrButtonSubmit />\n    </Box>\n  );\n};\n\nexport default memo(HrInformation);\n","import React, {memo, useContext} from \"react\";\nimport {Box, Divider, Typography} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskSection from \"./SelectedTasks/components/TaskSection\";\nimport {\n  hrPayrollRows,\n  offboardTaskRows,\n} from \"./SelectedTasks/SelectedOffboardTaskData\";\nimport {connect} from \"react-redux\";\nimport OffboardingTaskActionSection from \"./SelectedTasks/SelectedOffboardActionSection\";\nimport TaskTimeline from \"./SelectedTasks/components/TaskTimeline\";\nimport HrInformation from \"./SelectedTasks/hrInfo/HrInformation\";\nimport {isFullTimeEmployee} from \"../../data/constants/EmployeeTypes\";\nimport InfoBlock from \"../../components/InfoBlock\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst checkIsDisabledToApprove = (offboardingTask) => {\n  const {\n    offboardEmployeeType,\n    hrTerminationCode,\n    hrTerminationType,\n    payrollEpochTime,\n    payrollEndTimezone,\n    payrollEndDateTime,\n  } = offboardingTask || {};\n\n  if (isFullTimeEmployee(offboardEmployeeType))\n    return !(\n      hrTerminationCode &&\n      hrTerminationType &&\n      payrollEpochTime &&\n      payrollEndTimezone &&\n      payrollEndDateTime\n    );\n};\nconst checkHrInformationExists = (offboardingTask) =>\n  !!(offboardingTask?.hrTerminationCode && offboardingTask?.hrTerminationType);\n\nconst SelectedOffboardTaskContent = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const {\n    permOffboardingApproveTasks,\n    permOffboardingCancelTasks,\n    permOffboardingRejectTasks,\n    permTaskManagerViewHrInfo,\n  } = useContext(AuthUserContext);\n  const taskActionPermissions =\n    (permOffboardingApproveTasks ||\n      permOffboardingRejectTasks ||\n      permOffboardingCancelTasks) &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.READY);\n\n  const isApproveDisabled = checkIsDisabledToApprove(\n    selectedTaskData?.offboardingTask\n  );\n  const isHrInformationExist = checkHrInformationExists(\n    selectedTaskData?.offboardingTask\n  );\n  return (\n    <>\n      <TaskSection\n        title=\"Offboarding Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={offboardTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n\n      {permTaskManagerViewHrInfo &&\n        (isHrInformationExist ? (\n          <TaskSection\n            title=\"HR/Payroll Information\"\n            tableRows={hrPayrollRows(selectedTaskData)}\n          >\n            <Divider />\n          </TaskSection>\n        ) : (\n          <TaskSection title=\"HR/Payroll Information\">\n            <Box my={2} mx={4}>\n              {isApproveDisabled ? (\n                <Alert severity=\"warning\" variant=\"outlined\">\n                  <Typography component={\"div\"} variant=\"p\">\n                    HR/Payroll Information is required for approval\n                  </Typography>\n                </Alert>\n              ) : (\n                <InfoBlock small>\n                  <Typography component={\"div\"} variant=\"p\">\n                    HR/Payroll Information is optional\n                  </Typography>\n                </InfoBlock>\n              )}\n            </Box>\n\n            <HrInformation />\n            <Divider />\n          </TaskSection>\n        ))}\n      {taskActionPermissions && (\n        <OffboardingTaskActionSection\n          approveDisabled={isApproveDisabled}\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n        />\n      )}\n\n      <TaskTimeline taskData={selectedTaskData} isOffboarding />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedOffboardTaskContent));\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport TaskSection from \"./components/TaskSection\";\nimport {Box, Container, Divider, Typography} from \"@material-ui/core\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport {useHistory} from \"react-router-dom\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {GET_TASK} from \"../../../operations/queries/getTask\";\nimport handleError from \"../../../data/handleError\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {connect} from \"react-redux\";\nimport {\n  CancelButton,\n  SubmitApprovalButton,\n  TaskApproveButton,\n  TaskRejectButton,\n} from \"./components/TaskButtons\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport MissedInputModal from \"../../../components/modals/MissedInputModal\";\nimport ActionSection from \"./components/ActionSection\";\nimport {\n  getOnboardingFieldValue,\n  getOnboardingFullName,\n  logOptions,\n} from \"../../../data/helper/helpers\";\n\nconst SelectedOnboardActionSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const history = useHistory();\n  const {\n    authUser,\n    permOnboardingApproveTasks,\n    permOnboardingCancelTasks,\n    permOnboardingRejectTasks,\n  } = useContext(AuthUserContext);\n  const [isApproved, setIsApproved] = useState(false);\n  const [isRejected, setIsRejected] = useState(false);\n  const [isRejectedError, setIsRejectedError] = useState(false);\n  const [rejectedNotes, setRejectedNotes] = useState(\"\");\n  const [cancelledNotes, setCancelledNotes] = useState(\"\");\n  const [isCancelledError, setIsCancelledError] = useState(false);\n  const [modalMsg, setModalMsg] = useState(\"\");\n\n  const [executeTaskSearch] = useLazyQuery(GET_TASK, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      const taskStatus = data.get_task?.taskStatus;\n      if (\n        taskStatus === TaskStatuses.READY ||\n        taskStatus === TaskStatuses.PENDING_USER_TASKS\n      ) {\n        handleCancel();\n      } else if (taskStatus === TaskStatuses.RUNNING) {\n        setModalMsg(\"Task is currently in progress. It cannot be canceled.\");\n      } else {\n        setModalMsg(\"Cancel Error: Please refresh and try again.\");\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${getOnboardingFullName(selectedTaskData)} (${getOnboardingFieldValue(\n        selectedTaskData,\n        \"Username\"\n      )})]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: parseInt(selectedTaskData.id),\n        taskType: TaskTypes.ONBOARDING,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const handleCloseAfterSubmit = () => {\n    handleClose();\n    onSubmitted();\n  };\n\n  const handleSubmit = () => {\n    if (isRejected && rejectedNotes?.length === 0) {\n      setIsRejectedError(true);\n    } else if (isRejected && rejectedNotes?.length > 0) {\n      setIsRejectedError(false);\n      const approvalStatus = ApprovalStatuses.REJECTED;\n      const approvalInfo = {\n        approvalStage: 0,\n        approvalStatus,\n        approvalNote: rejectedNotes,\n      };\n      addApproval(TaskStatuses.CANCELLED, approvalStatus, approvalInfo);\n      createLog(\n        createLogDescription(\n          \"Rejected\",\n          `rejectedBy: ${authUser.profile.userName}; rejectMsg: ${rejectedNotes}`\n        )\n      );\n      handleCloseAfterSubmit();\n    }\n    if (isApproved) {\n      const approvalStatus = ApprovalStatuses.APPROVED;\n      const approvalInfo = {\n        approvalStage: 1,\n        approvalStatus,\n      };\n        addApproval(\n          selectedTaskData?.onboardingTask?.onboardEmployeeType === \"Full Time\"\n            ? TaskStatuses.READY: TaskStatuses.PENDING_USER_TASKS,\n          approvalStatus,\n          approvalInfo\n        );\n      createLog(\n        createLogDescription(\n          \"Approved\",\n          `approvedBy: ${authUser.profile.userName};`\n        )\n      );\n      handleCloseAfterSubmit();\n    }\n  };\n\n  const handleCancel = () => {\n    const approvalStatus = ApprovalStatuses.CANCELLED;\n    const approvalInfo = {\n      approvalStage: 0,\n      approvalNote: cancelledNotes,\n      approvalStatus,\n    };\n    addApproval(TaskStatuses.CANCELLED, approvalStatus, approvalInfo);\n    createLog(\n      createLogDescription(\n        \"Cancelled\",\n        `cancelledBy: ${authUser.profile.userName}; cancelledMsg: ${cancelledNotes}`\n      )\n    );\n    handleCloseAfterSubmit();\n  };\n\n  const handleCancelCheck = () => {\n    if (cancelledNotes?.trim().length === 0) {\n      setIsCancelledError(true);\n    } else {\n      setIsCancelledError(false);\n      //---check task status\n      executeTaskSearch({variables: {search: selectedTaskData?.id}});\n    }\n  };\n\n  const approveBtnOnClick = () => {\n    setIsApproved(true);\n    setIsRejected(false);\n  };\n\n  const rejectBtnOnClick = () => {\n    setIsApproved(false);\n    setIsRejected(true);\n  };\n\n  const handleModalClose = () => {\n    setModalMsg(\"\");\n  };\n\n  useEffect(() => {\n    scrollDown();\n  }, [isRejected, isApproved]);\n\n  const scrollDown = () => {\n    const taskWindow = document.getElementById(\"selected-task-window\");\n    taskWindow.scroll(0, taskWindow.scrollHeight);\n  };\n\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        {selectedTaskData?.taskStatus === TaskStatuses.PENDING && (\n          <div>\n            <Box m={2}>\n              <Box mt={1} mb={2}>\n                <Typography component={\"div\"} variant=\"subtitle1\">\n                  <strong>Pending Approval</strong>\n                  <br />\n                  If you approve and submit, the onboarding will proceed. If you\n                  reject, a rejection note is required before you submit.\n                </Typography>\n              </Box>\n              {permOnboardingApproveTasks && (\n                <TaskApproveButton\n                  isApproved={isApproved}\n                  handleClick={approveBtnOnClick}\n                />\n              )}{\" \"}\n              {permOnboardingRejectTasks && (\n                <TaskRejectButton\n                  isRejected={isRejected}\n                  handleClick={rejectBtnOnClick}\n                />\n              )}\n            </Box>\n            {isRejected && (\n              <Box m={2}>\n                <NotesTextField\n                  id=\"rejection-notes\"\n                  placeholder=\"Rejection Reason (required)\"\n                  error={isRejectedError}\n                  value={rejectedNotes}\n                  onValueChange={setRejectedNotes}\n                />\n              </Box>\n            )}\n            {(isApproved || isRejected) && (\n              <SubmitApprovalButton handleSubmit={handleSubmit} />\n            )}\n          </div>\n        )}\n\n        {permOnboardingCancelTasks &&\n          (selectedTaskData?.taskStatus === TaskStatuses.READY ||\n            selectedTaskData?.taskStatus ===\n              TaskStatuses.PENDING_USER_TASKS) && (\n            <ActionSection\n              text={\n                <>\n                  Onboarding task is scheduled to run. <br />\n                  You can cancel the task; a cancellation note is required\n                  before you submit.\n                </>\n              }\n            >\n              <NotesTextField\n                id=\"cancellation-notes\"\n                placeholder=\"Cancellation Reason (required)\"\n                error={isCancelledError}\n                value={cancelledNotes}\n                onValueChange={setCancelledNotes}\n              />\n              <CancelButton handleClick={handleCancelCheck} />\n            </ActionSection>\n          )}\n      </Container>\n      {modalMsg && (\n        <MissedInputModal\n          open={!!modalMsg}\n          handleClose={handleModalClose}\n          modalMsg={modalMsg}\n        />\n      )}\n\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedOnboardActionSection));\n","import React, {memo, useContext} from \"react\";\nimport {Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport TaskSection from \"./SelectedTasks/components/TaskSection\";\nimport {onboardTaskRows} from \"./SelectedTasks/SelectedOnboardTaskData\";\nimport OnboardActionSection from \"./SelectedTasks/SelectedOnboardActionSection\";\nimport {connect} from \"react-redux\";\nimport TaskTimeline from \"./SelectedTasks/components/TaskTimeline\";\n\nconst SelectedOnboardTaskContent = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose\n}) => {\n  const {\n    permOnboardingApproveTasks,\n    permOnboardingCancelTasks,\n    permOnboardingRejectTasks,\n  } = useContext(AuthUserContext);\n\n  const taskActionPermissions =\n    (permOnboardingApproveTasks ||\n      permOnboardingRejectTasks ||\n      permOnboardingCancelTasks) &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.PENDING_USER_TASKS ||\n      selectedTaskData?.taskStatus === TaskStatuses.READY);\n\n  return (\n    <>\n      <TaskSection\n        title=\"Onboarding Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={onboardTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n\n      {taskActionPermissions && (\n        <OnboardActionSection\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n        />\n      )}\n\n      <TaskTimeline taskData={selectedTaskData} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    selectedTaskData: state.taskManager.get(\"selectedTaskData\"),\n  }),\n  {}\n)(memo(SelectedOnboardTaskContent));\n","import {getFullDateString} from \"../../../data/helper/DateTimezoneHelpers\";\n\nexport const requisitionTaskRows = (task) => {\n  const {id, oldTaskId, requisitionTask} = task || {};\n  const {\n    reqHiringManagerFirstName, reqHiringManagerLastName, reqHiringManagerEmail,\n    isBackfill, reqBackfillFirstName, reqBackfillLastName, reqBackfillUsername, reqCountryDesc,\n    reqCompanyCode, reqParentMgmtCC, reqManagementCC, reqFunctionalAreaDesc,\n    reqBonusAmount, reqBonusType, reqCommissionAmount, reqCommissionCurrency, comments,\n  } = requisitionTask || {};\n  return [\n    {id: \"taskId\", name: \"Task ID\", value: id},\n    {id: \"oldTaskId\", name: \"Old Task ID\", value: oldTaskId, hidden: !oldTaskId},\n    {id: \"requisitionTask\", name: \"Requisition Type\", value: requisitionTask?.reqType},\n    {id: \"plannedStartDate\", name: \"Planned Start Date\", value: getFullDateString(requisitionTask?.reqStartDate)},\n    {\n      id: \"hiringManager\",\n      name: \"Hiring Manager\",\n      value: `${reqHiringManagerFirstName || \"\"} ${reqHiringManagerLastName || \"\"} | ${reqHiringManagerEmail}`,\n    },\n    {\n      id: \"businessUnit\",\n      name: \"Business Unit\",\n      value: requisitionTask?.reqBusinessUnit,\n    },\n    {\n      id: \"department\",\n      name: \"Department\",\n      value: requisitionTask?.reqDepartment,\n    },\n    {\n      id: \"location\",\n      name: \"Location\",\n      value: `${requisitionTask?.reqLocationDescription} (${requisitionTask?.reqLocation})`,\n    },\n    {\n      id: \"isBackfill\",\n      name: \"Backfill?\",\n      value: isBackfill ? `yes; ${reqBackfillFirstName} ${reqBackfillLastName} | ${reqBackfillUsername}` : \"no\",\n    },\n    {\n      id: \"costCenter\",\n      name: \"Cost Center\",\n      value: `${reqCompanyCode}-${reqParentMgmtCC}-${reqManagementCC}-${reqFunctionalAreaDesc}-${reqCountryDesc}-00`,\n    },\n    {\n      id: \"jobCode\",\n      name: \"Job Code\",\n      value: `${requisitionTask?.reqJobCode} | ${requisitionTask?.reqJobTitle}`,\n    },\n    {\n      id: \"requisitionSpend\",\n      name: \"Requisition Spend\",\n      value: `${requisitionTask?.reqSpendCurrency} ${requisitionTask?.reqSpendAmount} ${requisitionTask?.reqSpendPeriod}`,\n    },\n    {\n      id: \"bonus\",\n      name: \"Bonus\",\n      value: reqBonusAmount ? `${reqBonusAmount} ${reqBonusType}` : \"not entered\",\n    },\n    {\n      id: \"commission\",\n      name: \"Commission\",\n      value: reqCommissionAmount ? `${reqCommissionAmount} ${reqCommissionCurrency}` : \"not entered\",\n    },\n    {\n      id: \"contractLength\",\n      name: \"Contract Length\",\n      value: `${requisitionTask?.reqContractMonths} months at ${requisitionTask?.reqContractHoursPerWeek} hours per week`,\n    },\n    {\n      id: \"comments\",\n      name: \"Comments\",\n      value: comments?.length > 0 ? `${comments}` : \"not entered\",\n    },\n  ];\n};","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport TaskSection from \"./components/TaskSection\";\nimport {Container, Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport handleError from \"../../../data/handleError\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n  SubmitApprovalButton,\n  TaskApproveButton,\n  TaskCancelButton,\n  TaskRejectButton,\n} from \"./components/TaskButtons\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport ActionSection from \"./components/ActionSection\";\nimport {logOptions} from \"../../../data/helper/helpers\";\n\nconst SelectedRequisitionActionsSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n  selfCreatedTask,\n}) => {\n  const history = useHistory();\n  const {authUser, permRequisitionApproveTasks, permRequisitionRejectTasks} =\n    useContext(AuthUserContext);\n\n  const permRequisitionApproveTasksUpd =\n    permRequisitionApproveTasks &&\n    selectedTaskData?.taskStatus !== TaskStatuses.COMPLETE;\n\n  const {APPROVED, CANCELLED, REJECTED} = ApprovalStatuses;\n\n  const showCancelButton =\n    !selectedTaskData?.requisitionTask?.reqFulfilled &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.COMPLETE);\n  const showApproveButton =\n    selectedTaskData.taskStatus === TaskStatuses.PENDING;\n  const showRejectButton =\n    selectedTaskData.taskStatus !== TaskStatuses.COMPLETE;\n\n  const [status, setStatus] = useState(null);\n  const [isRejectedError, setIsRejectedError] = useState(false);\n  const [rejectedNotes, setRejectedNotes] = useState(\"\");\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleCloseAfterSubmit = () => {\n    handleClose();\n    onSubmitted();\n  };\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${selectedTaskData.requisitionTask.reqType}, ${selectedTaskData.requisitionTask.reqBusinessUnit}, ${selectedTaskData.requisitionTask.reqDepartment}]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (id, status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: id,\n        taskType: TaskTypes.REQUISITION,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const checkStatus = (statuses) => {\n    return statuses.includes(status);\n  };\n\n  const btnClick = (status) => {\n    setStatus(status);\n  };\n\n  const handleSubmit = () => {\n    if (rejectedNotes?.length > 0) {\n      setIsRejectedError(false);\n    } else {\n      if (checkStatus([APPROVED])) {\n        setIsRejectedError(false);\n      } else {\n        return setIsRejectedError(true);\n      }\n    }\n    const id = parseInt(selectedTaskData.id);\n    let logOperation = null;\n    let logInfo = null;\n\n    switch (status) {\n      case REJECTED:\n      case CANCELLED:\n        const isRejected = checkStatus([REJECTED]);\n        const approvalStatus = isRejected ? REJECTED : CANCELLED;\n        logOperation = isRejected ? \"Rejected\" : \"Cancelled\";\n        const logInfoRejected = `rejectedBy: ${authUser.profile.userName}; rejectMsg: ${rejectedNotes}`;\n        const logInfoCancelled = `rejectedBy: ${authUser.profile.userName}; rejectMsg: ${rejectedNotes}`;\n        isRejected ? (logInfo = logInfoRejected) : (logInfo = logInfoCancelled);\n        addApproval(id, TaskStatuses.CANCELLED, approvalStatus, {\n          approvalStage: 0,\n          approvalStatus,\n          approvalNote: rejectedNotes,\n        });\n        break;\n      case APPROVED:\n        logOperation = \"Approved\";\n        logInfo = `approvedBy: ${authUser.profile.userName};`;\n        addApproval(id, TaskStatuses.COMPLETE, APPROVED, {\n          approvalStage: 1,\n          approvalStatus: TaskStatuses.COMPLETE,\n        });\n        break;\n      default:\n        setIsRejectedError(true);\n        break;\n    }\n    createLog(createLogDescription(logOperation, logInfo));\n    handleCloseAfterSubmit();\n  };\n\n  useEffect(() => {\n    scrollDown();\n  }, [status]);\n\n  const scrollDown = () => {\n    const taskWindow = document.getElementById(\"selected-task-window\");\n    taskWindow.scroll(0, taskWindow.scrollHeight);\n  };\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        <div>\n          <ActionSection\n            text={\n              <>\n                {permRequisitionApproveTasksUpd ? (\n                  <>\n                    <strong>Pending Financial Approval</strong>\n                    <br />\n                    If you approve and submit, the task will be complete. If you\n                    reject, a rejection note is required before you submit .\n                  </>\n                ) : (\n                  <>\n                    If you cancel, a cancellation note is required before you\n                    submit .\n                  </>\n                )}\n              </>\n            }\n          >\n            {permRequisitionApproveTasksUpd && showApproveButton && (\n              <TaskApproveButton\n                isApproved={checkStatus([APPROVED])}\n                handleClick={() => {\n                  btnClick(APPROVED);\n                }}\n              />\n            )}\n            {permRequisitionRejectTasks && showRejectButton && (\n              <TaskRejectButton\n                isRejected={checkStatus([REJECTED])}\n                handleClick={() => {\n                  btnClick(REJECTED);\n                }}\n              />\n            )}\n            {selfCreatedTask && showCancelButton && (\n              <TaskCancelButton\n                isCancelled={checkStatus([CANCELLED])}\n                handleClick={() => {\n                  btnClick(CANCELLED);\n                }}\n              />\n            )}\n          </ActionSection>\n\n          {checkStatus([REJECTED, CANCELLED]) && (\n            <ActionSection>\n              <NotesTextField\n                id=\"rejection-notes\"\n                placeholder={`${\n                  checkStatus([REJECTED]) ? \"Rejection\" : \"Cancellation\"\n                } Reason (required)`}\n                error={isRejectedError}\n                value={rejectedNotes}\n                onValueChange={setRejectedNotes}\n              />\n            </ActionSection>\n          )}\n          {checkStatus([REJECTED, CANCELLED, APPROVED]) && (\n            <SubmitApprovalButton handleSubmit={handleSubmit} />\n          )}\n        </div>\n      </Container>\n\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedRequisitionActionsSection));\n","import React, {memo, useContext} from \"react\";\nimport {Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport {requisitionTaskRows} from \"./SelectedTasks/SelectedRequisitionTaskData\";\nimport TaskSection from \"./SelectedTasks/components/TaskSection\";\nimport RequisitionActionsSection from \"./SelectedTasks/SelectedRequisitionActionsSection\";\nimport {connect} from \"react-redux\";\nimport TaskTimeline from \"./SelectedTasks/components/TaskTimeline\";\n\nconst SelectedRequisitionTaskContent = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const {authUser, permRequisitionApproveTasks, permRequisitionRejectTasks} =\n    useContext(AuthUserContext);\n\n  const checkSelfCreatedTask = (data, user) => {\n    const taskUsername = data?.taskCreatorUsername;\n    const username = user?.profile?.userName;\n    if (!username || !taskUsername) return false;\n    return taskUsername === username;\n  };\n\n  const taskActionPermissions =\n    (permRequisitionApproveTasks || permRequisitionRejectTasks) &&\n    selectedTaskData?.taskStatus === TaskStatuses.PENDING;\n  const selfTaskActionPermissions =\n    checkSelfCreatedTask(selectedTaskData, authUser) &&\n    (selectedTaskData?.taskStatus === TaskStatuses.PENDING ||\n      selectedTaskData?.taskStatus === TaskStatuses.COMPLETE);\n\n  return (\n    <>\n      <TaskSection\n        title=\"Requisition Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={requisitionTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n      {(taskActionPermissions || selfTaskActionPermissions) && (\n        <RequisitionActionsSection\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n          selfCreatedTask={selfTaskActionPermissions}\n        />\n      )}\n      <TaskTimeline taskData={selectedTaskData} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedRequisitionTaskContent));\n","import React, { forwardRef, memo } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\n\nconst BadgeIcon = forwardRef(({ icon, image, imageName, ...props }, ref) => {\n  return (\n    <IconButton ref={ref} style={{ padding: \".25rem\" }} {...props}>\n      {icon || <img src={image} width={\"24px\"} height={\"24px\"} alt={imageName} />}\n    </IconButton>\n  );\n});\n\nexport default memo(BadgeIcon);\n","import React from \"react\";\nimport BadgeIcon from \"../../../components/badges/BadgeIcon\";\n\nexport const badgeRequestTaskRows = (task) => {\n  const {id, badgeRequestTask} = task || {};\n  const {badgeRequestName, badgeRequestType, badgeRequestIconImg} =\n    badgeRequestTask || {};\n  return [\n    {id: \"taskId\", name: \"Task ID\", value: id},\n    {\n      id: \"badgeRequestName\",\n      name: \"Badge Name\",\n      value: badgeRequestName,\n    },\n    {\n      id: \"badgeRequestType\",\n      name: \"Badge Category\",\n      value: badgeRequestType,\n    },\n    {\n      id: \"badgeRequestIconImg\",\n      name: \"Badge Icon Image\",\n      value: (\n        <BadgeIcon image={badgeRequestIconImg} imageName={badgeRequestName} />\n      ),\n    },\n  ];\n};\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport TaskSection from \"./components/TaskSection\";\nimport {Container, Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {ADD_TASK_APPROVAL} from \"../../../operations/mutations/addTaskApproval\";\nimport handleError from \"../../../data/handleError\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport TaskTypes from \"../../../data/constants/TaskTypes\";\nimport TaskStatuses from \"../../../data/constants/TaskStatuses\";\nimport ApprovalStatuses from \"../../../data/constants/ApprovalStatuses\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {\n  SubmitApprovalButton,\n  TaskApproveButton,\n  TaskRejectButton,\n} from \"./components/TaskButtons\";\nimport {NotesTextField} from \"../../../components/inputs/NotesTextField\";\nimport ActionSection from \"./components/ActionSection\";\nimport {logOptions} from \"../../../data/helper/helpers\";\n\nconst SelectedBadgeRequestActionsSection = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const history = useHistory();\n  const {authUser, permRequisitionApproveTasks, permRequisitionRejectTasks} =\n    useContext(AuthUserContext);\n\n  const [isApproved, setIsApproved] = useState(false);\n  const [isRejected, setIsRejected] = useState(false);\n  const [isRejectedError, setIsRejectedError] = useState(false);\n  const [rejectedNotes, setRejectedNotes] = useState(\"\");\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleCloseAfterSubmit = () => {\n    handleClose();\n    onSubmitted();\n  };\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry(logOptions(description));\n  };\n\n  const createLogDescription = (operation, info) => {\n    return (\n      `Task ${operation} >> Task ID: ${selectedTaskData.id} ` +\n      `[${selectedTaskData.badgeRequestTask.badgeRequestName}, ${selectedTaskData.badgeRequestTask.badgeRequestType}]; ` +\n      `${info}`\n    );\n  };\n\n  const addApproval = (id, status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: id,\n        taskType: TaskTypes.BADGE_REQUEST,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const approveBtnOnClick = () => {\n    setIsApproved(true);\n    setIsRejected(false);\n  };\n\n  const rejectBtnOnClick = () => {\n    setIsApproved(false);\n    setIsRejected(true);\n  };\n\n  const handleSubmit = () => {\n    if (isRejected && rejectedNotes?.length === 0) {\n      setIsRejectedError(true);\n    } else if (isRejected && rejectedNotes?.length > 0) {\n      setIsRejectedError(false);\n      const id = parseInt(selectedTaskData.id);\n      const approvalStatus = ApprovalStatuses.REJECTED;\n      const approvalInfo = {\n        approvalStage: 0,\n        approvalStatus,\n        approvalNote: rejectedNotes,\n      };\n      addApproval(id, TaskStatuses.CANCELLED, approvalStatus, approvalInfo);\n      createLog(\n        createLogDescription(\n          \"Rejected\",\n          `rejectedBy: ${authUser.profile.userName}; rejectMsg: ${rejectedNotes}`\n        )\n      );\n      handleCloseAfterSubmit();\n    }\n    if (isApproved) {\n      if (selectedTaskData.taskStatus === TaskStatuses.PENDING) {\n        const id = parseInt(selectedTaskData.id);\n        const approvalStatus = ApprovalStatuses.APPROVED;\n        const approvalInfo = {\n          approvalStage: 1,\n          approvalStatus,\n        };\n        addApproval(id, TaskStatuses.COMPLETE, approvalStatus, approvalInfo);\n        createLog(\n          createLogDescription(\n            \"Approved\",\n            `approvedBy: ${authUser.profile.userName};`\n          )\n        );\n        handleCloseAfterSubmit();\n      }\n    }\n  };\n\n  useEffect(() => {\n    scrollDown();\n  }, [isRejected, isApproved]);\n\n  const scrollDown = () => {\n    const taskWindow = document.getElementById(\"selected-task-window\");\n    taskWindow.scroll(0, taskWindow.scrollHeight);\n  };\n\n  return (\n    <TaskSection title=\"Task Actions\">\n      <Container>\n        <div>\n          <ActionSection\n            text={\n              <>\n                <strong>Pending Approval</strong>\n                <br />\n                If you approve and submit, the task will be complete. If you\n                reject, a rejection note is required before you submit .\n              </>\n            }\n          >\n            {permRequisitionApproveTasks && (\n              <TaskApproveButton\n                isApproved={isApproved}\n                handleClick={approveBtnOnClick}\n              />\n            )}\n            {permRequisitionRejectTasks && (\n              <TaskRejectButton\n                isRejected={isRejected}\n                handleClick={rejectBtnOnClick}\n              />\n            )}\n          </ActionSection>\n\n          {isRejected && (\n            <ActionSection>\n              <NotesTextField\n                id=\"rejection-notes\"\n                placeholder=\"Rejection Reason (required)\"\n                error={isRejectedError}\n                value={rejectedNotes}\n                onValueChange={setRejectedNotes}\n              />\n            </ActionSection>\n          )}\n          {(isApproved || isRejected) && (\n            <SubmitApprovalButton handleSubmit={handleSubmit} />\n          )}\n        </div>\n      </Container>\n\n      <Divider />\n    </TaskSection>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedBadgeRequestActionsSection));\n","import React, {memo, useContext} from \"react\";\nimport {Divider} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport TaskSection from \"./SelectedTasks/components/TaskSection\";\nimport {connect} from \"react-redux\";\nimport TaskTimeline from \"./SelectedTasks/components/TaskTimeline\";\nimport {badgeRequestTaskRows} from \"./SelectedTasks/SelectedBadgeRequestTaskData\";\nimport SelectedBadgeRequestActionsSection from \"./SelectedTasks/SelectedBadgeRequestActionsSection\";\n\nconst SelectedBadgeRequestTaskContent = ({\n  onSubmitted,\n  selectedTaskData,\n  handleClose,\n}) => {\n  const {permBadgeRequestApproveTasks, permBadgeRequestRejectTasks} =\n    useContext(AuthUserContext);\n\n  const taskActionPermissions =\n    (permBadgeRequestApproveTasks || permBadgeRequestRejectTasks) &&\n    selectedTaskData?.taskStatus === TaskStatuses.PENDING;\n\n  return (\n    <>\n      <TaskSection\n        title=\"Badge Request Task Details\"\n        statusBlock={\n          <TaskStatusBlock\n            taskStatus={selectedTaskData?.taskStatus}\n            id={selectedTaskData?.id}\n          />\n        }\n        tableRows={badgeRequestTaskRows(selectedTaskData)}\n      >\n        <Divider />\n      </TaskSection>\n      {taskActionPermissions && (\n        <SelectedBadgeRequestActionsSection\n          onSubmitted={onSubmitted}\n          handleClose={handleClose}\n        />\n      )}\n      <TaskTimeline taskData={selectedTaskData} />\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({selectedTaskData: state.taskManager.get(\"selectedTaskData\")}),\n  {}\n)(memo(SelectedBadgeRequestTaskContent));\n","import React, {memo, useEffect} from \"react\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport {Drawer, makeStyles} from \"@material-ui/core\";\nimport SelectedOffboardTaskContent from \"./SelectedOffboardTaskContent\";\nimport SelectedOnboardTaskContent from \"./SelectedOnboardTaskContent\";\nimport SelectedRequisitionTaskContent from \"./SelectedRequisitionTaskContent\";\nimport {\n  setIsDrawerOpen,\n  setSelectedTaskData,\n  setViewTaskTypeDetails,\n} from \"../../data/redux/taskManager/taskManagerActions\";\nimport {connect} from \"react-redux\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_TASK} from \"../../operations/queries/getTask\";\nimport handleError from \"../../data/handleError\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport SelectedTaskWrapper from \"./SelectedTasks/components/SelectedTaskWrapper\";\nimport SelectedBadgeRequestTaskContent from \"./SelectedBadgeRequestTaskContent\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst SelectedTaskContent = ({\n  setIsSubmitted,\n  setSelectedTaskData,\n  isDrawerOpen,\n  setIsDrawerOpen,\n  viewTaskTypeDetails,\n  setViewTaskTypeDetails,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {taskId, hash} =\n    useRouteMatch(FrontendRoutes.TASK_MANAGER_VIEW_TASK())?.params || {};\n\n  const [executeSearch, {data, loading}] = useLazyQuery(GET_TASK, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setSelectedTaskData(data.get_task);\n      setViewTaskTypeDetails(data.get_task?.taskType);\n    },\n    onError: (error) => {\n      setIsDrawerOpen(false);\n      history.push(FrontendRoutes.TASK_MANAGER_VIEW(hash));\n      handleError(error)(history);\n    },\n  });\n\n  useEffect(() => {\n    if (taskId) {\n      if (!isNaN(parseInt(taskId))) {\n        setIsDrawerOpen(true);\n        executeSearch({variables: {search: taskId}});\n      } else {\n        history.push(FrontendRoutes.TASK_MANAGER_VIEW(hash));\n      }\n    }\n  }, [taskId]);\n\n  useEffect(() => {\n    // on second opening the same task\n    if (taskId && !isNaN(parseInt(taskId)) && data?.get_task?.id === taskId) {\n      setSelectedTaskData(data.get_task);\n    }\n  }, [taskId, data]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event?.type === \"keydown\" &&\n      (event?.key === \"Tab\" || event?.key === \"Shift\")\n    ) {\n      return;\n    }\n    if (!open) {\n      history.push(FrontendRoutes.TASK_MANAGER_VIEW(hash));\n      setSelectedTaskData();\n    }\n    setIsDrawerOpen(open);\n  };\n\n  const onSubmitted = () => {\n    setIsSubmitted(true);\n    resetSubmitted();\n  };\n\n  const resetSubmitted = () => {\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 5000);\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      open={isDrawerOpen}\n      onClose={toggleDrawer(false)}\n      classes={{paper: classes.paper}}\n    >\n      <SelectedTaskWrapper\n        id={taskId}\n        handleClose={toggleDrawer(false)}\n        isLoading={loading}\n      >\n        {viewTaskTypeDetails === TaskTypes.OFFBOARDING ? (\n          <SelectedOffboardTaskContent\n            onSubmitted={onSubmitted}\n            handleClose={toggleDrawer(false)}\n          />\n        ) : viewTaskTypeDetails === TaskTypes.ONBOARDING ? (\n          <SelectedOnboardTaskContent\n            onSubmitted={onSubmitted}\n            handleClose={toggleDrawer(false)}\n          />\n        ) : viewTaskTypeDetails === TaskTypes.REQUISITION ? (\n          <SelectedRequisitionTaskContent\n            onSubmitted={onSubmitted}\n            handleClose={toggleDrawer(false)}\n          />\n        ) : viewTaskTypeDetails === TaskTypes.BADGE_REQUEST ? (\n          <SelectedBadgeRequestTaskContent\n            onSubmitted={onSubmitted}\n            handleClose={toggleDrawer(false)}\n          />\n        ) : (\n          <></>\n        )}\n      </SelectedTaskWrapper>\n      <div />\n    </Drawer>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    isDrawerOpen: state.taskManager.get(\"isDrawerOpen\"),\n    viewTaskTypeDetails: state.taskManager.get(\"viewTaskTypeDetails\"),\n  }),\n  {setIsDrawerOpen, setSelectedTaskData, setViewTaskTypeDetails}\n)(memo(SelectedTaskContent));\n","import {Box, makeStyles} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport React, {memo} from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst TaskAlert = ({isSubmitted}) => {\n  const classes = useStyles();\n\n  return (\n    <Box>\n      {isSubmitted && (\n        <Box className={classes.alert} my={1}>\n          <Alert severity=\"success\">Task Updated</Alert>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(TaskAlert);","import {gql} from \"@apollo/client\";\n\nexport const GET_ALL_ONBOARDING_TASKS = gql`\n  query GetAllOnboardingTasks($filters: FiltersInput) {\n    get_all_onboarding_tasks(filters: $filters) {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      onboardingTask {\n        id\n        onboardFirstName\n        onboardLastName\n        onboardEmployeeType\n        onboardJobTitle\n      }\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Toolbar} from \"@material-ui/core\";\nimport TaskManagerTable from \"./TaskManagerTable\";\nimport handleError from \"../../../data/handleError\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\nimport SearchInput from \"../../../components/SearchInput\";\nimport {GET_ALL_ONBOARDING_TASKS} from \"../../../operations/queries/getAllOnboardingTasks\";\nimport BoxCardWrapper from \"../../../components/blocks/BoxCardWrapper\";\n\nconst AllOffboardingTasks = () => {\n  const history = useHistory();\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [onData, setOnData] = useState([]);\n\n  const [executeSearch] = useLazyQuery(GET_ALL_ONBOARDING_TASKS, {\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (result) => {\n      handleQueryFilter(result);\n      setIsSearchInProgress(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    executeQuery();\n  }, [filters]);\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      console.log(result);\n      if (filters.pageCount > 0) {\n        const data = [...onData, ...result.get_all_onboarding_tasks];\n        setOnData(data);\n      } else {\n        setOnData(result.get_all_onboarding_tasks);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(\n        result.get_all_onboarding_tasks?.length >= filters?.itemsPerPage\n      );\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  const handleSearchQuery = (query) => {\n    let pageCount = filters.pageCount;\n    if (filters.query && query !== currentQuery) {\n      pageCount = 0;\n    }\n    setCurrentQuery(query);\n    setIsSearchInProgress(true);\n    setFilters({\n      ...filters,\n      query,\n      pageCount,\n    });\n  };\n\n  const handleRefresh = async () => {\n    let pageCount = 0;\n    let query = \"\";\n    setCurrentQuery(query);\n    await setFilters({...filters, query, pageCount});\n  };\n\n  const handlePageChange = (pageCount) => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount});\n    }\n  };\n\n  return (\n    <Box>\n      <BoxCardWrapper>\n        <Box>\n          <Toolbar>\n            <SearchInput\n              onSearch={handleSearchQuery}\n              searchQuery={filters.query}\n              label={\"Search All Tasks\"}\n              helperText={\n                \"Search by ID, Name, Job Title, Employee Type, or Status\"\n              }\n            />\n            <Box flexGrow={1} />\n\n            <RefreshButton handleClick={handleRefresh} />\n          </Toolbar>\n        </Box>\n      </BoxCardWrapper>\n\n      <Box mt={2}>\n        <TaskManagerTable\n          currentPage={filters.pageCount}\n          data={onData}\n          tasksCountStatus={tasksCountStatus}\n          onPageChange={handlePageChange}\n          isSearchInProgress={isSearchInProgress}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(AllOffboardingTasks);\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {AppBar, Box, makeStyles, Paper, Tabs} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport MyTasks from \"./MyTasks\";\nimport AllTasks from \"./AllTasks\";\nimport AllOffboardingTasks from \"./AllOffboardingTasks\";\nimport PendingApprovalTasks from \"./PendingApprovalTasks\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport CustomTabPanel, {\n  a11yProps,\n} from \"../../../components/tabs/CustomTabPanel\";\nimport AllRequisitionTasks from \"./AllRequisitionTasks\";\nimport SelectedTaskContent from \"../SelectedTaskContent\";\nimport TaskAlert from \"../SelectedTasks/components/TaskAlert\";\nimport StyledTab from \"../../../components/tabs/StyledTab\";\nimport AllOnboardingTasks from \"./AllOnboardingTasks\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst tabName = \"scrollable-auto\";\n\nconst TaskManagerContent = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  let match = useRouteMatch(FrontendRoutes.TASK_MANAGER_VIEW());\n  const {\n    permTaskManagerViewAll,\n    permTaskManagerViewAllOffboarding,\n    permTaskManagerViewAllOnboarding,\n    permTaskManagerViewAllRequisition,\n    permTaskManagerViewTeam,\n    permOnboardingApproveTasks,\n    permOffboardingApproveTasks,\n    permRequisitionApproveTasks,\n  } = useContext(AuthUserContext);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [value, setValue] = useState(0);\n  const [pendingApprovalIndex, setPendingApprovalIndex] = useState();\n  const [viewAllTasksTab, setViewAllTasksTab] = useState(false);\n  const [viewPendingTasksTab, setViewPendingTasksTab] = useState(false);\n  const [allTasksIndex, setAllTasksIndex] = useState(0);\n\n  useEffect(() => {\n    const taskView = match ? match.params.hash : null;\n    if (taskView) {\n      if (viewAllTasksTab || permTaskManagerViewTeam) {\n        if (taskView === \"mytasks\") {\n          setValue(0);\n        } else if (taskView === \"pendingapproval\") {\n          setValue(pendingApprovalIndex);\n        } else if (taskView === \"alltasks\" && viewAllTasksTab) {\n          setValue(allTasksIndex);\n        }\n      }\n    }\n  }, [\n    match,\n    allTasksIndex,\n    pendingApprovalIndex,\n    viewAllTasksTab,\n    permTaskManagerViewTeam,\n  ]);\n\n  useEffect(() => {\n    if (\n      permTaskManagerViewAll ||\n      permTaskManagerViewAllOffboarding ||\n      permTaskManagerViewAllOnboarding ||\n      permTaskManagerViewAllRequisition\n    ) {\n      setViewAllTasksTab(true);\n      setAllTasksIndex(1);\n      setPendingApprovalIndex(2);\n    } else {\n      setAllTasksIndex(2);\n      setPendingApprovalIndex(1);\n    }\n  }, [\n    permTaskManagerViewAll,\n    permTaskManagerViewAllOffboarding,\n    permTaskManagerViewAllOnboarding,\n    permTaskManagerViewAllRequisition,\n  ]);\n\n  useEffect(() => {\n    if (\n      permOnboardingApproveTasks ||\n      permOffboardingApproveTasks ||\n      permRequisitionApproveTasks\n    ) {\n      setViewPendingTasksTab(true);\n    }\n  }, [\n    permOnboardingApproveTasks,\n    permOffboardingApproveTasks,\n    permRequisitionApproveTasks,\n  ]);\n\n  const handleTabsChange = (event, newValue) => {\n    setValue(newValue);\n\n    let taskView;\n    if (newValue === 0) {\n      taskView = \"mytasks\";\n    } else if (newValue === allTasksIndex) {\n      taskView = \"alltasks\";\n    } else if (newValue === pendingApprovalIndex) {\n      taskView = \"pendingapproval\";\n    }\n    history.push(FrontendRoutes.TASK_MANAGER_VIEW(taskView));\n  };\n\n  return (\n    <Box mt={3} minWidth={1050}>\n      <Box>\n        <TaskAlert isSubmitted={isSubmitted} />\n\n        <Box minWidth={1050} pb={1}>\n          <Paper elevation={3}>\n            <AppBar position=\"static\">\n              <Tabs\n                value={value}\n                onChange={handleTabsChange}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n                aria-label=\"task manager tabs navigation\"\n                className={classes.paper}\n              >\n                <StyledTab label=\"My Tasks\" {...a11yProps(tabName, 0)} />\n                {viewAllTasksTab && (\n                  <StyledTab\n                    label=\"All Tasks\"\n                    {...a11yProps(tabName, allTasksIndex)}\n                  />\n                )}\n                {viewPendingTasksTab && (\n                  <StyledTab\n                    label=\"Pending Approval\"\n                    {...a11yProps(tabName, pendingApprovalIndex)}\n                  />\n                )}\n              </Tabs>\n            </AppBar>\n\n            <CustomTabPanel value={value} index={0} name={tabName}>\n              <Box>\n                <MyTasks />\n              </Box>\n            </CustomTabPanel>\n\n            {viewAllTasksTab && (\n              <CustomTabPanel\n                value={value}\n                index={allTasksIndex}\n                name={tabName}\n              >\n                <Box>\n                  {permTaskManagerViewAll && <AllTasks />}\n                  {permTaskManagerViewAllOffboarding &&\n                    !permTaskManagerViewAll && <AllOffboardingTasks />}\n                  {permTaskManagerViewAllRequisition &&\n                    !permTaskManagerViewAll && <AllRequisitionTasks />}\n                  {permTaskManagerViewAllOnboarding &&\n                    !permTaskManagerViewAll && <AllOnboardingTasks />}\n                </Box>\n              </CustomTabPanel>\n            )}\n            {viewPendingTasksTab && (\n              <CustomTabPanel\n                value={value}\n                index={pendingApprovalIndex}\n                name={tabName}\n              >\n                <Box>\n                  <PendingApprovalTasks />\n                </Box>\n              </CustomTabPanel>\n            )}\n          </Paper>\n        </Box>\n\n        <SelectedTaskContent setIsSubmitted={setIsSubmitted} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(TaskManagerContent);\n","import React, {useEffect, useState, useContext, memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport TaskManagerPageContent from \"./TaskManagerPageContent\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst TaskManagerPage = () => {\n  const {permTaskManagerViewAll, permTaskManagerViewTeam} = useContext(\n    AuthUserContext\n  );\n  const [viewTaskPage, setViewTaskPage] = useState(false);\n\n  useEffect(() => {\n    if (permTaskManagerViewAll || permTaskManagerViewTeam) {\n      setViewTaskPage(true);\n    }\n  }, [permTaskManagerViewAll, permTaskManagerViewTeam]);\n\n  return (\n    <Page title=\"Task Manager | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"TASK MANAGER\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Task Manager\" />\n\n        {viewTaskPage ? <TaskManagerPageContent /> : <NoPermissionsError />}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(TaskManagerPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_ORGANIZATION_CHARTS_INFO = gql`\n    query GetAllOrganizationChartsInfo {\n        get_all_organization_charts_info {\n            employeeType {\n                labels,\n                data\n            }\n            department {\n                labels,\n                data\n            },\n            location {\n                labels,\n                data\n            }\n        }\n    }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_OFF_AND_ON_BOARDING_CHARTS_INFO = gql`\n    query GetOffAndOnBoardingChartsInfo {\n        get_off_and_on_boarding_charts_info {\n            onboarding {\n                last7days {\n                    labels\n                    data\n                }\n                last30days {\n                    labels\n                    data\n                }\n                last90days {\n                    labels\n                    data\n                }\n                currentYear {\n                    labels\n                    data\n                }\n            }\n            offboarding {\n                last7days {\n                    labels\n                    data\n                }\n                last30days {\n                    labels\n                    data\n                }\n                last90days {\n                    labels\n                    data\n                }\n                currentYear {\n                    labels\n                    data\n                }\n            }\n        }\n    }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_REQUISITION_TASKS_CHARTS_INFO = gql`\n    query GetRequisitionTasksChartsInfo {\n        get_requisition_tasks_charts_info {\n            last30days {\n                labels\n                data\n                requisitionTypes\n            }\n            currentYear {\n                labels\n                data\n                requisitionTypes\n            }\n            open {\n                labels\n                data\n                requisitionTypes\n            }\n        }\n    }\n`;\n","export const ONBOARDING_CHARTS_SUBTITLE =\n  \"Note: These statistics are only for Non-FTEs onboarded via LPSync.\";\nexport const REQUISITION_CHARTS_SUBTITLE =\n  \"Note: These statistics are only for Requisition Requests via LPSync.\";\n\nexport const DEFAULT_LOADING_INFO_OBJECT = {\n  organization: true,\n  boarding: true,\n  requisitions: true,\n};\n\nexport const CHARTS_TITLES = {\n  last7days: \"Last 7 days\",\n  last30days: \"Last 30 days\",\n  last90days: \"Last 90 days\",\n};\n\nexport const REQUISITION_CHARTS_SUBTITLES = {\n  last30days:\n    \"Note: These statistics are only for Requisition Requests via LPSync.\",\n  currentYear:\n    \"A filled requisition is one that has been used to onboard a candidate.\",\n  open: \"These are all the current open requisitions in LPSync that have no candidate associated with it.\",\n};\n\nexport const CHARTS_WITH_KEY_ONLY_COUNT = [\"department\", \"location\"];\n\nexport const ORGANIZATION_CHARTS_CONFIG = {\n  title: \"Organization Statistics\",\n  countersLabels: {\n    department: \"Total departments count\",\n    employeeType: \"Total employees count\",\n    location: \"Total locations count\",\n  },\n  chartsType: \"PieChart\",\n};\n\nexport const ONBOARDING_CHARTS_CONFIG = {\n  title: \"Onboarding Statistics\",\n  subtitle:\n    \"Note: These statistics are only for Non-FTEs onboarded via LPSync.\",\n  countersLabels: {\n    last7days: \"Total candidates count\",\n    last30days: \"Total candidates count\",\n    last90days: \"Total candidates count\",\n    currentYear: \"Total candidates count\",\n  },\n  chartsType: \"PieChart\",\n};\n\nexport const OFFBOARDING_CHARTS_CONFIG = {\n  title: \"Offboarding Statistics\",\n  countersLabels: {\n    last7days: \"Total candidates count\",\n    last30days: \"Total candidates count\",\n    last90days: \"Total candidates count\",\n    currentYear: \"Total candidates count\",\n  },\n  chartsType: \"PieChart\",\n};\n\nexport const REQUISITIONS_CHARTS_CONFIG = {\n  title: \"Requisition Statistics\",\n  subtitle:\n    \"Note: These statistics are only for Requisition Requests via LPSync.\",\n  countersLabels: {\n    last30days: \"Total requisitions count\",\n    open: \"Total requisitions count\",\n    currentYear: \"Total requisitions count\",\n  },\n  chartsLabels: {\n    last30days:\n      \"These statistics are only for Requisition Requests via LPSync.\",\n    open: \"These are all the current open requisitions in LPSync that have no candidate associated with it.\",\n    currentYear:\n      \"A filled requisition is one that has been used to onboard a candidate.\",\n  },\n  chartsType: \"BarChart\",\n};\n","import {Box, Grid, makeStyles, Collapse, Grow} from \"@material-ui/core\";\nimport {zip, zipWith} from \"lodash\";\nimport {Chart} from \"react-google-charts\";\nimport {\n  CHARTS_TITLES,\n  CHARTS_WITH_KEY_ONLY_COUNT,\n  REQUISITION_CHARTS_SUBTITLES,\n} from \"../../../data/constants/ReportingCharts\";\nimport {\n  getDigitsFromString,\n  makeFirstLetterUpperCase,\n  transformCamelCaseToText,\n} from \"../../../data/helper/helpers\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: theme.palette.text.primary,\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  subtitle: {\n    margin: \"2px 0 24px 0\",\n    color: theme.palette.text.primary,\n    fontSize: 18,\n    fontWeight: 400,\n    fontStyle: \"italic\",\n  },\n  card: {\n    cursor: \"pointer\",\n    transition: \"all .3s linear\",\n    padding: 8,\n    borderRadius: 2,\n    \"&:hover\": {\n      boxShadow: \"2px 2px 14px\" + theme.palette.background.dark,\n      \"& $counterBox\": {\n        transform: \"translateY(0)\",\n        opacity: 1,\n      },\n    },\n  },\n  counterBox: {\n    borderBottom: \"1px solid #8286b5\",\n    borderLeft: \"1px solid #8286b5\",\n    borderRight: \"1px solid #8286b5\",\n    color: theme.palette.text.primary,\n    fontSize: 18,\n    padding: 8,\n    borderRadius: \"0px 0px 8px 8px\",\n    display: \"inline-block\",\n    backgroundColor: theme.palette.primary.light,\n    float: \"right\",\n    position: \"relative\",\n    top: \"-2px\",\n    transition: \"all .3s linear\",\n  },\n  cardSubtitleBox: {\n    float: \"left\",\n  },\n}));\n\nconst getChartData = ({labels, data, requisitionTypes}) => {\n  const infoArray = requisitionTypes\n    ? zipWith(labels, data, (a, b) => [a, ...b])\n    : zip(labels, data);\n\n  return [requisitionTypes ?? [\" \", \" \"], ...infoArray];\n};\n\nconst getChartsDataCount = (chartData, chartName) => {\n  if (CHARTS_WITH_KEY_ONLY_COUNT.includes(chartName)) {\n    return chartData.length - 1;\n  }\n\n  let result = 0;\n\n  chartData.forEach((record) => {\n    if (record?.length) {\n      record.forEach((recordItem) => {\n        if (typeof recordItem === \"number\") {\n          result += recordItem;\n        }\n      });\n    }\n  });\n\n  return result;\n};\n\nconst getChartOptions = (chartName, forRequisitions) => {\n  const options = {\n    title: chartName,\n    titleTextStyle: {\n      color: \"#1C1D22\",\n      fontSize: \"20\",\n      bold: false,\n      italic: true,\n    },\n    is3D: true,\n    backgroundColor: {\n      fill: \"#E0E0F9\",\n      stroke: \"#8286b5\",\n      strokeWidth: 3,\n    },\n  };\n\n  if (forRequisitions) {\n    options.isStacked = true;\n    options.hAxis = {\n      title: \"Total Requisitions\",\n      minValue: 0,\n      titleTextStyle: {\n        color: \"#1C1D22\",\n        fontSize: \"18\",\n        bold: false,\n        italic: true,\n      },\n    };\n    options.vAxis = {\n      title: \"Requisitions Type\",\n      titleTextStyle: {\n        color: \"#1C1D22\",\n        fontSize: \"18\",\n        bold: false,\n        italic: true,\n      },\n    };\n  }\n\n  return options;\n};\n\nconst ChartsBox = ({chartData, forRequisitions, config, isLoading}) => {\n  const classes = useStyles();\n\n  const getChartsBoxes = ({countersLabels, chartsType}) => {\n    return Object.keys(chartData)\n      .sort((a, b) => getDigitsFromString(a) - getDigitsFromString(b))\n      .map((key, index) => {\n        if (typeof chartData[key] !== \"object\") return;\n\n        const formattedChartData = getChartData(chartData[key]);\n\n        return (\n          <Grid\n            item\n            xs={12}\n            sm={forRequisitions ? 12 : 6}\n            className={classes.card}\n          >\n            <Chart\n              chartType={chartsType}\n              key={key + index}\n              height={forRequisitions ? 450 : 300}\n              data={getChartData(chartData[key])}\n              options={getChartOptions(\n                makeFirstLetterUpperCase(\n                  CHARTS_TITLES[key] ?? transformCamelCaseToText(key)\n                ),\n                forRequisitions,\n                REQUISITION_CHARTS_SUBTITLES[key]\n              )}\n            />\n            {REQUISITION_CHARTS_SUBTITLES[key] && forRequisitions ? (\n              <Box\n                className={`${classes.counterBox} ${classes.cardSubtitleBox}`}\n              >\n                {REQUISITION_CHARTS_SUBTITLES[key]}\n              </Box>\n            ) : null}\n            <Box className={classes.counterBox}>\n              {countersLabels[key]}:{\" \"}\n              {getChartsDataCount(formattedChartData, key)}\n            </Box>\n          </Grid>\n        );\n      });\n  };\n\n  return (\n    <Collapse in={true} appear={true}>\n      <Box bgcolor=\"#FCFCFC\" p={3} sx={{borderBottom: \"3px solid #989EAE\"}}>\n        <Box mb={3} className={classes.title}>\n          {config.title}\n        </Box>\n        <Box className={classes.subtitle}>{config.subtitle}</Box>\n        {isLoading ? (\n          <LoadingCircle />\n        ) : chartData ? (\n          <Grow in={!isLoading} appear={true}>\n            <Grid container spacing={2}>\n              {getChartsBoxes(config)}\n            </Grid>\n          </Grow>\n        ) : null}\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default ChartsBox;\n","import {Box} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport {useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_ALL_ORGANIZATION_CHARTS_INFO} from \"../../../operations/queries/getAllOrganizationChartsInfo\";\nimport {GET_OFF_AND_ON_BOARDING_CHARTS_INFO} from \"../../../operations/queries/getOffAndOnBoardingChartsInfo\";\nimport {GET_REQUISITION_TASKS_CHARTS_INFO} from \"../../../operations/queries/getRequisitionTasksChartsInfo\";\nimport handleError from \"../../../data/handleError\";\nimport ChartsBox from \"./ChartsBox\";\nimport {\n  ONBOARDING_CHARTS_SUBTITLE,\n  REQUISITION_CHARTS_SUBTITLE,\n  DEFAULT_LOADING_INFO_OBJECT,\n  ORGANIZATION_CHARTS_CONFIG,\n  ONBOARDING_CHARTS_CONFIG,\n  OFFBOARDING_CHARTS_CONFIG,\n  REQUISITIONS_CHARTS_CONFIG\n} from \"../../../data/constants/ReportingCharts\";\n\n\nconst ReportingPageContent = () => {\n  const [loadingInfo, setLoadingInfo] = useState({...DEFAULT_LOADING_INFO_OBJECT});\n  const [organizationChartsData, setOrganizationChartsData] = useState(null);\n  const [onboardingChartsData, setOnboardingChartsData] = useState(null);\n  const [offboardingChartsData, setOffboardingChartsData] = useState(null);\n  const [requisitionStatistics, setRequisitionStatistics] = useState(null);\n  const history = useHistory();\n\n  useQuery(GET_ALL_ORGANIZATION_CHARTS_INFO, {\n    onCompleted: data => {\n      setOrganizationChartsData(data.get_all_organization_charts_info);\n      setLoadingInfo({...loadingInfo, organization: false});\n    },\n    onError: error => {\n      handleError(error)(history);\n      setLoadingInfo({...loadingInfo, organization: false});\n    }\n  });\n\n  useQuery(GET_OFF_AND_ON_BOARDING_CHARTS_INFO, {\n    onCompleted: data => {\n      setOnboardingChartsData(data.get_off_and_on_boarding_charts_info.onboarding);\n      setOffboardingChartsData(data.get_off_and_on_boarding_charts_info.offboarding);\n      setLoadingInfo({...loadingInfo, boarding: false});\n    },\n    onError: error => {\n      handleError(error)(history);\n      setLoadingInfo({...loadingInfo, boarding: false});\n    }\n  });\n\n  useQuery(GET_REQUISITION_TASKS_CHARTS_INFO, {\n    onCompleted: data => {\n      setRequisitionStatistics(data.get_requisition_tasks_charts_info);\n      setLoadingInfo({...loadingInfo, requisitions: false});\n    },\n    onError: error => {\n      handleError(error)(history);\n      setLoadingInfo({...loadingInfo, requisitions: false});\n    },\n  });\n\n  return (\n    <>\n      <Box>\n        <ChartsBox chartData={organizationChartsData}\n                   boxTitle=\"Organization Statistics\"\n                   config={ORGANIZATION_CHARTS_CONFIG}\n                   chartsType=\"PieChart\"\n                   isLoading={loadingInfo.organization}\n                   key=\"organization-statistics\"/>\n        <ChartsBox chartData={onboardingChartsData}\n                   boxTitle=\"Onboarding Statistics\"\n                   config={ONBOARDING_CHARTS_CONFIG}\n                   subtitle={ONBOARDING_CHARTS_SUBTITLE}\n                   chartsType=\"PieChart\"\n                   isLoading={loadingInfo.boarding}\n                   key=\"onboarding-statistics\"/>\n        <ChartsBox chartData={offboardingChartsData}\n                   boxTitle=\"Offboarding Statistics\"\n                   config={OFFBOARDING_CHARTS_CONFIG}\n                   chartsType=\"PieChart\"\n                   isLoading={loadingInfo.boarding}\n                   key=\"offboarding-statistics\"/>\n        <ChartsBox chartData={requisitionStatistics}\n                   boxTitle=\"Requisition Statistics\"\n                   config={REQUISITIONS_CHARTS_CONFIG}\n                   subtitle={REQUISITION_CHARTS_SUBTITLE}\n                   chartsType=\"BarChart\"\n                   forRequisitions={true}\n                   isLoading={loadingInfo.requisitions}\n                   key=\"requisition-statistics\"/>\n      </Box>\n    </>\n  );\n};\n\nexport default ReportingPageContent;","import React, {memo, useContext} from \"react\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport {Box} from \"@material-ui/core\";\nimport ReportingPageContent from \"./ReportingPageContent\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport Page from \"../../components/Page\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst ReportingDashboardPage = () => {\n  const {permReportingDashboardView} = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Reporting Dashboard | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"ReportingDashboardPage\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Reporting Dashboard\" />\n\n        {permReportingDashboardView ? (\n          <ReportingPageContent />\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(ReportingDashboardPage);\n","import { gql } from \"@apollo/client\";\n\nexport const SEARCH_USER_DIRECTORY = gql`\n  query SearchUserDirectory($search: SearchInput!) {\n    search_user_directory(search: $search) {\n      id\n      status\n      profile {\n        firstName\n        lastName\n        userName\n        email\n        employeeType\n        employeeNumber\n        jobTitle\n        location\n        businessUnit\n        department\n      }\n    }\n  }\n`;\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst UserDirectoryActionTypes = {\n  SET_SEARCH_QUERY: \"SET_SEARCH_QUERY\",\n  SET_SEARCH_TYPE: \"SET_SEARCH_TYPE\",\n  SET_USERS_DATA: \"SET_USERS_DATA\",\n  SET_USER_DATA: \"SET_USER_DATA\",\n  SET_USER_BADGES: \"SET_USER_BADGES\",\n  SET_COST_CENTERS: \"SET_COST_CENTERS\",\n  SET_USER_DIRECT_REPORTS: \"SET_USER_DIRECT_REPORTS\",\n  SET_GOOGLE_USER_INFO: \"SET_GOOGLE_USER_INFO\",\n  SET_IS_LOADING: \"SET_IS_LOADING\",\n  SET_SELECTED_AUDIT_USER: \"SET_SELECTED_AUDIT_USER\",\n  SET_IS_AUDIT_DRAWER_OPEN: \"SET_IS_AUDIT_DRAWER_OPEN\",\n  SET_IS_GOOGLE_GROUPS_DRAWER_OPEN: \"SET_IS_GOOGLE_GROUPS_DRAWER_OPEN\",\n  SET_IS_AD_GROUPS_DRAWER_OPEN: \"SET_IS_AD_GROUPS_DRAWER_OPEN\",\n  SET_IS_APP_MEMBERSHIPS_DRAWER_OPEN: \"SET_IS_APP_MEMBERSHIPS_DRAWER_OPEN\",\n  SET_DISABLED_SEARCH_RESULTS: \"SET_DISABLED_SEARCH_RESULTS\"\n};\n\nexport default typesWithPrefix(\"USER_DIRECTORY_\")(UserDirectoryActionTypes);\n","import UserDirectoryActionTypes from \"./userDirectoryActionTypes\";\n\nexport const setSearchQuery = (searchQuery) => ({\n  type: UserDirectoryActionTypes.SET_SEARCH_QUERY,\n  payload: {searchQuery},\n});\n\n\nexport const setSearchType = (searchType) => ({\n  type: UserDirectoryActionTypes.SET_SEARCH_TYPE,\n  payload: {searchType},\n});\n\nexport const setUsersData = (usersData) => ({\n  type: UserDirectoryActionTypes.SET_USERS_DATA,\n  payload: {usersData},\n});\n\nexport const setUserData = (userData) => ({\n  type: UserDirectoryActionTypes.SET_USER_DATA,\n  payload: {userData},\n});\n\nexport const setUserBadges = (userBadges) => ({\n  type: UserDirectoryActionTypes.SET_USER_BADGES,\n  payload: {userBadges},\n});\n\nexport const setCostCenters = (costCenters) => ({\n  type: UserDirectoryActionTypes.SET_COST_CENTERS,\n  payload: {costCenters},\n});\nexport const setUserDirectReports = (userDirectReports) => ({\n  type: UserDirectoryActionTypes.SET_USER_DIRECT_REPORTS,\n  payload: {userDirectReports},\n});\n\nexport const setGoogleUserInfo = (googleUserInfo) => ({\n  type: UserDirectoryActionTypes.SET_GOOGLE_USER_INFO,\n  payload: {googleUserInfo},\n});\n\nexport const setIsLoading = (isLoading) => ({\n  type: UserDirectoryActionTypes.SET_IS_LOADING,\n  payload: {isLoading},\n});\n\nexport const setSelectedAuditUser = (selectedAuditUser) => ({\n  type: UserDirectoryActionTypes.SET_SELECTED_AUDIT_USER,\n  payload: {selectedAuditUser},\n});\n\nexport const setIsAuditDrawerOpen = (isAuditDrawerOpen) => ({\n  type: UserDirectoryActionTypes.SET_IS_AUDIT_DRAWER_OPEN,\n  payload: {isAuditDrawerOpen},\n});\n\nexport const setIsGoogleGroupsDrawerOpen = (isGoogleGroupsDrawerOpen) => ({\n  type: UserDirectoryActionTypes.SET_IS_GOOGLE_GROUPS_DRAWER_OPEN,\n  payload: {isGoogleGroupsDrawerOpen},\n});\n\nexport const setIsAdGroupsDrawerOpen = (isAdGroupsDrawerOpen) => ({\n  type: UserDirectoryActionTypes.SET_IS_AD_GROUPS_DRAWER_OPEN,\n  payload: {isAdGroupsDrawerOpen},\n});\n\nexport const setIsAppMembershipsDrawerOpen = (isAppMembershipsDrawerOpen) => ({\n  type: UserDirectoryActionTypes.SET_IS_APP_MEMBERSHIPS_DRAWER_OPEN,\n  payload: {isAppMembershipsDrawerOpen},\n});\n\n\nexport const setDisabledSearchResults = (disabledSearchResults) => ({\n  type: UserDirectoryActionTypes.SET_DISABLED_SEARCH_RESULTS,\n  payload: {disabledSearchResults},\n});\n","import React, {memo, useCallback, useMemo, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {setUsersData} from \"../../data/redux/userDirectory/userDirectoryActions\";\nimport FilterBlock from \"../../components/blocks/FilterBlock\";\nimport SelectTextField from \"../../components/inputs/SelectTextfield\";\nimport CustomAutocomplete from \"../../components/inputs/CustomAutocomplete\";\nimport {toSetArray} from \"../../data/helper/commonFunctions\";\n\nconst UserDirectoryFilterBlock = ({filterOpen, data, setIsFilterApplied}) => {\n  const dispatch = useDispatch();\n  const [empTypeFilter, setEmpTypeFilter] = useState(\"\");\n  const [locationFilter, setLocationFilter] = useState(\"\");\n  const [departmentFilter, setDepartmentFilter] = useState(\"\");\n\n  const handleFilterQuery = () => {\n    const filtered = data.search_user_directory?.filter(\n      (user) =>\n        (!empTypeFilter || user.profile.employeeType === empTypeFilter) &&\n        (!locationFilter || String(user.profile.location)?.toLowerCase()?.includes(locationFilter?.toLowerCase())) &&\n        (!departmentFilter || String(user.profile.department)?.toLowerCase()?.includes(departmentFilter?.toLowerCase())),\n    );\n    dispatch(setUsersData(filtered));\n    setIsFilterApplied(true);\n  };\n\n  const handleClearFilters = useCallback(() => {\n    setEmpTypeFilter(\"\");\n    setLocationFilter(\"\");\n    setDepartmentFilter(\"\");\n    dispatch(setUsersData(data.search_user_directory));\n    setIsFilterApplied(false);\n  }, [data, setIsFilterApplied]);\n\n  const employeeTypes = useMemo(() =>\n    data?.search_user_directory?.map((user) => user.profile.employeeType), [data]);\n\n  const locations = useMemo(() =>\n    toSetArray(data?.search_user_directory?.map((user) => String(user.profile.location)))?.sort(), [data]);\n\n  const departments = useMemo(() =>\n    toSetArray(data?.search_user_directory?.map((user) => String(user.profile.department)))?.sort(), [data]);\n\n  return (\n    <FilterBlock\n      filterOpen={filterOpen}\n      handleFilterQuery={handleFilterQuery}\n      handleClearFilters={handleClearFilters}\n    >\n      <SelectTextField\n        id=\"select-employee-type\"\n        label=\"Employee Type\"\n        value={empTypeFilter}\n        onValueChange={setEmpTypeFilter}\n        dataList={employeeTypes}\n      />\n      <CustomAutocomplete\n        value={locationFilter}\n        onValueChange={setLocationFilter}\n        options={locations}\n        getOptionLabel={(option) => String(option)}\n        textFieldProps={{\n          id: \"select-location\",\n          label: \"Location\"\n        }}\n      />\n      <CustomAutocomplete\n        value={departmentFilter}\n        onValueChange={setDepartmentFilter}\n        options={departments}\n        getOptionLabel={(option) => String(option)}\n        textFieldProps={{\n          id: \"select-department\",\n          label: \"Department\"\n        }}\n      />\n    </FilterBlock>\n  );\n};\n\nexport default memo(UserDirectoryFilterBlock);\n","import React, {memo} from \"react\";\nimport {makeStyles, Toolbar, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  blackText: {color: theme.palette.text.primary},\n  whiteText: {color: theme.palette.primary.main},\n  toolbarGutters: {\n    paddingRight: 12,\n    paddingLeft: 8,\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: 12,\n      paddingLeft: 8,\n    },\n    [theme.breakpoints.up(\"xl\")]: {\n      paddingRight: 24,\n      paddingLeft: 24,\n    },\n  },\n}));\n\nconst ToolbarTypography = ({title, white}) => {\n  const classes = useStyles();\n\n  return (\n    <Toolbar classes={{gutters: classes.toolbarGutters}}>\n      <Typography\n        className={`${classes.title} ${\n          white ? classes.whiteText : classes.blackText\n        }`}\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        {title}\n      </Typography>\n    </Toolbar>\n  );\n};\n\nexport default memo(ToolbarTypography);\n","import React, {memo, useMemo} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport UserImg from \"../../../components/UserImg\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport UserProfileLink from \"../../../components/UserProfileLink\";\nimport {getProfileName} from \"../../../data/helper/helpers\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  employeeInfoContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst UserSearchInfoCell = ({profile}) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const username = useMemo(\n    () => profile?.username || profile?.email?.split(\"@\")?.[0],\n    [profile]\n  );\n  return (\n    <>\n      <UserImg\n        small\n        email={profile?.email}\n        onClick={() =>\n          history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(username))\n        }\n      />\n      <div className={classes.employeeInfoContent}>\n        <UserProfileLink name={getProfileName(profile)} username={username} />\n        {profile?.jobTitle}\n      </div>\n    </>\n  );\n};\n\nexport default memo(UserSearchInfoCell);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_LPSYNC_USER_BADGES = gql`\n  query GetLpsyncUserBadges($user: String) {\n    get_lpsync_user_badges(user: $user) {\n      user {\n        id\n        userEmail\n      }\n      badge {\n        id\n        badgeType\n        badgeName\n        badgeIcon {\n          badgeIconImg\n          badgeIconName\n        }\n      }\n      rank\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport BadgeIcon from \"./BadgeIcon\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {BadgeImages, badgesUrl} from \"../../data/constants/BadgeTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n  badgesHoveredBox: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    background: \"#AFB3C0\",\n    borderRadius: 5,\n    minWidth: 142.5,\n    textAlign: \"center\",\n  },\n}));\n\nconst TopBadges = ({badgesTypes, light, handleHover, ...props}) => {\n  const classes = useStyles({light});\n  return (\n    <Box py={0.25} className={classes.badgesHoveredBox} {...props}>\n      {badgesTypes?.map(\n        (badgeType) =>\n          BadgeImages?.[badgeType] && (\n            <BadgeIcon\n              key={badgeType}\n              image={`${badgesUrl}${BadgeImages?.[badgeType]}`}\n              onMouseOver={() => handleHover(badgeType)}\n            />\n          )\n      )}\n    </Box>\n  );\n};\n\nexport default memo(TopBadges);\n","const UserDirectorySearchTypes = {\n  ALL: \"ALL\",\n  USER_NAME: \"User Name\",\n  USER_JOB: \"Job\",\n  USER_LOCATION: \"Location\",\n  USER_DEPARTMENT: \"Department\",\n  USER_BUSINESS_UNIT: \"Business Unit\",\n  EMPLOYEE_NUMBER: \"Employee Number\",\n  COST_CENTER: \"Cost Center\",\n  BADGES: \"Badges\",\n};\nexport default UserDirectorySearchTypes;","import {memo} from \"react\";\n\nconst ConditionalWrapper = ({ condition, wrapper, children }) =>\n  condition ? wrapper(children) : children;\n\nexport default memo(ConditionalWrapper);","import React, {memo, useCallback} from \"react\";\nimport {Avatar, Chip, makeStyles, Tooltip} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setDisabledSearchResults,\n  setSearchQuery, setSearchType,\n} from \"../../data/redux/userDirectory/userDirectoryActions\";\nimport BadgeIcon from \"./BadgeIcon\";\nimport UserDirectorySearchTypes from \"../../data/constants/UserDirectorySearchTypes\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\n\nconst useStyles = makeStyles(() => ({\n  chip: {\n    margin: \".25rem\",\n    cursor: \"pointer\"\n  },\n}));\n\nconst BadgeChip = ({\n  id,\n  label,\n  image,\n  icon,\n  isDisabled,\n  tooltip,\n  ...props\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const onChipClick = useCallback((e) => {\n    if (label) {\n      dispatch(setSearchQuery(label));\n      dispatch(setSearchType(UserDirectorySearchTypes.BADGES));\n      dispatch(setDisabledSearchResults(false));\n    }\n    e.stopPropagation();\n  }, [label, dispatch]);\n\n  return (\n    <ConditionalWrapper\n      condition={tooltip}\n      wrapper={children => (\n        <Tooltip title={`Find users with \"${label}\" badge`} placement=\"bottom\">\n          {children}\n        </Tooltip>\n      )}\n    >\n      {icon ? (\n        <span className={classes.chip} onClick={onChipClick}>\n          <BadgeIcon image={image} />\n        </span>\n      ) : (\n        <Chip\n          id={id}\n          variant={\"outlined\"}\n          label={label}\n          className={classes.chip}\n          avatar={<Avatar alt={label} src={image} />}\n          clickable={true}\n          onClick={onChipClick}\n          {...props}\n        />\n      )}\n    </ConditionalWrapper>\n  );\n};\n\nexport default memo(BadgeChip);","import React, { forwardRef, memo } from \"react\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport BadgeChip from \"./BadgeChip\";\n\nconst useStyles = makeStyles(() => ({\n  badgeGroupBox: {\n    textAlign: \"left\",\n  },\n  badgeGroupTitle: {\n    fontSize: \"0.875rem\",\n  },\n  badgeLabel: {\n    fontSize: \"0.75rem\",\n  },\n}));\n\nconst BadgeGroupItem = forwardRef(({ badges, title, ...props }, ref) => {\n  const classes = useStyles();\n\n  if(!badges?.length){\n    return null;\n  }\n  return (\n    <Box className={classes.badgeGroupBox} ref={ref} {...props}>\n      <Typography component=\"span\" className={classes.badgeGroupTitle}>\n        {title}:\n      </Typography>\n      <span>\n        {badges?.map((bge) => (\n          <BadgeChip\n            tooltip\n            key={bge.badge?.id}\n            id={bge.badge?.id}\n            label={bge.badge?.badgeName}\n            image={bge?.badge?.badgeIcon?.badgeIconImg}\n            size=\"small\"\n            classes={{ label: classes.badgeLabel }}\n          />\n        ))}\n      </span>\n    </Box>\n  );\n});\n\nexport default memo(BadgeGroupItem);\n","import React, {createRef, forwardRef, memo} from \"react\";\nimport {makeStyles, Menu} from \"@material-ui/core\";\nimport BadgeGroupItem from \"./BadgeGroupItem\";\nimport {BadgeNames} from \"../../data/constants/BadgeTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n  allBadgesPaper: {\n    minWidth: 50,\n    maxWidth: 230,\n    transform: \"translate(calc(-50% + 4px), 0) !important\",\n    background: \"transparent\",\n    boxShadow: theme.shadows[3],\n    // boxShadow: \"none\",\n  },\n  allBadgesWrapper: {\n    // margin: \"30px 4px 4px\",\n    background: theme.palette.secondary.light,\n    borderRadius: 5,\n    padding: theme.spacing(1),\n    \"& >:not(:last-child)\": {\n      marginBottom: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n      borderBottom: \"1px solid\",\n    },\n  },\n}));\n\nconst BadgeMenu = forwardRef(\n  ({anchorEl, handleClose, badgeType, badges, badgesTypes, ...props}, ref) => {\n    const classes = useStyles();\n    const badgeGroupRef = createRef();\n\n    const getBadgeGroupItem = () => {\n      if (badgesTypes) {\n        return Object.entries(badgesTypes)?.map(([type, badgeList]) => (\n          <BadgeGroupItem\n            key={type}\n            badges={badgeList}\n            title={BadgeNames?.[type]}\n          />\n        ));\n      }\n      return (\n        <BadgeGroupItem\n          ref={badgeGroupRef}\n          badges={badges}\n          title={BadgeNames?.[badgeType]}\n        />\n      );\n    };\n\n    return (\n      <Menu\n        id={`badges-menu`}\n        keepMounted\n        ref={ref}\n        open={!!anchorEl}\n        classes={{\n          paper: classes.allBadgesPaper,\n          list: classes.allBadgesWrapper,\n        }}\n        onClose={handleClose}\n        getContentAnchorEl={null}\n        anchorEl={anchorEl}\n        anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}\n        MenuListProps={{onMouseLeave: handleClose}}\n        {...props}\n      >\n        {getBadgeGroupItem()}\n      </Menu>\n    );\n  }\n);\n\nexport default memo(BadgeMenu);\n","import React, { createRef, memo, useCallback, useEffect, useState } from \"react\";\nimport LoadingCircle from \"../circularProgress/LoadingCircle\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport TopBadges from \"./TopBadges\";\nimport BadgeMenu from \"./BadgeMenu\";\nimport { getGroupedBadges } from \"../../data/helper/helpers\";\nimport BadgeTypes from \"../../data/constants/BadgeTypes\";\nimport { toSetArray } from \"../../data/helper/commonFunctions\";\n\nconst useStyles = makeStyles(() => ({\n  badgesBox: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: 2,\n    marginBottom: 8,\n  },\n}));\n\nconst unwrap = (...list) => (object) => {\n  return Object.fromEntries(new Map(Object.entries(object)?.filter(([key, value]) => list?.includes(key))));\n};\n\nconst UserCardBadgesBox = ({ badges, loading, id, ...props }) => {\n  const ref = createRef();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n  const [filteredBadges, setFilteredBadges] = useState();\n  const [topBadgesTypes, setTopBadgesTypes] = useState();\n  const [hoveredBadgeType, setHoveredBadgeType] = useState();\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const handleHover = useCallback(badgeType => {\n    setHoveredBadgeType(badgeType);\n    setAnchorEl(document?.getElementById(id));\n  }, [badges, id]);\n\n  useEffect(() => {\n    if (badges?.length) {\n      const groupedBadges = getGroupedBadges(badges, ([key, value]) => value?.length);\n      const badgeTypes = toSetArray(Object.keys(groupedBadges)?.map(type =>\n        (type === BadgeTypes.TOVUTI)\n          ? BadgeTypes.SUBJECT_MATTER_EXPERT : type),\n      );\n      setTopBadgesTypes(badgeTypes);\n      setFilteredBadges(groupedBadges);\n    }\n  }, [badges, setFilteredBadges, setTopBadgesTypes]);\n\n  if (loading) {\n    return <LoadingCircle size={30} />;\n  }\n  if (!filteredBadges || !Object.keys(filteredBadges)?.length) {\n    return null;\n  }\n  return (\n    <Box className={classes.badgesBox}>\n      <TopBadges\n        badgesTypes={topBadgesTypes}\n        handleHover={handleHover}\n        id={id}\n        {...props}\n      />\n      {anchorEl && hoveredBadgeType && (\n        <>\n          {hoveredBadgeType === BadgeTypes.SUBJECT_MATTER_EXPERT ?\n            <BadgeMenu\n              ref={ref}\n              anchorEl={anchorEl}\n              handleClose={handleClose}\n              badgesTypes={unwrap(BadgeTypes.SUBJECT_MATTER_EXPERT, BadgeTypes.TOVUTI)(filteredBadges)}\n            />\n            : <BadgeMenu\n              ref={ref}\n              anchorEl={anchorEl}\n              handleClose={handleClose}\n              badgeType={hoveredBadgeType}\n              badges={filteredBadges?.[hoveredBadgeType]}\n            />\n          }\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(UserCardBadgesBox);","import React, { memo, useEffect, useState } from \"react\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { GET_LPSYNC_USER_BADGES } from \"../../operations/queries/getLpsyncUserBadges\";\nimport handleError from \"../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport UserCardBadgesBox from \"./UserCardBadgesBox\";\n\nconst UserCardBadges = ({ userEmail, ...props }) => {\n  const history = useHistory();\n  const [badges, setBadges] = useState();\n\n  const [executeSearch, { loading, data }] = useLazyQuery(\n    GET_LPSYNC_USER_BADGES, {\n      onCompleted: (data) => setBadges(data.get_lpsync_user_badges),\n      onError: (error) => handleError(error)(history),\n    },\n  );\n\n  useEffect(() => {\n    if (userEmail) {\n      executeSearch({ variables: { user: userEmail } });\n    }\n  }, [userEmail, executeSearch]);\n\n  useEffect(() => {\n    if (userEmail && data?.get_lpsync_user_badges?.user?.[0]?.userEmail === userEmail) {\n      setBadges(data.get_lpsync_user_badges);\n    }\n  }, [data, userEmail]);\n\n    return <UserCardBadgesBox id={`badge-box-${userEmail}`} loading={loading} badges={badges} {...props}/>;\n};\n\nexport default memo(UserCardBadges);","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst CommonActionTypes = {\n  SET_ORGCHART_EMAIL: \"SET_ORGCHART_EMAIL\",\n  ENQUEUE_SNACKBAR: \"ENQUEUE_SNACKBAR\",\n  REMOVE_SNACKBAR: \"REMOVE_SNACKBAR\",\n  CLOSE_SNACKBAR: \"CLOSE_SNACKBAR\",\n  SET_SEARCH_QUERY: \"SET_SEARCH_QUERY\"\n};\n\nexport default typesWithPrefix(\"COMMON_\")(CommonActionTypes);\n","import CommonActionTypes from \"./commonActionTypes\";\n\nexport const setOrgChartEmail = (orgChartEmail) => ({\n  type: CommonActionTypes.SET_ORGCHART_EMAIL,\n  payload: { orgChartEmail },\n});\n\nexport const enqueueSnackbar = (notification) => {\n  const key = notification?.options?.key;\n\n  return {\n    type: CommonActionTypes.ENQUEUE_SNACKBAR,\n    notification: {\n      ...notification,\n      key: key || new Date().getTime() + Math.random(),\n    },\n  };\n};\n\nexport const closeSnackbar = key => ({\n  type: CommonActionTypes.CLOSE_SNACKBAR,\n  dismissAll: !key, // dismiss all if no key has been defined\n  key,\n});\n\nexport const removeSnackbar = key => ({\n  type: CommonActionTypes.REMOVE_SNACKBAR,\n  key,\n});\n\nexport const setSearchQuery = (searchQuery) => ({\n  type: CommonActionTypes.SET_SEARCH_QUERY,\n  payload: { searchQuery },\n});","import React, { memo, useCallback, useState } from \"react\";\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport DraftsOutlinedIcon from \"@material-ui/icons/DraftsOutlined\";\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport { setOrgChartEmail } from \"../../../data/redux/common/commonActions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n}));\n\nconst UserInfoMenu = ({ id, email, setOrgChartEmail }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    event?.stopPropagation();\n  };\n\n  const handleMenuClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n\n  const handleViewInOrg = (event) => {\n    if (email) {\n      setOrgChartEmail(email);\n      history.push(FrontendRoutes.ORGANIZATION_CHART);\n    }\n    handleMenuClose();\n    event?.stopPropagation();\n  };\n\n  const handleViewUserProfile = (event) => {\n    if (email) {\n      history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(email?.split(\"@\")?.[0]));\n    }\n    handleMenuClose();\n    event?.stopPropagation();\n  };\n\n  const copyEmailToClipboard = (event) => {\n    if (email) {\n      navigator.clipboard.writeText(email).then(function () {\n        console.log(\"Async: Copying to clipboard was successful!\");\n      }, function (err) {\n        console.error(\"Async: Could not copy text: \", err);\n      });\n    }\n    handleMenuClose();\n    event?.stopPropagation();\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleMenuClick}><MoreVertIcon fontSize=\"medium\" /></IconButton>\n      <Menu\n        id={`simple-menu-${id}`}\n        anchorEl={anchorEl}\n        keepMounted\n        open={!!anchorEl}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleViewUserProfile}>\n          <VisibilityIcon className={classes.icon} />\n          View User Profile\n        </MenuItem>\n        <MenuItem onClick={copyEmailToClipboard}>\n          <DraftsOutlinedIcon className={classes.icon} />\n          Copy E-mail Address\n        </MenuItem>\n        <MenuItem onClick={handleViewInOrg}>\n          <AccountTreeIcon className={classes.icon} />\n          Show In Org Chart\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default connect(() => ({}), { setOrgChartEmail })(memo(UserInfoMenu));","import React, { memo } from \"react\";\nimport { makeStyles, TableCell } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  userTableCell:{\n    padding: theme.spacing(1),\n  },\n  userTableCellDiv: {\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& > svg\": {\n      marginRight: \"0.3em\",\n      fontSize: \"1em\",\n    },\n  },\n}));\n\nconst UserTableCell = ({ icon, content, ...props }) => {\n  const classes = useStyles();\n  return (\n    <TableCell classes={{sizeSmall: classes.userTableCell}} {...props}>\n      <div className={classes.userTableCellDiv}>\n        {icon}\n        {content}\n      </div>\n    </TableCell>\n  );\n};\n\nexport default memo(UserTableCell);","import TableContent from \"../../../components/table/TableContent\";\nimport React, { memo } from \"react\";\nimport UserSearchInfoCell from \"./UserSearchInfoCell\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport BusinessIcon from \"@material-ui/icons/Business\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport UserCardBadges from \"../../../components/badges/UserCardBadges\";\nimport UserInfoMenu from \"./UserInfoMenu\";\nimport StyledTableRow from \"../../../components/table/StyledTableRow\";\nimport UserTableCell from \"./UserTableCell\";\nimport { getProfileName } from \"../../../data/helper/helpers\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport { useHistory } from \"react-router-dom\";\n\nconst userTableHeadCells = [\n  { id: \"userFullName\", label: \"User\", isNotSortable: true },\n  { id: \"location\", label: \"Location\" },\n  { id: \"businessUnit\", label: \"Business Unit\" },\n  { id: \"department\", label: \"Department\" },\n  { id: \"badges\", label: \"Badges\", isNotSortable: true  },\n  { id: \"info-menu\", isNotSortable: true },\n];\n\nconst userDirectoryRow = (userProfile) => {\n  const { id, location, businessUnit, department, email } = userProfile || {};\n  return [\n    { id: \"userFullName\", content: <UserSearchInfoCell profile={userProfile} /> },\n    { id: \"location\", icon: <LocationOnIcon />, content: location },\n    { id: \"businessUnit\", icon: <BusinessIcon />, content: businessUnit },\n    { id: \"department\", icon: <WorkOutlineIcon />, content: department },\n    { id: \"badges\", content: <UserCardBadges userEmail={email} light/> },\n    { id: \"info\", content: <UserInfoMenu id={id} email={email} />,},\n  ];\n}\n\nconst UserTableBodyRow = (user) => {\n  const history = useHistory();\n  const username = user?.username || user?.email?.split(\"@\")?.[0];\n\n  return (\n    <StyledTableRow hover\n      id={user?.id} key={user?.id}\n      onClick={() => history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(username))}\n    >\n      {userDirectoryRow(user, user?.id)?.map(({ id, icon, content }) =>\n        <UserTableCell key={id} icon={icon} content={content}/>\n      )}\n    </StyledTableRow>\n  );\n};\n\nconst UserTableContent = ({users, isLoading}) => {\n  return (\n    <TableContent\n      // initOrderBy=\"userFullName\"\n      headAlign=\"left\"\n      headCells={userTableHeadCells}\n      data={users?.map(user =>\n        ({...user?.profile, id: user?.id, userFullName: getProfileName(user?.profile)})\n      )}\n      isLoading={isLoading}\n      tableRow={UserTableBodyRow}\n    />\n  )\n}\n\nexport default memo(UserTableContent);","import React, { memo, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Box, makeStyles, TableContainer } from \"@material-ui/core\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport UserToolbarTypography from \"../../../components/typographies/ToolbarTypography\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport { useSelector } from \"react-redux\";\nimport CustomInfiniteScroll from \"../../../components/table/CustomInfiniteScroll\";\nimport UserTableContent from \"./UserTableContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  userDirectoryTableContainer: {\n    maxHeight: \"calc(65vh - 140px)\",\n    height: \"100%\",\n    minHeight: 300,\n    overflow: \"auto\",\n  },\n  tableBox: { padding: theme.spacing(2) },\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n  },\n}));\n\nconst itemsOnPage = 15;\n\nconst UserDirectoryTable = ({ loading }) => {\n  const classes = useStyles();\n  const usersData = useSelector(state => state?.userDirectory.get(\"usersData\"));\n  const [visibleUsers, setVisibleUsers] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [usersData]);\n\n  useEffect(() => {\n    if(usersData) {\n      setVisibleUsers(usersData?.slice(0, itemsOnPage * currentPage));\n      setHasMore(usersData?.length > itemsOnPage * currentPage);\n    }\n  }, [currentPage, usersData]);\n\n  const dataLength = useMemo(() => visibleUsers?.length,\n    [visibleUsers]);\n\n  const handlePageChange = useCallback(() => {\n    setCurrentPage(currentPage + 1);\n  }, [currentPage]);\n\n  return (\n    <Box minWidth={1050} >\n      <PaperCardWrapper>\n        <UserToolbarTypography title=\"Search Results\" />\n\n        <Box className={classes.tableBox}>\n          {loading ? (\n            <LoadingCircle text={\"searching...\"} />\n          ) : visibleUsers?.length ? (\n            <TableContainer id={\"user-directory\"} className={classes.userDirectoryTableContainer} >\n              <CustomInfiniteScroll\n                scrollableTarget=\"user-directory\"\n                dataLength={dataLength}\n                next={handlePageChange}\n                hasMore={hasMore}\n              >\n                <UserTableContent users={visibleUsers} />\n\n              </CustomInfiniteScroll>\n\n            </TableContainer>\n          ) : (\n            <NoResultsTypography />\n          )}\n        </Box>\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default memo(UserDirectoryTable);\n","import React, {memo} from \"react\";\nimport {makeStyles, MenuItem, Select} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: 150,\n    margin: \"8px 0 6px 8px\",\n    background: theme.palette.primary.main,\n    height: \"fit-content\"\n  },\n  filled: {\n    paddingTop: 15,\n    paddingBottom: 14,\n    fontSize: \"1rem\",\n    textAlign: \"center\",\n  },\n}));\n\nconst SelectSearchTypeField = ({searchType, handleChange, types, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Select\n      value={searchType}\n      onChange={(e) => handleChange(e.target.value)}\n      className={classes.select}\n      variant=\"filled\"\n      classes={{filled: classes.filled}}\n      size=\"small\"\n      color=\"secondary\"\n      margin=\"dense\"\n      {...props}\n    >\n      {Object.values(types)?.map((option) => (\n        <MenuItem key={option} value={option}>\n          {option}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nexport default memo(SelectSearchTypeField);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {Box, Button, makeStyles, Zoom} from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport SearchTextField from \"../inputs/SearchTextField\";\nimport SelectSearchTypeField from \"../inputs/SelectSearchTypeField\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchFilterBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  filterBtn: {\n    marginLeft: theme.spacing(2),\n    [theme.breakpoints.up(\"xl\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(2),\n    },\n  },\n}));\n\nconst SearchBlock = ({\n  searchQuery,\n  handleChange,\n  searchType,\n  setSearchType,\n  types,\n  handleFilterClick,\n  isFilterApplied,\n  searchProps,\n  ...props\n}) => {\n  const classes = useStyles();\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {handleChange(query)}, [query]);\n\n  return (\n    <Box className={classes.searchFilterBox} {...props}>\n      <Box style={{display: \"flex\"}}>\n        <SearchTextField\n          value={query}\n          handleChange={setQuery}\n          {...searchProps}\n        />\n        {types && (\n          <SelectSearchTypeField\n            id=\"select-user-directory-search-type\"\n            searchType={searchType}\n            handleChange={setSearchType}\n            types={types}\n          />\n        )}\n      </Box>\n      <Box flexGrow={1} />\n      {handleFilterClick && (\n        <Zoom in={searchQuery?.length > 0} timeout={500}>\n          <Box>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleFilterClick}\n              className={classes.filterBtn}\n            >\n              <FilterListIcon /> Filter Results {isFilterApplied && \"(Applied)\"}\n            </Button>\n          </Box>\n         </Zoom>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(SearchBlock);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_DIRECT_REPORTS = gql`\n  query GetDirectReports($search: String) {\n    get_direct_reports(search: $search) {\n      id\n      totalCount\n      profile {\n        businessUnit\n        companyName\n        department\n        displayName\n        email\n        employeeNumber\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        manager\n        userName\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USER_BY_EMAIL = gql`\n  query GetUserByEmail($search: String!) {\n    get_user_by_email(search: $search) {\n      id\n      lastLogin\n      status\n      totalCount\n      profile {\n        businessUnit\n        companyName\n        costCenter\n        department\n        email\n        employeeNumber\n        employeeSince\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        manager\n        managerEmail\n        memberOf\n        mobilePhone\n        originalHireDate\n        primaryPhone\n        userName\n      }\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  userTypography: {\n    fontSize: \"1.25rem\",\n    fontWeight: 400,\n    lineHeight: 2.25,\n    overflowX: \"hidden\",\n    whiteSpace: \"nowrap\",\n    width: \"inherit\"\n  },\n  text: {\n    paddingRight: 20,\n    whiteSpace: \"nowrap\",\n    display: \"inline\"\n  },\n  line: {\n    width: \"100%\",\n    display: \"inline-block\"\n  }\n}));\n\nconst UserTypography = ({title, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Typography className={classes.userTypography} component=\"div\" {...props}>\n      <p className={classes.text}>\n        {title}\n      </p>\n      <hr className={classes.line} />\n    </Typography>\n  );\n};\n\nexport default memo(UserTypography);","import React, {memo} from \"react\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport UserImg from \"../../../components/UserImg\";\nimport {useHistory} from \"react-router-dom\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport {getProfileName} from \"../../../data/helper/helpers\";\nimport ViewButton from \"../../../components/buttons/ViewButton\";\nimport UserCardBadges from \"../../../components/badges/UserCardBadges\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperCard: {\n    width: \"fit-content\",\n  },\n  card: {\n    backgroundColor: theme.palette.primary.light,\n    overflow: \"inherit\",\n    cursor: \"pointer\",\n  },\n  content: {\n    padding: theme.spacing(2) + \"px !important\",\n    width: 260,\n  },\n  cardBox: {\n    height: \"100%\",\n    minHeight: 305,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  boxContent: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  nameText: {\n    lineHeight: 2,\n    textAlign: \"center\",\n  },\n  text: {\n    fontSize: \"1rem\",\n    lineHeight: 2,\n    textAlign: \"center\",\n  },\n}));\n\nconst UserCard = ({profile}) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleOnClick = () => {\n    if (profile?.userName) {\n      history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(profile?.userName));\n    }\n  };\n\n  return (\n    <PaperCardWrapper\n      paperClassName={classes.paperCard}\n      className={classes.card}\n      contentClassName={classes.content}\n      onClick={handleOnClick}\n    >\n      <Box className={classes.cardBox}>\n        <Box className={classes.boxContent}>\n          <UserImg large email={profile?.email} />\n\n          <Typography\n            component={\"div\"}\n            variant=\"h5\"\n            className={classes.nameText}\n          >\n            {getProfileName(profile)}\n          </Typography>\n\n          <Typography component={\"div\"} variant=\"h6\" className={classes.text}>\n            {profile?.jobTitle}\n          </Typography>\n\n          <Typography component={\"div\"} variant=\"h6\" className={classes.text}>\n            {profile?.location}\n          </Typography>\n\n          <UserCardBadges userEmail={profile?.email} />\n        </Box>\n\n        <ViewButton text=\"View Profile\" />\n      </Box>\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(UserCard);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\n\nconst useStyles = makeStyles(() => ({\n  loadingBox: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}))\nconst UserLoadingCircle = ({text}) => {\n  const classes = useStyles();\n  return (\n    <Box mt={3} className={classes.loadingBox}>\n      <LoadingCircle text={text || \"Gathering your info via API...\"} />\n    </Box>\n  )\n}\nexport default memo(UserLoadingCircle);","import React, {memo} from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport UserTypography from \"./UserTypography\";\nimport UserCard from \"./UserCard\";\nimport UserLoadingCircle from \"./UserLoadingCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  userTeamItem: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: 260,\n    alignItems: \"center\",\n    margin: \"0 10px 20px\",\n    [theme.breakpoints.up(\"lg\")]: {\n      margin: \"0 15px 30px\",\n    },\n  },\n  notDefinedText: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst UserGridItemWrapper = ({user, title, noUserText, loading, ...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.userTeamItem} {...props}>\n      {loading ? (\n        <UserLoadingCircle />\n      ) : !user ? (\n        <Typography className={classes.notDefinedText} variant=\"h6\">\n          {noUserText || \"No user Defined\"}\n        </Typography>\n      ) : (\n        <>\n          {title && <UserTypography title={title} />}\n          <UserCard profile={user?.profile} />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(UserGridItemWrapper);\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_DIRECT_REPORTS} from \"../../../operations/queries/getDirectReports\";\nimport handleError from \"../../../data/handleError\";\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport UserToolbarTypography from \"../../../components/typographies/ToolbarTypography\";\nimport {GET_USER_BY_EMAIL} from \"../../../operations/queries/getUserByEmail\";\nimport UserTypography from \"./UserTypography\";\nimport UserGridItemWrapper from \"./UserGridItemWrapper\";\nimport UserLoadingCircle from \"./UserLoadingCircle\";\n\nconst useStyles = makeStyles(() => ({\n  userTeamContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst UserTeam = () => {\n  const {authUser} = useContext(AuthUserContext);\n  const history = useHistory();\n  const [manager, setManager] = useState(null);\n  const [reportsData, setReportsData] = useState();\n  const classes = useStyles();\n\n  const [executeReportsSearch, {loading: reportsLoading}] = useLazyQuery(\n    GET_DIRECT_REPORTS,\n    {\n      onCompleted: (data) => setReportsData(data?.get_direct_reports),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const [executeSearch, {loading, data}] = useLazyQuery(GET_USER_BY_EMAIL, {\n    onError: (error) => handleError(error)(history),\n  });\n  useEffect(() => {\n    if(data){\n      setManager(data.get_user_by_email?.[0])\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (authUser?.profile?.email) {\n      executeReportsSearch({variables: {search: authUser?.profile?.email}});\n    }\n  }, [authUser, executeReportsSearch]);\n\n  useEffect(() => {\n    if (authUser?.profile?.managerEmail) {\n      executeSearch({variables: {search: authUser?.profile?.managerEmail}});\n    }\n  }, [authUser, executeSearch]);\n\n  return (\n    <Box>\n      <PaperCardWrapper style={{overflow: \"visible\"}}>\n        <UserToolbarTypography title=\"Your Team\" />\n\n        <Box px={3}>\n          <Grid container className={classes.userTeamContainer}>\n            <UserGridItemWrapper\n              user={manager}\n              title=\"Your Manager\"\n              noUserText=\"No manager Defined\"\n              loading={loading}\n            />\n\n            <UserGridItemWrapper user={authUser} title=\"You\" />\n          </Grid>\n\n          {reportsLoading ? (\n            <UserLoadingCircle />\n          ) : (\n            !!reportsData?.length && (\n              <Box mt={1}>\n                <UserTypography title=\"Your Direct Reports\" />\n                <Grid container className={classes.userTeamContainer}>\n                  {reportsData?.map((user, id) => (\n                    <UserGridItemWrapper key={id} user={user} />\n                  ))}\n                </Grid>\n              </Box>\n            )\n          )}\n        </Box>\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default memo(UserTeam);\n","import React, {memo} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    height: (props) => props.height,\n    width: (props) => props.width,\n    overflow: \"auto\",\n    border: \"1px solid #4667c8\",\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nconst ColorBorderBox = ({children, height, width}) => {\n  const classes = useStyles({height, width});\n\n  return (\n    <Box m={2} className={classes.box}>\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(ColorBorderBox);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_LPSYNC_BADGES = gql`\n  query GetLpsyncBadges($filters: BadgeNamesInput) {\n    get_lpsync_badges(filters: $filters) {\n      id\n      badgeIconId\n      badgeType\n      badgeName\n      users {\n        user {\n          id\n        }\n      }\n      badgeIcon {\n        id\n        badgeIconName\n        badgeIconImg\n      }\n    }\n  }\n`;\n","export const handleQueryFilter = (\n  data,\n  setData,\n  resultData,\n  filters,\n  setIsLoading\n) => {\n  if (filters.pageCount > 0) {\n    const combinedData = [...data, ...resultData];\n    setData(combinedData);\n  } else {\n    setData(resultData);\n  }\n  setIsLoading(false);\n};\n\nexport const handlePageChange = (pageCount, filters, setFilters, isLoading) => {\n  if (!isLoading) {\n    setFilters({...filters, pageCount});\n  }\n};\n\nexport const handleSearchQuery = (\n  query,\n  currentQuery,\n  setCurrentQuery,\n  filters,\n  setFilters,\n  setIsLoading\n) => {\n  let pageCount = filters.pageCount;\n  if (filters.query && query !== currentQuery) {\n    pageCount = 0;\n  }\n  setCurrentQuery(query);\n  setIsLoading(true);\n  setFilters({\n    ...filters,\n    query,\n    pageCount,\n  });\n};\n","import React, {memo} from \"react\";\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\nimport TableCircularProgress from \"../circularProgress/TableCircularProgress\";\nimport NoResultsTypography from \"../typographies/NoResultsTypography\";\n\nconst useStyles = makeStyles(() => ({\n  iconBox: {\n    border: \"1px solid #4667c8\",\n    borderRadius: \"5px\",\n  },\n}));\n\nconst BoxGridWrapper = ({children, loading, dataLength}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.iconBox}>\n      <Box m={1} style={{position: \"relative\"}}>\n        {loading ? (\n          <TableCircularProgress />\n        ) : !dataLength ? (\n          <NoResultsTypography />\n        ) : (\n          <Box>\n            <Grid container spacing={2}>\n              {children}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(BoxGridWrapper);\n","import React, { memo } from \"react\";\nimport { Box, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport BadgeIcon from \"../badges/BadgeIcon\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridItemBox: {\n    border: \"2px solid transparent\",\n    borderRadius: \"5px\",\n    padding: \".2rem\",\n    width: \"5rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    boxSizing: \"content-box\",\n    \"&:hover\": {\n      border: \"2px solid \" + theme.palette.warning.main,\n      cursor: \"pointer\",\n    },\n  },\n  badgeName:{\n    textAlign: \"center\"\n  }\n}));\n\nconst BadgeIconGridItem = ({ image, name, ...props }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item {...props}>\n      <Box className={classes.gridItemBox}>\n        <BadgeIcon image={image} />\n        <Typography variant={\"subtitle1\"} className={classes.badgeName}>{name}</Typography>\n      </Box>\n    </Grid>\n  );\n};\n\nexport default memo(BadgeIconGridItem);\n","import React, {memo} from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\n\nconst BackPaginationButton = ({...props}) => {\n  return (\n    <Button size=\"small\" {...props}>\n      <NavigateBeforeIcon />\n    </Button>\n  );\n};\n\nexport default memo(BackPaginationButton);\n","import React, {memo} from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nconst NextPaginationButton = ({...props}) => {\n  return (\n    <Button size=\"small\" {...props}>\n      <NavigateNextIcon />\n    </Button>\n  );\n};\n\nexport default memo(NextPaginationButton);\n","import React, { memo } from \"react\";\nimport BoxGridWrapper from \"../../../../components/grid/BoxGridWrapper\";\nimport BadgeIconGridItem from \"../../../../components/grid/BadgeIconGridItem\";\nimport { Box } from \"@material-ui/core\";\nimport BackPaginationButton from \"../../../../components/buttons/BackPaginationButton\";\nimport NextPaginationButton from \"../../../../components/buttons/NextPaginationButton\";\n\nconst BadgesSelectGrid = ({loading, badges, handleClick,\n  isBackBtnDisabled, handleBackBtn,\n  isNextBtnDisabled, handleNextBtn\n}) => {\n  return (\n    <>\n      <BoxGridWrapper loading={loading} dataLength={badges?.length}>\n        {badges?.map((badge) => (\n          <BadgeIconGridItem\n            key={badge?.id}\n            id={badge?.id}\n            image={badge?.badgeIcon?.badgeIconImg}\n            name={badge?.badgeName}\n            onClick={() => handleClick(badge)}\n          />\n        ))}\n      </BoxGridWrapper>\n      <Box mt={1}>\n        <BackPaginationButton\n          disabled={isBackBtnDisabled}\n          onClick={handleBackBtn}\n        />\n        <NextPaginationButton\n          disabled={isNextBtnDisabled}\n          onClick={handleNextBtn}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default memo(BadgesSelectGrid);","import React, { memo } from \"react\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  modalBadgesContentBlock: {\n    background: theme.palette.primary.light,\n    border: \"1px solid \" + theme.palette.text.primary,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    padding: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst UserBadgesModalBlock = ({title, children}) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.modalBadgesContentBlock}>\n      <Typography> {title} </Typography>\n      {children}\n    </Box>\n  )\n};\n\nexport default memo(UserBadgesModalBlock);","const BadgeCriteriaOptions = {\n  ALL: \"All\",\n  ANY: \"Any\",\n};\n\nexport const BadgeCriteriaOptionsObj = [\n  {\n    value: BadgeCriteriaOptions.ALL,\n    name: \"Users MUST have all these skills\",\n  },\n  {\n    value: BadgeCriteriaOptions.ANY,\n    name: \"Users can have any of these skills\",\n  },\n];\n\nexport default BadgeCriteriaOptions;","import {gql} from \"@apollo/client\";\n\nexport const SEARCH_USERS_BY_BADGES_QUERY = gql`\n  query SearchUsersByBadgesQuery($search: SearchBadgesInput!) {\n    search_users_by_badges(search: $search) {\n      id\n      status\n      profile {\n        firstName\n        lastName\n        userName\n        email\n        employeeType\n        employeeNumber\n        jobTitle\n        location\n        businessUnit\n        department\n        costCenter\n      }\n    }\n  }\n`;\n\nexport const SEARCH_USERS_FOR_SPLASH_SCREEN_SETTINGS = gql`\n  query SearchUsersForSplashScreenSettings($search: String!) {\n    search_users_for_splash_screen_settings(search: $search) {\n      id\n      firstName\n      lastName\n      userName\n      splashScreenCompleted\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { Box, Button, CircularProgress, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  modalBottomBox: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  modalSearchButton: {\n    color: theme.palette.text.primary,\n    background: theme.palette.warning.main,\n    \"&:hover\": {\n      background: \"rgba(255, 107, 0, 0.8)\",\n    },\n  },\n}));\n\nconst BadgesModalActionBlock = ({handleSearch, disabled, submitting}) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.modalBottomBox}>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        onClick={handleSearch}\n        className={classes.modalSearchButton}\n        disabled={disabled}\n      >\n        {submitting && <CircularProgress size={20} color=\"inherit\" style={{ marginRight: 4 }} />}\n        Find Users Matching Skills\n      </Button>\n    </Box>\n  )\n}\n\nexport default memo(BadgesModalActionBlock);","import React, { memo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport CustomFormSelect from \"../../../../components/inputs/CustomFormSelect\";\nimport { BadgeTypesObj } from \"../../../../data/constants/BadgeTypes\";\n\nconst useStyles = makeStyles(() => ({\n  inputLabel: {\n    transform: \"translate(14px, 12px) scale(1)\",\n  },\n}));\n\nconst BadgeFormSelect = ({value, onValueChange, selectClasses}) => {\n  const classes = useStyles();\n\n  return (\n    <CustomFormSelect\n      id=\"badge-category\"\n      label=\"Select Badge Category\"\n      inputLabelClasses={classes.inputLabel}\n      color=\"secondary\"\n      selectClasses={selectClasses}\n      value={value}\n      onValueChange={onValueChange}\n      options={BadgeTypesObj?.map(type => ({ value: type.idType, name: type.nameType }))}\n    />\n  );\n};\n\nexport default memo(BadgeFormSelect);","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\nimport BadgeChip from \"../../../../components/badges/BadgeChip\";\nimport ColorBorderBox from \"../../../../components/blocks/ColorBorderBox\";\nimport SearchInput from \"../../../../components/SearchInput\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_LPSYNC_BADGES} from \"../../../../operations/adminQueries/getLpsyncBadges\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {handlePageChange, handleSearchQuery} from \"../../../../data/helper/filterHelpers\";\nimport AlertBox from \"../../../../components/AlertBox\";\nimport ModalTopBar from \"../../../../components/modals/ModalTopBar\";\nimport CustomFormSelect from \"../../../../components/inputs/CustomFormSelect\";\nimport BadgesSelectGrid from \"./BadgesSelectGrid\";\nimport UserBadgesModalBlock from \"./UserBadgesModalBlock\";\nimport BadgeCriteriaOptions, {BadgeCriteriaOptionsObj} from \"../../../../data/constants/BadgeCriteriaOptions\";\nimport {SEARCH_USERS_BY_BADGES_QUERY} from \"../../../../operations/queries/searchUsersByBadgesQuery\";\nimport {useDispatch} from \"react-redux\";\nimport {setUsersData} from \"../../../../data/redux/userDirectory/userDirectoryActions\";\nimport BadgesModalActionBlock from \"./BadgesModalActionBlock\";\nimport BadgeFormSelect from \"./BadgeFormSelect\";\n\nconst useStyles = makeStyles(() => ({\n  alert: {\n    width: \"60ch\",\n  },\n  select: {\n    width: \"30ch\",\n    padding: \"10.5px 7px\",\n  },\n  badgeSearchBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst UserBadgesSearchModal = ({open, handleClose, setOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedBadges, setSelectedBadges] = useState([]);\n  const [badgeCategory, setBadgeCategory] = useState(\"\");\n  const [badgeCriteria, setBadgeCriteria] = useState(BadgeCriteriaOptions.ANY);\n  const [badgeData, setBadgeData] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isNextBtnDisabled, setIsNextBtnDisabled] = useState(false);\n  const [isBackBtnDisabled, setIsBackBtnDisabled] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"warning\");\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [submitting, setSubmitting] = useState(false);\n  const dispatch = useDispatch();\n\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 14,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_LPSYNC_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      handleResult(data?.get_lpsync_badges);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeUserSearch] = useLazyQuery(SEARCH_USERS_BY_BADGES_QUERY, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setOpen(true);\n      dispatch(setUsersData(data?.search_users_by_badges));\n      handleClose();\n      setSubmitting(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleResult = (result) => {\n    setBadgeData(result);\n    setIsLoading(false);\n\n    if (result?.length > filters?.itemsPerPage) {\n      setIsNextBtnDisabled(false);\n    } else {\n      setIsNextBtnDisabled(true);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsLoading(true);\n    executeSearch({\n      variables: {filters: {...filters, type: badgeCategory}},\n    });\n  };\n\n  useEffect(() => {\n    if (filters.pageCount === 0) {\n      setIsBackBtnDisabled(true);\n    } else {\n      setIsBackBtnDisabled(false);\n    }\n\n    executeQuery();\n  }, [filters, badgeCategory]);\n\n  useEffect(() => {\n    if (alertMessage) {\n      setTimeout(() => {\n        setAlertMessage(\"\");\n      }, 15 * 1000);\n    }\n  }, [alertMessage]);\n\n  const handleDelete = (chip) => {\n    setSelectedBadges(selectedBadges?.filter((bge) => bge.id !== chip.id));\n  };\n\n  const handleOnSearch = (query) => {\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsLoading,\n    );\n  };\n\n  const handleAlert = (msg, severity) => {\n    setAlertSeverity(severity);\n    setAlertMessage(msg);\n  };\n\n  const handleClick = (selected) => {\n    const isBadgeSelected = selectedBadges?.some((bge) =>\n      bge?.id === selected?.id);\n\n    if (isBadgeSelected) {\n      handleAlert(\"Badge is already selected\", \"warning\");\n    } else {\n      setSelectedBadges([...selectedBadges, selected]);\n    }\n  };\n\n  const handleBackBtn = () => {\n    const pageCount = filters.pageCount - 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const handleNextBtn = () => {\n    const pageCount = filters.pageCount + 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const handleSearch = useCallback(() => {\n    setSubmitting(true);\n    executeUserSearch({\n      variables: {\n        search: {\n          type: badgeCriteria,\n          badges: selectedBadges?.map(badge => ({badgeId: badge.id})),\n        },\n      },\n    });\n  }, [setSubmitting, selectedBadges, badgeCriteria]);\n\n  return (\n    <CustomModal\n      width={900}\n      height={\"auto\"}\n      open={open}\n      onClose={handleClose}\n      middlePosition\n      aria-labelledby=\"request-form-alert\"\n      aria-describedby=\"request-form-description\"\n    >\n      <ModalTopBar title=\"Skill/Interest Search\" handleClose={handleClose} />\n\n      <Box m={2}>\n        <UserBadgesModalBlock title=\"Select a skill/interest to add to search criteria\">\n          <Box mt={2} mx={2} className={classes.badgeSearchBlock}>\n            <BadgeFormSelect\n              selectClasses={classes.select}\n              value={badgeCategory}\n              onValueChange={setBadgeCategory}\n            />\n            <SearchInput\n              onSearch={handleOnSearch}\n              searchQuery={filters.query}\n              label={\"Search Badges\"}\n            />\n          </Box>\n\n          <Box m={2}>\n            {badgeCategory && badgeData && (\n              <BadgesSelectGrid\n                loading={isLoading}\n                badges={badgeData}\n                isBackBtnDisabled={isBackBtnDisabled}\n                handleBackBtn={handleBackBtn}\n                isNextBtnDisabled={isNextBtnDisabled}\n                handleNextBtn={handleNextBtn}\n                handleClick={handleClick}\n              />\n            )}\n          </Box>\n        </UserBadgesModalBlock>\n\n        <UserBadgesModalBlock title=\"Search Criteria\">\n          <ColorBorderBox height={100}>\n            {selectedBadges?.map((bge) => (\n              <BadgeChip\n                key={bge?.id}\n                id={bge?.id}\n                label={bge?.badgeName}\n                image={bge?.badgeIcon?.badgeIconImg}\n                onDelete={() => handleDelete(bge)}\n              />\n            ))}\n          </ColorBorderBox>\n\n          <Box m={2}>\n            <CustomFormSelect\n              id=\"badge-criteria\"\n              value={badgeCriteria}\n              onValueChange={setBadgeCriteria}\n              options={BadgeCriteriaOptionsObj}\n              withoutEmptyOption\n              selectClasses={classes.select}\n            />\n          </Box>\n        </UserBadgesModalBlock>\n      </Box>\n\n      {alertMessage && (\n        <Box mb={2}>\n          <AlertBox severity={alertSeverity} message={alertMessage} />\n        </Box>\n      )}\n      <BadgesModalActionBlock\n        handleSearch={handleSearch}\n        disabled={!selectedBadges?.length}\n        submitting={submitting}\n      />\n    </CustomModal>\n  );\n};\n\nexport default memo(UserBadgesSearchModal);","import React, {memo, useCallback, useContext, useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport {SEARCH_USER_DIRECTORY} from \"../../operations/queries/searchUserDirectory\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport UserDirectoryFilterBlock from \"./UserDirectoryFilterBlock\";\nimport UserDirectoryTable from \"./UserSearch/UserDirectoryTable\";\nimport UserToolbarTypography from \"../../components/typographies/ToolbarTypography\";\nimport SearchBlock from \"../../components/blocks/SearchBlock\";\nimport UserTeam from \"./UserTeam/UserTeam\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\nimport {\n  setSearchQuery,\n  setSearchType,\n  setUsersData,\n} from \"../../data/redux/userDirectory/userDirectoryActions\";\nimport UserDirectorySearchTypes from \"../../data/constants/UserDirectorySearchTypes\";\nimport UserBadgesSearchModal from \"./UserSearch/badgeSearch/UserBadgesSearchModal\";\nimport Button from \"@material-ui/core/Button\";\nimport useDebouncedChangeHandler from \"../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n  searchBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  badgesSearchButton: {\n    marginLeft: theme.spacing(2),\n    [theme.breakpoints.up(\"xl\")]: {\n      marginLeft: theme.spacing(4),\n      marginRight: theme.spacing(2),\n    },\n  },\n  gradientPaper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst useSearchUserDirectory = (setUsersData, setSearchQuery) => {\n  const [executeSearch, {error, loading, data}] = useLazyQuery(\n    SEARCH_USER_DIRECTORY,\n    {\n      onCompleted: (data) => {\n        setUsersData(data.search_user_directory);\n      },\n      onError: (error) => {\n        setSearchQuery(\"\");\n        if (error.message.toLowerCase() === \"bad permission\") {\n          //signout FIXME\n          // oktaAuth.signOut();\n        }\n      },\n    },\n  );\n  return [executeSearch, {error, loading, data}];\n};\n\nconst UserDirectoryPageContent = ({\n  searchQuery,\n  setSearchQuery,\n  setUsersData,\n  searchType,\n  setSearchType,\n}) => {\n  const classes = useStyles();\n  const {permUserDirectoryView} = useContext(AuthUserContext);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [badgeModalOpen, setBadgeModalOpen] = useState(false);\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const [executeSearch, {loading, data}] = useSearchUserDirectory(\n    setUsersData,\n    setSearchQuery,\n  );\n\n  useEffect(() => {\n    setOpen(open => open === !!searchQuery?.length ? open : !!searchQuery?.length);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery?.length) {\n      executeSearch({\n        variables: {search: {query: searchQuery, type: searchType}},\n      });\n    }\n  }, [searchQuery, searchType, executeSearch]);\n\n  const handleFilterClick = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  const handleBadgeSearchModalOpen = useCallback(() => {\n    setBadgeModalOpen(true);\n  }, []);\n\n  const handleBadgeSearchModalClose = useCallback(() => {\n    setBadgeModalOpen(false);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(setSearchQuery);\n\n  return (\n    <Page title=\"User Directory | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"USER DIRECTORY\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"User Directory\" className={classes.headerBox} />\n\n        {permUserDirectoryView && (\n          <>\n            <Box mt={3}>\n              <PaperCardWrapper className={classes.gradientPaper}>\n                <Box className={classes.searchBox}>\n                  <UserToolbarTypography white title=\"User Search\" />\n\n                  <SearchBlock\n                    searchQuery={searchQuery}\n                    handleChange={debouncedChangeHandler}\n                    searchProps={{\n                      id: \"employee-search-text-field\",\n                      label: \"Search by Name, Email, Job Title, Department, Location, Badges, Cost Center, or HRIS ID\",\n                      handleClose: () => setOpen(false)\n                    }}\n                    searchType={searchType}\n                    setSearchType={setSearchType}\n                    types={UserDirectorySearchTypes}\n                    handleFilterClick={handleFilterClick}\n                    isFilterApplied={isFilterApplied}\n                  />\n                  <Box>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleBadgeSearchModalOpen}\n                      className={classes.badgesSearchButton}\n                    >\n                      Badge Search\n                    </Button>\n                  </Box>\n                </Box>\n                {searchQuery?.length > 0 && (\n                  <UserDirectoryFilterBlock\n                    filterOpen={filterOpen}\n                    data={data}\n                    setIsFilterApplied={setIsFilterApplied}\n                  />\n                )}\n              </PaperCardWrapper>\n            </Box>\n            <Box height={20} width={\"100%\"} />\n            {open ? (\n              <UserDirectoryTable loading={loading} />\n            ) : (\n              <UserTeam />\n            )}\n          </>\n        )}\n      </Box>\n\n      <UserBadgesSearchModal\n        setOpen={setOpen}\n        open={badgeModalOpen}\n        handleClose={handleBadgeSearchModalClose}\n      />\n    </Page>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    searchQuery: state.userDirectory.get(\"searchQuery\"),\n    searchType: state.userDirectory.get(\"searchType\"),\n  }),\n  {setSearchQuery, setUsersData, setSearchType},\n)(memo(UserDirectoryPageContent));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_USER_INFO = gql`\n  query GetGoogleUserInfo($search: String!) {\n    get_google_user_info(search: $search) {\n      id\n      lastLoginTime\n      suspended\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useMemo, useState} from \"react\";\nimport {\n  makeStyles,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../../AuthUserContextProvider\";\nimport UserProfileLink from \"../../../../components/UserProfileLink\";\nimport {useSelector} from \"react-redux\";\nconst dateFormat = require(\"dateformat\");\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    maxWidth: 500,\n  },\n  tableCellKey: {\n    borderBottom: \"none\",\n  },\n  tableCell: {\n    fontWeight: 600,\n    borderBottom: \"none\",\n  },\n  icons: {\n    fontSize: \"1.25rem\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst UserOrgInfo = () => {\n  const classes = useStyles();\n  const userData = useSelector(state => state?.userDirectory.get(\"userData\"));\n  const {permUserDirectoryOrgDetailsView} = useContext(AuthUserContext);\n  const [tenureMonth, setTenureMonth] = useState();\n  const [tenureYear, setTenureYear] = useState();\n  const [tenureDay, setTenureDay] = useState();\n\n  useEffect(() => {\n    if (userData) {\n      getTenure(dateFormat(userData?.profile?.employeeSince, \"yyyy-mm-dd\"));\n    }\n  }, [userData]);\n\n  function getTenure(startingDate, endingDate) {\n    let isFuture = false;\n    var startDate = new Date(\n      new Date(startingDate).toISOString().substr(0, 10)\n    );\n\n    if (!endingDate) {\n      endingDate = new Date().toISOString().substr(0, 10); // need date in YYYY-MM-DD format\n    }\n\n    var endDate = new Date(endingDate);\n    if (startDate > endDate) {\n      isFuture = true;\n      var swap = startDate;\n      startDate = endDate;\n      endDate = swap;\n    }\n    var startYear = startDate.getFullYear();\n    var february =\n      (startYear % 4 === 0 && startYear % 100 !== 0) || startYear % 400 === 0\n        ? 29\n        : 28;\n    var daysInMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    var yearDiff = endDate.getFullYear() - startYear;\n    var monthDiff = endDate.getMonth() - startDate.getMonth();\n    if (monthDiff < 0) {\n      yearDiff--;\n      monthDiff += 12;\n    }\n    var dayDiff = endDate.getDate() - startDate.getDate();\n    if (dayDiff < 0) {\n      if (monthDiff > 0) {\n        monthDiff--;\n      } else {\n        yearDiff--;\n        monthDiff = 11;\n      }\n      dayDiff += daysInMonth[startDate.getMonth()];\n    }\n\n    if (isFuture) {\n      setTenureMonth(-Math.abs(monthDiff));\n      setTenureYear(-Math.abs(yearDiff));\n      setTenureDay(-Math.abs(dayDiff));\n    } else {\n      setTenureMonth(monthDiff);\n      setTenureYear(yearDiff);\n      setTenureDay(dayDiff);\n    }\n  }\n\n  const managerUsername = useMemo(() => userData?.profile?.managerEmail?.split(\"@\")?.[0], [userData]);\n\n  return (\n    <>\n      {userData && (\n        <TableContainer>\n          <Table\n            className={classes.table}\n            size=\"small\"\n            aria-label=\"simple table\"\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Username\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {userData?.profile?.userName}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Status\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {userData?.status}\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  HRIS ID\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {userData?.profile?.employeeNumber ? (\n                    userData?.profile?.employeeNumber\n                  ) : (\n                    <p>No HRIS ID</p>\n                  )}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Manager\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {managerUsername ? (\n                    <UserProfileLink\n                      name={userData?.profile?.manager || managerUsername}\n                      username={managerUsername}\n                    />\n                  ) : (\n                    <p>No Manager</p>\n                  )}\n                </TableCell>\n              </TableRow>\n\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Employee Type\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {userData?.profile?.employeeType}\n                </TableCell>\n              </TableRow>\n\n              {permUserDirectoryOrgDetailsView && (\n                <>\n                  <TableRow>\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      className={classes.tableCellKey}\n                    >\n                      Employee Since\n                    </TableCell>\n                    <TableCell align=\"left\" className={classes.tableCell}>\n                      {userData?.profile.employeeSince ? (\n                        userData?.profile.employeeSince\n                      ) : (\n                        <p>n/a</p>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      className={classes.tableCellKey}\n                    >\n                      Current Tenure\n                    </TableCell>\n                    <TableCell align=\"left\" className={classes.tableCell}>\n                      {userData?.profile?.employeeSince ? (\n                        <p>\n                          {tenureYear !== 0 &&\n                            (tenureYear === 1\n                              ? `${tenureYear} year `\n                              : `${tenureYear} years `)}\n                          {tenureMonth !== 0 &&\n                            (tenureMonth === 1\n                              ? `${tenureMonth} month `\n                              : `${tenureMonth} months `)}\n                          {tenureDay !== 0 &&\n                            (tenureDay === 1\n                              ? `${tenureDay} day`\n                              : `${tenureDay} days`)}\n                        </p>\n                      ) : (\n                        <p>n/a</p>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                  {userData?.profile?.employeeSince !==\n                    userData?.profile?.originalHireDate && (\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Original Hire Date\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {userData?.profile?.originalHireDate ? (\n                          userData?.profile?.originalHireDate\n                        ) : (\n                          <p>n/a</p>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </>\n  );\n};\n\nexport default memo(UserOrgInfo);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {NetworkStatus, useQuery} from \"@apollo/client\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Collapse,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport {GET_DIRECT_REPORTS} from \"../../../../operations/queries/getDirectReports\";\nimport UserImg from \"../../../../components/UserImg\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport handleError from \"../../../../data/handleError\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport ResetFiltersButton from \"../../../../components/buttons/ResetFilterButton\";\nimport ApplyFiltersButton from \"../../../../components/buttons/ApplyFiltersButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport {connect} from \"react-redux\";\nimport {setUserDirectReports} from \"../../../../data/redux/userDirectory/userDirectoryActions\";\nimport SelectTextField from \"../../../../components/inputs/SelectTextfield\";\n\nconst useStyles = makeStyles((theme) => ({\n  employeeInfoDiv: {\n    display: \"flex\",\n  },\n  box: {\n    width: \"100%\",\n  },\n  tableRow: {\n    cursor: \"pointer\",\n  },\n  tableBox: {\n    padding: theme.spacing(2),\n  },\n  tableHeadCell: {\n    fontWeight: \"bold\",\n  },\n  tableBodyCell: {\n    fontSize: \".9rem\",\n  },\n  textField: {width: \"40ch\"},\n  filterBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n  filterFields: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    marginBottom: theme.spacing(3),\n  },\n  filterClear: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  icon: {\n    fontSize: \"1.15rem\",\n  },\n  viewBtn: {\n    fontSize: \".7rem\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n  },\n  rootPanel: {\n    backgroundColor: theme.palette.primary.light,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst UserDirectReportsList = ({\n  userInfoExpanded,\n  handleUserInfoAccordionChange,\n  userData,\n  userDirectReports,\n  setUserDirectReports,\n}) => {\n  const classes = useStyles();\n  let history = useHistory();\n  let {userName} = useParams();\n  const [reportsResult, setReportsResult] = useState();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [empTypeFilter, setEmpTypeFilter] = useState(\"\");\n  const [departmentFilter, setDepartmentFilter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n\n  const {error, networkStatus, refetch} = useQuery(GET_DIRECT_REPORTS, {\n      variables: {search: `${userName}@liveperson.com`},\n      onCompleted: (data) => {\n        setUserDirectReports(data.get_direct_reports);\n        setReportsResult(data.get_direct_reports);\n      },\n      onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (networkStatus === NetworkStatus.refetch) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [userDirectReports, reportsResult, networkStatus]);\n\n  if (error) return <p>`Error! ${error.message}`</p>;\n\n  const handleOnClick = (user) => {\n    history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(user));\n  };\n\n  const handleFilterClick = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  const handleClearFilters = () => {\n    setEmpTypeFilter(\"\");\n    setDepartmentFilter(\"\");\n    setReportsResult(userDirectReports);\n    setIsFilterApplied(false);\n  };\n\n  const handleFilterQuery = () => {\n    const filtered = userDirectReports?.filter((user) =>\n      (!empTypeFilter || user?.profile?.employeeType === empTypeFilter) &&\n      (!departmentFilter || user?.profile?.department === departmentFilter)\n    );\n    setReportsResult(filtered);\n    setIsFilterApplied(true);\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        userDirectReports?.length > 0 && (\n          <Accordion\n            expanded={userInfoExpanded === \"userPanel2\"}\n            onChange={handleUserInfoAccordionChange(\"userPanel2\")}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n              classes={{root: classes.rootPanel}}\n            >\n              <Typography component={\"div\"} className={classes.heading}>\n                Direct Reports\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              {/*{userDirectReports?.length > 0 ? (*/}\n              <Box mt={2} className={classes.box}>\n                <Box>\n                  <Toolbar>\n                    <>\n                      <Typography id=\"tableTitle\" component=\"div\">\n                        {userData?.profile?.firstName}{\" \"}\n                        {userData?.profile?.lastName} has{\" \"}\n                        {userDirectReports?.[0]?.totalCount} direct reports\n                      </Typography>\n                      <Box flexGrow={1} />\n                      <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        onClick={handleFilterClick}\n                      >\n                        <FilterListIcon /> Filter{\" \"}\n                        {isFilterApplied && \"(Applied)\"}\n                      </Button>\n                    </>\n                  </Toolbar>\n                </Box>\n                <Collapse in={filterOpen} timeout=\"auto\" unmountOnExit>\n                  <Box className={classes.filterBox}>\n                    <div className={classes.filterFields}>\n                      <div>\n                        <SelectTextField\n                          id=\"select-employee-type\"\n                          label=\"Employee Type\"\n                          value={empTypeFilter}\n                          onValueChange={setEmpTypeFilter}\n                          dataList={userDirectReports?.map(\n                            (user) => user?.profile?.employeeType\n                          )}\n                        />\n                      </div>\n                      <div>\n                        <SelectTextField\n                          id=\"select-department\"\n                          label=\"Department\"\n                          value={departmentFilter}\n                          onValueChange={setDepartmentFilter}\n                          dataList={userDirectReports?.map(\n                            (user) => user?.profile?.department\n                          )}\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <ResetFiltersButton\n                        size=\"small\"\n                        handleClick={handleClearFilters}\n                      />\n\n                      <ApplyFiltersButton\n                        size=\"small\"\n                        handleClick={handleFilterQuery}\n                      />\n                    </div>\n                  </Box>\n                </Collapse>\n                <Box className={classes.tableBox}>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.tableHeadCell}>\n                          Employee\n                        </TableCell>\n                        <TableCell className={classes.tableHeadCell}>\n                          Job Title\n                        </TableCell>\n                        <TableCell className={classes.tableHeadCell}>\n                          Department\n                        </TableCell>\n                        <TableCell className={classes.tableHeadCell}>\n                          Employee Type\n                        </TableCell>\n                        <TableCell />\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {reportsResult?.map((user) => (\n                        <StyledTableRow\n                          hover\n                          id={user?.id}\n                          key={user?.id}\n                          className={classes.tableRow}\n                          onClick={() => {\n                            handleOnClick(user?.profile?.userName);\n                          }}\n                        >\n                          <TableCell className={classes.tableBodyCell}>\n                            <div className={classes?.employeeInfoDiv}>\n                              <UserImg small email={user?.profile?.email} />\n                              <div>\n                                {user?.profile?.firstName}{\" \"}\n                                {user?.profile?.lastName} <br />\n                                {user?.profile?.email}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell className={classes.tableBodyCell}>\n                            {user?.profile?.jobTitle}\n                          </TableCell>\n                          <TableCell className={classes.tableBodyCell}>\n                            {user?.profile?.department}\n                          </TableCell>\n                          <TableCell className={classes.tableBodyCell}>\n                            {user?.profile?.employeeType}\n                          </TableCell>\n                          <TableCell className={classes.tableBodyCell}>\n                            <Button\n                              variant=\"outlined\"\n                              size=\"small\"\n                              className={classes.viewBtn}\n                            >\n                              <VisibilityIcon className={classes.icon} /> View\n                              profile\n                            </Button>\n                          </TableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Box>\n              </Box>\n            </AccordionDetails>\n          </Accordion>\n        )\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    userData: state.userDirectory.get(\"userData\"),\n    userDirectReports: state.userDirectory.get(\"userDirectReports\"),\n  }),\n  {setUserDirectReports}\n)(memo(UserDirectReportsList));\n","import React, { useState, useContext, memo } from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport UserOrgInfo from \"./UserOrgInfo\";\nimport UserDirectReportsList from \"./UserDirectReportsList\";\nimport {AuthUserContext} from \"../../../../AuthUserContextProvider\";\nimport {useSelector} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontWeight: \"bold\",\n  },\n  rootPanel: {\n    backgroundColor: theme.palette.primary.light,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst UserInformation = () => {\n  const classes = useStyles();\n  const userData = useSelector(state => state?.userDirectory.get(\"userData\"));\n  const {permUserDirectoryOrgDetailsView} = useContext(AuthUserContext);\n  const [userInfoExpanded, setUserInfoExpanded] = useState(\"userPanel1\");\n\n  const handleUserInfoAccordionChange = (panel) => (event, isExpanded) => {\n    setUserInfoExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <>\n      <Accordion\n        expanded={userInfoExpanded === \"userPanel1\"}\n        onChange={handleUserInfoAccordionChange(\"userPanel1\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          classes={{\n            root: classes.rootPanel,\n          }}\n        >\n          <Typography component={\"div\"} className={classes.heading}>\n            Organization Info\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>{userData && <UserOrgInfo />}</AccordionDetails>\n      </Accordion>\n      {permUserDirectoryOrgDetailsView && (\n        <UserDirectReportsList\n          userInfoExpanded={userInfoExpanded}\n          handleUserInfoAccordionChange={handleUserInfoAccordionChange}\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(UserInformation);\n","import React, { memo, useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport { connect } from \"react-redux\";\nimport { setIsAdGroupsDrawerOpen } from \"../../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"600px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  closeToolbar: { flexShrink: 0 },\n  footerDiv: { height: \"3rem\", flexShrink: 0 },\n\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  titleBox: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  box: { overflowY: \"auto\" },\n  table: {\n    maxWidth: \"100%\",\n    maxHeight: \"95%\",\n  },\n  tableHeadCell: {\n    background: \"#16173f\",\n  },\n  tableHeadText: {\n    fontWeight: 600,\n  },\n  tableCell: {\n    borderBottom: \"none\",\n  },\n}));\n\nconst AdGroupsDrawer = ({ userData, isAdGroupsDrawerOpen, setIsAdGroupsDrawerOpen}) => {\n  const classes = useStyles();\n\n  useEffect(() => {}, [isAdGroupsDrawerOpen]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsAdGroupsDrawerOpen(open);\n  };\n\n  const handleClose = () => {\n    setIsAdGroupsDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.drawerRoot}>\n      <Drawer\n        anchor=\"right\"\n        open={isAdGroupsDrawerOpen}\n        onClose={toggleDrawer(false)}\n        classes={{ paper: classes.paper }}\n      >\n        <Toolbar className={classes.closeToolbar}>\n          <Box className={classes.btnDiv}>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={handleClose}\n            >\n              <CloseIcon /> Close\n            </Button>\n          </Box>\n        </Toolbar>\n        <Toolbar>\n          <Box className={classes.titleBox}>\n            <div>\n              <Typography component={'div'} className={classes.tableHeadText}>\n                List of AD Group Memberships\n              </Typography>\n            </div>\n            <div> Total: {userData?.totalCount}</div>\n          </Box>\n        </Toolbar>\n        <Divider />\n        <Box mt={2} className={classes.box}>\n          <Container>\n            <TableContainer className={classes.table}>\n              <Table\n                stickyHeader={true}\n                size=\"small\"\n                aria-label=\"ad-group-memberships-table\"\n              >\n                <TableBody>\n                  {userData?.profile?.memberOf?.map((group) => (\n                    <StyledTableRow key={group}>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {group}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}/>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Container>\n        </Box>\n        <div className={classes.footerDiv}/>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    userData: state.userDirectory.get(\"userData\"),\n    isAdGroupsDrawerOpen: state.userDirectory.get(\"isAdGroupsDrawerOpen\")\n  }),\n  {setIsAdGroupsDrawerOpen})\n(memo(AdGroupsDrawer));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_APPS_LIST = gql`\n  query GetAppsList($search: String) {\n    get_apps_list(search: $search) {\n      id\n      label\n      totalCount\n    }\n  }\n`;\n","import React, { memo, useEffect } from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {GET_APPS_LIST} from \"../../../../../operations/queries/getAppsList\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setIsAppMembershipsDrawerOpen } from \"../../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"600px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  closeToolbar: {flexShrink: 0},\n  footerDiv: {height: \"3rem\", flexShrink: 0},\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  titleBox: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  box: {overflowY: \"auto\"},\n  table: {\n    maxWidth: \"100%\",\n    maxHeight: \"95%\",\n  },\n  tableHeadCell: {\n    background: \"#16173f\",\n  },\n  tableHeadText: {\n    fontWeight: 600,\n  },\n  tableCell: {\n    borderBottom: \"none\",\n  },\n}));\n\nconst AppMembershipsDrawer = ({userData, isAppMembershipsDrawerOpen, setIsAppMembershipsDrawerOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {}, [isAppMembershipsDrawerOpen]);\n\n  const [executeSearch, {data}] = useLazyQuery(GET_APPS_LIST, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (userData) {\n      executeSearch({variables: {search: userData?.id}});\n    }\n  }, [userData, executeSearch]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsAppMembershipsDrawerOpen(open);\n  };\n\n  const handleClose = () => {\n    setIsAppMembershipsDrawerOpen(false);\n  };\n\n  return (\n    <div className={classes.drawerRoot}>\n      <Drawer\n        anchor=\"right\"\n        open={isAppMembershipsDrawerOpen}\n        onClose={toggleDrawer(false)}\n        classes={{paper: classes.paper}}\n      >\n        <Toolbar className={classes.closeToolbar}>\n          <Box className={classes.btnDiv}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleClose}>\n              <CloseIcon /> Close\n            </Button>\n          </Box>\n        </Toolbar>\n\n        <Toolbar>\n          <Box className={classes.titleBox}>\n            <div>\n              <Typography component={\"div\"} className={classes.tableHeadText}>\n                List of Application Memberships\n              </Typography>\n            </div>\n            <div> Total: {data?.get_apps_list[0]?.totalCount}</div>\n          </Box>\n        </Toolbar>\n        <Divider />\n        {data?.get_apps_list[0]?.totalCount > 0 && (\n          <Box mt={2} className={classes.box}>\n            <Container>\n              <TableContainer className={classes.table}>\n                <Table\n                  stickyHeader={true}\n                  size=\"small\"\n                  aria-label=\"application-memberships-table\"\n                >\n                  <TableBody className={classes.tableBody}>\n                    {data?.get_apps_list?.map((app) => (\n                      <StyledTableRow key={app.id}>\n                        <TableCell align=\"left\" className={classes.tableCell}>\n                          {app.label}\n                        </TableCell>\n                        <TableCell className={classes.tableCell} />\n                      </StyledTableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Container>\n          </Box>\n        )}\n        <div className={classes.footerDiv} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    userData: state.userDirectory.get(\"userData\"),\n    isAppMembershipsDrawerOpen: state.userDirectory.get(\"isAppMembershipsDrawerOpen\"),\n  }),\n  {setIsAppMembershipsDrawerOpen})\n(memo(AppMembershipsDrawer));\n","import React, { memo } from \"react\";\nimport {\n  makeStyles,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from \"@material-ui/core\";\nimport AdGroupsDrawer from \"./AdGroupsDrawer\";\nimport AppMembershipsDrawer from \"./AppMembershipsDrawer\";\nimport { connect } from \"react-redux\";\nimport {\n  setIsAdGroupsDrawerOpen,\n  setIsAppMembershipsDrawerOpen,\n} from \"../../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    maxWidth: 700,\n  },\n  tableHead: { fontWeight: 600 },\n  tableCellKey: {\n    borderBottom: \"none\",\n  },\n  tableCell: {\n    fontWeight: 600,\n    borderBottom: \"none\",\n  },\n  icons: {\n    fontSize: \"1.25rem\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n  },\n  keyText: {\n    fontSize: \"1rem\",\n  },\n  valueText: {\n    fontSize: \"1rem\",\n    fontWeight: 600,\n  },\n  itemContainer: {\n    paddingBottom: \"1rem\",\n  },\n}));\n\nconst UserOktaInfo = ({userData, setIsAdGroupsDrawerOpen, setIsAppMembershipsDrawerOpen}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableBody>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Account Status\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {userData?.status}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Last Logged In\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {userData?.lastLogin}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                AD Group Memberships\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    setIsAdGroupsDrawerOpen(true);\n                  }}\n                >\n                  View List of AD Group Memberships\n                </Button>\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Application Memberships\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    setIsAppMembershipsDrawerOpen(true);\n                  }}\n                >\n                  View List of Application Memberships\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <AdGroupsDrawer />\n      <AppMembershipsDrawer />\n    </>\n  );\n};\n\nexport default connect(\n  state => ({userData: state.userDirectory.get(\"userData\")}),\n  {setIsAdGroupsDrawerOpen, setIsAppMembershipsDrawerOpen})\n(memo(UserOktaInfo));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_USER_GROUPS = gql`\n  query GetGoogleUserGroups($search: String!) {\n    get_google_user_groups(search: $search) {\n      id\n      email\n      name\n      description\n      totalCount\n    }\n  }\n`;\n","import React, {memo, useEffect} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  Drawer,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {GET_GOOGLE_USER_GROUPS} from \"../../../../../operations/queries/getGoogleUserGroups\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport { connect } from \"react-redux\";\nimport { setIsGoogleGroupsDrawerOpen } from \"../../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"600px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  closeToolbar: {flexShrink: 0},\n  footerDiv: {height: \"3rem\", flexShrink: 0},\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  titleBox: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  box: {overflowY: \"auto\"},\n  table: {\n    maxWidth: \"100%\",\n    maxHeight: \"95%\",\n  },\n  tableHeadText: {\n    fontWeight: 600,\n  },\n  tableCell: {\n    borderBottom: \"none\",\n  },\n}));\n\nconst GoogleGroupsDrawer = ({userData, isGoogleGroupsDrawerOpen, setIsGoogleGroupsDrawerOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  useEffect(() => {}, [isGoogleGroupsDrawerOpen]);\n\n  const [executeSearch, {data}] = useLazyQuery(GET_GOOGLE_USER_GROUPS, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (userData) {\n      executeSearch({variables: {search: userData?.profile?.email}});\n    }\n  }, [userData, executeSearch]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsGoogleGroupsDrawerOpen(open);\n  };\n\n  const handleClose = () => {\n    setIsGoogleGroupsDrawerOpen(false);\n  };\n\n  return (\n    <div>\n      <Drawer\n        anchor=\"right\"\n        open={isGoogleGroupsDrawerOpen}\n        onClose={toggleDrawer(false)}\n        classes={{paper: classes.paper}}\n      >\n        <Toolbar className={classes.closeToolbar}>\n          <Box className={classes.btnDiv}>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleClose}>\n              <CloseIcon /> Close\n            </Button>\n          </Box>\n        </Toolbar>\n\n        <>\n          <Toolbar>\n            <Box className={classes.titleBox}>\n              <div>\n                <Typography component={\"div\"} className={classes.tableHeadText}>\n                  List of Google Groups\n                </Typography>\n              </div>\n              <div> Total: {data?.get_google_user_groups[0]?.totalCount}</div>\n            </Box>\n          </Toolbar>\n          <Divider />\n          {data?.get_google_user_groups[0]?.totalCount > 0 && (\n            <Box mt={2} className={classes.box}>\n              <Container>\n                <TableContainer className={classes.table}>\n                  <Table\n                    size=\"small\"\n                    aria-label=\"application-memberships-table\"\n                  >\n                    <TableBody>\n                      {data?.get_google_user_groups?.map((group) => (\n                        <StyledTableRow key={group.id}>\n                          <TableCell align=\"left\" className={classes.tableCell}>\n                            <Typography component={\"div\"} variant=\"body2\">\n                              {group.name}\n                            </Typography>\n                            <Typography component={\"div\"} variant=\"subtitle2\">\n                              {group.email}\n                            </Typography>\n                          </TableCell>\n                        </StyledTableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Container>\n            </Box>\n          )}\n        </>\n\n        <div className={classes.footerDiv} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    userData: state.userDirectory.get(\"userData\"),\n    isGoogleGroupsDrawerOpen: state.userDirectory.get(\"isGoogleGroupsDrawerOpen\"),\n  }),\n  {setIsGoogleGroupsDrawerOpen}\n)\n(memo(GoogleGroupsDrawer));\n","import React, {memo} from \"react\";\nimport {\n  makeStyles,\n  TableContainer,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button,\n} from \"@material-ui/core\";\nimport GoogleGroupsDrawer from \"./GoogleGroupsDrawer\";\nimport { connect } from \"react-redux\";\nimport { setIsGoogleGroupsDrawerOpen } from \"../../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    maxWidth: \"1000\",\n  },\n  tableHead: {fontWeight: 600},\n  tableCellKey: {\n    borderBottom: \"none\",\n  },\n  tableCell: {\n    fontWeight: 600,\n    borderBottom: \"none\",\n  },\n  icons: {\n    fontSize: \"1.25rem\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst UserGoogleInfo = ({googleUserInfo, setIsGoogleGroupsDrawerOpen}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableBody>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Account Status\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {googleUserInfo?.suspended}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Last Logged In\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {googleUserInfo?.lastLoginTime}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Group Memberships\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={() => {\n                    setIsGoogleGroupsDrawerOpen(true);\n                  }}\n                >\n                  View List of Google Groups\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <GoogleGroupsDrawer />\n    </>\n  );\n};\n\nexport default connect(\n  state => ({googleUserInfo: state.userDirectory.get(\"googleUserInfo\") }),\n  {setIsGoogleGroupsDrawerOpen}\n)\n(memo(UserGoogleInfo));\n","import React, { memo, useEffect, useState } from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {makeStyles, TableCell} from \"@material-ui/core\";\nimport {GET_JAMF_DEVICES} from \"../../../../../operations/queries/getJamfDevices\";\nimport {useHistory} from \"react-router-dom\";\nimport handleError from \"../../../../../data/handleError\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(() => ({\n  tableCell: {\n    borderBottom: \"none\",\n  },\n}));\n\nconst JamfDevicesRows = ({ setJamfTotal, userData }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [jamfDevicesData, setJamfDevicesData] = useState();\n\n  const [executeSearch] = useLazyQuery(GET_JAMF_DEVICES, {\n    onCompleted: (data) => {\n      setJamfDevicesData(data.get_jamf_devices);\n      setJamfTotal(data.get_jamf_devices?.length);\n    },\n    onError: (error) => {\n      setJamfDevicesData([]);\n      setJamfTotal(0);\n      handleError(error)(history);\n    },\n  });\n\n  useEffect(() => {\n    if (userData)\n      executeSearch({variables: {search: userData?.profile?.email}});\n  }, [userData, executeSearch]);\n\n  return (\n    <>\n      {jamfDevicesData && (\n        <>\n          {jamfDevicesData?.length > 0 &&\n            jamfDevicesData?.map((device) => (\n              <StyledTableRow key={device.id}>\n                <TableCell className={classes.tableCell}>\n                  {device.deviceName}\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                  {device.model}\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                  {device.serialNumber}\n                </TableCell>\n                <TableCell className={classes.tableCell}>\n                  {device.username}\n                </TableCell>\n              </StyledTableRow>\n            ))}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  state => ({ userData: state.userDirectory.get(\"userData\")}), {})\n(memo(JamfDevicesRows));\n","import React, { memo, useEffect, useState } from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {makeStyles, TableCell} from \"@material-ui/core\";\nimport {GET_GOOGLE_CHROME_DEVICES} from \"../../../../../operations/queries/getGoogleChromeDevices\";\nimport {useHistory} from \"react-router-dom\";\nimport handleError from \"../../../../../data/handleError\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(() => ({\n  tableCell: {\n    borderBottom: \"none\",\n  },\n}));\n\nconst GoogleDevicesRows = ({userData, setGoogleTotal}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [googleDevicesData, setGoogleDevicesData] = useState();\n\n  const [executeSearch] = useLazyQuery(GET_GOOGLE_CHROME_DEVICES, {\n    onCompleted: (data) => {\n      setGoogleDevicesData(data.get_google_chrome_devices);\n      setGoogleTotal(data.get_google_chrome_devices?.length);\n    },\n    onError: (error) => {\n      setGoogleDevicesData([]);\n      setGoogleTotal(0);\n      handleError(error)(history);\n    },\n  });\n\n  useEffect(() => {\n    if (userData) {\n      executeSearch({\n        variables: {search: userData?.profile?.email},\n      });\n    }\n  }, [userData, executeSearch]);\n\n  return (\n    <>\n      {googleDevicesData && (\n        <>\n          {googleDevicesData?.length > 0 &&\n            googleDevicesData?.map(\n              (device) =>\n                device.status !== \"none\" && (\n                  <StyledTableRow key={device.deviceId}>\n                    <TableCell className={classes.tableCell}>\n                      Chrome OS Device\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {device.model}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {device.serialNumber}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {device.annotatedUser}\n                    </TableCell>\n                  </StyledTableRow>\n                )\n            )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  state => ({userData: state.userDirectory.get(\"userData\")}), {})\n(memo(GoogleDevicesRows));\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Box,\n  TableContainer,\n  makeStyles,\n  Typography,\n  Table,\n  TableBody,\n  TableHead,\n  TableCell,\n  TableRow,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport JamfDevicesRows from \"./JamfDevicesRows\";\nimport GoogleDevicesRows from \"./GoogleDevicesRows\";\n\nconst useStyles = makeStyles(theme => ({\n  box: { width: \"100%\" },\n  heading: {\n    fontWeight: \"bold\",\n  },\n  table: {\n    height: \"100%\",\n  },\n  tableHeadCell: {\n    background: theme.palette.background.paper,\n  },\n  tableHeadText: {\n    fontSize: \"1rem\",\n    fontWeight: 600,\n  },\n  tableCell: {\n    borderBottom: \"none\",\n  },\n  totalBox: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst DevicesInfo = () => {\n  const classes = useStyles();\n  const [jamfTotal, setJamfTotal] = useState();\n  const [googleTotal, setGoogleTotal] = useState();\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const sum = jamfTotal + googleTotal;\n    setTotal(sum);\n  }, [jamfTotal, googleTotal]);\n\n  return (\n    <Box className={classes.box}>\n      <>\n        {total === 0 ? (\n          <Box ml={3}>\n            <Typography component={\"div\"}>No Devices</Typography>\n          </Box>\n        ) : (\n          <>\n            <Box className={classes.totalBox}>\n              <Typography component={\"div\"}> Total:\n                {!total || isNaN(total)\n                  ? <CircularProgress size={18} color=\"secondary\" style={{margin: \"0 6px\"}}/>\n                  : ` ${total}`}\n              </Typography>\n            </Box>\n            <TableContainer className={classes.table}>\n              <Table\n                stickyHeader={true}\n                size=\"small\"\n                aria-label=\"devices-table\"\n              >\n                <TableHead className={classes.tableHead}>\n                  <TableRow>\n                    <TableCell className={classes.tableHeadCell}>\n                      <Typography\n                        component={\"div\"}\n                        className={classes.tableHeadText}\n                      >\n                        Device Name\n                      </Typography>\n                    </TableCell>\n                    <TableCell className={classes.tableHeadCell}>\n                      <Typography\n                        component={\"div\"}\n                        className={classes.tableHeadText}\n                      >\n                        Device Type\n                      </Typography>\n                    </TableCell>\n                    <TableCell className={classes.tableHeadCell}>\n                      <Typography\n                        component={\"div\"}\n                        className={classes.tableHeadText}\n                      >\n                        Device Serial\n                      </Typography>\n                    </TableCell>\n                    <TableCell className={classes.tableHeadCell}>\n                      <Typography\n                        component={\"div\"}\n                        className={classes.tableHeadText}\n                      >\n                        Managed/User\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody size=\"small\" className={classes.tableBody}>\n                  <GoogleDevicesRows setGoogleTotal={setGoogleTotal} />\n                  <JamfDevicesRows setJamfTotal={setJamfTotal} />\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        )}\n      </>\n    </Box>\n  );\n};\n\nexport default DevicesInfo;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_SERVICE_NOW_USER_GROUPS = gql`\n  query GetServiceNowUserGroups($search: String!) {\n    get_service_now_user_groups(search: $search) {\n      groupsManage {\n        id\n        parentGroup\n        manager\n        name\n        unitLeader\n        createdOn\n      }\n      groupsMembership {\n        id\n        createdOn\n        createdBy\n        name\n      }\n    }\n  }\n`;\n","import {\n  Box,\n  makeStyles,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Table,\n} from \"@material-ui/core\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {width: \"100%\"},\n  heading: {\n    fontWeight: \"bold\",\n  },\n  table: {},\n  tableHeadCell: {\n    background: theme.palette.background.paper,\n  },\n  tableHeadText: {\n    fontSize: \"1rem\",\n    fontWeight: 600,\n  },\n  tableCell: {\n    borderBottom: \"none\",\n  },\n  totalBox: {\n    marginTop: \"8px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst ServiceNowTable = ({columns, titles, title, total}) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Box className={classes.totalBox}>\n        <h3>{title}</h3>\n        <Typography component={\"div\"}>Total: {total}</Typography>\n      </Box>\n      <TableContainer className={classes.table}>\n        <Table stickyHeader={true} size=\"small\" aria-label=\"devices-table\">\n          <TableHead>\n            <TableRow>\n              {titles.map((title, index) => (\n                <TableCell className={classes.tableHeadCell} key={index}>\n                  <Typography\n                    component={\"div\"}\n                    className={classes.tableHeadText}\n                  >\n                    {title}\n                  </Typography>\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {columns.map((row, index) => (\n              <StyledTableRow id={index} key={index}>\n                {row.map((cell, idx) => (\n                  <TableCell key={idx}>{cell}</TableCell>\n                ))}\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default ServiceNowTable;\n","import React, {memo, useEffect} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport {GET_SERVICE_NOW_USER_GROUPS} from \"../../../../../operations/queries/getServiceNowUserGroups\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport ServiceNowTable from \"./ServiceNowTable\";\n\nconst useStyles = makeStyles(() => ({\n  box: {width: \"100%\"},\n  heading: {\n    fontWeight: \"bold\",\n  },\n}));\n\nconst ServiceNowInfo = ({userData}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [executeSearch, {data}] = useLazyQuery(GET_SERVICE_NOW_USER_GROUPS, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (userData) {\n      const searchData = userData?.profile?.email;\n      executeSearch({\n        variables: {search: searchData},\n      });\n    }\n  }, [userData, executeSearch]);\n\n  const groupsMembership =\n    data?.get_service_now_user_groups?.groupsMembership || [];\n  const groupsManage = data?.get_service_now_user_groups?.groupsManage || [];\n\n  if (!groupsMembership.length && !groupsManage.length)\n    return (\n      <Box className={classes.box}>\n        <Box ml={3}>\n          <Typography component={\"div\"}>No Teams</Typography>\n        </Box>\n      </Box>\n    );\n\n  return (\n    <Box className={classes.box}>\n      {!!groupsManage.length && (\n        <ServiceNowTable\n          total={groupsManage.length}\n          title={\"Teams Managed\"}\n          titles={[\n            \"Team Name\",\n            \"Parent Team\",\n            \"Manager\",\n            \"Unit Leader\",\n            \"Created\",\n          ]}\n          columns={groupsManage.map((g) => [\n            g.name,\n            g.parentGroup,\n            g.manager,\n            g.unitLeader,\n            g.createdOn,\n          ])}\n        />\n      )}\n      {!!groupsMembership.length && (\n        <ServiceNowTable\n          total={groupsMembership.length}\n          title={\"Team Memberships\"}\n          titles={[\"Team Name\", \"Member Since\"]}\n          columns={groupsMembership.map((g) => [g.name, g.createdOn])}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({userData: state.userDirectory.get(\"userData\")}),\n  {}\n)(memo(ServiceNowInfo));\n","import React, {useState} from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DevicesIcon from \"@material-ui/icons/Devices\";\nimport UserOktaInfo from \"./UserOktaInfo\";\nimport UserGoogleInfo from \"./UserGoogleInfo\";\nimport DevicesInfo from \"./DevicesInfo\";\nimport ServiceNowInfo from \"./ServiceNowInfo\";\n\nconst useStyles = makeStyles((theme) => ({\n  heading: {\n    fontWeight: \"bold\",\n    display: \"flex\",\n  },\n  rootPanel: {\n    backgroundColor: theme.palette.primary.light,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  iconContainer: {\n    width: 30,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  iconFA: {\n    fontSize: 24,\n  },\n  iconMUI: {\n    fontSize: 28,\n  },\n}));\n\nconst ItInformation = () => {\n  const classes = useStyles();\n  const [itInfoExpanded, setItInfoExpanded] = useState(\"itPanel1\");\n\n  const handleItInfoAccordionChange = (panel) => (event, isExpanded) => {\n    setItInfoExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <Box mb={4}>\n      <Accordion\n        expanded={itInfoExpanded === \"itPanel1\"}\n        onChange={handleItInfoAccordionChange(\"itPanel1\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          classes={{\n            root: classes.rootPanel,\n          }}\n        >\n          <Typography component={\"div\"} className={classes.heading}>\n            <div className={classes.iconContainer}>\n              <FontAwesomeIcon icon=\"dot-circle\" className={classes.iconFA} />\n            </div>\n            Okta Directory\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <UserOktaInfo />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={itInfoExpanded === \"itPanel2\"}\n        onChange={handleItInfoAccordionChange(\"itPanel2\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n          classes={{\n            root: classes.rootPanel,\n          }}\n        >\n          <Typography component={\"div\"} className={classes.heading}>\n            <div className={classes.iconContainer}>\n              <FontAwesomeIcon\n                icon={[\"fab\", \"google\"]}\n                className={classes.iconFA}\n              />\n            </div>\n            Google Workspace\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <UserGoogleInfo />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={itInfoExpanded === \"itPanel3\"}\n        onChange={handleItInfoAccordionChange(\"itPanel3\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n          classes={{\n            root: classes.rootPanel,\n          }}\n        >\n          <div className={classes.iconContainer}>\n            <AccountCircleIcon fontSize=\"medium\" className={classes.iconMUI} />\n          </div>\n          <Typography component={\"div\"} className={classes.heading}>\n            ServiceNow\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <ServiceNowInfo />\n        </AccordionDetails>\n      </Accordion>\n      <Accordion\n        expanded={itInfoExpanded === \"itPanel4\"}\n        onChange={handleItInfoAccordionChange(\"itPanel4\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4bh-content\"\n          id=\"panel4bh-header\"\n          classes={{\n            root: classes.rootPanel,\n          }}\n        >\n          <div className={classes.iconContainer}>\n            <DevicesIcon fontSize=\"medium\" className={classes.iconMUI} />\n          </div>\n          <Typography component={\"div\"} className={classes.heading}>\n            Devices\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <DevicesInfo />\n        </AccordionDetails>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default ItInformation;\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport {\n  Box,\n  IconButton,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport {GET_COST_CENTERS} from \"../../../../operations/queries/getCostCenters\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport { connect } from \"react-redux\";\nimport { setCostCenters, } from \"../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    maxWidth: 700,\n  },\n  tableCellKey: {\n    borderBottom: \"none\",\n  },\n  tableCell: {\n    fontWeight: 600,\n    borderBottom: \"none\",\n  },\n\n  tableHeadCell: {\n    fontWeight: \"bold\",\n  },\n  icon: {\n    fontSize: \"1rem\",\n  },\n  copySpan: {\n    marginLeft: theme.spacing(1),\n  },\n  costCenterBox: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst FinanceInformation = ({userData, costCenters, setCostCenters}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [viewBreakdown, setViewBreakdown] = useState(false);\n  const [partOne, setPartOne] = useState();\n  const [partTwo, setPartTwo] = useState();\n  const [partThree, setPartThree] = useState();\n  const [partFour, setPartFour] = useState();\n  const [partFive, setPartFive] = useState();\n  const [partOneDesc, setPartOneDesc] = useState();\n  const [partTwoDesc, setPartTwoDesc] = useState();\n  const [partThreeDesc, setPartThreeDesc] = useState();\n  const [partFourDesc, setPartFourDesc] = useState();\n  const [partFiveDesc, setPartFiveDesc] = useState();\n  const [isCopied, setIsCopied] = useState(false);\n\n  useQuery(GET_COST_CENTERS, {\n    onCompleted: (data) => setCostCenters(data.get_cost_centers),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const getUserCostCenterDetails = useCallback(\n    (userCostCenter) => {\n      const split = userCostCenter.split(\"-\");\n\n      setPartOne(split[0]);\n      setPartTwo(split[1]);\n      setPartThree(split[2]);\n      setPartFour(split[3]);\n      setPartFive(split[4]);\n\n      costCenters.forEach((costCenter) => {\n        if (costCenter.id === \"CC\" + split[0]) {\n          setPartOneDesc(costCenter.costCenterDescription);\n        } else if (costCenter.id === \"PMCC\" + split[1]) {\n          setPartTwoDesc(costCenter.costCenterDescription);\n        } else if (costCenter.id === \"MCC\" + split[2]) {\n          setPartThreeDesc(costCenter.costCenterDescription);\n        } else if (costCenter.id === \"FAD\" + split[3]) {\n          setPartFourDesc(costCenter.costCenterDescription);\n        } else if (costCenter.id === \"CD\" + split[4]) {\n          setPartFiveDesc(costCenter.costCenterDescription);\n        }\n      });\n\n      setViewBreakdown(true);\n    },\n    [costCenters]\n  );\n\n  useEffect(() => {\n    if (userData && costCenters) {\n      if (userData?.profile?.costCenter) {\n        getUserCostCenterDetails(userData?.profile?.costCenter);\n      }\n    }\n  }, [userData, costCenters, getUserCostCenterDetails]);\n\n  return (\n    <Box>\n      <Toolbar>\n        <Box>\n          <TopTypography>Cost Center</TopTypography>\n        </Box>\n      </Toolbar>\n\n      {userData?.profile?.costCenter ? (\n        <>\n          {viewBreakdown ? (\n            <Box ml={2}>\n              <Box ml={2} className={classes.costCenterBox}>\n                <Box>\n                  <Typography>\n                    <strong>{userData?.profile?.costCenter}</strong>\n                  </Typography>\n                </Box>\n                <Box>\n                  <CopyToClipboard\n                    text={userData?.profile?.costCenter}\n                    onCopy={() => setIsCopied(true)}\n                  >\n                    <Tooltip title=\"Copy cost center to clipboard\">\n                      <IconButton aria-label=\"copy\">\n                        <FileCopyIcon className={classes.icon} />\n                      </IconButton>\n                    </Tooltip>\n                  </CopyToClipboard>\n                </Box>\n              </Box>\n\n              <Box m={2}>\n                <Typography component={\"div\"} variant=\"body2\">\n                  <strong>Here is a breakdown of the Cost Center:</strong>\n                </Typography>\n              </Box>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  size=\"small\"\n                  aria-label=\"cost center table\"\n                >\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.tableHeadCell}>\n                        Category\n                      </TableCell>\n                      <TableCell className={classes.tableHeadCell}>\n                        Code\n                      </TableCell>\n                      <TableCell className={classes.tableHeadCell}>\n                        Description\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Company Code\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partOne}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partOneDesc}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Parent Management Cost Center\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partTwo}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partTwoDesc}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Management Cost Center\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partThree}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partThreeDesc}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Functional Area Description\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partFour}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partFourDesc}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Country Description\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partFive}\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        {partFiveDesc}\n                      </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        className={classes.tableCellKey}\n                      >\n                        Every Cost Center Ends in\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell}>\n                        00\n                      </TableCell>\n                      <TableCell align=\"left\" className={classes.tableCell} />\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          ) : (\n            <LoadingCircle text={\"loading cost center details...\"} />\n          )}\n        </>\n      ) : (\n        <Typography>No Cost Center</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default connect(\n  state => ({\n    userData: state.userDirectory.get(\"userData\"),\n    costCenters: state.userDirectory.get(\"costCenters\")\n  }),\n  {setCostCenters})\n(memo(FinanceInformation));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_AUDITOR_NONFTE_REPORTS = gql`\n  query GetAuditorNonfteReports {\n    get_auditor_nonfte_reports {\n      id\n      auditorUsername\n      auditUserFirstName\n      auditUserLastName\n      auditUserEmail\n      auditUserStatus\n      auditUserInformation\n      auditCompleted\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_REPORTING_NONFTE_AUDIT = gql`\n  mutation CreateReportingNonFteAudit($input: ReportingNonFTEAuditInput) {\n    createReportingNonFteAudit(input: $input) {\n      auditorUsername\n      auditUserFirstName\n      auditUserLastName\n      auditUserEmail\n      auditUserStatus\n      auditUserInformation\n      auditCompleted\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { SEARCH_USERS_QUERY } from \"../../../../operations/queries/searchUsersQuery\";\nimport handleError from \"../../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: { position: \"relative\" },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n  textField: {\n    width: \"40ch\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 1,\n    width: \"40ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"10rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n}));\n\nconst ManagerSelect = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [usersData, setUsersData] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERS_QUERY, {\n    onCompleted: (data) => {\n      setUsersData(data.search_users);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchQuery?.length > 0) {\n      executeSearch({ variables: { search: searchQuery } });\n\n      setResultsOpen(true);\n    } else if (searchQuery?.length === 0) {\n      setUsersData(\"\");\n      setResultsOpen(false);\n    }\n  }, [searchQuery, executeSearch]);\n\n  const handleClick = (selected) => {\n    props.setSelectedManager(\n      `${selected.profile.firstName} ${selected.profile.lastName}`\n    );\n    props.setViewSubmitBtn(true);\n    setSearchQuery(\"\");\n  };\n\n  const clearSelectedManager = () => {\n    props.setSelectedManager(\"\");\n  };\n\n  return (\n    <>\n      {!props.selectedManager && (\n        <Box mb={2} className={classes.box}>\n          <TextField\n            required\n            label=\"Search &amp; select manager\"\n            variant=\"standard\"\n            helperText=\"Search by Name, Email, or HRIS ID\"\n            color=\"secondary\"\n            size=\"small\"\n            autoComplete=\"off\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className={classes.textField}\n          />\n\n          {searchQuery?.length > 0 && (\n            <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n              {usersData && (\n                <Box className={classes.resultsBox}>\n                  <Paper>\n                    {usersData?.length === 0 ? (\n                      <Box m={1}>\n                        <NoResultsTypography/>\n                      </Box>\n                    ) : (\n                      <List>\n                        {usersData.map((user) => (\n                          <React.Fragment key={user.id}>\n                            <ListItem\n                              key={user.id}\n                              button\n                              onClick={() => handleClick(user)}\n                            >\n                              <ListItemText\n                                primary={\n                                  <>\n                                    <Typography\n                                      component={\"div\"}\n                                      variant=\"subtitle1\"\n                                    >\n                                      {user.profile.firstName}{\" \"}\n                                      {user.profile.lastName}\n                                    </Typography>\n                                  </>\n                                }\n                              />\n                            </ListItem>\n                            {usersData?.length > 1 && <Divider />}\n                          </React.Fragment>\n                        ))}\n                      </List>\n                    )}\n                  </Paper>\n                </Box>\n              )}\n            </Collapse>\n          )}\n        </Box>\n      )}\n      {props.selectedManager && (\n        <>\n          <Box mt={2}>\n            <Box mb={1} mt={2}>\n              Selected:\n            </Box>\n            <Container m={1} className={classes.selectedContainer}>\n              {props.selectedManager}\n            </Container>\n          </Box>\n          <Box mt={1}>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={() => clearSelectedManager()}\n            >\n              Clear Selected\n            </Button>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ManagerSelect;\n","import React, {memo} from \"react\";\nimport {Drawer, makeStyles} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../taskManager/TaskCloseButtonToolbar\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  footerDiv: {height: \"3rem\", flexShrink: 0},\n}));\n\nconst StyledDrawer = ({children, isOpen, handleClose, handleDrawerClose}) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Drawer\n        anchor=\"right\"\n        open={isOpen}\n        onClose={handleDrawerClose || handleClose}\n        classes={{paper: classes.paper}}\n      >\n        <TaskCloseButtonToolbar handleClose={handleClose}/>\n        {children}\n        <div className={classes.footerDiv} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default memo(StyledDrawer);\n","import React, { memo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TableCell,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport { CREATE_REPORTING_NONFTE_AUDIT } from \"../../../../operations/mutations/createReportingNonFteAudit\";\nimport ManagerSelect from \"./ManagerSelect\";\nimport { connect } from \"react-redux\";\nimport { setIsAuditDrawerOpen, setSelectedAuditUser } from \"../../../../data/redux/userDirectory/userDirectoryActions\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\nimport StyledDrawer from \"../../../../components/drawers/StyledDrawer\";\nimport TaskContainerTable from \"../../../../components/taskManager/TaskContainerTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"35ch\",\n  },\n  tableCellKey: {\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n  },\n  tableCell: {\n    fontWeight: 700,\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst AuditStatuses = [\n  {value: \"Not audited\", label: \"Not Audited\"},\n  {value: \"Reports to me - no change\"},\n  {value: \"Not reporting to me - manager known\"},\n  {value: \"Not reporting to me - manager unknown\"},\n  {value: \"User is a full time employee\"},\n  {value: \"User needs to be offboarded\"},\n]\n\nconst UpdateAuditDrawer = ({ selectedAuditUser, setSelectedAuditUser, isAuditDrawerOpen, setIsAuditDrawerOpen, runSearch }) => {\n  const classes = useStyles();\n  const [auditStatus, setAuditStatus] = useState(\"Not audited\");\n  const [viewSubmitBtn, setViewSubmitBtn] = useState(false);\n  const [viewManagerSelect, setViewManagerSelect] = useState(false);\n  const [selectedManager, setSelectedManager] = useState(\"\");\n  const [viewOffboardBtn, setViewOffboardBtn] = useState(false);\n\n  const [createReportingNonFteAudit] = useMutation(\n    CREATE_REPORTING_NONFTE_AUDIT,\n    {\n      onCompleted: () => setViewOffboardBtn(true),\n    }\n  );\n\n  const createAuditReport = () => {\n    createReportingNonFteAudit({\n      variables: {\n        input: {\n          auditUserFirstName: selectedAuditUser.profile.firstName,\n          auditUserLastName: selectedAuditUser.profile.lastName,\n          auditUserEmail: selectedAuditUser.profile.email,\n          auditUserStatus: auditStatus,\n          auditUserInformation: selectedManager,\n          auditCompleted: false,\n        },\n      },\n    });\n  };\n\n  const handleSubmit = () => {\n    createAuditReport();\n    if (auditStatus !== \"User needs to be offboarded\") {\n      setIsAuditDrawerOpen(false);\n    }\n    runSearch();\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsAuditDrawerOpen(open);\n  };\n\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setAuditStatus(value);\n    if (value === \"Not reporting to me - manager known\") {\n      setViewManagerSelect(true);\n      setViewSubmitBtn(false);\n    } else if (value === \"Not audited\") {\n      setViewManagerSelect(false);\n      setSelectedManager(\"\");\n      setViewSubmitBtn(false);\n    } else {\n      setViewManagerSelect(false);\n      setSelectedManager(\"\");\n      setViewSubmitBtn(true);\n    }\n  };\n\n  const handleClose = () => {\n    setIsAuditDrawerOpen(false);\n    setViewManagerSelect(false);\n    setSelectedManager(\"\");\n    setViewSubmitBtn(false);\n    setSelectedAuditUser();\n  };\n\n  return (\n    <StyledDrawer\n        isOpen={isAuditDrawerOpen}\n        handleDrawerClose={toggleDrawer(false)}\n        handleClose={handleClose}\n      >\n        {selectedAuditUser && (\n          <Container>\n            <Typography component={\"div\"}>\n              Update Audit Status\n            </Typography>\n            <TaskContainerTable>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Name\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {selectedAuditUser.profile.firstName}{\" \"}\n                  {selectedAuditUser.profile.lastName}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Email\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {selectedAuditUser.profile.email}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.tableCellKey}\n                >\n                  Employee Type\n                </TableCell>\n                <TableCell align=\"left\" className={classes.tableCell}>\n                  {selectedAuditUser.profile.employeeType}\n                </TableCell>\n              </TableRow>\n            </TaskContainerTable>\n\n            <Divider className={classes.divider} />\n\n            {!viewOffboardBtn && (\n              <Grid container spacing={3}>\n                <Grid item container>\n                  <Grid item xs={4}>\n                    <Typography component={\"div\"} variant=\"subtitle1\">\n                      Select audit status\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={8}>\n                    <FormControl variant=\"filled\">\n                      <InputLabel id=\"audit-status-select-label\">\n                        Audit Status\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        labelId=\"audit-status-select-label\"\n                        id=\"audit-status-select\"\n                        value={auditStatus}\n                        onChange={handleChange}\n                        className={classes.select}\n                      >\n                        {AuditStatuses?.map(status => (\n                          <MenuItem\n                            key={status.value}\n                            value={status.value}\n                          >\n                            {status?.label || status?.value}\n                          </MenuItem>))}\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n                {viewManagerSelect && (\n                  <Grid item container>\n                    <Grid item xs={4}>\n                      <Typography component={\"div\"} variant=\"subtitle1\">\n                        Search &amp; select manager\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={8}>\n                      <ManagerSelect\n                        selectedManager={selectedManager}\n                        setSelectedManager={setSelectedManager}\n                        setViewSubmitBtn={setViewSubmitBtn}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n                <Grid item container>\n                  <Grid item xs={8}>\n                    <Typography component={\"div\"} variant=\"subtitle1\">\n                      {auditStatus === \"User needs to be offboarded\" &&\n                        \"You can offboard user after you submit\"}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    {viewSubmitBtn && (\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleSubmit}\n                      >\n                        Submit Audit Update\n                      </Button>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            )}\n            {viewOffboardBtn && (\n              <Box>\n                <Button\n                  component={Link}\n                  to={FrontendRoutes.OFFBOARD_EMPLOYEE}\n                  variant=\"contained\"\n                >\n                  Offboard User\n                </Button>\n              </Box>\n            )}\n          </Container>\n        )}\n      </StyledDrawer>\n  );\n};\n\nexport default connect(\n  state => ({\n    selectedAuditUser: state.userDirectory.get(\"selectedAuditUser\"),\n    isAuditDrawerOpen: state.userDirectory.get(\"isAuditDrawerOpen\")\n  }),\n  {setSelectedAuditUser, setIsAuditDrawerOpen})\n(memo(UpdateAuditDrawer));\n","import React, { memo, useContext, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  Typography,\n} from \"@material-ui/core\";\nimport { AuthUserContext } from \"../../../../AuthUserContextProvider\";\nimport { GET_AUDITOR_NONFTE_REPORTS } from \"../../../../operations/queries/getAuditorNonfteReports\";\nimport UpdateAuditDrawer from \"./UpdateAuditDrawer\";\nimport handleError from \"../../../../data/handleError\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport { getComparator, stableSort } from \"../../../../data/helper/helpers\";\nimport EnhancedTableHead from \"../../../../components/table/EnhancedTableHead\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport { connect } from \"react-redux\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\nimport { setSelectedOffboardUser } from \"../../../../data/redux/offboardRequest/offboardRequestActions\";\nimport {\n  setIsAuditDrawerOpen,\n  setSelectedAuditUser,\n} from \"../../../../data/redux/userDirectory/userDirectoryActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    height: \"20rem\",\n  },\n  tableBox: {\n    padding: theme.spacing(2),\n  },\n  tableHeadCell: {\n    fontWeight: \"bold\",\n    background: \"#16173f\",\n  },\n  tableBodyCell: {\n    fontSize: \".9rem\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Name\",\n  },\n  {\n    id: \"employeeType\",\n    numeric: false,\n    disablePadding: false,\n    label: \"EmployeeType\",\n  },\n  {\n    id: \"auditStatus\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Audit Status\",\n  },\n  {\n    id: \"action\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Action\",\n  },\n];\n\nconst NonFteAudit = ({setSelectedOffboardUser, userData, setSelectedAuditUser, setIsAuditDrawerOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { authUser, authUserDirectReports } = useContext(AuthUserContext);\n  const [nonFtes, setNonFtes] = useState();\n  const [order, setOrder] = useState(\"desc\");\n  const [orderBy, setOrderBy] = useState(\"id\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const [executeSearch, {loading}] = useLazyQuery(GET_AUDITOR_NONFTE_REPORTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => getNonFtes(data.get_auditor_nonfte_reports),\n    onError: error => handleError(error)(history)\n  });\n\n  useEffect(() => {\n    if (authUser?.profile?.userName === userData?.profile?.userName) {\n      if (authUserDirectReports?.length > 0) {\n        executeSearch();\n      } else {\n        setNonFtes([]);\n      }\n    }\n  }, [authUserDirectReports, executeSearch, authUser, userData]);\n\n  const getNonFtes = async (auditorData) => {\n    const filteredReports = await authUserDirectReports.filter(\n      (report) =>\n        report.profile.employeeType.includes(\"Contractor\") ||\n        report.profile.employeeType.includes(\"Partner\")\n    );\n\n    if (auditorData?.length > 0) {\n      auditorData.forEach((data) => {\n        if (data.auditCompleted) {\n          filteredReports.splice(\n            filteredReports.findIndex(\n              ({ profile }) => profile.email === data.auditUserEmail\n            ),\n            1\n          );\n        } else {\n          const foundIndex = filteredReports.findIndex(\n            ({ profile }) => profile.email === data.auditUserEmail\n          );\n          filteredReports[foundIndex] = {\n            ...filteredReports[foundIndex],\n            auditStatus: data.auditUserStatus,\n          };\n        }\n      });\n      setNonFtes(filteredReports);\n    } else {\n      setNonFtes(filteredReports);\n    }\n  };\n\n  const handleOnSelectedClick = (user) => {\n    setSelectedAuditUser(user);\n    setIsAuditDrawerOpen(true);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleOffboardUser = (user) => {\n    console.log({user})\n    setSelectedOffboardUser(user);\n  }\n\n  return (\n    <>\n      <Box mb={2}>\n        <Typography component={'div'}>\n          Please review your non-full time employee direct reports and ensure\n          they're audited correctly.\n        </Typography>\n      </Box>\n      {loading ?  <LoadingCircle text={\"loading...\"} />\n        :(\n        <>\n          {nonFtes?.length > 0 ? (\n            <Box>\n              <TableContainer className={classes.tableContainer}>\n                <Table stickyHeader size=\"small\">\n                  <EnhancedTableHead\n                    classes={classes}\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    className={classes.tableHeadCell}\n                    headCells={headCells}\n                  />\n\n                  <TableBody className={classes.tableBody}>\n                    {stableSort(nonFtes, getComparator(order, orderBy))\n                      .slice(\n                        page * rowsPerPage,\n                        page * rowsPerPage + rowsPerPage\n                      )\n                      .map(user => {\n                        return (\n                          <StyledTableRow\n                            tabIndex={-1}\n                            id={user.id}\n                            key={user.id}\n                          >\n                            <TableCell className={classes.tableBodyCell}>\n                              {user.profile.firstName} {user.profile.lastName}\n                              <br />\n                              {user.profile.email}\n                            </TableCell>\n                            <TableCell className={classes.tableBodyCell}>\n                              {user.profile.employeeType}\n                            </TableCell>\n                            <TableCell className={classes.tableBodyCell}>\n                              {user.auditStatus\n                                ? user.auditStatus\n                                : \"Not audited\"}\n                            </TableCell>\n                            <TableCell className={classes.tableBodyCell}>\n                              {user.auditStatus &&\n                              user.auditStatus ===\n                                \"User needs to be offboarded\" ? (\n                                <Box>\n                                  <Button\n                                    size=\"small\"\n                                    onClick={() => handleOffboardUser(user)}\n                                    component={Link}\n                                    to={FrontendRoutes.OFFBOARD_EMPLOYEE}\n                                    variant=\"contained\"\n                                  >\n                                    Offboard User\n                                  </Button>\n                                </Box>\n                              ) : (\n                                <Button\n                                  variant=\"outlined\"\n                                  size=\"small\"\n                                  onClick={() => {\n                                    handleOnSelectedClick(user);\n                                  }}\n                                >\n                                  Update Audit Status\n                                </Button>\n                              )}\n                            </TableCell>\n                          </StyledTableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={nonFtes?.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </Box>\n          ) : (\n            <Box ml={3}>\n              <Typography component={'div'}>\n                You have no non-full time direct reports to audit\n              </Typography>\n            </Box>\n          )}\n          <UpdateAuditDrawer runSearch={executeSearch} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  state => ({ userData: state.userDirectory.get(\"userData\")}),\n  {setSelectedOffboardUser, setSelectedAuditUser, setIsAuditDrawerOpen})\n(memo(NonFteAudit));\n","import React, {memo} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  userSubtitle: {\n    color: theme.palette.warning.main,\n    fontWeight: \"bold\",\n  },\n  userText: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst ProfileTypography = ({subtitle, text}) => {\n  const classes = useStyles();\n  return (\n    <>\n      {subtitle && (\n        <Typography\n          component={\"div\"}\n          variant=\"subtitle1\"\n          className={classes.userSubtitle}\n        >\n          {subtitle}\n        </Typography>\n      )}\n\n      <Typography\n        component={\"div\"}\n        gutterBottom\n        variant=\"body2\"\n        className={classes.userText}\n      >\n        {text ? text : \"-\"}\n      </Typography>\n    </>\n  );\n};\n\nexport default memo(ProfileTypography);\n","import React, { createRef, memo } from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport BadgeIcon from \"../../../components/badges/BadgeIcon\";\nimport ConditionalWrapper from \"../../../components/ConditionalWrapper\";\n\nconst UserBadgeChip = ({ tooltipTitle, ...props }) => {\n  const ref = createRef();\n\n  return (\n    <ConditionalWrapper\n      condition={tooltipTitle}\n      wrapper={children =>\n        <Tooltip title={tooltipTitle} placement=\"bottom\">\n          {children}\n        </Tooltip>\n      }\n    >\n      <BadgeIcon ref={ref} {...props} />\n    </ConditionalWrapper>\n  );\n};\n\nexport default memo(UserBadgeChip);","import React, { memo } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport UserBadgeChip from \"../UserBadgeChip\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"relative\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  goldStar: {\n    color: \"#FFD700\",\n  },\n  goldStarText: {\n  },\n  silverStar: {\n    color: \"#C0C0C0\",\n  },\n  silverStarText: {\n  },\n  bronzeStar: {\n    color: \"#cd7f32\",\n  },\n  bronzeStarText: {\n  },\n  count: {\n    color: \"#1d1f52\",\n    position: \"absolute\",\n    fontSize: \"0.825rem\",\n    top: \"0.75rem\",\n  },\n});\n\nconst getTenureToolTip = (tenureYears) => {\n  if (tenureYears < 1)\n    return \"Newbie, Welcome!\";\n  if (tenureYears === 5)\n    return `Half a Decade LPer!`;\n  if (tenureYears < 10)\n    return `${tenureYears} Year LPer`;\n  if (tenureYears >= 10)\n    return `Decade or more LPer!`;\n};\n\nconst getClasses = (classes, tenureYears) => {\n  if (tenureYears < 5) {\n    return [classes.bronzeStar, classes.bronzeStarText];\n  }\n  if (tenureYears < 10) {\n    return [classes.silverStar, classes.silverStarText];\n  }\n  if (tenureYears >= 10) {\n    return [classes.goldStar, classes.goldStarText];\n  }\n};\n\nconst UserStarBadge = ({ tenureYears }) => {\n  const classes = useStyles();\n  const [starClasses, starTextClasses] = getClasses(classes, tenureYears);\n\n  return (\n    <UserBadgeChip\n      tooltipTitle={getTenureToolTip(tenureYears)}\n      icon={\n        <div className={classes.root}>\n          <StarIcon fontSize=\"large\" className={starClasses} />\n\n          {tenureYears > 0 && (\n            <Typography component=\"span\" className={`${starTextClasses} ${classes.count}`}>\n              {tenureYears}\n            </Typography>\n          )}\n        </div>\n      }\n    />\n  );\n};\n\nexport default memo(UserStarBadge);","import { SvgIcon } from \"@material-ui/core\";\nimport React, { memo } from \"react\";\n\nconst KnowledgeSvg = ({color, ...props}) => {\n  return (\n    <SvgIcon fontSize=\"large\" viewBox=\"0 0 280 280\" {...props}>\n      <ellipse\n        rx={28}\n        ry={28}\n        transform=\"matrix(5 0 0 5 140 140)\"\n        fill=\"transparent\"\n      />\n      <path     d=\"M119.1 39.125c-.3.7-.7 4.2-1.1 7.8-.8 8.5-1.5 11-2.9 11-.6 0-4.5 1.5-8.6 3.3l-7.5 3.3-7.4-5.9-7.4-5.9-15.5 15.5-15.6 15.6 4.5 5.6c7.5 9.6 7.4 9.2 5.9 12.3-.7 1.5-2.3 5.4-3.5 8.7l-2.3 6-6.3.7c-3.5.5-7.9 1-9.6 1.3l-3.3.6v43.7l7.7.7c4.2.4 8.5 1 9.5 1.4 1.6.6 8.8 14.8 8.8 17.4 0 .4-2.5 3.9-5.5 7.7s-5.5 7.2-5.5 7.7c0 1.2 29.3 30.3 30.5 30.3.5 0 4.1-2.5 7.9-5.5s6.9-5.5 7-5.5c.5 0 16.3 6.6 17.2 7.3.7.3 1.5 4.5 1.9 9.2l.7 8.5 22.1-.2 22.2-.3 1-8.4c.7-5.6 1.5-8.7 2.5-9.2 2-1.1 15.7-6.9 16.3-6.9.2 0 3.5 2.5 7.3 5.5s7.4 5.5 7.9 5.5c.6 0 7.7-6.7 15.9-14.9 10.4-10.5 14.6-15.3 14.1-16.2-.5-.8-3.1-4.3-5.8-7.8-4.9-6.1-5-6.4-3.8-9.5.7-1.7 2.2-5.6 3.4-8.6 1.1-3 2.1-5.6 2.2-5.8.1-.1 4.1-.7 8.9-1.4l8.6-1.1v-44.4l-8.6-.9-8.5-.9-3.5-8.8c-4-9.9-4.3-8.3 3.5-18.2l4.5-5.6-15.6-15.6-15.5-15.5-7.5 6c-5.3 4.3-7.9 5.7-8.9 5.1-.8-.5-4.5-2.1-8.4-3.6-3.8-1.5-7.2-2.9-7.5-3.1-.2-.2-.9-4.5-1.5-9.5l-1-9.2-21.8-.3c-16.9-.2-21.8 0-22.1 1Zm34.2 41.4c12.2 2.4 21.3 7.5 30.8 16.9 7.5 7.5 12.6 15.4 15.7 24.7.4 1.1 6.3 3.5 18.1 7.4 9.7 3.2 17.2 6.1 16.8 6.5-.4.3-7.6 2.6-16.1 5-18.8 5.4-18.1 4.3-16.3 23.9.5 4.7.7 8.6.6 8.8s-2.6.6-5.5.9c-5 .5-5.7.9-9.1 5.3-7.3 9.3-20.8 17.6-33.5 20.6-9.8 2.3-24.5 1.5-34-1.8-21.1-7.5-37-26.5-40.7-48.9l-.6-3.6-16.8-4.8c-9.2-2.7-17-5.1-17.4-5.4-.4-.4 7.7-3.5 18-6.9l18.7-6.2 1.7-4.8c4.4-12.4 17.2-26.2 30.2-32.6 12.9-6.4 25.1-7.9 39.4-5Z\" />\n      <path         fill={color}\n                    d=\"M96.7 121.325c-23.7 7.7-43 14.1-42.9 14.2.5.5 85.2 25.4 86.2 25.4.6 0 12.5-3.4 26.4-7.5 14-4.1 25.5-7.5 25.7-7.5s.4 2.3.4 5c0 3.6-.4 5.2-1.5 5.6-.9.4-1.5 1.9-1.5 3.6s-.7 4.6-1.7 6.5c-2 4.4-1 5.3 6.5 5.3h5.2v-6.9c0-5.3-.4-7-1.5-7.5-1.3-.4-1.5-1.9-1.3-6.8l.3-6.2 15-4.5 14.9-4.5-20.4-6.7c-11.3-3.7-30.9-10-43.6-14.1l-23-7.5-43.2 14.1Z\" />\n      <path         fill={color}\n                    d=\"m106.7 163.025.3 6.1 4.7 1.8c19.3 7.3 40.2 7.3 57.3 0l4.5-1.9v-6.1c0-3.7-.4-6-1.1-6-.6 0-7.8 2-15.9 4.5s-15.5 4.5-16.4 4.5-8.4-2-16.7-4.5-15.5-4.5-16-4.5c-.6 0-.9 2.7-.7 6.1Z\" />\n\n      {/*<svg width=\"280px\" height=\"280px\" viewBox=\"0 0 203 204\" {...props}>*/}\n      {/*  <path*/}\n      {/*    d=\"M81.6 9.2c-.3.7-.7 4.2-1.1 7.8-.8 8.5-1.5 11-2.9 11-.6 0-4.5 1.5-8.6 3.3l-7.5 3.3-7.4-5.9-7.4-5.9-15.5 15.5-15.6 15.6 4.5 5.6c7.5 9.6 7.4 9.2 5.9 12.3-.7 1.5-2.3 5.4-3.5 8.7l-2.3 6-6.3.7c-3.5.5-7.9 1-9.6 1.3l-3.3.6v43.7l7.7.7c4.2.4 8.5 1 9.5 1.4 1.6.6 8.8 14.8 8.8 17.4 0 .4-2.5 3.9-5.5 7.7-3 3.8-5.5 7.2-5.5 7.7 0 1.2 29.3 30.3 30.5 30.3.5 0 4.1-2.5 7.9-5.5 3.8-3 6.9-5.5 7-5.5.5 0 16.3 6.6 17.2 7.3.7.3 1.5 4.5 1.9 9.2l.7 8.5 22.1-.2 22.2-.3 1-8.4c.7-5.6 1.5-8.7 2.5-9.2 2-1.1 15.7-6.9 16.3-6.9.2 0 3.5 2.5 7.3 5.5s7.4 5.5 7.9 5.5c.6 0 7.7-6.7 15.9-14.9 10.4-10.5 14.6-15.3 14.1-16.2-.5-.8-3.1-4.3-5.8-7.8-4.9-6.1-5-6.4-3.8-9.5.7-1.7 2.2-5.6 3.4-8.6 1.1-3 2.1-5.6 2.2-5.8.1-.1 4.1-.7 8.9-1.4l8.6-1.1V88.3l-8.6-.9-8.5-.9-3.5-8.8c-4-9.9-4.3-8.3 3.5-18.2l4.5-5.6-15.6-15.6-15.5-15.5-7.5 6c-5.3 4.3-7.9 5.7-8.9 5.1-.8-.5-4.5-2.1-8.4-3.6-3.8-1.5-7.2-2.9-7.5-3.1-.2-.2-.9-4.5-1.5-9.5l-1-9.2-21.8-.3c-16.9-.2-21.8 0-22.1 1zm34.2 41.4c12.2 2.4 21.3 7.5 30.8 16.9 7.5 7.5 12.6 15.4 15.7 24.7.4 1.1 6.3 3.5 18.1 7.4 9.7 3.2 17.2 6.1 16.8 6.5-.4.3-7.6 2.6-16.1 5-18.8 5.4-18.1 4.3-16.3 23.9.5 4.7.7 8.6.6 8.8-.1.2-2.6.6-5.5.9-5 .5-5.7.9-9.1 5.3-7.3 9.3-20.8 17.6-33.5 20.6-9.8 2.3-24.5 1.5-34-1.8-21.1-7.5-37-26.5-40.7-48.9l-.6-3.6-16.8-4.8c-9.2-2.7-17-5.1-17.4-5.4-.4-.4 7.7-3.5 18-6.9L44.5 93l1.7-4.8C50.6 75.8 63.4 62 76.4 55.6c12.9-6.4 25.1-7.9 39.4-5z\" />*/}\n      {/*  <path*/}\n      {/*    d=\"M59.2 91.4c-23.7 7.7-43 14.1-42.9 14.2.5.5 85.2 25.4 86.2 25.4.6 0 12.5-3.4 26.4-7.5 14-4.1 25.5-7.5 25.7-7.5.2 0 .4 2.3.4 5 0 3.6-.4 5.2-1.5 5.6-.9.4-1.5 1.9-1.5 3.6 0 1.7-.7 4.6-1.7 6.5-2 4.4-1 5.3 6.5 5.3h5.2v-6.9c0-5.3-.4-7-1.5-7.5-1.3-.4-1.5-1.9-1.3-6.8l.3-6.2 15-4.5 14.9-4.5-20.4-6.7c-11.3-3.7-30.9-10-43.6-14.1l-23-7.5-43.2 14.1z\" />*/}\n      {/*  <path*/}\n      {/*    d=\"m69.2 133.1.3 6.1 4.7 1.8c19.3 7.3 40.2 7.3 57.3 0l4.5-1.9V133c0-3.7-.4-6-1.1-6-.6 0-7.8 2-15.9 4.5-8.1 2.5-15.5 4.5-16.4 4.5-.9 0-8.4-2-16.7-4.5-8.3-2.5-15.5-4.5-16-4.5-.6 0-.9 2.7-.7 6.1z\" />*/}\n      {/*</svg>*/}\n    </SvgIcon>\n  );\n}\n\nexport default memo(KnowledgeSvg);","import React, {memo, useCallback, useState} from \"react\";\nimport UserBadgeChip from \"../UserBadgeChip\";\nimport BadgeMenu from \"../../../../components/badges/BadgeMenu\";\nimport {trailingS} from \"../../../../data/helper/helpers\";\nimport KnowledgeIcon from \"./KnowledgeIcon\";\n\nconst id = \"user-knowledge-badges\";\n\nconst getKnowledgeBadge = (numberOfBadges) => {\n  if (numberOfBadges < 6) return <KnowledgeIcon color={\"#cd7f32\"} />;\n  if (numberOfBadges < 16) return <KnowledgeIcon color={\"#95CBE5\"} />;\n  if (numberOfBadges >= 16) return <KnowledgeIcon color={\"#FA772E\"} />;\n};\n\nconst getKnowledgeTooltip = (numberOfBadges) => {\n  if (numberOfBadges < 6)\n    return `Novice. ${numberOfBadges} badge${trailingS(numberOfBadges)}`;\n  if (numberOfBadges < 16) return `Advanced. ${numberOfBadges} badges`;\n  if (numberOfBadges >= 16) return \"Expert. More then 15 badges\";\n};\n\nconst UserKnowledgeBadge = ({numberOfBadges, groupedBadges}) => {\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const handleHover = useCallback(\n    (event) => {\n      setAnchorEl(event.currentTarget);\n    },\n    [setAnchorEl]\n  );\n\n  return (\n    <>\n      <UserBadgeChip\n        id={id}\n        tooltipTitle={getKnowledgeTooltip(numberOfBadges)}\n        icon={getKnowledgeBadge(numberOfBadges)}\n        onClick={handleHover}\n      />\n      {anchorEl && groupedBadges && (\n        <BadgeMenu\n          anchorEl={anchorEl}\n          handleClose={handleClose}\n          badgesTypes={groupedBadges}\n        />\n      )}\n    </>\n  );\n};\n\nexport default memo(UserKnowledgeBadge);\n","import React from \"react\";\n\nconst UserManagerIcon = ({...props}) => {\n  return <lp-agent-manager-icon {...props} />\n}\n\nexport default UserManagerIcon;","import React, { memo } from \"react\";\nimport UserManagerIcon from \"./UserManagerIcon\";\nimport WorkOutlineIcon from \"@material-ui/icons/WorkOutline\";\nimport UserBadgeChip from \"../UserBadgeChip\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  iconWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 40,\n    height: 40,\n  },\n}));\n\nconst UserManagerOrICBadge = ({ isManager }) => {\n  const classes = useStyles();\n  return (\n    <UserBadgeChip\n      tooltipTitle={isManager ? \"Manager\" : \"Individual Contributor\"}\n      icon={isManager\n        ? <span className={classes.iconWrapper}>\n          <UserManagerIcon style={{ width: 32, height: 32 }} />\n      </span>\n        :\n        <span className={classes.iconWrapper}>\n          <WorkOutlineIcon fontSize=\"large\" style={{ width: 32, height: 32 }} />\n        </span>\n\n      }\n    />\n  );\n};\n\nexport default memo(UserManagerOrICBadge);","import React, { memo, useEffect, useState } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport BadgeTypes from \"../../../../data/constants/BadgeTypes\";\nimport { getGroupedBadges } from \"../../../../data/helper/helpers\";\nimport UserStarIcon from \"./UserStarBadge\";\nimport UserKnowledgeBadge from \"./UserKnowledgeBadge\";\nimport UserManagerOrICBadge from \"./UserManagerOrICBadge\";\n\nconst getTenureYears = (startingDate, endingDate = Date.now()) => {\n  const startingTimestamp = new Date(startingDate)?.getTime();\n  const endTimeStamp = new Date(endingDate)?.getTime();\n  const timeDifference = endTimeStamp - startingTimestamp;\n  return Math.abs(new Date(timeDifference)?.getUTCFullYear() - 1970);\n};\n\nconst UserProfileBadges = () => {\n  const [tenureYears, setTenureYears] = useState();\n  const [numberOfBadges, setNumberOfBadges] = useState();\n  const [groupedBadges, setGroupedBadges] = useState();\n\n\n  const userEmployeeSince = useSelector(state => state?.userDirectory?.get(\"userData\")?.profile?.employeeSince);\n  const userDirectReports = useSelector(state => state?.userDirectory?.get(\"userDirectReports\"));\n  const userBadges = useSelector(state => state?.userDirectory?.get(\"userBadges\"));\n\n  useEffect(() => {\n    if (userBadges?.length) {\n      const knowledgeBadges = getGroupedBadges(userBadges, ([key, value]) =>\n        key === BadgeTypes.SUBJECT_MATTER_EXPERT\n        || key === BadgeTypes.TOVUTI);\n      setGroupedBadges(knowledgeBadges);\n      setNumberOfBadges(\n        knowledgeBadges?.[BadgeTypes.TOVUTI]?.length +\n        knowledgeBadges?.[BadgeTypes.SUBJECT_MATTER_EXPERT]?.length,\n      );\n    }\n  }, [userBadges]);\n\n  useEffect(() => {\n    if (userEmployeeSince) {\n      const years = getTenureYears(userEmployeeSince);\n      setTenureYears(years);\n    }\n  }, [userEmployeeSince]);\n\n  return (\n    <Box mt={1}>\n      {tenureYears != null && <UserStarIcon tenureYears={tenureYears}/>}\n\n      {userDirectReports && <UserManagerOrICBadge isManager={userDirectReports.length > 0}/>}\n\n      {numberOfBadges > 0 && <UserKnowledgeBadge numberOfBadges={numberOfBadges} groupedBadges={groupedBadges}/>}\n    </Box>\n  );\n};\n\nexport default memo(UserProfileBadges);","import React, {memo} from \"react\";\nimport {Box, Button, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport ProfileTypography from \"../../../components/typographies/ProfileTypography\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {setOrgChartEmail} from \"../../../data/redux/common/commonActions\";\nimport {\n  setDisabledSearchResults,\n  setSearchQuery,\n} from \"../../../data/redux/userDirectory/userDirectoryActions\";\nimport UserProfileBadges from \"./TopProfileBadges/UserProfileBadges\";\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    borderRadius: \"5%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.3)\",\n  },\n  imgItem: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  userEmail: {\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n    },\n  },\n  line: {\n    borderLeft: \"2px solid #87889c\",\n    paddingLeft: theme.spacing(2),\n  },\n  viewInOrgButton: {\n    marginTop: theme.spacing(1),\n    fontSize: \".75em\",\n  },\n  profileNameBlock: {\n    paddingLeft: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst UserProfileInfo = ({profile, image, setOrgChartEmail}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleViewInOrg = () => {\n    if (profile?.email) {\n      setOrgChartEmail(profile?.email);\n    }\n    history.push(FrontendRoutes.ORGANIZATION_CHART);\n  };\n\n  return (\n    <Box minWidth={1050}>\n      <PaperCardWrapper>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n        >\n          <Grid item className={classes.imgItem}>\n            <div>\n              <img src={image} alt=\"profile img\" className={classes.img} />\n            </div>\n\n            <div className={classes.profileNameBlock}>\n              <div>\n                <Typography component={\"div\"} variant=\"h5\">\n                  {profile?.firstName} {profile?.lastName}\n                </Typography>\n              </div>\n              <Button\n                onClick={handleViewInOrg}\n                color=\"secondary\"\n                variant=\"contained\"\n                size=\"small\"\n                className={classes.viewInOrgButton}\n              >\n                View in Org Chart\n              </Button>\n\n              <UserProfileBadges />\n            </div>\n          </Grid>\n\n          <Grid item className={classes.line}>\n            <ProfileTypography subtitle=\"JOB TITLE\" text={profile?.jobTitle} />\n            <ProfileTypography\n              subtitle=\"EMPLOYEE TYPE\"\n              text={profile?.employeeType}\n            />\n            <ProfileTypography\n              subtitle=\"EMAIL\"\n              text={\n                <a\n                  href={`mailto:${profile?.email}`}\n                  target=\"_top\"\n                  className={classes.userEmail}\n                >\n                  {profile?.email}\n                </a>\n              }\n            />\n          </Grid>\n\n          <Grid item>\n            <ProfileTypography subtitle=\"LOCATION\" text={profile?.location} />\n            <ProfileTypography\n              subtitle=\"PRIMARY PHONE\"\n              text={profile?.primaryPhone ? profile?.primaryPhone : \"n/a\"}\n            />\n            <ProfileTypography\n              subtitle=\"MOBILE PHONE\"\n              text={profile?.mobilePhone ? profile?.mobilePhone : \"n/a\"}\n            />\n          </Grid>\n\n          <Grid item>\n            <ProfileTypography\n              subtitle=\"DEPARTMENT\"\n              text={profile?.department}\n            />\n            <ProfileTypography subtitle=\"COMPANY\" text={profile?.companyName} />\n            <ProfileTypography\n              subtitle=\"BUSINESS UNIT\"\n              text={profile?.businessUnit}\n            />\n          </Grid>\n        </Grid>\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default connect(() => ({}), {\n  setOrgChartEmail,\n  setSearchQuery,\n  setDisabledSearchResults,\n})(memo(UserProfileInfo));\n","import React from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport ColorBorderBox from \"../../../../components/blocks/ColorBorderBox\";\nimport BadgeChip from \"../../../../components/badges/BadgeChip\";\n\nconst useStyles = makeStyles(() => ({\n  badgeTitleBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n}));\n\nconst ChipBox = ({badgeTitle, data}) => {\n  const classes = useStyles();\n\n  return (\n    <Box m={2}>\n      <Box className={classes.badgeTitleBox}>\n        <Typography>{badgeTitle}</Typography>\n        <Typography variant={\"subtitle1\"}>Total: {data?.length}</Typography>\n      </Box>\n      {data.length > 0 && (\n        <ColorBorderBox height={100}>\n          {data?.map((bge) => (\n            <BadgeChip\n              tooltip\n              key={bge.badge?.id}\n              id={bge.badge?.id}\n              label={bge.badge?.badgeName}\n              image={bge.badge?.badgeIcon.badgeIconImg}\n            />\n          ))}\n        </ColorBorderBox>\n      )}\n    </Box>\n  );\n};\n\nexport default ChipBox;\n","import {gql} from \"@apollo/client\";\n\nexport const DELETE_AUTH_USER_BADGE = gql`\n  mutation DeleteAuthUserBadge($badgeId: Int!) {\n    deleteAuthUserBadge(badgeId: $badgeId) {\n      badgeId\n      userId\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useMutation} from \"@apollo/client\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport {DELETE_AUTH_USER_BADGE} from \"../../../../../operations/mutations/deleteAuthUserBadge\";\nimport handleError from \"../../../../../data/handleError\";\nimport BadgeTypes from \"../../../../../data/constants/BadgeTypes\";\nimport InfoBlock from \"../../../../../components/InfoBlock\";\nimport LoadingCircle from \"../../../../../components/circularProgress/LoadingCircle\";\nimport ColorBorderBox from \"../../../../../components/blocks/ColorBorderBox\";\nimport BadgeChip from \"../../../../../components/badges/BadgeChip\";\n\nconst useStyles = makeStyles(() => ({\n  badgeTitleBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n}));\n\nconst EditBadgesTab = ({userBadgeData, refetch}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [hobbiesBadges, setHobbiesBadges] = useState();\n  const [smeBadges, setSmeBadges] = useState();\n  const [isBadgesReady, setIsBadgesReady] = useState(false);\n\n  useEffect(() => {\n    if (userBadgeData) {\n      separateBadges(userBadgeData);\n    }\n  }, [userBadgeData]);\n\n  const [deleteBadge] = useMutation(DELETE_AUTH_USER_BADGE, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const separateBadges = (data) => {\n    const hobbies = data.filter(\n      (x) => x.badge.badgeType === BadgeTypes.HOBBIES_INTERESTS\n    );\n    const sme = data.filter(\n      (x) => x.badge.badgeType === BadgeTypes.SUBJECT_MATTER_EXPERT\n    );\n\n    setHobbiesBadges(hobbies);\n    setSmeBadges(sme);\n    setIsBadgesReady(true);\n  };\n\n  const handleDelete = async (chip) => {\n    await deleteBadge({\n      variables: {\n        badgeId: parseInt(chip.badge.id),\n      },\n    });\n\n    if (chip.badge.badgeType === BadgeTypes.HOBBIES_INTERESTS) {\n      setHobbiesBadges((hobbiesBadges) =>\n        hobbiesBadges.filter((bge) => bge.badge.badgeId !== chip.badge.badgeId)\n      );\n    } else if (chip.badge.badgeType === BadgeTypes.SUBJECT_MATTER_EXPERT) {\n      setSmeBadges((smeBadges) =>\n        smeBadges.filter((bge) => bge.badge.badgeId !== chip.badge.badgeId)\n      );\n    }\n\n    refetch();\n  };\n  return (\n    <Box>\n      {isBadgesReady ? (\n        <>\n          <InfoBlock>\n            <Box m={2}>\n              <Typography variant={\"body2\"}>\n                Click on the X on the badge to remove it from your profile.\n                <br />\n                <strong>\n                  Once you click on the X, it'll instantly be removed.\n                </strong>\n              </Typography>\n            </Box>\n          </InfoBlock>\n\n          <Box m={2}>\n            <Box className={classes.badgeTitleBox}>\n              <Typography>Hobbies/Interests Badges</Typography>\n              <Typography variant={\"subtitle1\"}>\n                Total: {hobbiesBadges?.length}\n              </Typography>\n            </Box>\n            {hobbiesBadges?.length > 0 && (\n              <ColorBorderBox height={125}>\n                {hobbiesBadges?.map((bge) => (\n                  <BadgeChip\n                    key={bge.badge?.id}\n                    id={bge.badge?.id}\n                    label={bge.badge?.badgeName}\n                    image={bge.badge?.badgeIcon?.badgeIconImg}\n                    onDelete={() => handleDelete(bge)}\n                  />\n                ))}\n              </ColorBorderBox>\n            )}\n          </Box>\n\n          <Box m={2}>\n            <Box className={classes.badgeTitleBox}>\n              <Typography>Subject Matter Expert Badges</Typography>\n              <Typography variant={\"subtitle1\"}>\n                Total: {smeBadges?.length}\n              </Typography>\n            </Box>\n            {smeBadges?.length > 0 && (\n              <ColorBorderBox height={125}>\n                {smeBadges?.map((bge) => (\n                  <BadgeChip\n                    key={bge.badge?.id}\n                    id={bge.badge?.id}\n                    label={bge.badge?.badgeName}\n                    image={bge.badge?.badgeIcon?.badgeIconImg}\n                    onDelete={() => handleDelete(bge)}\n                  />\n                ))}\n              </ColorBorderBox>\n            )}\n          </Box>\n        </>\n      ) : (\n        <LoadingCircle text={\"Loading badges...\"} />\n      )}\n    </Box>\n  );\n};\n\nexport default memo(EditBadgesTab);\n","import {gql} from \"@apollo/client\";\n\nexport const ADD_AUTH_USER_BADGES = gql`\n  mutation AddAuthUserBadges($input: [LpsyncUsersAndBadgesInput]) {\n    addAuthUserBadges(input: $input) {\n      badgeId\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport BadgeTypes, {BadgeTypesObj} from \"../../data/constants/BadgeTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n}));\n\nconst SelectBadgeCategoryInput = ({value, onChange}) => {\n  const classes = useStyles();\n  return (\n    <FormControl required variant=\"outlined\" color={\"secondary\"}>\n      <InputLabel id=\"select-badge-category\">Badge Category</InputLabel>\n      <Select\n        labelId=\"select-badge-category-label\"\n        id=\"select-badge-category\"\n        value={value}\n        onChange={onChange}\n        className={classes.select}\n        color={\"secondary\"}\n        label={\"Badge Category\"}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n\n        {BadgeTypesObj?.filter(\n          (badge) =>\n            badge.idType !== BadgeTypes.SYSTEM_OWNER &&\n            badge.idType !== BadgeTypes.TOVUTI\n        ).map((option) => (\n          <MenuItem key={option.idType} value={option.idType}>\n            {option.nameType}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(SelectBadgeCategoryInput);\n","import React, {memo, useCallback} from \"react\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Page from \"../Page\";\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    width: \"60ch\",\n  },\n  smallTextField: {\n    width: \"30ch\",\n  },\n}));\n\nconst CustomTextField = ({onChange, onValueChange, small, valid, ...props}) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (e) => {\n      onChange && onChange(e);\n      onValueChange && onValueChange(e.target.value);\n    },\n    [onChange, onValueChange]\n  );\n\n  return (\n    <TextField\n      color=\"secondary\"\n      className={small ? classes.smallTextField : classes.textField}\n      onChange={handleChange}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          e.preventDefault();\n        }\n      }}\n      {...props}\n    />\n  );\n};\n\nPage.propTypes = {\n  onChange: PropTypes.func,\n  onValueChange: PropTypes.func,\n  small: PropTypes.bool,\n};\n\nexport default memo(CustomTextField);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_BADGE_ICONS = gql`\n  query GetBadgeIcons($filters: BasicFiltersInput) {\n    get_badge_icons(filters: $filters) {\n      id\n      badgeIconImg\n      badgeIconName\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_BADGE_ICONS} from \"../../operations/adminQueries/getBadgeIcons\";\nimport SearchInput from \"../SearchInput\";\nimport BadgeIcon from \"./BadgeIcon\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport handleError from \"../../data/handleError\";\nimport {\n  handlePageChange,\n  handleSearchQuery,\n} from \"../../data/helper/filterHelpers\";\nimport BoxGridWrapper from \"../grid/BoxGridWrapper\";\nimport BadgeIconGridItem from \"../grid/BadgeIconGridItem\";\nimport BackPaginationButton from \"../buttons/BackPaginationButton\";\nimport NextPaginationButton from \"../buttons/NextPaginationButton\";\n\nconst ChooseBadgeIcon = ({\n  badgeIconName,\n  setBadgeIconName,\n  badgeImage,\n  setBadgeImage,\n}) => {\n  const history = useHistory();\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [badgeData, setBadgeData] = useState([]);\n  const [isBackBtnDisabled, setIsBackBtnDisabled] = useState(false);\n  const [isNextBtnDisabled, setIsNextBtnDisabled] = useState(false);\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 24,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_BADGE_ICONS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (result) => {\n      handleResult(result?.get_badge_icons);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleResult = (result) => {\n    setBadgeData(result);\n    setIsSearchInProgress(false);\n\n    if (result?.length >= filters?.itemsPerPage) {\n      setIsNextBtnDisabled(false);\n    } else {\n      setIsNextBtnDisabled(true);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsSearchInProgress(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    if (filters.pageCount === 0) {\n      setIsBackBtnDisabled(true);\n    } else {\n      setIsBackBtnDisabled(false);\n    }\n\n    executeQuery();\n  }, [filters]);\n\n  const handleOnSearch = (query) => {\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsSearchInProgress\n    );\n  };\n\n  const handleClick = (img, name) => {\n    setBadgeIconName(name);\n    setBadgeImage(img);\n  };\n\n  const handleBackBtn = () => {\n    const pageCount = filters.pageCount - 1;\n    handlePageChange(pageCount, filters, setFilters, isSearchInProgress);\n  };\n\n  const handleNextBtn = () => {\n    const pageCount = filters.pageCount + 1;\n    handlePageChange(pageCount, filters, setFilters, isSearchInProgress);\n  };\n\n  return (\n    <div>\n      <Box mt={1}>\n        <SearchInput\n          onSearch={handleOnSearch}\n          searchQuery={filters.query}\n          label={\"Search All Badge Icons\"}\n        />\n      </Box>\n      <BoxGridWrapper\n        loading={isSearchInProgress}\n        dataLength={badgeData?.length}\n      >\n        {badgeData?.map((badge) => (\n          <BadgeIconGridItem\n            key={badge?.id}\n            image={badge?.badgeIconImg}\n            name={badge?.badgeIconName}\n            onClick={() =>\n              handleClick(badge?.badgeIconImg, badge?.badgeIconName)\n            }\n          />\n        ))}\n      </BoxGridWrapper>\n      <Box mt={1}>\n        <BackPaginationButton\n          disabled={isBackBtnDisabled}\n          onClick={handleBackBtn}\n        />\n        <NextPaginationButton\n          disabled={isNextBtnDisabled}\n          onClick={handleNextBtn}\n        />\n      </Box>\n      {badgeImage && (\n        <Box mt={3}>\n          <strong>Selected: </strong>\n\n          <Typography variant={\"subtitle1\"}>\n            {badgeIconName}\n            <span>\n              <BadgeIcon image={badgeImage} />\n            </span>\n          </Typography>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default memo(ChooseBadgeIcon);\n","import {gql} from \"@apollo/client\";\n\nexport const CHECK_IF_BADGE_NAME_EXISTS = gql`\n  query CheckIfBadgeNameExists($type: String, $badgeName: String) {\n    check_if_badge_name_exists(type: $type, badgeName: $badgeName) {\n      id\n      badgeIconId\n      badgeType\n      badgeName\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const CHECK_IF_BADGE_ICON_EXISTS = gql`\n  query CheckIfBadgeIconExists($iconName: String) {\n    check_if_badge_icon_exists(iconName: $iconName) {\n      id\n      badgeIconName\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Button, Input, InputLabel, Box, Typography} from \"@material-ui/core\";\n\nconst styles = {\n  hidden: {\n    display: \"none\",\n  },\n  importLabel: {\n    color: \"black\",\n  },\n  box: {\n    display: \"flex\",\n  },\n};\n\nconst ImageUpload = ({\n  setBaseImage,\n  setImageFile,\n  sizeLimit,\n  setIsAlertOpen,\n  handleAlert,\n}) => {\n  const handleFileUpload = async (e) => {\n    {\n      setIsAlertOpen && setIsAlertOpen(false);\n    }\n    const imgTypes = [\"jpg\", \"jpeg\", \"png\", \"svg\"];\n    const file = e.target.files[0];\n    const type = file?.type;\n\n    const setImage = async (file) => {\n      const base64 = await convertToBase64(file);\n      setBaseImage(base64);\n      {\n        setImageFile && setImageFile(file);\n      }\n    };\n\n    if (file) {\n      if (sizeLimit) {\n        // sizeLimit = kb size\n        const byteSize = sizeLimit * 1000;\n\n        if (file.size > byteSize) {\n          setBaseImage(\"\");\n          {\n            handleAlert &&\n              handleAlert(\"image size is too big\", true, \"warning\");\n          }\n        } else if (!imgTypes.some((el) => type.includes(el))) {\n          setBaseImage(\"\");\n          {\n            handleAlert && handleAlert(\"invalid image type\", true, \"warning\");\n          }\n        } else {\n          await setImage(file);\n        }\n      } else {\n        await setImage(file);\n      }\n    }\n  };\n\n  const convertToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  return (\n    <div>\n      <Typography variant={\"subtitle1\"}>\n        Select a PNG, JPG or SVG image{\" \"}\n        {sizeLimit && `( maximum size: ${sizeLimit} KB )`}:\n      </Typography>\n      <Box style={styles.box}>\n        <Box mr={2}>\n          <Button color=\"secondary\" variant=\"contained\">\n            <InputLabel htmlFor=\"import-button\">\n              <Input\n                id=\"import-button\"\n                inputProps={{\n                  accept: \".jpeg, .png, .jpg, .svg\",\n                }}\n                onChange={(e) => handleFileUpload(e)}\n                style={styles.hidden}\n                type=\"file\"\n              />\n              Select Image\n            </InputLabel>\n          </Button>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default memo(ImageUpload);\n","import React, {memo} from \"react\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme) => ({\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.5rem\",\n  },\n}));\n\nconst SaveAndClearButtons = ({handleClear, handleSave, isButtonsDisabled}) => {\n  const classes = useStyles();\n\n  return (\n    <Box m={3} className={classes.btnBox}>\n      <Button\n        variant=\"outlined\"\n        disabled={isButtonsDisabled}\n        onClick={handleClear}\n      >\n        <ClearIcon className={classes.icon} />\n        Clear\n      </Button>\n\n      <Button\n        color=\"secondary\"\n        variant=\"contained\"\n        disabled={isButtonsDisabled}\n        onClick={handleSave}\n      >\n        <SaveIcon className={classes.icon} />\n        Save\n      </Button>\n    </Box>\n  );\n};\n\nexport default memo(SaveAndClearButtons);\n","import {gql} from \"@apollo/client\";\n\nexport const CREATE_BADGE_REQUEST_TASK = gql`\n  mutation CreateBadgeRequestTask($input: LpsyncTaskInput, $file: Upload) {\n    createBadgeRequestTask(input: $input, file: $file) {\n      id\n    }\n  }\n`;\n","import React, {memo, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Button, makeStyles, Typography} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../../components/taskManager/TaskHeadingToolbar\";\nimport CustomTextField from \"../../../../../components/inputs/CustomTextField\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {transformSpaceToDashAndLowerCase} from \"../../../../../data/helper/helpers\";\nimport ChooseBadgeIcon from \"../../../../../components/badges/ChooseBadgeIcon\";\nimport ColorBorderBox from \"../../../../../components/blocks/ColorBorderBox\";\nimport AlertBox from \"../../../../../components/AlertBox\";\nimport handleError from \"../../../../../data/handleError\";\nimport {CHECK_IF_BADGE_NAME_EXISTS} from \"../../../../../operations/adminQueries/checkIfBadgeNameExists\";\nimport {CHECK_IF_BADGE_ICON_EXISTS} from \"../../../../../operations/adminQueries/checkIfBadgeIconExists\";\nimport BadgeIcon from \"../../../../../components/badges/BadgeIcon\";\nimport ImageUpload from \"../../../../../components/ImageUpload\";\nimport SaveAndClearButtons from \"../../../../../components/buttons/SaveAndClearButtons\";\nimport InfoBlock from \"../../../../../components/InfoBlock\";\nimport SelectBadgeCategoryInput from \"../../../../../components/badges/SelectBadgeCategoryInput\";\nimport TaskStatuses from \"../../../../../data/constants/TaskStatuses\";\nimport {CREATE_BADGE_REQUEST_TASK} from \"../../../../../operations/mutations/createBadgeRequestTask\";\nimport TaskTypes from \"../../../../../data/constants/TaskTypes\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\"},\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  textField: {\n    width: \"40ch\",\n  },\n}));\n\nconst RequestBadgeDrawerContent = ({setIsRequestDrawerOpen}) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [badgeCategory, setBadgeCategory] = useState(\"\");\n  const [badgeImage, setBadgeImage] = useState(\"\");\n  const [addNameError, setAddNameError] = useState(false);\n  const [badgeName, setBadgeName] = useState(\"\");\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\n  const [badgeFile, setBadgeFile] = useState();\n  const [badgeIconName, setBadgeIconName] = useState(\"\");\n  const [isUploadImage, setIsUploadImage] = useState(false);\n  const [isButtonsDisabled, setIsButtonsDisabled] = useState(false);\n\n  const [executeBadgeNameSearch] = useLazyQuery(CHECK_IF_BADGE_NAME_EXISTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) =>\n      onCheckBadgeNameComplete(data?.check_if_badge_name_exists),\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeBadgeIconSearch] = useLazyQuery(CHECK_IF_BADGE_ICON_EXISTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      onCheckBadgeIconComplete(data?.check_if_badge_icon_exists);\n    },\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createBadgeRequest] = useMutation(CREATE_BADGE_REQUEST_TASK, {\n    onCompleted: () => onCreateComplete(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const onCreateComplete = () => {\n    handleClear();\n    setIsButtonsDisabled(false);\n    handleAlert(\"Badge request saved!\", true, \"success\");\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      setIsAlertOpen(false);\n    }, 5000);\n  };\n\n  const handleAlert = (msg, open, severity) => {\n    setAlertSeverity(severity);\n    setAlertMessage(msg);\n    setIsAlertOpen(open);\n  };\n\n  const runBadgeNameSearch = () => {\n    executeBadgeNameSearch({\n      variables: {badgeName: badgeName, type: badgeCategory},\n    });\n  };\n\n  const onCheckBadgeIconComplete = (data) => {\n    if (data) {\n      handleAlert(\"Badge Icon already exists\", true, \"warning\");\n    } else {\n      runBadgeNameSearch();\n    }\n  };\n\n  const onCheckBadgeNameComplete = async (data) => {\n    if (data) {\n      handleAlert(\"Badge Name already exists\", true, \"warning\");\n    } else {\n      await saveBadge();\n    }\n  };\n\n  const handleOnClose = () => {\n    setIsAlertOpen(false);\n    setIsRequestDrawerOpen(false);\n  };\n\n  const handleCategoryChange = async (event) => {\n    const type = event.target.value;\n    setBadgeCategory(type);\n  };\n\n  const handleChange = (name) => {\n    setBadgeName(name);\n    setAddNameError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleClear = (clearAlert) => {\n    setBadgeName(\"\");\n    setBadgeImage(\"\");\n    setBadgeFile();\n    setAddNameError(false);\n\n    if (clearAlert) {\n      setIsAlertOpen(false);\n    }\n  };\n\n  const handleUploadBtnClick = (bool) => {\n    setIsUploadImage(bool);\n    setBadgeImage(\"\");\n    setBadgeIconName(\"\");\n  };\n\n  const saveBadge = async () => {\n    setIsButtonsDisabled(true);\n    await createBadgeRequest({\n      variables: {\n        input: {\n          taskType: TaskTypes.BADGE_REQUEST,\n          taskStatus: TaskStatuses.PENDING,\n          badgeRequestTask: {\n            badgeRequestName: badgeName,\n            badgeRequestType: badgeCategory,\n            badgeRequestIconName: badgeIconName,\n            badgeRequestIconImg: badgeFile ? \"\" : badgeImage,\n          },\n        },\n        file: badgeFile,\n      },\n    });\n  };\n\n  const checkBadge = async () => {\n    if (!badgeName) {\n      setAddNameError(true);\n      handleAlert(\"Badge Name is missing\", true, \"warning\");\n    } else if (!badgeImage) {\n      handleAlert(\"Badge Icon is not selected\", true, \"warning\");\n    } else if (isUploadImage && badgeName) {\n      const iconName = await transformSpaceToDashAndLowerCase(badgeName);\n      setBadgeIconName(iconName);\n      await executeBadgeIconSearch({\n        variables: {iconName: iconName},\n      });\n    } else {\n      runBadgeNameSearch();\n    }\n  };\n\n  return (\n    <>\n      <TaskCloseButtonToolbar handleClose={() => handleOnClose()} />\n      <Box>\n        <TaskHeadingToolbar title={\"New Badge Request\"} />\n      </Box>\n      {isAlertOpen && (\n        <AlertBox severity={alertSeverity} message={alertMessage} />\n      )}\n      <Box m={1} className={classes.box}>\n        <InfoBlock>\n          Requesting a new badge is subject to approval. Once the badge request\n          has been approved, you will be notified and you will be able to add it\n          to your profile.\n        </InfoBlock>\n        <Box m={1} mb={3}>\n          <Typography>\n            Select a Badge Category{\" \"}\n            <SelectBadgeCategoryInput\n              value={badgeCategory}\n              onChange={handleCategoryChange}\n            />\n          </Typography>\n        </Box>\n        {badgeCategory && (\n          <>\n            <Box m={1}>\n              {isUploadImage ? (\n                <>\n                  <Typography>\n                    Upload an icon below. Don't have one? Choose one instead:{\" \"}\n                    <span>\n                      <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={() => handleUploadBtnClick(false)}\n                      >\n                        Choose Icon\n                      </Button>\n                    </span>\n                  </Typography>\n                </>\n              ) : (\n                <Typography>\n                  Choose an icon below. Can't find the one? Upload one instead:{\" \"}\n                  <span>\n                    <Button\n                      variant=\"contained\"\n                      size=\"small\"\n                      onClick={() => handleUploadBtnClick(true)}\n                    >\n                      Upload Icon\n                    </Button>\n                  </span>\n                </Typography>\n              )}\n            </Box>\n            <Box m={1}>\n              {isUploadImage ? (\n                <ColorBorderBox>\n                  <Box p={2}>\n                    <ImageUpload\n                      handleAlert={handleAlert}\n                      setIsAlertOpen={setIsAlertOpen}\n                      setBaseImage={setBadgeImage}\n                      setImageFile={setBadgeFile}\n                      sizeLimit={5}\n                    />\n                  </Box>\n                  <Box m={2}>\n                    <Typography>Preview image:</Typography>\n                    {badgeImage?.length > 0 && <BadgeIcon image={badgeImage} />}\n                  </Box>\n                </ColorBorderBox>\n              ) : (\n                <Box mt={2}>\n                  <ChooseBadgeIcon\n                    badgeIconName={badgeIconName}\n                    setBadgeIconName={setBadgeIconName}\n                    setBadgeImage={setBadgeImage}\n                    badgeImage={badgeImage}\n                  />\n                </Box>\n              )}\n            </Box>\n\n            <Box m={1} mt={2}>\n              <form noValidate autoComplete=\"off\">\n                <CustomTextField\n                  required\n                  id=\"badge-name-input\"\n                  label=\"Badge Name\"\n                  error={addNameError}\n                  value={badgeName}\n                  onValueChange={handleChange}\n                />\n              </form>\n            </Box>\n            <SaveAndClearButtons\n              isButtonsDisabled={isButtonsDisabled}\n              handleClear={() => handleClear(true)}\n              handleSave={() => checkBadge()}\n            />\n          </>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default memo(RequestBadgeDrawerContent);\n","import React, {memo} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Drawer} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst DisableBackdropDrawer = ({open, onClose, children}) => {\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      disableBackdropClick\n      anchor=\"right\"\n      open={open}\n      onClose={onClose}\n      classes={{paper: classes.paper}}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default memo(DisableBackdropDrawer);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {Box, Button, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport {GET_LPSYNC_BADGES} from \"../../../../../operations/adminQueries/getLpsyncBadges\";\nimport handleError from \"../../../../../data/handleError\";\nimport {ADD_AUTH_USER_BADGES} from \"../../../../../operations/mutations/addAuthUserBadges\";\nimport InfoBlock from \"../../../../../components/InfoBlock\";\nimport ColorBorderBox from \"../../../../../components/blocks/ColorBorderBox\";\nimport BadgeChip from \"../../../../../components/badges/BadgeChip\";\nimport SearchInput from \"../../../../../components/SearchInput\";\nimport BoxGridWrapper from \"../../../../../components/grid/BoxGridWrapper\";\nimport BadgeIconGridItem from \"../../../../../components/grid/BadgeIconGridItem\";\nimport {\n  handlePageChange,\n  handleSearchQuery,\n} from \"../../../../../data/helper/filterHelpers\";\nimport AlertBox from \"../../../../../components/AlertBox\";\nimport BackPaginationButton from \"../../../../../components/buttons/BackPaginationButton\";\nimport NextPaginationButton from \"../../../../../components/buttons/NextPaginationButton\";\nimport SelectBadgeCategoryInput from \"../../../../../components/badges/SelectBadgeCategoryInput\";\nimport RequestBadgeDrawerContent from \"./RequestBadgeDrawerContent\";\nimport DisableBackdropDrawer from \"../../../../../components/drawers/DisableBackdropDrawer\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  alert: {\n    width: \"60ch\",\n  },\n  select: {\n    width: \"30ch\",\n  },\n  listItemText: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  chip: {\n    margin: \".25rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n  selectedBox: {\n    height: 200,\n    overflow: \"auto\",\n    border: \"1px solid #4667c8\",\n    borderRadius: \"5px\",\n    paddingLeft: \"1rem\",\n  },\n  saveBox: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst AddBadgesTab = ({userBadgeData}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [badgeCategory, setBadgeCategory] = useState(\"\");\n  const [badgeData, setBadgeData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedBadges, setSelectedBadges] = useState([]);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [isBackBtnDisabled, setIsBackBtnDisabled] = useState(false);\n  const [isNextBtnDisabled, setIsNextBtnDisabled] = useState(false);\n  const [isRequestDrawerOpen, setIsRequestDrawerOpen] = useState(false);\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_LPSYNC_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      handleResult(data?.get_lpsync_badges);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addBadges] = useMutation(ADD_AUTH_USER_BADGES, {\n    onCompleted: () => handleComplete(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleComplete = async () => {\n    handleAlert(\"Badges saved!\", true, \"success\");\n    setBadgeCategory(\"\");\n    setSelectedBadges([]);\n\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      setIsAlertOpen(false);\n    }, 5000);\n  };\n\n  const handleResult = (result) => {\n    setBadgeData(result);\n    setIsLoading(false);\n\n    if (result?.length >= filters?.itemsPerPage) {\n      setIsNextBtnDisabled(false);\n    } else {\n      setIsNextBtnDisabled(true);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsLoading(true);\n    executeSearch({\n      variables: {filters: {...filters, type: badgeCategory}},\n    });\n  };\n\n  useEffect(() => {\n    if (filters.pageCount === 0) {\n      setIsBackBtnDisabled(true);\n    } else {\n      setIsBackBtnDisabled(false);\n    }\n\n    executeQuery();\n  }, [filters, badgeCategory]);\n\n  const handleCategoryChange = async (event) => {\n    const type = event.target.value;\n    setIsAlertOpen(false);\n    setBadgeCategory(type);\n  };\n\n  const handleOnSearch = (query) => {\n    setIsAlertOpen(false);\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsLoading\n    );\n  };\n\n  const handleClick = (selected) => {\n    const isBadgeUsed = userBadgeData?.some(\n      (bge) => bge.badge?.id === selected?.id\n    );\n\n    const isBadgeSelected = selectedBadges?.some(\n      (bge) => bge?.id === selected?.id\n    );\n\n    if (isBadgeUsed) {\n      handleAlert(\"Badge is already saved in your profile\", true, \"warning\");\n    } else if (isBadgeSelected) {\n      handleAlert(\"Badge is already selected\", true, \"warning\");\n    } else {\n      setSelectedBadges([...selectedBadges, selected]);\n    }\n  };\n\n  const handleDelete = async (chip) => {\n    setSelectedBadges((selectedBadges) =>\n      selectedBadges.filter((bge) => bge.id !== chip.id)\n    );\n  };\n\n  const handleSave = async () => {\n    let badgeIds = [];\n\n    selectedBadges.map((badge) => {\n      badgeIds.push({badgeId: parseInt(badge.id)});\n    });\n\n    await addBadges({\n      variables: {\n        input: badgeIds,\n      },\n    });\n  };\n\n  const handleAlert = (msg, open, severity) => {\n    setAlertSeverity(severity);\n    setAlertMessage(msg);\n    setIsAlertOpen(open);\n  };\n\n  const handleBackBtn = () => {\n    const pageCount = filters.pageCount - 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const handleNextBtn = () => {\n    const pageCount = filters.pageCount + 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsRequestDrawerOpen(open);\n  };\n\n  return (\n    <Box m={2}>\n      {isAlertOpen && (\n        <Box mb={2}>\n          <AlertBox severity={alertSeverity} message={alertMessage} />\n        </Box>\n      )}\n      <InfoBlock>\n        <Box m={2}>\n          <Typography variant={\"body2\"}>\n            Select a badge category and then search and add the badge you'd\n            like. <br />\n            You can remove a badge from your selection by clicking on the X.\n            <br />\n            Click on the <strong>SAVE</strong> button to save your badges to\n            your profile.\n          </Typography>\n          <Typography variant={\"body2\"}>\n            If you don't see a badge that you want, you can request one here:{\" \"}\n            <Button\n              variant={\"outlined\"}\n              size={\"small\"}\n              onClick={() => setIsRequestDrawerOpen(true)}\n            >\n              Request Badge\n            </Button>\n          </Typography>\n        </Box>\n      </InfoBlock>\n\n      <Box m={2} mt={3}>\n        <Grid item container>\n          <Grid item xs={4}>\n            <Typography component={\"div\"} variant=\"subtitle1\">\n              Select Badge Category\n            </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <SelectBadgeCategoryInput\n              value={badgeCategory}\n              onChange={handleCategoryChange}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n      <Box m={2}>\n        {badgeCategory && badgeData && (\n          <>\n            <Box mt={1}>\n              <SearchInput\n                onSearch={handleOnSearch}\n                searchQuery={filters.query}\n                label={\"Search Badges\"}\n              />\n            </Box>\n            <BoxGridWrapper loading={isLoading} dataLength={badgeData?.length}>\n              {badgeData?.map((badge) => (\n                <BadgeIconGridItem\n                  key={badge?.id}\n                  image={badge?.badgeIcon?.badgeIconImg}\n                  name={badge?.badgeName}\n                  onClick={() => handleClick(badge)}\n                />\n              ))}\n            </BoxGridWrapper>\n            <Box mt={1}>\n              <BackPaginationButton\n                disabled={isBackBtnDisabled}\n                onClick={handleBackBtn}\n              />\n              <NextPaginationButton\n                disabled={isNextBtnDisabled}\n                onClick={handleNextBtn}\n              />\n            </Box>\n          </>\n        )}\n      </Box>\n      <Box mt={5}>\n        {selectedBadges?.length > 0 && (\n          <>\n            <Box>\n              <Typography>Selected Badges:</Typography>\n\n              <ColorBorderBox height={200} width={\"60ch\"}>\n                {selectedBadges?.map((bge) => (\n                  <BadgeChip\n                    id={bge?.id}\n                    label={bge?.badgeName}\n                    image={bge?.badgeIcon?.badgeIconImg}\n                    onDelete={() => handleDelete(bge)}\n                  />\n                ))}\n              </ColorBorderBox>\n            </Box>\n            <Box className={classes.saveBox}>\n              <Button\n                variant={\"contained\"}\n                color=\"secondary\"\n                onClick={() => handleSave()}\n              >\n                <SaveIcon className={classes.icon} />\n                Save\n              </Button>\n            </Box>\n          </>\n        )}\n      </Box>\n      <DisableBackdropDrawer\n        open={isRequestDrawerOpen}\n        onClose={toggleDrawer(false)}\n      >\n        <RequestBadgeDrawerContent\n          setIsRequestDrawerOpen={setIsRequestDrawerOpen}\n        />\n      </DisableBackdropDrawer>\n    </Box>\n  );\n};\n\nexport default memo(AddBadgesTab);\n","import React, {memo, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport TaskCloseButtonToolbar from \"../../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../../components/taskManager/TaskHeadingToolbar\";\nimport EditBadgesTab from \"./EditBadgesTab\";\nimport AddBadgesTab from \"./AddBadgesTab\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_LPSYNC_USER_BADGES} from \"../../../../../operations/queries/getLpsyncUserBadges\";\nimport handleError from \"../../../../../data/handleError\";\nimport TabsPaper from \"../../../../../components/tabs/TabsPaper\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\", maxHeight: \"90vh\"},\n  paper: {backgroundColor: theme.palette.secondary.main},\n}));\n\nconst tabName = \"scrollable-auto\";\n\nconst ManageMyBadgesDrawerContent = ({setIsDrawerOpen, handleBadgeQuery}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [value, setValue] = useState(0);\n\n  const {data, refetch} = useQuery(GET_LPSYNC_USER_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleTabsChange = (event, newValue) => {\n    setValue(newValue);\n    let dashView;\n    if (newValue === 0) {\n      dashView = \"add-badges\";\n    } else if (newValue === 1) {\n      dashView = \"edit-badges\";\n      refetch();\n    }\n  };\n\n  const handleOnClose = () => {\n    handleBadgeQuery();\n    setIsDrawerOpen(false);\n  };\n\n  const manageBadgesTabs = [\n    {\n      label: \"Add Badges\",\n      content: <AddBadgesTab userBadgeData={data?.get_lpsync_user_badges} />,\n    },\n    {\n      label: \"Edit Badges\",\n      content: (\n        <EditBadgesTab\n          userBadgeData={data?.get_lpsync_user_badges}\n          refetch={refetch}\n        />\n      ),\n    },\n  ];\n  return (\n    <>\n      <TaskCloseButtonToolbar handleClose={handleOnClose} />\n      <Box>\n        <TaskHeadingToolbar title={\"Manage My Badges\"} />\n      </Box>\n      <Box className={classes.box}>\n        <TabsPaper\n          value={value}\n          onChange={handleTabsChange}\n          tabs={manageBadgesTabs}\n          tabName={tabName}\n          aria-label=\"manage badges tabs navigation\"\n          className={classes.paper}\n          styled\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default memo(ManageMyBadgesDrawerContent);\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {Box, Button, makeStyles, Toolbar} from \"@material-ui/core\";\nimport {BadgeNames} from \"../../../../data/constants/BadgeTypes\";\nimport ChipBox from \"./ChipBox\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ManageMyBadgesDrawerContent from \"./ManageMyBadges/ManageMyBadgesDrawerContent\";\nimport {AuthUserContext} from \"../../../../AuthUserContextProvider\";\nimport {useParams} from \"react-router-dom\";\nimport DisableBackdropDrawer from \"../../../../components/drawers/DisableBackdropDrawer\";\nimport {useSelector} from \"react-redux\";\nimport {getGroupedBadges} from \"../../../../data/helper/helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nconst Badges = ({handleBadgeQuery}) => {\n  const classes = useStyles();\n  const {userName} = useParams();\n  const {authUser} = useContext(AuthUserContext);\n  const userBadges = useSelector((state) =>\n    state?.userDirectory?.get(\"userBadges\")\n  );\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [groupedBadges, setGroupedBadges] = useState();\n\n  useEffect(() => {\n    if (userBadges) {\n      setGroupedBadges(getGroupedBadges(userBadges));\n    }\n  }, [userBadges]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    handleBadgeQuery();\n    setIsDrawerOpen(open);\n  };\n\n  return (\n    <div className={classes.main}>\n      <Toolbar>\n        <div>\n          <TopTypography>Badges</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n        {userName === authUser.profile.userName && (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={() => setIsDrawerOpen(true)}\n          >\n            <EditIcon className={classes.icon} /> Manage My Badges\n          </Button>\n        )}\n      </Toolbar>\n      {groupedBadges && (\n        <Box m={2}>\n          {Object.entries(groupedBadges)?.map(([badgeType, badges]) => (\n            <ChipBox\n              key={badgeType}\n              badgeTitle={`${BadgeNames?.[badgeType]} Badges`}\n              data={badges}\n            />\n          ))}\n        </Box>\n      )}\n\n      <DisableBackdropDrawer open={isDrawerOpen} onClose={toggleDrawer(false)}>\n        <ManageMyBadgesDrawerContent\n          setIsDrawerOpen={setIsDrawerOpen}\n          handleBadgeQuery={handleBadgeQuery}\n        />\n      </DisableBackdropDrawer>\n    </div>\n  );\n};\n\nexport default memo(Badges);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport UserDirectorySearchTypes from \"../../../data/constants/UserDirectorySearchTypes\";\nimport SelectCircularProgress from \"../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {SEARCH_USER_DIRECTORY} from \"../../../operations/queries/searchUserDirectory\";\nimport handleError from \"../../../data/handleError\";\nimport {\n  setDisabledSearchResults,\n  setSearchQuery,\n  setSearchType,\n  setUsersData,\n} from \"../../../data/redux/userDirectory/userDirectoryActions\";\nimport SearchBlock from \"../../../components/blocks/SearchBlock\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  headerBox: {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 1,\n    width: \"50ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n}));\n\nconst UserProfileSearch = ({\n  searchQuery,\n  setSearchQuery,\n  usersData,\n  setUsersData,\n  searchType,\n  setSearchType,\n  disabledSearchResults,\n  setDisabledSearchResults,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const location = useLocation()?.pathname;\n\n  useEffect(() => {\n    setDisabledSearchResults(true);\n  }, [location]);\n\n  const [executeUserDirSearch, {loading: isResultsLoading}] = useLazyQuery(\n    SEARCH_USER_DIRECTORY,\n    {\n      onCompleted: (data) => {\n        setUsersData(data.search_user_directory);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const handleClick = (userEmail) => {\n    let username;\n\n    const splitEmail = userEmail.split(\"@\");\n    if (splitEmail[1] === \"liveperson.com\") {\n      username = splitEmail[0];\n    } else {\n      username = userEmail;\n    }\n    history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(username));\n  };\n\n  const handleBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (searchQuery?.length) {\n      executeUserDirSearch({\n        variables: {search: {query: searchQuery, type: searchType}},\n      });\n      setResultsOpen(true);\n    } else if (searchQuery?.length === 0) {\n      setResultsOpen(false);\n      setUsersData(\"\");\n    }\n  }, [searchQuery, searchType, setUsersData, executeUserDirSearch]);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(setSearchQuery);\n\n  return (\n    <Box my={3} className={classes.headerBox}>\n      <Box>\n        <SearchBlock\n          searchQuery={searchQuery}\n          handleChange={debouncedChangeHandler}\n          searchProps={{\n            id: \"employee-search-text-field\",\n            label: \"User Directory Search\",\n            helperText: \"Search by Name, Email, Job Title, Department, Location, Badges, Cost Center, or HRIS ID\",\n            onClick: () => disabledSearchResults && setDisabledSearchResults(false),\n            onBlur: () => !disabledSearchResults && setDisabledSearchResults(true),\n          }}\n          searchType={searchType}\n          setSearchType={setSearchType}\n          types={UserDirectorySearchTypes}\n        />\n        {!disabledSearchResults && searchQuery?.length > 0 && (\n          <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n            <Box className={classes.resultsBox}>\n              <Paper>\n                {isResultsLoading && <SelectCircularProgress />}\n                {usersData && (\n                  <>\n                    {usersData?.length === 0 ? (\n                      <Box m={1}>\n                        <NoResultsTypography />\n                      </Box>\n                    ) : (\n                      <List>\n                        {usersData?.map((user) => (\n                          <React.Fragment key={user.id}>\n                            <ListItem\n                              key={user.id}\n                              button\n                              onMouseDown={(e) => e.preventDefault()}\n                              onClick={() => handleClick(user.profile.email)}\n                            >\n                              <ListItemText\n                                primary={\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {user.profile.firstName}{\" \"}\n                                    {user.profile.lastName} |{\" \"}\n                                    {user.profile.location} |{\" \"}\n                                    {user.profile.jobTitle}\n                                  </Typography>\n                                }\n                              />\n                            </ListItem>\n                            {usersData?.length > 1 && <Divider />}\n                          </React.Fragment>\n                        ))}\n                      </List>\n                    )}{\" \"}\n                  </>\n                )}\n              </Paper>\n            </Box>\n          </Collapse>\n        )}\n      </Box>\n\n      <Box>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleBack}>\n          <ArrowBackIosIcon /> Back\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    searchQuery: state.userDirectory.get(\"searchQuery\"),\n    searchType: state.userDirectory.get(\"searchType\"),\n    usersData: state.userDirectory.get(\"usersData\"),\n    disabledSearchResults: state.userDirectory.get(\"disabledSearchResults\"),\n  }),\n  {\n    setSearchQuery,\n    setSearchType,\n    setUsersData,\n    setDisabledSearchResults,\n  }\n)(memo(UserProfileSearch));\n","import React, {\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, useLocation, useParams} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbLink from \"../../../components/breadcrumbs/BreadcrumbLink\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport {GET_GOOGLE_USER_INFO} from \"../../../operations/queries/getGoogleUserInfo\";\nimport {GET_GOOGLE_USER_IMG} from \"../../../operations/queries/getGoogleUserImg\";\nimport {GET_USER_BY_EMAIL} from \"../../../operations/queries/getUserByEmail\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {GET_LPSYNC_USER_BADGES} from \"../../../operations/queries/getLpsyncUserBadges\";\nimport UserInformation from \"./UserInformation\";\nimport ItInformation from \"./ItInformation\";\nimport FinanceInformation from \"./FinanceInformation\";\nimport NonFteAudit from \"./NonFteAudit\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport handleError from \"../../../data/handleError\";\nimport UserProfileInfo from \"./UserProfileInfo\";\nimport Badges from \"./Badges\";\nimport {\n  setGoogleUserInfo,\n  setUserBadges,\n  setUserData,\n  setUserDirectReports,\n} from \"../../../data/redux/userDirectory/userDirectoryActions\";\nimport UserLoadingCircle from \"../UserTeam/UserLoadingCircle\";\nimport TopTypography from \"../../../components/typographies/TopTypography\";\nimport TabsPaper from \"../../../components/tabs/TabsPaper\";\nimport UserProfileSearch from \"./UserProfileSearch\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabPanel: {\n    height: \"50vh\",\n    overflow: \"auto\",\n  },\n  tabBox: {\n    height: \"100%\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst getUserEmail = (userName) => {\n  if (userName?.includes(\"@\")) {\n    return userName;\n  } else {\n    return `${userName}@liveperson.com`;\n  }\n};\n\nconst getUserProfileTabs = (\n  permUserDirectoryFinanceView,\n  viewNonFteTab,\n  permUserDirectoryItDetailsView,\n  handleBadgeQuery\n) =>\n  [\n    {\n      label: \"User Information\",\n      content: <UserInformation />,\n    },\n    {\n      label: \"Badges\",\n      content: <Badges handleBadgeQuery={handleBadgeQuery} />,\n    },\n    permUserDirectoryFinanceView && {\n      label: \"Finance Information\",\n      content: <FinanceInformation />,\n    },\n    viewNonFteTab && {\n      label: \"Non-FTE Audit\",\n      content: <NonFteAudit />,\n    },\n    permUserDirectoryItDetailsView && {\n      label: \"IT Information\",\n      content: <ItInformation />,\n    },\n  ]?.filter(Boolean);\n\nconst tabName = \"scrollable-auto\";\n\nconst UserProfile = () => {\n  const classes = useStyles();\n  let {userName} = useParams();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const userEmail = useSelector(\n    (state) => state?.userDirectory?.get(\"userData\")?.profile?.email\n  );\n  const {\n    authUser,\n    permUserDirectoryFinanceView,\n    permUserDirectoryItDetailsView,\n    permUserDirectoryNonFteAudit,\n  } = useContext(AuthUserContext);\n  const [activeTab, setActiveTab] = useState(0);\n  const [viewNonFteTab, setViewNonFteTab] = useState(false);\n  const location = useLocation();\n\n  const [executeSearch, {data, loading}] = useLazyQuery(GET_USER_BY_EMAIL, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeGoogleUserSearch, {data: gData, loading: gLoading}] =\n    useLazyQuery(GET_GOOGLE_USER_INFO, {\n      onCompleted: (data) =>\n        dispatch(setGoogleUserInfo(data.get_google_user_info)),\n      onError: (error) => handleError(error)(history),\n    });\n\n  const [executeGoogleUserImgSearch, {data: imgData, loading: imgLoading}] =\n    useLazyQuery(GET_GOOGLE_USER_IMG, {\n      onError: (error) => handleError(error)(history),\n    });\n\n  const [executeBadgesSearch] = useLazyQuery(GET_LPSYNC_USER_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      dispatch(setUserBadges(data?.get_lpsync_user_badges));\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if(data) {\n      dispatch(setUserData(data?.get_user_by_email?.[0]));\n    }\n  }, [data, dispatch]);\n\n  const handleBadgeQuery = useCallback(\n    (email) => {\n      executeBadgesSearch({\n        variables: {user: email || userEmail},\n      });\n    },\n    [userEmail, executeBadgesSearch]\n  );\n\n  useEffect(() => {\n    dispatch(setUserDirectReports());\n    setActiveTab(0);\n  }, [location, dispatch]);\n\n  useEffect(() => {\n    if (authUser?.profile?.userName) {\n      setViewNonFteTab(\n        permUserDirectoryNonFteAudit && userName === authUser.profile.userName\n      );\n    }\n  }, [authUser, permUserDirectoryNonFteAudit, userName]);\n\n  useEffect(() => {\n    if (userName) {\n      const query = getUserEmail(userName);\n      executeSearch({\n        variables: {search: query},\n      });\n      executeGoogleUserSearch({\n        variables: {search: query},\n      });\n      executeGoogleUserImgSearch({\n        variables: {search: query},\n      });\n      handleBadgeQuery(query);\n    }\n  }, [userName]);\n\n  const handleTabsChange = (event, newTab) => {\n    setActiveTab(newTab);\n  };\n\n  const useProfileTabs = useMemo(\n    () =>\n      getUserProfileTabs(\n        permUserDirectoryFinanceView,\n        viewNonFteTab,\n        permUserDirectoryItDetailsView,\n        handleBadgeQuery\n      )?.map((tab) => ({\n        ...tab,\n        content: <Box className={classes.tabBox}> {tab?.content} </Box>,\n      })),\n    [\n      permUserDirectoryFinanceView,\n      viewNonFteTab,\n      permUserDirectoryItDetailsView,\n      handleBadgeQuery,\n    ]\n  );\n\n  const user = data?.get_user_by_email?.[0];\n\n  return (\n    <Page title={`${userName.toUpperCase()} | User Directory | LPSYNC`}>\n      <BreadcrumbHomeBox>\n        <BreadcrumbLink\n          href={FrontendRoutes.USER_DIRECTORY}\n          title={\"USER DIRECTORY\"}\n        />\n        <BreadcrumbText title={`${userName.toUpperCase()}`} />\n      </BreadcrumbHomeBox>\n      <Box mx={3}>\n        <Box minWidth={1050}>\n          <UserProfileSearch />\n\n          {loading || gLoading || imgLoading ? (\n            <UserLoadingCircle text={\"Loading user details...\"} />\n          ) : user && imgData && gData ? (\n            <>\n              <UserProfileInfo\n                profile={user.profile}\n                image={imgData.get_google_user_img?.photoData}\n              />\n\n              <Box minWidth={1050}>\n                <TabsPaper\n                  value={activeTab}\n                  handleChange={handleTabsChange}\n                  tabs={useProfileTabs}\n                  tabName={tabName}\n                  tabPanelClasses={classes.tabPanel}\n                  aria-label=\"user profile tabs navigation\"\n                  styled\n                />\n              </Box>\n            </>\n          ) : (\n            <TopTypography>User Not Found</TopTypography>\n          )}\n        </Box>\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(UserProfile);\n","import React, {memo, useContext} from \"react\";\nimport {Route, useHistory} from \"react-router-dom\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\n\nconst SecureRoute = ({adminOnly, children, ...props}) => {\n  const {\n    permSysMgmtSettingsOffboarding,\n    permSysMgmtLogs,\n    permSysMgmtManage,\n    permSysMgmtSettingsOnboarding,\n    permSysMgmtBadgeMgmt,\n    permSysMgmtCandidatePortalAccess,\n    permSysMgmtSchedulerJobs,\n    permSysMgmtFteCandidateTracker,\n    permSystemsAndServicesView,\n    authUser,\n  } = useContext(AuthUserContext);\n  const history = useHistory();\n\n  if (!authUser) {\n    return null;\n  }\n\n  if (\n    adminOnly &&\n    !(\n      permSysMgmtSettingsOffboarding ||\n      permSysMgmtLogs ||\n      permSysMgmtManage ||\n      permSysMgmtSettingsOnboarding ||\n      permSysMgmtBadgeMgmt ||\n      permSysMgmtCandidatePortalAccess ||\n      permSysMgmtSchedulerJobs ||\n      permSysMgmtFteCandidateTracker ||\n      permSystemsAndServicesView\n    )\n  ) {\n    history.push(FrontendRoutes.HOME);\n  }\n\n  return <Route {...props}>{children}</Route>;\n};\n\nexport default memo(SecureRoute);\n","import React, { memo } from \"react\";\nimport UserDirectoryPageContent from \"./UserDirectoryPageContent\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport UserProfile from \"./UserProfile\";\nimport { Switch } from \"react-router-dom\";\nimport SecureRoute from \"../../components/routes/SecureRoute\";\n\nconst UserDirectoryPage = () => {\n  return (\n    <Switch>\n      <SecureRoute exact path={FrontendRoutes.USER_DIRECTORY_PROFILE()}>\n        <UserProfile />\n      </SecureRoute>\n\n      <SecureRoute exact path={FrontendRoutes.USER_DIRECTORY}>\n        <UserDirectoryPageContent />\n      </SecureRoute>\n    </Switch>\n  );\n};\n\nexport default memo(UserDirectoryPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_THIRD_PARTIES = gql`\n  query GetThirdParties($filters: ThirdPartyFiltersInput) {\n    get_third_parties(filters: $filters) {\n        id\n        code\n        name\n        altName\n        type\n        owner\n        status\n        contactFirstName\n        contactLastName\n        contactEmail\n        ownerFirstName\n        ownerLastName\n    }\n  }\n`;\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst ThirdPartyActonTypes = {\n  SET_ALL_THIRD_PARTIES: \"SET_ALL_THIRD_PARTIES\",\n  SET_SEARCH_QUERY: \"SET_SEARCH_QUERY\",\n  SET_THIRD_PARTY_DATA: \"SET_THIRD_PARTY_DATA\",\n  SET_FILTERS: \"SET_FILTERS\",\n  SET_THIRD_PARTY_USERS: \"SET_THIRD_PARTY_USERS\"\n};\n\nexport default typesWithPrefix(\"THIRD_PARTY_\")(\n  ThirdPartyActonTypes\n);\n","import ThirdPartyActonTypes from \"./thirdPartyActonTypes\";\n\nexport const setAllThirdParties = (allThirdParties) => ({\n  type: ThirdPartyActonTypes.SET_ALL_THIRD_PARTIES,\n  payload: {allThirdParties},\n});\n\nexport const setSearchQuery = (searchQuery) => ({\n  type: ThirdPartyActonTypes.SET_SEARCH_QUERY,\n  payload: {searchQuery},\n});\n\nexport const setThirdPartyData = (thirdPartyData) => ({\n  type: ThirdPartyActonTypes.SET_THIRD_PARTY_DATA,\n  payload: {thirdPartyData},\n});\n\nexport const setFilters = (filters) => ({\n  type: ThirdPartyActonTypes.SET_FILTERS,\n  payload: {filters},\n});\n\nexport const setThirdPartyUsers = (thirdPartyUsers) => ({\n  type: ThirdPartyActonTypes.SET_THIRD_PARTY_USERS,\n  payload: {thirdPartyUsers},\n});\n","export const ThirdPartyStatuses = {\n  APPROVED: \"Approved\",\n  DISAPPROVED: \"Not Approved\"\n};\n\nexport const getStatusName = (code) => {\n  if (code?.length > 6){\n    return ThirdPartyStatuses.DISAPPROVED;\n  }\n  return ThirdPartyStatuses.APPROVED;\n};\n\nexport const getBooleanStatus = (status) => {\n  switch (status) {\n    case ThirdPartyStatuses.APPROVED:\n      return true;\n    case ThirdPartyStatuses.DISAPPROVED:\n      return false;\n    default:\n      return undefined;\n  }\n};","import {Table, TableBody} from \"@material-ui/core\";\nimport React, {memo, useState} from \"react\";\nimport EnhancedTableHead from \"../../../components/table/EnhancedTableHead\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport {getComparator, stableSort} from \"../../../data/helper/helpers\";\nimport CustomTableRow from \"../../../components/table/CustomTableRow\";\nimport ViewButton from \"../../../components/buttons/ViewButton\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport {useHistory} from \"react-router-dom\";\nimport {getStatusName} from \"../../../data/constants/ThirdPartyStatuses\";\n\nconst headCells = [\n  {id: \"code\", label: \"Code\"},\n  {id: \"name\", label: \"Name\"},\n  {id: \"type\", label: \"Vendor Type\"},\n  {id: \"owner\", label: \"Owner\"},\n  {id: \"status\", label: \"Status\"}\n];\n\nconst getOwnerName = (thirdParty) => thirdParty?.ownerFirstName ?\n  `${thirdParty?.ownerFirstName} ${thirdParty?.ownerLastName}` : thirdParty?.owner;\n\nconst thirdPartyRow = (thirdParty) => [\n  {id: \"code\", value: thirdParty?.code},\n  {id: \"name\", value: thirdParty?.name},\n  {id: \"type\", value: thirdParty?.type},\n  {id: \"owner\", value: getOwnerName(thirdParty)},\n  {id: \"status\", value: getStatusName(thirdParty?.code)},\n  {id: \"view\", value: <ViewButton text=\"View\" />}\n];\n\nconst ThirdPartyDirectoryTableContent = ({thirdParties, isLoading}) => {\n  const history = useHistory();\n\n  const [order, setOrder] = useState(\"desc\");\n  const [orderBy, setOrderBy] = useState(\"taskCreatedDateTime\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleOnClick = (thirdPartyId) => {\n    history.push(FrontendRoutes.THIRD_PARTY_DIRECTORY_PROFILE(thirdPartyId));\n  };\n  return (\n    <Table stickyHeader size=\"small\">\n      <EnhancedTableHead\n        headCells={headCells}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n      />\n      {isLoading ? (<LoadingCircle />) : (\n        <TableBody>\n          {stableSort(thirdParties, getComparator(order, orderBy))\n            .map(thirdParty => (\n              <CustomTableRow\n                align=\"left\"\n                key={thirdParty.id}\n                id={thirdParty.id}\n                rowData={thirdPartyRow(thirdParty)}\n                handleClick={() => handleOnClick(thirdParty.id)}\n              />\n            ))}\n        </TableBody>\n      )}\n    </Table>\n  );\n};\n\nexport default memo(ThirdPartyDirectoryTableContent);\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {GET_THIRD_PARTIES} from \"../../../operations/queries/getThirdParties\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {setAllThirdParties, setFilters} from \"../../../data/redux/thirdParty/thirdPartyActions\";\nimport {Box, makeStyles, TableContainer, Typography} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport CustomInfiniteScroll from \"../../../components/table/CustomInfiniteScroll\";\nimport ThirdPartyDirectoryTableContent from \"./ThirdPartyDirectoryTableContent\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport {removeExtraSpaces} from \"../../../data/helper/commonFunctions\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    maxHeight: \"50vh\"\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\"\n  },\n  noDataTypography: {\n    paddingLeft: theme.spacing(5)\n  }\n}));\n\nconst ThirdPartySearchResults = ({\n  allThirdParties,\n  setAllThirdParties,\n  filters,\n  trimmedSearchQuery,\n  setFilters,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n\n  const [executeSearch] = useLazyQuery(GET_THIRD_PARTIES, {\n    // notifyOnNetworkStatusChange: true,\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (data) => {\n      handleQueryFilter(data);\n    },\n    onError: (error) => handleError(error)(history)\n  });\n\n  const handleQueryFilter = (result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...allThirdParties, ...result.get_third_parties];\n        setAllThirdParties(data);\n      } else {\n        setAllThirdParties(result.get_third_parties);\n      }\n      setIsSearchInProgress(false);\n      setTasksCountStatus(result.get_third_parties?.length >= filters?.itemsPerPage);\n    } else {\n      setTasksCountStatus(false);\n    }\n  };\n\n  useEffect(() => {\n    if (trimmedSearchQuery?.length && executeSearch && filters) {\n      setIsSearchInProgress(true);\n      executeSearch({\n        variables: {filters: {...filters, query: trimmedSearchQuery}}\n      });\n    }\n  }, [trimmedSearchQuery, filters, executeSearch]);\n\n  const handlePageChange = useCallback(() => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount: filters.pageCount + 1});\n    }\n  }, [isSearchInProgress, filters, setFilters]);\n  return (\n    <Box mt={2} minWidth={1050}>\n      <PaperCardWrapper>\n        {isSearchInProgress && !allThirdParties?.length ? <LoadingCircle text=\"Loading thirdParties...\" /> :\n          !allThirdParties?.length ? <Typography className={classes.noDataTypography}>No Third Parties</Typography>\n            : (\n              <Box p={2}>\n                <TableContainer\n                  className={classes.tableContainer}\n                  id={\"task-manager\"}\n                >\n                  <CustomInfiniteScroll\n                    scrollableTarget=\"task-manager\"\n                    dataLength={allThirdParties.length}\n                    next={handlePageChange}\n                    hasMore={tasksCountStatus}\n                  >\n                    <ThirdPartyDirectoryTableContent thirdParties={allThirdParties} />\n                  </CustomInfiniteScroll>\n                </TableContainer>\n              </Box>\n            )}\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default connect(state => ({\n  trimmedSearchQuery: removeExtraSpaces(state.thirdParty.get(\"searchQuery\")),\n  allThirdParties: state.thirdParty.get(\"allThirdParties\"),\n  filters: state.thirdParty.get(\"filters\")\n}), {setAllThirdParties, setFilters})\n(memo(ThirdPartySearchResults));","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {Box, makeStyles, TableContainer, Typography} from \"@material-ui/core\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport ToolbarTypography from \"../../../components/typographies/ToolbarTypography\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport ThirdPartyDirectoryTableContent from \"./ThirdPartyDirectoryTableContent\";\nimport CustomInfiniteScroll from \"../../../components/table/CustomInfiniteScroll\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    maxHeight: \"33vh\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\"\n  },\n  noDataTypography: {\n    paddingLeft: theme.spacing(5)\n  }\n}));\n\nconst ThirdPartyDirectoryTable = ({title, executeFunc}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\n  const [thirdPartiesCountStatus, setThirdPartiesCountStatus]= useState(false);\n  const [infoThirdParties, setInfoThirdParties] = useState([]);\n  const [filters, setFilters] = useState({itemsPerPage: 20, pageCount: 0});\n\n  const handleQueryFilter = useCallback((result) => {\n    if (result) {\n      if (filters.pageCount > 0) {\n        const data = [...infoThirdParties, ...result];\n        setInfoThirdParties(data);\n      } else {\n        setInfoThirdParties(result);\n      }\n      setIsSearchInProgress(false);\n      setThirdPartiesCountStatus(result?.length >= filters?.itemsPerPage);\n    } else {\n      setThirdPartiesCountStatus(false);\n    }\n  }, [filters, infoThirdParties, setInfoThirdParties, setIsSearchInProgress, setThirdPartiesCountStatus]);\n\n  const [executeSearch] = executeFunc({\n    notifyOnNetworkStatusChange: true,\n    onError: (error) => handleError(error)(history)\n  }, handleQueryFilter);\n\n  const handlePageChange = useCallback(() => {\n    if (!isSearchInProgress) {\n      setFilters({...filters, pageCount: filters.pageCount + 1});\n    }\n  }, [isSearchInProgress, filters, setFilters]);\n\n  useEffect(() => {\n    if (executeSearch && filters) {\n      setIsSearchInProgress(true);\n      executeSearch({\n        variables: {filters}\n      });\n    }\n  }, [executeSearch, filters]);\n\n  return (\n    <Box mt={2} minWidth={1050} className={classes.outerBox}>\n      <PaperCardWrapper>\n        {title && <ToolbarTypography title={title} />}\n        {isSearchInProgress && !infoThirdParties?.length ? <LoadingCircle text=\"Loading thirdParties...\" /> :\n          !infoThirdParties?.length ? <Typography className={classes.noDataTypography}>No Third Parties</Typography>\n            : (\n              <Box p={2}>\n                <TableContainer\n                  className={classes.tableContainer}\n                  id={\"third-party-directory\"}\n                >\n                  <CustomInfiniteScroll\n                    scrollableTarget=\"third-party-directory\"\n                    dataLength={infoThirdParties?.length}\n                    next={handlePageChange}\n                    hasMore={thirdPartiesCountStatus}\n                  >\n                    <ThirdPartyDirectoryTableContent thirdParties={infoThirdParties} />\n                  </CustomInfiniteScroll>\n                </TableContainer>\n              </Box>\n            )}\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default memo(ThirdPartyDirectoryTable);","import { gql } from \"@apollo/client\";\n\nexport const GET_VIEWED_THIRD_PARTIES = gql`\n  query GetViewedThirdParties($filters: PageFilters) {\n      get_viewed_third_parties(filters: $filters) {\n        id\n        code\n        name\n        altName\n        type\n        owner\n        status\n        contactFirstName\n        contactLastName\n        contactEmail\n        ownerFirstName\n        ownerLastName\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_OWNED_THIRD_PARTIES = gql`\n  query GetOwnedThirdParties($filters: PageFilters) {\n    get_owned_third_parties(filters: $filters) {\n        id\n        code\n        name\n        altName\n        type\n        owner\n        status\n        contactFirstName\n        contactLastName\n        contactEmail\n        ownerFirstName\n        ownerLastName\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport ThirdPartyDirectoryTable from \"./ThirdPartyDirectoryTable\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_VIEWED_THIRD_PARTIES} from \"../../../operations/queries/getViewedThirdParties\";\nimport {GET_OWNED_THIRD_PARTIES} from \"../../../operations/queries/getOwnedThirdParties\";\n\nconst useGetOwnedThirdParties = (config, handleComplete) => useLazyQuery(GET_OWNED_THIRD_PARTIES, {\n  fetchPolicy: \"cache-and-network\",\n  ...config,\n  onCompleted: (data) => {\n    handleComplete(data?.get_owned_third_parties);\n  },\n});\n\nconst useRecentlyViewedThirdParties = (config, handleComplete) => useLazyQuery(GET_VIEWED_THIRD_PARTIES, {\n  ...config,\n  onCompleted: (data) => {\n    handleComplete(data?.get_viewed_third_parties);\n  },\n});\n\nconst ThirdPartyDirectoryInfo = () => {\n  return (\n    <>\n      <ThirdPartyDirectoryTable\n        title=\"Recently Viewed Third Parties\"\n        executeFunc={useRecentlyViewedThirdParties}\n      />\n      <ThirdPartyDirectoryTable\n        title=\"Third Parties You Own\"\n        executeFunc={useGetOwnedThirdParties}\n      />\n    </>\n  );\n};\nexport default memo(ThirdPartyDirectoryInfo);","import React, {memo, useState} from \"react\";\nimport SelectTextField from \"../../../components/inputs/SelectTextfield\";\nimport {connect} from \"react-redux\";\nimport {setAllThirdParties, setFilters, setSearchQuery} from \"../../../data/redux/thirdParty/thirdPartyActions\";\nimport {getBooleanStatus, ThirdPartyStatuses} from \"../../../data/constants/ThirdPartyStatuses\";\nimport FilterBlock from \"../../../components/blocks/FilterBlock\";\n\nconst ThirdPartyDirectoryFilterBlock = ({\n  filters,\n  filterOpen,\n  allThirdParties,\n  setFilters,\n  setAllThirdParties,\n  setIsFilterApplied,\n  setSearchQuery,\n}) => {\n  const [thirdPartyTypeFilter, setThirdPartyTypeFilter] = useState(\"\");\n  const [thirdPartyOwnerFilter, setThirdPartyOwnerFilter] = useState(\"\");\n  const [thirdPartyStatusFilter, setThirdPartyStatusFilter] = useState(\"\");\n\n  const handleFilterQuery = () => {\n    const newFilters = {\n      ...filters,\n      vendorType: thirdPartyTypeFilter.toLowerCase(),\n      status: getBooleanStatus(thirdPartyStatusFilter),\n      owner: thirdPartyOwnerFilter.toLowerCase(),\n      pageCount: 0,\n    };\n    setFilters(newFilters);\n    setAllThirdParties([]);\n    setIsFilterApplied(true);\n  };\n\n  const handleClearFilters = () => {\n    setSearchQuery(\"\");\n    setThirdPartyTypeFilter(\"\");\n    setThirdPartyOwnerFilter(\"\");\n    setThirdPartyStatusFilter(\"\");\n    setAllThirdParties(allThirdParties);\n    setIsFilterApplied(false);\n  };\n\n  return (\n    <FilterBlock\n      filterOpen={filterOpen}\n      handleFilterQuery={handleFilterQuery}\n      handleClearFilters={handleClearFilters}\n    >\n      <SelectTextField\n        id=\"select-third-party-type\"\n        label=\"Third Party Type\"\n        value={thirdPartyTypeFilter}\n        onValueChange={setThirdPartyTypeFilter}\n        dataList={allThirdParties?.map((thirdParty) => thirdParty?.type)}\n      />\n      <SelectTextField\n        id=\"select-thirdParty-owner\"\n        label=\"ThirdParty Owner\"\n        value={thirdPartyOwnerFilter}\n        onValueChange={setThirdPartyOwnerFilter}\n        dataList={allThirdParties?.map((thirdParty) => thirdParty?.owner)}\n      />\n      <SelectTextField\n        id=\"select-thirdParty-status\"\n        label=\"ThirdParty Status\"\n        value={thirdPartyStatusFilter}\n        onValueChange={setThirdPartyStatusFilter}\n        dataList={Object.values(ThirdPartyStatuses)}\n      />\n    </FilterBlock>\n  );\n};\n\nexport default connect(state => ({\n  filters: state.thirdParty.get(\"filters\"),\n  allThirdParties: state.thirdParty.get(\"allThirdParties\"),\n}), {setAllThirdParties, setFilters, setSearchQuery})(memo(ThirdPartyDirectoryFilterBlock));\n","import React, {memo, useCallback, useState} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport UserToolbarTypography from \"../../../components/typographies/ToolbarTypography\";\nimport SearchBlock from \"../../../components/blocks/SearchBlock\";\nimport ThirdPartyFilterBlock from \"./ThirdPartyDirectoryFilterBlock\";\nimport {connect} from \"react-redux\";\nimport {setSearchQuery} from \"../../../data/redux/thirdParty/thirdPartyActions\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchBox: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  gradientPaper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst ThirdPartySearchBlock = ({searchQuery, setSearchQuery}) => {\n  const classes = useStyles();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n\n  const handleFilterClick = useCallback(() => {\n    setFilterOpen(!filterOpen);\n  }, [setFilterOpen, filterOpen]);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(setSearchQuery);\n\n  return (\n    <Box mt={3}>\n      <PaperCardWrapper className={classes.gradientPaper}>\n        <Box className={classes.searchBox}>\n          <UserToolbarTypography white title=\"Third Party Search\" />\n\n          <SearchBlock\n            searchQuery={searchQuery}\n            handleChange={debouncedChangeHandler}\n            searchProps={{\n              id: \"third-party-search-text-field\",\n              label: \"Search by Third Party: Name, AltName, Vendor Type, Owner, Contact\",\n            }}\n            handleFilterClick={handleFilterClick}\n            isFilterApplied={isFilterApplied}\n          />\n        </Box>\n\n        {searchQuery?.length > 0 && (\n          <ThirdPartyFilterBlock\n            filterOpen={filterOpen}\n            setIsFilterApplied={setIsFilterApplied}\n          />\n        )}\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    searchQuery: state.thirdParty.get(\"searchQuery\"),\n  }),\n  {setSearchQuery}\n)(memo(ThirdPartySearchBlock));\n","import React, {memo, useContext, useEffect} from \"react\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport ThirdPartySearchResults from \"./ThirdPartySearchResults\";\nimport ThirdPartyDirectoryInfo from \"./ThirdPartyDirectoryInfo\";\nimport {connect} from \"react-redux\";\nimport ThirdPartySearchBlock from \"./ThirdPartySearchBlock\";\nimport {useLocation} from \"react-router-dom\";\nimport {setSearchQuery} from \"../../../data/redux/thirdParty/thirdPartyActions\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\n\nconst useStyles = makeStyles({\n  page: {\n    flex: \"1 1 auto\",\n    height: \"100%\"\n  },\n  headerBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\"\n  }\n});\n\nconst ThirdPartyDirectoryPageContent = ({searchQuery, setSearchQuery}) => {\n  const classes = useStyles();\n  const {permThirdPartyDirectoryView} = useContext(AuthUserContext);\n  const location = useLocation();\n  useEffect(() => {\n    setSearchQuery(\"\")\n  }, [location]);\n\n  return (\n    <Page title=\"Third Party Directory | LPSYNC\" className={classes.page}>\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"THIRD PARTY DIRECTORY\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Third Party Directory\" className={classes.headerBox}>\n          {permThirdPartyDirectoryView && (\n            <Button variant=\"outlined\" disabled>\n              <AddIcon /> Request New Third Party\n            </Button>\n          )}\n        </PageTitleBox>\n\n        {permThirdPartyDirectoryView ? (\n          <>\n            <ThirdPartySearchBlock />\n\n            {searchQuery?.length\n              ? <ThirdPartySearchResults />\n              : <ThirdPartyDirectoryInfo />\n            }\n          </>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default connect(state => ({\n  searchQuery: state.thirdParty.get(\"searchQuery\")\n}), {setSearchQuery})\n(memo(ThirdPartyDirectoryPageContent));\n","import { gql } from \"@apollo/client\";\n\nexport const GET_THIRD_PARTY_BY_CODE = gql`\n  query GetThirdPartyByCode($search: String!) {\n    get_third_party_by_code(search: $search) {\n        id\n        code\n        name\n        altName\n        type\n        owner\n        status\n        contactFirstName\n        contactLastName\n        contactEmail\n        ownerFirstName\n        ownerLastName\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport { makeStyles, TableCell, TableRow } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  tableCellKey: {\n    borderBottom: \"none\",\n  },\n  tableCell: {\n    fontWeight: 600,\n    borderBottom: \"none\",\n  },\n}));\n\nconst CustomTableLabelValueRow = ({row}) => {\n  const classes = useStyles();\n  return (\n    <TableRow>\n      <TableCell\n        component=\"th\"\n        scope=\"row\"\n        className={classes.tableCellKey}\n      >\n        {row?.label}\n      </TableCell>\n      <TableCell align=\"left\" className={classes.tableCell}>\n        {row?.value}\n      </TableCell>\n    </TableRow>\n  )\n};\n\nexport default memo(CustomTableLabelValueRow);","import React, { memo, useMemo } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport TaskContainerTable from \"../../../components/taskManager/TaskContainerTable\";\nimport CustomTableLabelValueRow from \"../../../components/table/CustomTableLabelValueRow\";\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    maxWidth: 500,\n  },\n  container: {\n    marginLeft: 0,\n    padding: 0\n  },\n}));\n\nconst DEFAULT_NULL_LABEL = \"Not Entered\";\n\nconst thirdPartyTableRows = (thirdPartyData) => [\n  {\n    label: \"Third Party Code\",\n    value: thirdPartyData?.code || DEFAULT_NULL_LABEL,\n  },\n  {\n    label: \"Third Party Name\",\n    value: thirdPartyData?.name || DEFAULT_NULL_LABEL,\n  },\n  {\n    label: \"Third Party Alternate Name\",\n    value: thirdPartyData?.altName || DEFAULT_NULL_LABEL,\n  },\n];\n\nconst Details = () => {\n  const classes = useStyles();\n  const thirdPartyData = useSelector(state => state?.thirdParty?.get(\"thirdPartyData\"));\n  const thirdPartyRows = useMemo(() => thirdPartyTableRows(thirdPartyData), [thirdPartyData]);\n\n  if (!thirdPartyData || !thirdPartyRows) {\n    return null;\n  }\n  return (\n    <TaskContainerTable tableProps={{ className: classes.table }} containerProps={{ className: classes.container }}>\n      {thirdPartyRows?.map(row => (\n        <CustomTableLabelValueRow key={row?.label} row={row} />\n      ))}\n    </TaskContainerTable>\n  );\n};\n\nexport default memo(Details);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USERS_BY_CONTRACTOR_COMPANY = gql`\n  query GetUsersByContractorCompany($filters: FilterQuery!) {\n    get_users_by_contractor_company(filters: $filters) {\n      id\n      lastLogin\n      status\n      profile {\n        businessUnit\n        companyName\n        costCenter\n        department\n        email\n        employeeNumber\n        employeeSince\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        manager\n        mobilePhone\n        primaryPhone\n        userName\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USERS_TOTALS_BY_CONTRACTOR_COMPANY = gql`\n  query GetUsersTotalsByContractorCompany($search: String!) {\n    get_users_totals_by_contractor_company(search: $search)\n  }\n`;\n","import React, { memo, useEffect, useState } from \"react\";\nimport { Box, makeStyles, TableContainer, Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GET_USERS_BY_CONTRACTOR_COMPANY } from \"../../../operations/queries/getUsersByContractorCompany\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport handleError from \"../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport CustomInfiniteScroll from \"../../../components/table/CustomInfiniteScroll\";\nimport UserTableContent from \"../../UserDirectoryPage/UserSearch/UserTableContent\";\nimport { setThirdPartyUsers } from \"../../../data/redux/thirdParty/thirdPartyActions\";\nimport { GET_USERS_TOTALS_BY_CONTRACTOR_COMPANY } from \"../../../operations/queries/getUsersTotalsByContractorCompany\";\n\nconst useStyles = makeStyles(() => ({\n  table: {\n    maxWidth: 500,\n  },\n  container: {\n    marginLeft: 0,\n    padding: 0,\n  },\n  userDirectoryTableContainer: {\n    maxHeight: \"calc(65vh - 140px)\",\n    height: \"100%\",\n    minHeight: 300,\n    overflow: \"auto\",\n  },\n  userTotalsTypography: {\n    lineHeight: 2,\n    fontSize: \"1em\"\n  }\n}));\n\nconst itemsPerPage = 15;\n\nconst ThirdPartyUsers = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const companyName = useSelector(state => state?.thirdParty?.get(\"thirdPartyData\")?.name);\n  const thirdPartyUsers = useSelector(state => state?.thirdParty?.get(\"thirdPartyUsers\"));\n  const [tasksCountStatus, setTasksCountStatus] = useState(true);\n  const [pageCount, setPageCount] = useState(0);\n\n  const [executeTotalSearch, { data: dataTotals, loading: totalLoading }] = useLazyQuery(GET_USERS_TOTALS_BY_CONTRACTOR_COMPANY, {\n      onError: (error) => {\n        handleError(error)(history);\n      },\n    },\n  );\n\n  const [executeSearch, { loading, data }] = useLazyQuery(GET_USERS_BY_CONTRACTOR_COMPANY, {\n    onCompleted: (data) => {\n      if (data) {\n        if (pageCount > 0) {\n          dispatch(setThirdPartyUsers([...thirdPartyUsers, ...data.get_users_by_contractor_company]));\n        } else {\n          dispatch(setThirdPartyUsers(data.get_users_by_contractor_company));\n        }\n        setTasksCountStatus(data.get_users_by_contractor_company?.length >= itemsPerPage);\n      }\n    },\n    onError: (error) => {\n      handleError(error)(history);\n    },\n  });\n  useEffect(() => {\n    if (!pageCount && data?.get_users_by_contractor_company?.length && !thirdPartyUsers?.length) {\n      dispatch(setThirdPartyUsers(data.get_users_by_contractor_company));\n    }\n  });\n\n  useEffect(() => {\n    if (companyName) {\n      executeTotalSearch({ variables: { search: companyName } });\n    }\n  }, [companyName]);\n\n  useEffect(() => {\n    if (companyName) {\n      executeSearch({\n        variables: {\n          filters: {\n            query: companyName,\n            itemsPerPage,\n            after: data?.get_users_by_contractor_company?.slice(-1)?.[0]?.id,\n          },\n        },\n      });\n    }\n  }, [companyName, pageCount]);\n\n  const handlePageChange = (page) => {\n    if (!loading) {\n      setPageCount(page);\n    }\n  };\n\n  if (loading && !thirdPartyUsers?.length) {\n    return <LoadingCircle size={30} />;\n  }\n  if (!thirdPartyUsers?.length) {\n    return <NoResultsTypography />;\n  }\n  return (\n    <>\n      <Box style={{width: 180}}>\n      {totalLoading\n        ? <LoadingCircle size={20} />\n        : (parseInt(dataTotals?.get_users_totals_by_contractor_company) > 0) &&\n        <Typography className={classes.userTotalsTypography}>\n          {dataTotals?.get_users_totals_by_contractor_company} Users Found\n        </Typography>\n      }\n      </Box>\n      <TableContainer id={\"user-directory\"} className={classes.userDirectoryTableContainer}>\n        <CustomInfiniteScroll\n          scrollableTarget=\"user-directory\"\n          dataLength={thirdPartyUsers?.length}\n          next={() => handlePageChange(pageCount + 1)}\n          hasMore={tasksCountStatus}\n        >\n          <UserTableContent users={thirdPartyUsers} />\n\n        </CustomInfiniteScroll>\n\n      </TableContainer>\n    </>\n  );\n};\n\nexport default memo(ThirdPartyUsers);","import React, {memo, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Details from \"./Details\";\nimport TabsPaper from \"../../../components/tabs/TabsPaper\";\nimport ThirdPartyUsers from \"./ThirdPartyUsers\";\n\nconst useStyles = makeStyles(() => ({\n  tabPanel: {\n    height: \"45vh\",\n    overflow: \"auto\",\n  },\n}));\n\nconst thirdPartyTabs = [\n  {\n    label: \"Details\",\n    content: <Details />,\n  },\n  // { label: \"Security\", content: \"...\" },\n  {label: \"Users\", content: <ThirdPartyUsers />},\n];\n\nconst tabName = \"scrollable-auto\";\n\nconst ThirdPartyProfilePanel = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleTabsChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <TabsPaper\n      value={value}\n      onChange={handleTabsChange}\n      tabs={thirdPartyTabs}\n      tabName={tabName}\n      aria-label=\"scrollable auto tabs example\"\n      tabPanelClasses={classes.tabPanel}\n      styled\n    />\n  );\n};\n\nexport default memo(ThirdPartyProfilePanel);\n","import React, { memo } from \"react\";\nimport {connect} from \"react-redux\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport ProfileTypography from \"../../../components/typographies/ProfileTypography\";\nimport {getStatusName} from \"../../../data/constants/ThirdPartyStatuses\";\n\nconst DEFAULT_NULL_LABEL = 'Not Entered';\n\nconst getThirdPartyContactName = (thirdParty) => {\n  const {contactFirstName, contactLastName} = thirdParty || {};\n  return contactFirstName && contactLastName ? (contactFirstName + \" \" + contactLastName) : DEFAULT_NULL_LABEL;\n}\n\nconst ThirdPartyProfileInfo = ({thirdPartyData}) => {\n  return (\n    <Box>\n      <PaperCardWrapper>\n        <Grid\n          container\n          direction=\"row\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <div>\n              <Typography component={\"div\"} variant=\"h6\">\n                {thirdPartyData.name}\n              </Typography>\n            </div>\n          </Grid>\n\n          <Grid item>\n            <ProfileTypography\n              subtitle=\"OWNER\"\n              text={thirdPartyData.owner ? thirdPartyData.owner : DEFAULT_NULL_LABEL}\n            />\n            <ProfileTypography\n              subtitle=\"TYPE\"\n              text={thirdPartyData.type ? thirdPartyData.type : DEFAULT_NULL_LABEL}\n            />\n            <ProfileTypography\n              subtitle=\"STATUS\"\n              text={getStatusName(thirdPartyData.code)}\n            />\n          </Grid>\n\n          <Grid item>\n            <ProfileTypography\n              subtitle=\"CONTACT NAME\"\n              text={getThirdPartyContactName(thirdPartyData)}\n            />\n            <ProfileTypography\n              subtitle=\"CONTACT EMAIL\"\n              text={thirdPartyData.contactEmail ? thirdPartyData.contactEmail : DEFAULT_NULL_LABEL}\n            />\n            <ProfileTypography\n              subtitle=\"LP ACCESS\"\n              text={\"yes/no\"}\n            />\n          </Grid>\n        </Grid>\n      </PaperCardWrapper>\n    </Box>\n  );\n};\n\nexport default connect(state => ({thirdPartyData: state.thirdParty.get(\"thirdPartyData\")}), {})\n(memo(ThirdPartyProfileInfo));","import { gql } from \"@apollo/client\";\n\nexport const ADD_THIRD_PARTY_VIEW = gql`\n  mutation AddThirdPartyView(\n    $thirdPartyId: Int!\n    $username: String\n  ) {\n      addThirdPartyView(\n      thirdPartyId: $thirdPartyId\n      username: $username\n      ){\n      thirdPartyId\n      username \n     }\n  }\n`;\n","import React, {memo, useContext, useEffect} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbLink from \"../../../components/breadcrumbs/BreadcrumbLink\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {GET_THIRD_PARTY_BY_CODE} from \"../../../operations/queries/getThirdPartyByCode\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport handleError from \"../../../data/handleError\";\nimport ThirdPartyProfilePanel from \"./ThirdPartyProfilePanel\";\nimport ThirdPartyProfileInfo from \"./ThirdPartyProfileInfo\";\nimport {ADD_THIRD_PARTY_VIEW} from \"../../../operations/mutations/addThirdPartyView\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport { setThirdPartyData, setThirdPartyUsers } from \"../../../data/redux/thirdParty/thirdPartyActions\";\n\nconst ThirdPartyProfile = () => {\n  const history = useHistory();\n  const { thirdPartyId } = useParams();\n  const { permThirdPartyDirectoryView, authUser } = useContext(AuthUserContext);\n  const dispatch = useDispatch();\n  const thirdPartyData = useSelector(state => state?.thirdParty?.get(\"thirdPartyData\"));\n\n  const { loading } = useQuery(GET_THIRD_PARTY_BY_CODE, {\n    variables: { search: thirdPartyId },\n    onCompleted: (data) => {\n      dispatch(setThirdPartyData(data.get_third_party_by_code));\n      dispatch(setThirdPartyUsers([]));\n    },\n    onError: error => handleError(error)(history),\n  });\n\n  const [addThirdPartyView] = useMutation(ADD_THIRD_PARTY_VIEW, {\n    onError: (error) => console.error(\"Error: \", error),\n  });\n\n\n  useEffect(() => {\n    if(thirdPartyData?.id && authUser?.profile?.userName && addThirdPartyView){\n      addThirdPartyView({\n        variables: {\n            username: authUser?.profile?.userName,\n            thirdPartyId: parseInt(thirdPartyData.id),\n        },\n      });\n    }\n  }, [thirdPartyData, authUser, addThirdPartyView])\n\n  return (\n    <Page title=\"Third Party Directory | LPSYNC\">\n      {thirdPartyData && (\n        <BreadcrumbHomeBox>\n          <BreadcrumbLink\n            href={FrontendRoutes.THIRD_PARTY_DIRECTORY}\n            title={\"THIRD PARTY DIRECTORY\"}\n          />\n          <BreadcrumbText title={`${thirdPartyData.name?.toUpperCase()}`}/>\n        </BreadcrumbHomeBox>\n      )}\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Third Party Directory\" />\n\n        {permThirdPartyDirectoryView ? (\n          <>\n            {loading ? (\n              <LoadingCircle/>\n            ) : thirdPartyData && (\n              <>\n                <ThirdPartyProfileInfo/>\n\n                <ThirdPartyProfilePanel/>\n              </>\n            )}\n          </>\n        ) : (\n          <NoPermissionsError/>\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(ThirdPartyProfile);\n","import React, { memo } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport SecureRoute from \"../../components/routes/SecureRoute\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport ThirdPartyDirectoryContent from \"./ThirdPartyDirectoryContent\";\nimport ThirdPartyProfile from \"./ThirdPartyProfile/ThirdPartyProfile\";\n\nconst ThirdPartyDirectoryPage = () => {\n  return (\n      <Switch>\n        <SecureRoute exact path={FrontendRoutes.THIRD_PARTY_DIRECTORY_PROFILE()}>\n          <ThirdPartyProfile/>\n        </SecureRoute>\n\n        <SecureRoute exact path={FrontendRoutes.THIRD_PARTY_DIRECTORY}>\n          <ThirdPartyDirectoryContent/>\n        </SecureRoute>\n      </Switch>\n  );\n};\n\nexport default memo(ThirdPartyDirectoryPage);\n","import { useLayoutEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useLayoutEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React, {memo} from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormGroup,\n  FormControlLabel,\n  Container,\n} from \"@material-ui/core\";\nimport RequestFormLabel from \"../../typographies/RequestFormTypography\";\nimport ColorCheckbox from \"../../checkboxes/ColorCheckbox\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    width: \"30ch\",\n  },\n  deviceNoteContainer: {\n    width: 600,\n    marginLeft: 0,\n    border: \"1px solid \" + theme.palette.info.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n  label: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst deviceArray = [\n  \"Macbook\",\n  \"Windows (Technical Evaluation Required)\",\n  \"Chromebook\",\n];\n\nconst DeviceSelect = ({\n  selectedDevice,\n  setSelectedDevice,\n  selectedDeviceError,\n  setSelectedDeviceError,\n  isDeviceNoteConfirmed,\n  setIsDeviceNoteConfirmed,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setSelectedDevice(event.target.value);\n    setSelectedDeviceError(false);\n  };\n\n  const handleCheckboxChange = (event) => {\n    setIsDeviceNoteConfirmed(event.target.checked);\n    if (!event.target.checked) {\n      setSelectedDevice(\"No\");\n    }\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <RequestFormLabel title=\"Request device?\" />\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            <Box>\n              <Container m={1} className={classes.deviceNoteContainer}>\n                Please note: <br />\n                Device requests are subject to approval.\n                <br />\n                Please allow 10 days or more for procurement and delivery.{\" \"}\n                <br />\n                Also, your Cost Center may be charged if a device is provided.\n              </Container>\n            </Box>\n            <FormGroup row>\n              <FormControlLabel\n                classes={{label: classes.label}}\n                control={\n                  <ColorCheckbox\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                    checked={isDeviceNoteConfirmed}\n                    onChange={handleCheckboxChange}\n                    name=\"isDeviceNoteConfirmed\"\n                  />\n                }\n                label=\"Check this box if you want to request a device and acknowledge the note above\"\n              />\n            </FormGroup>\n          </Box>\n        </Grid>\n      </Grid>\n      {isDeviceNoteConfirmed && (\n        <Grid item container>\n          <Grid item xs={4}>\n            <RequestFormLabel title=\"Select device\" />\n          </Grid>\n          <Grid item xs={8}>\n            <Box>\n              <FormControl required color=\"secondary\" variant=\"outlined\">\n                <InputLabel id=\"select-device-label\">Device</InputLabel>\n                <Select\n                  labelId=\"select-device-label\"\n                  id=\"select-device\"\n                  error={selectedDeviceError}\n                  value={selectedDevice}\n                  onChange={handleChange}\n                  className={classes.select}\n                  label={\"Device\"}\n                  color={\"secondary\"}\n                >\n                  <MenuItem value=\"No\">\n                    <em>Select Device</em>\n                  </MenuItem>\n                  {deviceArray.map((device) => (\n                    <MenuItem value={device} key={device}>\n                      {device}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default memo(DeviceSelect);\n","import {connect} from \"react-redux\";\nimport {\n  setSelectedDevice,\n  setSelectedDeviceError,\n  setIsDeviceNoteConfirmed,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport DeviceSelect from \"../../../components/formBlocks/deviceInformation/DeviceSelect\";\n\nconst mapStateToProps = (state) => ({\n  selectedDevice: state.candidateRequest.getIn([\n    \"additionalInformation\",\n    \"selectedDevice\",\n  ]),\n  selectedDeviceError: state.candidateRequest.get(\"selectedDeviceError\"),\n  isDeviceNoteConfirmed: state.candidateRequest.getIn([\n    \"additionalInformation\",\n    \"isDeviceNoteConfirmed\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setSelectedDevice,\n  setSelectedDeviceError,\n  setIsDeviceNoteConfirmed,\n};\n\nconst DeviceSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DeviceSelect);\n\nexport default DeviceSelectContainer;\n","import React, {memo} from \"react\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  FormGroup,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport RequestFormLabel from \"../../typographies/RequestFormTypography\";\nimport ColorCheckbox from \"../../checkboxes/ColorCheckbox\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nconst useStyles = makeStyles(() => ({\n  label: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst GoogleAccountCheck = ({\n  isGoogleAccountNeeded,\n  setIsGoogleAccountNeeded,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (e) => {\n    setIsGoogleAccountNeeded(e.target.checked);\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <RequestFormLabel title=\"Does the user need a Google Account? \" />\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            <FormGroup row>\n              <FormControlLabel\n                classes={{label: classes.label}}\n                control={\n                  <ColorCheckbox\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                    checked={isGoogleAccountNeeded}\n                    onChange={handleChange}\n                    name=\"isGoogleAccountNeeded\"\n                  />\n                }\n                label=\"Check this box if the user needs a Google Account (Email, Calendar and Drive)\"\n              />\n            </FormGroup>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default memo(GoogleAccountCheck);\n","import {connect} from \"react-redux\";\nimport {setIsGoogleAccountNeeded} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport GoogleAccountCheck from \"../../../components/formBlocks/googleAccount/GoogleAccountCheck\";\n\nconst mapStateToProps = (state) => ({\n  isGoogleAccountNeeded: state.candidateRequest.getIn([\n    \"additionalInformation\",\n    \"isGoogleAccountNeeded\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setIsGoogleAccountNeeded,\n};\n\nconst GoogleAccountCheckContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GoogleAccountCheck);\n\nexport default GoogleAccountCheckContainer;\n","import React, {memo} from \"react\";\nimport DeviceSelectContainer from \"./DeviceSelectContainer\";\nimport GoogleAccountCheckContainer from \"./GoogleAccountCheckContainer\";\n\nconst AdditionalInformation = () => {\n  return (\n    <>\n      <GoogleAccountCheckContainer />\n      <DeviceSelectContainer />\n    </>\n  );\n};\n\nexport default memo(AdditionalInformation);\n","import React, { memo } from \"react\";\nimport { Box, Grid, } from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport { validateEmailInput } from \"../../../data/helper/validation\";\nimport CustomTextField from \"../../inputs/CustomTextField\";\n\nconst NonLpEmailInput = ({nonLpEmail, setNonLpEmail, nonLpEmailError, setNonLpEmailError}) => {\n  const handleChange = email => {\n    setNonLpEmail(email);\n    if (email !== \"\") {\n      const check = validateEmailInput(email);\n        setNonLpEmailError(!!check);\n    }\n  };\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <RequestFormTypography title=\"Enter non-LP email\"/>\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            <form noValidate autoComplete=\"off\">\n              <CustomTextField\n                required\n                id=\"nonlp-email-input\"\n                label=\"Non-LP Email\"\n                error={nonLpEmailError}\n                value={nonLpEmail}\n                onValueChange={handleChange}\n              />\n            </form>\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default memo(NonLpEmailInput);\n","import {connect} from \"react-redux\";\nimport {\n  setNonLpEmail,\n  setNonLpEmailError,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport NonLpEmailInput from \"../../../components/formBlocks/candidateDetails/NonLpEmailInput\";\n\nconst mapStateToProps = (state) => ({\n  nonLpEmail: state.candidateRequest.getIn([\"candidateDetails\", \"nonLpEmail\"]),\n  nonLpEmailError: state.candidateRequest.get(\"nonLpEmailError\"),\n});\n\nconst mapDispatchToProps = {\n  setNonLpEmail,\n  setNonLpEmailError,\n};\n\nconst NonLpEmailInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NonLpEmailInput);\n\nexport default NonLpEmailInputContainer;\n","import React, {memo} from \"react\";\nimport {Box, Grid, makeStyles} from \"@material-ui/core\";\nimport {isEmpty, validateNameInput} from \"../../../data/helper/validation\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport CustomTextField from \"../../inputs/CustomTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  fields: {\n    display: \"flex\",\n  },\n  firstField: {\n    marginRight: theme.spacing(2),\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5),\n  },\n}));\n\nconst FullNameInput = ({\n  firstName,\n  lastName,\n  setFirstName,\n  setLastName,\n  firstNameError,\n  setFirstNameError,\n  lastNameError,\n  setLastNameError,\n}) => {\n  const classes = useStyles();\n\n  const handleFirstNameChange = (name) => {\n    setFirstName(name);\n    const check = isEmpty(name) || validateNameInput(name);\n    setFirstNameError(!!check);\n  };\n\n  const handleLastNameChange = (name) => {\n    setLastName(name);\n    const check = isEmpty(name) || validateNameInput(name);\n    setLastNameError(!!check);\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Enter first and last name\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box className={classes.fields}>\n          <form className={classes.firstField} noValidate autoComplete=\"off\">\n            <CustomTextField\n              required\n              small\n              id=\"first-name-input\"\n              label=\"First Name\"\n              helperText=\"must contain letters only\"\n              error={firstNameError}\n              value={firstName}\n              onValueChange={handleFirstNameChange}\n            />\n          </form>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              required\n              small\n              id=\"last-name-input\"\n              label=\"Last Name\"\n              helperText=\"must contain letters only\"\n              error={lastNameError}\n              value={lastName}\n              onValueChange={handleLastNameChange}\n            />\n          </form>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(FullNameInput);\n","import {connect} from \"react-redux\";\nimport FullNameInput from \"../../../components/formBlocks/candidateDetails/FullNameInput\";\nimport {\n  setFirstName,\n  setFirstNameError,\n  setLastName,\n  setLastNameError,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\n\nconst mapStateToProps = (state) => ({\n  firstName: state.candidateRequest.getIn([\"candidateDetails\", \"firstName\"]),\n  lastName: state.candidateRequest.getIn([\"candidateDetails\", \"lastName\"]),\n  firstNameError: state.candidateRequest.get(\"firstNameError\"),\n  lastNameError: state.candidateRequest.get(\"lastNameError\"),\n});\n\nconst mapDispatchToProps = {\n  setFirstName,\n  setLastName,\n  setFirstNameError,\n  setLastNameError,\n};\n\nconst FullNameInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FullNameInput);\n\nexport default FullNameInputContainer;\n","import React, {memo} from \"react\";\nimport {Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: \"30ch\"\n  },\n  leftText: {\n    paddingLeft: theme.spacing(5)\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nconst JobTitleInput = ({\n  jobCode,\n  jobError,\n  jobTitle,\n  setJobTitle,\n  setJobError,\n  isFilledByRequisition\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (value) => {\n    setJobTitle(value);\n\n    if (value !== \"\" && jobError) {\n      setJobError(false);\n    }\n  };\n\n  return (\n    <>\n      {jobCode && (\n        <Grid item container>\n          <Grid item xs={4} className={classes.box}>\n            <RequestFormTypography title=\"Enter Job Title\" />\n          </Grid>\n\n          <Grid item xs={8} className={classes.box}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                color=\"secondary\"\n                id=\"job-title-amount-input\"\n                label=\"Job Title*\"\n                helperText=\"must be up to 25 characters\"\n                error={jobError}\n                className={classes.textField}\n                value={jobTitle}\n                disabled={isFilledByRequisition}\n                onChange={e => handleChange(e.target.value)}\n                inputProps={{maxLength: 25}}\n              />\n            </form>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default memo(JobTitleInput);\n","import {connect} from \"react-redux\";\nimport {\n  setJobCode,\n  setJobError,\n  setJobTitle,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport JobTitleInput from \"../../../components/formBlocks/candidateDetails/JobTitleInput\";\n\nconst mapStateToProps = (state) => ({\n  jobCode:\n    state.candidateRequest.getIn([\"candidateDetails\", \"job\", \"jobCode\"]) || \"\",\n  jobTitle:\n    state.candidateRequest.getIn([\"candidateDetails\", \"job\", \"jobTitle\"]) || \"\",\n  jobError: state.candidateRequest.get(\"jobError\"),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\"),\n});\n\nconst mapDispatchToProps = {\n  setJobCode,\n  setJobTitle,\n  setJobError,\n};\n\nconst JobTitleInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobTitleInput);\n\nexport default JobTitleInputContainer;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport {GET_REQUISITION_JOB_CODE} from \"../../../operations/queries/getRequisitionJobCode\";\nimport handleError from \"../../../data/handleError\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\n\nconst JobCode = ({\n  jobCode,\n  setJobCode,\n  locationCountryCode,\n  employeeType,\n  isFilledByRequisition,\n}) => {\n  const history = useHistory();\n  const [reqJobCode, setReqJobCode] = useState();\n\n  const [executeSearch] = useLazyQuery(GET_REQUISITION_JOB_CODE, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setReqJobCode(data.get_requisition_job_code?.[0]);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (!isFilledByRequisition) {\n      if (employeeType && locationCountryCode) {\n        executeSearch({variables: {search: employeeType}});\n      } else {\n        setJobCode(\"\");\n      }\n    }\n  }, [employeeType, locationCountryCode]);\n\n  useEffect(() => {\n    if (!isFilledByRequisition) {\n      if (\n        locationCountryCode &&\n        employeeType &&\n        (reqJobCode?.IntJobCode || reqJobCode?.USJobCode)\n      ) {\n        if (locationCountryCode === \"USA\") {\n          setJobCode(reqJobCode?.USJobCode);\n        } else {\n          setJobCode(reqJobCode?.IntJobCode);\n        }\n      } else {\n        setJobCode(\"\");\n      }\n    }\n  }, [reqJobCode, locationCountryCode, setJobCode]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Job Code\" subtitle=\"(auto-generated)\" />\n      </Grid>\n      <Grid item xs={8}>\n        {jobCode && <Typography component={\"div\"}>{jobCode}</Typography>}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(JobCode);\n","import {connect} from \"react-redux\";\nimport {\n  setJobCode,\n  setJobError,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport JobCode from \"../../../components/formBlocks/candidateDetails/JobCode\";\n\nconst mapStateToProps = (state) => ({\n  jobCode: state.candidateRequest.getIn([\"candidateDetails\", \"job\", \"jobCode\"]),\n  jobError: state.candidateRequest.get(\"jobError\"),\n  locationCountryCode: state.candidateRequest.getIn([\n    \"requisitionDetails\",\n    \"location\",\n    \"locationCountryCode\",\n  ]),\n  employeeType: state.candidateRequest.getIn([\n    \"requisitionDetails\",\n    \"employeeType\",\n  ]),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\"),\n});\n\nconst mapDispatchToProps = {\n  setJobCode,\n  setJobError,\n};\n\nconst JobCodeContainer = connect(mapStateToProps, mapDispatchToProps)(JobCode);\n\nexport default JobCodeContainer;\n","import { gql } from \"@apollo/client\";\n\nexport const SEARCH_CONCUR_VENDORS = gql`\n  query SearchConcurVendors($search: String!) {\n    search_concur_vendors(search: $search) {\n      id\n      companyName\n    }\n  }\n`;\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport {SEARCH_CONCUR_VENDORS} from \"../../../operations/queries/searchConcurVendors\";\nimport SelectCircularProgress from \"../../circularProgress/SelectCircularProgress\";\nimport RequestFormLabel from \"../../typographies/RequestFormTypography\";\nimport CustomTextField from \"../../inputs/CustomTextField\";\nimport NoResultsTypography from \"../../typographies/NoResultsTypography\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    width: \"80ch\",\n    marginLeft: 0,\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n}));\n\nconst CompanyNameSelect = ({\n  selectedCompany,\n  setSelectedCompany,\n  selectedCompanyError,\n  setSelectedCompanyError,\n}) => {\n  const classes = useStyles();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [vendorData, setVendorData] = useState();\n  const [isResultsLoading, setIsResultsLoading] = useState(false);\n\n  const [executeSearch] = useLazyQuery(SEARCH_CONCUR_VENDORS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setVendorData(data?.search_concur_vendors);\n      setIsResultsLoading(false);\n    },\n  });\n\n  useEffect(() => {\n    if (searchQuery?.length > 0) {\n      executeSearch({variables: {search: searchQuery}});\n      setResultsOpen(true);\n    } else if (searchQuery?.length === 0) {\n      setResultsOpen(false);\n      setVendorData(\"\");\n    }\n  }, [executeSearch, searchQuery]);\n\n  const handleClick = (selectedVendor) => {\n    setSelectedCompany(selectedVendor);\n    setSelectedCompanyError(false);\n    setSearchQuery(\"\");\n  };\n\n  const clearSelectedVendor = () => {\n    setSelectedCompany(\"\");\n  };\n\n  const searchOnChange = useCallback((query) => {\n    setIsResultsLoading(true);\n    setResultsOpen(true);\n    setSearchQuery(query);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(searchOnChange);\n  useEffect(() => {debouncedChangeHandler(query)}, [query]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormLabel title=\"Search &amp; select company\" />\n      </Grid>\n      <Grid item xs={8}>\n        {!selectedCompany && (\n          <Box my={2} className={classes.box}>\n            <CustomTextField\n              required\n              id=\"standard-basic\"\n              label=\"Search\"\n              variant=\"standard\"\n              size=\"small\"\n              autoComplete=\"off\"\n              error={selectedCompanyError}\n              value={query}\n              onValueChange={setQuery}\n            />\n\n            {searchQuery?.length > 0 && (\n              <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n                <Box className={classes.resultsBox}>\n                  <Paper>\n                    {isResultsLoading ? (\n                      <SelectCircularProgress />\n                    ) : vendorData?.length > 0 ? (\n                      <List>\n                        {vendorData?.map((vendor) => (\n                          <React.Fragment key={vendor.id}>\n                            <ListItem\n                              key={vendor.id}\n                              button\n                              onClick={() => handleClick(vendor.companyName)}\n                            >\n                              <ListItemText\n                                primary={\n                                  <Typography\n                                    component={\"div\"}\n                                    variant=\"subtitle1\"\n                                  >\n                                    {vendor.companyName}\n                                  </Typography>\n                                }\n                              />\n                            </ListItem>\n                            {vendorData?.length > 1 && <Divider />}\n                          </React.Fragment>\n                        ))}\n                      </List>\n                    ) : (\n                      <Box m={1}>\n                        <NoResultsTypography />\n                      </Box>\n                    )}\n                  </Paper>\n                </Box>\n              </Collapse>\n            )}\n          </Box>\n        )}\n        {selectedCompany && (\n          <>\n            <Box mt={2}>\n              <Box mb={1} mt={2}>\n                Selected:\n              </Box>\n              <Container m={1} className={classes.selectedContainer}>\n                {selectedCompany}\n              </Container>\n            </Box>\n            <Box mt={1}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={clearSelectedVendor}\n              >\n                Clear Selected\n              </Button>\n            </Box>\n          </>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(CompanyNameSelect);\n","import {connect} from \"react-redux\";\nimport {\n  setSelectedCompany,\n  setSelectedCompanyError,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport CompanyNameSelect from \"../../../components/formBlocks/candidateDetails/CompanyNameSelect\";\n\nconst mapStateToProps = (state) => ({\n  selectedCompany: state.candidateRequest.getIn([\n    \"candidateDetails\",\n    \"selectedCompany\",\n  ]),\n  selectedCompanyError: state.candidateRequest.get(\"selectedCompanyError\"),\n});\n\nconst mapDispatchToProps = {\n  setSelectedCompany,\n  setSelectedCompanyError,\n};\n\nconst CompanyNameSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CompanyNameSelect);\n\nexport default CompanyNameSelectContainer;\n","import React, { memo, useState } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport { validatePhoneNumberInput } from \"../../../data/helper/validation\";\nimport CustomTextField from \"../../inputs/CustomTextField\";\n\nconst OfficeNumberInput = ({ officeNumber, setOfficeNumber }) => {\n  const [numError, setNumError] = useState(false);\n\n  const handleChange = num => {\n    setOfficeNumber(num);\n    if (num !== \"\") {\n      const check = validatePhoneNumberInput(num);\n      setNumError(!!check);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Enter office number\" subtitle=\"(optional)\"/>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              small\n              color=\"secondary\"\n              id=\"office-number-input\"\n              label=\"Office Number\"\n              helperText=\"must contain numbers and/or () + -\"\n              error={numError}\n              value={officeNumber}\n              onValueChange={handleChange}\n            />\n          </form>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(OfficeNumberInput);\n","import {connect} from \"react-redux\";\nimport OfficeNumberInput from \"../../../components/formBlocks/candidateDetails/OfficeNumberInput\";\nimport {setOfficeNumber} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\n\nconst mapStateToProps = (state) => ({\n  officeNumber: state.candidateRequest.getIn([\n    \"candidateDetails\",\n    \"officeNumber\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setOfficeNumber,\n};\n\nconst OfficeNumberInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OfficeNumberInput);\n\nexport default OfficeNumberInputContainer;\n","import React, { memo, useState } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport CustomTextField from \"../../inputs/CustomTextField\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport { validatePhoneNumberInput } from \"../../../data/helper/validation\";\n\nconst MobileNumberInput = ({ mobileNumber, setMobileNumber }) => {\n  const [numError, setNumError] = useState(false);\n\n  const handleChange = num => {\n    setMobileNumber(num);\n    if (num !== \"\") {\n      const check = validatePhoneNumberInput(num);\n      setNumError(!!check);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Enter mobile number\" subtitle=\"(optional)\"/>\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              small\n              color=\"secondary\"\n              id=\"mobile-number-input\"\n              label=\"Mobile Number\"\n              helperText=\"must contain numbers and/or () + -\"\n              error={numError}\n              value={mobileNumber}\n              onValueChange={handleChange}\n            />\n          </form>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(MobileNumberInput);\n","import {connect} from \"react-redux\";\nimport {setMobileNumber} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport MobileNumberInput from \"../../../components/formBlocks/candidateDetails/MobileNumberInput\";\n\nconst mapStateToProps = (state) => ({\n  mobileNumber: state.candidateRequest.getIn([\n    \"candidateDetails\",\n    \"mobileNumber\",\n  ]),\n});\n\nconst mapDispatchToProps = {\n  setMobileNumber,\n};\n\nconst MobileNumberInputContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MobileNumberInput);\n\nexport default MobileNumberInputContainer;\n","import { gql } from \"@apollo/client\";\n\nexport const SEARCH_USERNAME = gql`\n  query SearchUsername($search: String!) {\n    search_username(search: $search) {\n      status\n      username\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box, Button, Typography} from \"@material-ui/core\";\nimport CustomModal from \"./CustomModal\";\n\nconst AlreadyExistUsernameModal = ({open, handleClose, id}) => {\n  return (\n    <CustomModal\n      open={open}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <Typography component={\"div\"} variant=\"body1\">\n        Username already exists {id && \"in row with id: \" + id}\n      </Typography>\n      <Box mt={1} mb={2}>\n        <Typography component={\"div\"} variant=\"body2\">\n          If you want to reactivate an existing user please open a support\n          ticket to IT.\n        </Typography>\n\n        <br />\n        <Typography component={\"div\"} variant=\"subtitle1\">\n          (Go to your LivePerson Hub &gt; ServiceNow Assist){\" \"}\n        </Typography>\n        <br />\n        <Typography component={\"div\"} variant=\"body2\">\n          Please click continue to create a new user with a unique username.\n        </Typography>\n      </Box>\n      <Button\n        size=\"small\"\n        onClick={handleClose}\n        color=\"secondary\"\n        variant=\"outlined\"\n      >\n        Continue\n      </Button>\n    </CustomModal>\n  );\n};\n\nexport default memo(AlreadyExistUsernameModal);\n","import React, {useState, useEffect, memo, useCallback} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {Box, Grid, Typography} from \"@material-ui/core\";\nimport {SEARCH_USERNAME} from \"../../../operations/queries/searchUsername\";\nimport RequestFormLabel from \"../../typographies/RequestFormTypography\";\nimport AlreadyExistUsernameModal from \"../../modals/AlreadyExistUsernameModal\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst UsernameCreate = ({\n  firstName,\n  lastName,\n  setUsername,\n  usernameError,\n  setUsernameError,\n}) => {\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [index, setIndex] = useState(1);\n\n  const checkUsernameAvailable = (obj) => {\n    if (obj?.username) {\n      if (obj.username.toLowerCase() === newUsername) {\n        if (firstName.length > index) {\n          setIndex(index + 1);\n          createUsername();\n\n          if (obj.status !== \"ACTIVE\") {\n            setOpen(true);\n          }\n        } else {\n          setOpen(true);\n        }\n      }\n    } else {\n      setUsername(newUsername);\n    }\n  };\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERNAME, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => checkUsernameAvailable(data?.search_username),\n  });\n\n  const createUsername = useCallback(() => {\n    if (usernameError) {\n      setUsernameError(false);\n    }\n    let username;\n\n    const first = firstName\n      .replace(/-|\\s/g, \"\")\n      .substring(0, index)\n      .toLowerCase();\n    const last = lastName.replace(/-|\\s/g, \"\").toLowerCase();\n\n    const combinedName = first + last;\n    if (combinedName?.length > 15) {\n      username = combinedName.substring(0, 15);\n    } else {\n      username = combinedName;\n    }\n\n    setNewUsername(username);\n    executeSearch({variables: {search: username}});\n  }, [firstName, lastName, executeSearch, index, setNewUsername]);\n\n  useEffect(() => {\n    if (firstName && lastName) {\n      createUsername();\n    } else {\n      setNewUsername(\"\");\n    }\n  }, [firstName, lastName, createUsername]);\n\n  useEffect(() => {\n    if (index !== 1) {\n      setIndex(1);\n    }\n  }, [firstName]);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <RequestFormLabel title=\"Username\" subtitle=\"(auto-generated)\" />\n        </Grid>\n        <Grid item xs={8}>\n          <Box>\n            <Typography component={\"div\"}>{newUsername}</Typography>\n            {usernameError && <WarningIcon style={{color: \"#ff0000\"}} />}\n          </Box>\n        </Grid>\n      </Grid>\n      {open && (\n        <AlreadyExistUsernameModal open={open} handleClose={handleClose} />\n      )}\n    </>\n  );\n};\n\nexport default memo(UsernameCreate);\n","import {connect} from \"react-redux\";\nimport {\n  setUsername,\n  setUsernameError,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport UsernameCreate from \"../../../components/formBlocks/candidateDetails/UsernameCreate\";\n\nconst mapStateToProps = (state) => ({\n  firstName: state.candidateRequest.getIn([\"candidateDetails\", \"firstName\"]),\n  lastName: state.candidateRequest.getIn([\"candidateDetails\", \"lastName\"]),\n  usernameError: state.candidateRequest.get(\"usernameError\"),\n});\n\nconst mapDispatchToProps = {\n  setUsername,\n  setUsernameError,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsernameCreate);\n","import React, { memo } from \"react\";\nimport NonLpEmailInputContainer from \"./NonLpEmailInputContainer\";\nimport FullNameInputContainer from \"./FullNameInputContainer\";\nimport JobTitleInputContainer from \"./JobTitleInputContainer\";\nimport JobCodeContainer from \"./JobCodeContainer\";\nimport CompanyNameSelectContainer from \"./CompanyNameSelectContainer\";\nimport OfficeNumberInputContainer from \"./OfficeNumberInputContainer\";\nimport MobileNumberInputContainer from \"./MobileNumberInputContainer\";\nimport UsernameCreateContainer from \"./UsernameCreateContainer\";\n\nconst CandidateDetails = () => {\n  return (\n    <>\n      <FullNameInputContainer/>\n      <UsernameCreateContainer/>\n      <NonLpEmailInputContainer/>\n      <JobCodeContainer/>\n      <JobTitleInputContainer/>\n      <CompanyNameSelectContainer/>\n      <OfficeNumberInputContainer/>\n      <MobileNumberInputContainer/>\n    </>\n  );\n};\n\nexport default memo(CandidateDetails);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_COMPLETED_REQUISITIONS_BY_USER = gql`\n  query GetCompletedRequisitionsByUser {\n    get_completed_requisitions_by_user {\n      id\n      oldTaskId\n      taskType\n      taskCreatedDateTime\n      taskCreatorUsername\n      taskCreatorFirstName\n      taskCreatorLastName\n      taskStatus\n      taskScheduleType\n      taskScheduleDateTime\n      taskScheduleTimezone\n      taskSendNotification\n      taskEndDate\n      taskApprovalStatus\n      requisitionTask {\n        reqType\n        reqStartDate\n        reqHiringManagerFirstName\n        reqHiringManagerLastName\n        reqHiringManagerEmail\n        reqHiringManagerId\n        reqBusinessUnit\n        reqDepartment\n        reqLocation\n        reqLocationDescription\n        isBackfill\n        reqBackfillFirstName\n        reqBackfillLastName\n        reqBackfillUsername\n        reqCompanyCode\n        reqParentMgmtCC\n        reqManagementCC\n        reqFunctionalAreaDesc\n        reqCountryDesc\n        reqJobCode\n        reqJobTitle\n        reqSpendCurrency\n        reqSpendAmount\n        reqSpendPeriod\n        reqBonusAmount\n        reqBonusType\n        reqCommissionCurrency\n        reqCommissionAmount\n        reqContractMonths\n        reqContractHoursPerWeek\n        comments\n      }\n    }\n  }\n`;\n","import {\n  Box,\n  Button,\n  Card,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React, {memo, useCallback} from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.secondary.light,\n    padding: \"1em\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: \"0.5em\",\n  },\n}));\n\nconst RequisitionCardItem = ({title, value}) => {\n  return (\n    <Grid item xs={6}>\n      <Typography\n        component={\"div\"}\n        variant=\"subtitle2\"\n        style={{paddingBottom: \"0.25em\"}}\n      >\n        {title}: {value}\n      </Typography>\n    </Grid>\n  );\n};\n\nconst RequisitionCard = ({handleSelect, requisition, children, ...props}) => {\n  const classes = useStyles();\n\n  const {\n    id,\n    hiringManagerFirstName,\n    hiringManagerLastName,\n    hiringManagerEmail,\n    businessUnit,\n    department,\n    locationDescription,\n    jobTitle,\n    bonusAmount,\n    bonusType,\n    jobCode,\n    salary,\n    salaryCurrency,\n    salaryPeriod,\n    isBackfill,\n    backfillFirstName,\n    backfillLastName,\n  } = requisition || {};\n  const backfillTitlePart = isBackfill\n    ? \" (Backfill for: \" + backfillFirstName + \" \" + backfillLastName + \")\"\n    : \"\";\n  const title =\n    \"Req ID: \" + id + \" — \" + jobCode + \" | \" + jobTitle + backfillTitlePart;\n\n  const onSelect = useCallback(() => {\n    handleSelect(requisition);\n  }, [requisition, handleSelect]);\n\n  return (\n    <Card className={classes.card} {...props}>\n      <Box>\n        {requisition ? (\n          <>\n            <Typography component={\"div\"} variant=\"subtitle1\">\n              {title}\n            </Typography>\n\n            <Grid container>\n              <RequisitionCardItem\n                title=\"Hiring Manager\"\n                value={\n                  (hiringManagerFirstName || \"\") +\n                  \" \" +\n                  (hiringManagerLastName || \"\") +\n                  \" | \" +\n                  (hiringManagerEmail || \"\")\n                }\n              />\n              <RequisitionCardItem title=\"Business Unit\" value={businessUnit} />\n\n              <RequisitionCardItem\n                title=\"Location\"\n                value={locationDescription}\n              />\n              <RequisitionCardItem title=\"Department\" value={department} />\n\n              <RequisitionCardItem\n                title=\"Salary\"\n                value={[\n                  salary || \"\",\n                  salaryCurrency || \"\",\n                  salaryPeriod || \"\",\n                ].join(\" \")}\n              />\n              <RequisitionCardItem\n                title=\"Bonus\"\n                value={\n                  bonusAmount\n                    ? (bonusAmount || \"\") + \" \" + (bonusType || \"\")\n                    : \"n/a\"\n                }\n              />\n            </Grid>\n          </>\n        ) : (\n          children\n        )}\n      </Box>\n\n      <Button\n        size=\"small\"\n        onClick={onSelect}\n        color=\"secondary\"\n        variant=\"outlined\"\n        style={{height: 40}}\n      >\n        Select\n      </Button>\n    </Card>\n  );\n};\n\nexport default memo(RequisitionCard);\n","import React, {memo, useContext, useState} from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport CustomModal from \"./CustomModal\";\nimport InfoBlock from \"../InfoBlock\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_COMPLETED_REQUISITIONS_BY_USER} from \"../../operations/queries/getCompletedRequisitionsByUser\";\nimport handleError from \"../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport RequisitionCard from \"../RequisitionCard\";\nimport SelectCircularProgress from \"../circularProgress/SelectCircularProgress\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport ModalTopBar from \"./ModalTopBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  modalTopBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  content: {\n    overflowY: \"auto\",\n    maxHeight: \"600px\",\n  },\n}));\n\nconst useRequisitions = (setReqData, history) => {\n  const {loading} = useQuery(GET_COMPLETED_REQUISITIONS_BY_USER, {\n    fetchPolicy: \"cache-and-network\",\n    onCompleted: (data) => {\n      const mapped = data.get_completed_requisitions_by_user?.map((req) => {\n        return {\n          id: req.id,\n          hiringManagerEmail: req.requisitionTask.reqHiringManagerEmail,\n          hiringManagerFirstName: req.requisitionTask.reqHiringManagerFirstName,\n          hiringManagerLastName: req.requisitionTask.reqHiringManagerLastName,\n          hiringManagerId: req.requisitionTask.reqHiringManagerId,\n          employeeType: req.requisitionTask.reqType,\n          startDate: req.requisitionTask.reqStartDate?.split(\"T\")[0],\n          jobTitle: req.requisitionTask.reqJobTitle,\n          jobCode: req.requisitionTask.reqJobCode,\n          bonusAmount: req.requisitionTask.reqBonusAmount,\n          bonusType: req.requisitionTask.reqBonusType,\n          businessUnit: req.requisitionTask.reqBusinessUnit,\n          companyCode: req.requisitionTask.reqCompanyCode,\n          department: req.requisitionTask.reqDepartment,\n\n          locationDescription: req.requisitionTask.reqLocationDescription,\n          locationCode: req.requisitionTask.reqLocation,\n\n          salary: req.requisitionTask.reqSpendAmount,\n          salaryCurrency: req.requisitionTask.reqSpendCurrency,\n          salaryPeriod: req.requisitionTask.reqSpendPeriod,\n\n          isBackfill: req.requisitionTask.isBackfill,\n          backfillFirstName: req.requisitionTask.reqBackfillFirstName,\n          backfillLastName: req.requisitionTask.reqBackfillLastName,\n        };\n      });\n      setReqData(mapped);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n  return {loading};\n};\n\nconst RequisitionSelectModal = ({\n  handleClose,\n  requisitionType,\n  requisitionTypeError,\n  setRequisitionType,\n  setRequisitionTypeError,\n  setRequisitionDetails,\n  setJob,\n  setFilledByRequisition,\n  ...props\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {permOnboardingRequisitionBypass} = useContext(AuthUserContext);\n  const [reqData, setReqData] = useState(null);\n  const {loading} = useRequisitions(setReqData, history);\n\n  const handleSelect = (requisition) => {\n    if (requisition) {\n      const {\n        id,\n        startDate,\n        hiringManagerEmail,\n        hiringManagerFirstName,\n        hiringManagerLastName,\n        hiringManagerId,\n        businessUnit,\n        department,\n        locationDescription,\n        locationCode,\n        employeeType,\n        jobTitle,\n        jobCode,\n        // companyCode,\n        // isBackfill, backfillFirstName, backfillLastName,\n      } = requisition || {};\n\n      setRequisitionDetails({\n        requisitionType: {id, jobCode, jobTitle, startDate},\n        startDate: startDate,\n        hiringManager: {\n          firstName: hiringManagerFirstName,\n          lastName: hiringManagerLastName,\n          email: hiringManagerEmail,\n          employeeNumber: hiringManagerId,\n        },\n        businessUnit,\n        department,\n        location: {locationCode, locationDescription},\n        employeeType,\n      });\n      setJob({jobTitle, jobCode});\n      setFilledByRequisition(true);\n    } else {\n      setRequisitionDetails({});\n      setJob(null);\n      setFilledByRequisition(false);\n    }\n    handleClose();\n  };\n\n  return (\n    <CustomModal\n      aria-labelledby=\"requisition-modal-title\"\n      aria-describedby=\"requisition-modal-description\"\n      large\n      {...props}\n    >\n      <ModalTopBar\n        title=\"Select an approved unfilled requisition\"\n        handleClose={handleClose}\n      />\n\n      <Box mt={1} mb={2} mx={1} className={classes.content}>\n        <InfoBlock>\n          <Typography component={\"div\"} variant=\"subtitle1\">\n            This is a list of your approved requisitions which have not been\n            filled by a candidate. Please select the correct requisition for\n            this candidate.{\" \"}\n            {permOnboardingRequisitionBypass\n              ? \"If you do not need a requisition for this candidate please select no requisition needed.\"\n              : \"A requisition is needed for all candidate requests.\"}\n          </Typography>\n        </InfoBlock>\n\n        <Box>\n          {permOnboardingRequisitionBypass && (\n            <RequisitionCard handleSelect={handleSelect}>\n              <Typography component={\"div\"} variant=\"subtitle1\">\n                No requisition needed\n              </Typography>\n            </RequisitionCard>\n          )}\n          {loading ? (\n            <SelectCircularProgress />\n          ) : (\n            <>\n              {reqData?.length > 0 ? (\n                reqData?.map((r) => (\n                  <RequisitionCard\n                    key={r.id}\n                    requisition={r}\n                    handleSelect={handleSelect}\n                  />\n                ))\n              ) : (\n                <Typography variant=\"subtitle1\">\n                  You do not have any approved unfilled requisitions.\n                </Typography>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default memo(RequisitionSelectModal);\n","import { connect } from \"react-redux\";\nimport {\n  setFilledByRequisition,\n  setJob,\n  setRequisitionDetails,\n  setRequisitionType,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport RequisitionSelectModal from \"../../../components/modals/RequisitionSelectModal\";\n\nconst mapStateToProps = state => ({\n  requisitionType: state.candidateRequest.getIn([\"requisitionDetails\", \"requisitionType\"])?.toJS() || null,\n});\n\nconst mapDispatchToProps = { setRequisitionType, setRequisitionDetails, setJob, setFilledByRequisition };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RequisitionSelectModal);\n","import React, {memo, useCallback, useState, useContext} from \"react\";\nimport {Box, Button, Grid, TextField} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport RequisitionSelectModalContainer from \"../../../pages/CandidateRequestPage/RequisitionDetailsContainers/RequisitionSelectModalContainer\";\nimport {getRequisitionTypeTitle} from \"../../../data/helper/helpers\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\n\nconst RequisitionTypeSelect = ({requisitionType, requisitionTypeError}) => {\n  const {permOnboardingRequisitionBypass} = useContext(AuthUserContext);\n  const [open, setOpen] = useState(false);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select Requisition to fill\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box style={{display: \"flex\"}}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{marginRight: \"1em\"}}\n            onClick={() => setOpen(true)}\n          >\n            Select\n          </Button>\n          <form noValidate>\n            <TextField\n              id=\"requisition-type\"\n              error={\n                !permOnboardingRequisitionBypass ? false : requisitionTypeError\n              }\n              style={{width: \"45ch\"}}\n              value={getRequisitionTypeTitle(requisitionType)}\n              disabled\n            />\n          </form>\n        </Box>\n      </Grid>\n\n      {open && (\n        <RequisitionSelectModalContainer\n          open={open}\n          handleClose={handleClose}\n        />\n      )}\n    </Grid>\n  );\n};\n\nexport default memo(RequisitionTypeSelect);\n","import {connect} from \"react-redux\";\nimport {setRequisitionTypeError} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport RequisitionTypeSelect from \"../../../components/formBlocks/requisitionDetails/RequisitionTypeSelect\";\n\nconst mapStateToProps = (state) => ({\n  requisitionType:\n    state.candidateRequest\n      .getIn([\"requisitionDetails\", \"requisitionType\"])\n      ?.toJS() || null,\n  requisitionTypeError: state.candidateRequest.get(\"requisitionTypeError\"),\n});\n\nconst mapDispatchToProps = {setRequisitionTypeError};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RequisitionTypeSelect);\n","import React, { memo } from \"react\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport DateTextField from \"../../inputs/DateTextField\";\n\nconst StartDateInput = ({\n  startDate,\n  setStartDate,\n  startDateError,\n  setStartDateError,\n}) => {\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Enter planned start date\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <DateTextField\n            type=\"date\"\n            label=\"Start Date\"\n            error={startDateError}\n            setError={setStartDateError}\n            value={startDate}\n            onValueChange={setStartDate}\n          />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(StartDateInput);\n","import { connect } from \"react-redux\";\nimport { setStartDate, setStartDateError } from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport StartDateInput from \"../../../components/formBlocks/requisitionDetails/StartDateInput\";\n\nconst mapStateToProps = state => ({\n  startDate: state.candidateRequest.getIn([\"requisitionDetails\", \"startDate\"]),\n  startDateError: state.candidateRequest.get(\"startDateError\"),\n});\n\nconst mapDispatchToProps = { setStartDate, setStartDateError };\n\nconst StartDateInputContainer = connect(mapStateToProps, mapDispatchToProps)(StartDateInput);\n\nexport default StartDateInputContainer;\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../data/handleError\";\nimport {SEARCH_USERS_QUERY} from \"../../../operations/queries/searchUsersQuery\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {\n  getProfileName,\n  getProfileNameAndInfo,\n} from \"../../../data/helper/helpers\";\nimport SelectCircularProgress from \"../../circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../typographies/NoResultsTypography\";\nimport useDebouncedChangeHandler from \"../../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  textField: {\n    width: \"45ch\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    width: \"60ch\",\n    marginLeft: 0,\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: theme.spacing(2),\n    borderRadius: \"5px\",\n  },\n}));\n\nconst HiringManagerSelect = ({\n  hiringManager,\n  setHiringManager,\n  hiringManagerError,\n  setHiringManagerError,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [usersData, setUsersData] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [isResultsLoading, setIsResultsLoading] = useState(false);\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERS_QUERY, {\n    onCompleted: (data) => {\n      setUsersData(data?.search_users);\n      setIsResultsLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchQuery?.length > 0) {\n      executeSearch({variables: {search: searchQuery}});\n    } else if (searchQuery?.length === 0) {\n      setResultsOpen(false);\n      setUsersData(\"\");\n    }\n  }, [searchQuery, executeSearch]);\n\n  const handleClick = (manager) => {\n    setHiringManager(manager?.profile);\n    setHiringManagerError(false);\n    setSearchQuery(\"\");\n  };\n\n  const clearSelectedManager = () => {\n    setHiringManager(null);\n  };\n\n  const searchOnChange = useCallback((value) => {\n    setIsResultsLoading(true);\n    setResultsOpen(true);\n    setSearchQuery(value);\n  }, []);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(searchOnChange);\n  useEffect(() => {debouncedChangeHandler(query)}, [query]);\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select hiring manager\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <>\n            {!hiringManager && (\n              <Box mb={2} className={classes.box}>\n                <TextField\n                  required\n                  label=\"Search\"\n                  variant=\"standard\"\n                  helperText=\"Search by Name, Email, or HRIS ID\"\n                  color=\"secondary\"\n                  autoComplete=\"off\"\n                  error={hiringManagerError}\n                  value={query}\n                  onChange={(e) => setQuery(e.target.value)}\n                  className={classes.textField}\n                />\n\n                {searchQuery?.length > 0 && (\n                  <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n                    <Box className={classes.resultsBox}>\n                      <Paper>\n                        {isResultsLoading && <SelectCircularProgress />}\n                        {usersData && (\n                          <>\n                            {usersData?.length === 0 ? (\n                              <Box m={1}>\n                                <NoResultsTypography />\n                              </Box>\n                            ) : (\n                              <List>\n                                {usersData?.map((user) => (\n                                  <React.Fragment key={user.id}>\n                                    <ListItem\n                                      key={user.id}\n                                      button\n                                      onClick={() => handleClick(user)}\n                                    >\n                                      <ListItemText\n                                        primary={\n                                          <Typography\n                                            component={\"div\"}\n                                            variant=\"subtitle1\"\n                                          >\n                                            {getProfileNameAndInfo(\n                                              user?.profile\n                                            )}\n                                          </Typography>\n                                        }\n                                      />\n                                    </ListItem>\n                                    {usersData?.length > 1 && <Divider />}\n                                  </React.Fragment>\n                                ))}\n                              </List>\n                            )}\n                          </>\n                        )}\n                      </Paper>\n                    </Box>\n                  </Collapse>\n                )}\n              </Box>\n            )}\n            {hiringManager && (\n              <>\n                <Box mt={2}>\n                  <Box mb={1} mt={2}>\n                    Selected:\n                  </Box>\n                  <Container m={1} className={classes.selectedContainer}>\n                    {getProfileName(hiringManager)}\n                  </Container>\n                </Box>\n                <Box mt={1}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    onClick={() => clearSelectedManager()}\n                  >\n                    Clear Selected\n                  </Button>\n                </Box>\n              </>\n            )}\n          </>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(HiringManagerSelect);\n","import { connect } from \"react-redux\";\nimport { setHiringManager, setHiringManagerError } from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport HiringManagerSelect from \"../../../components/formBlocks/requisitionDetails/HiringManagerSelect\";\n\nconst mapStateToProps = state => ({\n  hiringManager: state.candidateRequest.getIn([\"requisitionDetails\", \"hiringManager\"])?.toJS() || null,\n  hiringManagerError: state.candidateRequest.get(\"hiringManagerError\"),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\")\n});\n\nconst mapDispatchToProps = { setHiringManager, setHiringManagerError };\n\nconst HiringManagerSelectContainer = connect(mapStateToProps, mapDispatchToProps)(HiringManagerSelect);\n\nexport default HiringManagerSelectContainer;\n","import React, {useState, memo} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {Box, CircularProgress, Grid} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {GET_ULTI_BU_DEPT} from \"../../../operations/queries/getUltiBUDept\";\nimport AutocompleteTextField from \"../../inputs/AutocompleteTextField\";\n\nconst BusinessUnitDeptSelect = ({\n  businessUnit,\n  setBusinessUnit,\n  department,\n  setDepartment,\n  businessUnitError,\n  setBusinessUnitError,\n  departmentError,\n  setDepartmentError,\n  isFilledByRequisition,\n}) => {\n  const [buData, setBuData] = useState(null);\n  const [deptData, setDeptData] = useState(null);\n\n  const {loading} = useQuery(GET_ULTI_BU_DEPT, {\n    onCompleted: (data) => {\n      const businessUnitSet = {};\n      data.get_ulti_bu_dept?.map((b) =>\n        businessUnitSet[b.businessUnit]\n          ? businessUnitSet[b.businessUnit].push(b.department)\n          : (businessUnitSet[b.businessUnit] = [b.department])\n      );\n\n      setBuData(businessUnitSet);\n    },\n  });\n\n  const handleBusinessChange = (value) => {\n    if (value) {\n      setBusinessUnit(value);\n      setDeptData(buData[value].sort());\n    } else {\n      setBusinessUnit(null);\n      setDeptData(null);\n      setDepartment(null);\n    }\n    setBusinessUnitError(false);\n  };\n\n  const handleDepartmentChange = (value) => {\n    if (value) {\n      setDepartment(value);\n    } else {\n      setDepartment(null);\n    }\n    setDepartmentError(false);\n  };\n\n  if (buData && businessUnit && !deptData) {\n    setDeptData(buData[businessUnit].sort());\n  }\n\n  return (\n    <>\n      <Grid item container>\n        <Grid item xs={4}>\n          <RequestFormTypography title=\"Select business unit\" />\n        </Grid>\n        <Grid item xs={8}>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Box>\n              {buData && (\n                <Autocomplete\n                  value={businessUnit}\n                  options={Object.keys(buData)}\n                  getOptionLabel={(businessUnit) => businessUnit}\n                  style={{width: 400}}\n                  disabled={isFilledByRequisition}\n                  renderInput={(params) => (\n                    <AutocompleteTextField\n                      required\n                      error={businessUnitError}\n                      label=\"Select Business Unit\"\n                      {...params}\n                    />\n                  )}\n                  onChange={(event, newValue) => {\n                    handleBusinessChange(newValue);\n                  }}\n                />\n              )}\n            </Box>\n          )}\n        </Grid>\n      </Grid>\n      {deptData && (\n        <Grid item container>\n          <Grid item xs={4}>\n            <RequestFormTypography title=\"Select department\" />\n          </Grid>\n          <Grid item xs={8}>\n            <Box>\n              <Autocomplete\n                value={department}\n                options={deptData}\n                getOptionLabel={(department) => department}\n                disabled={isFilledByRequisition}\n                style={{width: 400}}\n                renderInput={(params) => (\n                  <AutocompleteTextField\n                    {...params}\n                    required\n                    error={departmentError}\n                    label=\"Select Department\"\n                  />\n                )}\n                getOptionSelected={(option, value) =>\n                  option.department === value.department\n                }\n                onChange={(event, newValue) => {\n                  handleDepartmentChange(newValue);\n                }}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default memo(BusinessUnitDeptSelect);\n","import { connect } from \"react-redux\";\nimport {\n  setBusinessUnit,\n  setBusinessUnitError,\n  setDepartment, setDepartmentError\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport BusinessUnitDeptSelect from \"../../../components/formBlocks/requisitionDetails/BusinessUnitDeptSelect\";\n\nconst mapStateToProps = state => ({\n  businessUnit: state.candidateRequest.getIn([\"requisitionDetails\", \"businessUnit\"]),\n  department: state.candidateRequest.getIn([\"requisitionDetails\", \"department\"]),\n  businessUnitError: state.candidateRequest.get(\"businessUnitError\"),\n  departmentError: state.candidateRequest.get(\"departmentError\"),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\")\n});\n\nconst mapDispatchToProps = { setBusinessUnit, setDepartment, setBusinessUnitError, setDepartmentError };\n\nconst BusinessUnitDeptSelectContainer = connect(mapStateToProps, mapDispatchToProps)(BusinessUnitDeptSelect);\n\nexport default BusinessUnitDeptSelectContainer;\n","import React, {memo, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {Box, CircularProgress, Grid} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport {GET_ULTI_LOCATIONS} from \"../../../operations/queries/getUltiLocations\";\nimport AutocompleteTextField from \"../../inputs/AutocompleteTextField\";\n\nconst LocationSelect = ({\n  setLocation,\n  location,\n  locationError,\n  setLocationError,\n  isFilledByRequisition,\n}) => {\n  const [locationList, setLocationList] = useState();\n  const {loading} = useQuery(GET_ULTI_LOCATIONS, {\n    onCompleted: (data) => {\n      setLocationList(\n        data.get_ulti_locations?.map((l) => ({\n          locationCode: l.locationCode,\n          locationDescription: l.locationDescription,\n          locationCountryCode: l.locationCountryCode,\n        }))\n      );\n    },\n  });\n\n  const handleChange = (value) => {\n    if (value) {\n      setLocation({...value});\n      setLocationError(false);\n    } else {\n      setLocation(null);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select location\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            locationList && (\n              <Autocomplete\n                value={location}\n                options={locationList}\n                getOptionLabel={(option) => option.locationDescription}\n                style={{width: 400}}\n                disabled={isFilledByRequisition}\n                renderInput={(params) => (\n                  <AutocompleteTextField\n                    {...params}\n                    required\n                    error={locationError}\n                    label=\"Select Location\"\n                  />\n                )}\n                getOptionSelected={(option, value) =>\n                  option.locationCode === value.locationCode\n                }\n                onChange={(event, newValue) => {\n                  handleChange(newValue);\n                }}\n              />\n            )\n          )}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(LocationSelect);\n","import { connect } from \"react-redux\";\nimport { setLocation, setLocationError } from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport LocationSelect from \"../../../components/formBlocks/requisitionDetails/LocationSelect\";\n\nconst mapStateToProps = state => ({\n  location: state.candidateRequest.getIn([\"requisitionDetails\", \"location\"])?.toJS() || null,\n  locationError: state.candidateRequest.get(\"locationError\"),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\")\n});\n\nconst mapDispatchToProps = { setLocation, setLocationError };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationSelect);\n","import React, {memo} from \"react\";\nimport {\n  Box,\n  FormControl,\n  Grid,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../typographies/RequestFormTypography\";\nimport EmployeeTypes from \"../../../data/constants/EmployeeTypes\";\n\nconst useStyles = makeStyles(() => ({\n  select: {\n    width: \"30ch\",\n  },\n}));\n\nconst EmployeeTypeSelect = ({\n  employeeType,\n  setEmployeeType,\n  employeeTypeError,\n  setEmployeeTypeError,\n  isFilledByRequisition,\n  setIsGoogleAccountNeeded,\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    setEmployeeType(event.target.value);\n    setEmployeeTypeError(false);\n\n    if (event.target.value === EmployeeTypes.SALES) {\n      setIsGoogleAccountNeeded(false);\n    } else {\n      setIsGoogleAccountNeeded(true);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"Select employee type\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box>\n          <FormControl required color=\"secondary\" variant=\"outlined\">\n            <InputLabel id=\"select-employee-type-label\">\n              Employee Type\n            </InputLabel>\n            <Select\n              labelId=\"select-employee-type-label\"\n              id=\"select-employee-type\"\n              error={employeeTypeError}\n              value={employeeType}\n              onChange={handleChange}\n              className={classes.select}\n              disabled={isFilledByRequisition}\n              label={\"Employee Type\"}\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n\n              {Object.values(EmployeeTypes)\n                ?.filter((type) => type !== EmployeeTypes.FULL_TIME)\n                ?.map((option) => (\n                  <MenuItem key={option} value={option}>\n                    {option}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(EmployeeTypeSelect);\n","import {connect} from \"react-redux\";\nimport {\n  setEmployeeType,\n  setEmployeeTypeError,\n  setIsGoogleAccountNeeded,\n} from \"../../../data/redux/candidateRequest/candidateRequestActions\";\nimport EmployeeTypeSelect from \"../../../components/formBlocks/requisitionDetails/EmployeeTypeSelect\";\n\nconst mapStateToProps = (state) => ({\n  employeeType: state.candidateRequest.getIn([\n    \"requisitionDetails\",\n    \"employeeType\",\n  ]),\n  employeeTypeError: state.candidateRequest.get(\"employeeTypeError\"),\n  isFilledByRequisition: state.candidateRequest.get(\"isFilledByRequisition\"),\n});\n\nconst mapDispatchToProps = {\n  setEmployeeType,\n  setEmployeeTypeError,\n  setIsGoogleAccountNeeded,\n};\n\nconst EmployeeTypeSelectContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeTypeSelect);\n\nexport default EmployeeTypeSelectContainer;\n","import React, { memo } from \"react\";\nimport RequisitionTypeSelectContainer from \"./RequisitionTypeSelectContainer\";\nimport StartDateInputContainer from \"./StartDateInputContainer\";\nimport HiringManagerSelectContainer from \"./HiringManagerContainer\";\nimport BusinessUnitDeptSelectContainer from \"./BusinessUnitDeptSelectContainer\";\nimport LocationSelectContainer from \"./LocationSelectContainer\";\nimport EmployeeTypeSelectContainer from \"./EmployeeTypeSelectContainer\";\n\nconst RequisitionDetails = () => {\n  return (\n    <>\n      <RequisitionTypeSelectContainer />\n      <StartDateInputContainer/>\n      <HiringManagerSelectContainer/>\n      <BusinessUnitDeptSelectContainer/>\n      <LocationSelectContainer/>\n      <EmployeeTypeSelectContainer/>\n    </>\n  );\n};\n\nexport default memo(RequisitionDetails);\n","import React, {memo} from \"react\";\nimport {Box, Divider} from \"@material-ui/core\";\nimport RequestFormWrapper from \"../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../components/blocks/SectionTitleBlock\";\nimport AdditionalInformationContainers from \"./AdditionalInformationContainers\";\nimport CandidateDetailsContainers from \"./CandidateDetailsContainers\";\nimport RequisitionDetails from \"./RequisitionDetailsContainers\";\nimport TopTypography from \"../../components/typographies/TopTypography\";\nimport SubtitleTypography from \"../../components/typographies/SubtitleTypography\";\n\nconst CreateCandidateRequestForm = () => {\n  return (\n    <RequestFormWrapper>\n      <Box>\n        <TopTypography>{\"Create Request\"}</TopTypography>\n        <SubtitleTypography>\n          All fields marked with * are required.\n        </SubtitleTypography>\n      </Box>\n      <SectionTitleBlock title=\"Requisition Details\">\n        <RequisitionDetails />\n      </SectionTitleBlock>\n\n      <Divider />\n\n      <SectionTitleBlock title=\"Candidate Details\">\n        <CandidateDetailsContainers />\n      </SectionTitleBlock>\n\n      <Divider />\n\n      <SectionTitleBlock title=\"Additional Information\">\n        <AdditionalInformationContainers />\n      </SectionTitleBlock>\n    </RequestFormWrapper>\n  );\n};\n\nexport default memo(CreateCandidateRequestForm);\n","import React, {memo} from \"react\";\nimport {connect} from \"react-redux\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport RequestSummarySection from \"../../components/requestWrapper/RequestSummarySection\";\nimport RequestSummaryItem from \"../../components/requestWrapper/RequestSummaryItem\";\nimport SummaryTopTypography from \"../../components/typographies/TopTypography\";\nimport {Box} from \"@material-ui/core\";\nimport dateFormat from \"dateformat\";\nimport {\n  getProfileName,\n  getRequisitionTypeTitle,\n  getYesOrNo,\n} from \"../../data/helper/helpers\";\n\nconst mapStateToProps = (state) => ({\n  requisitionDetails: state.candidateRequest.get(\"requisitionDetails\").toJS(),\n  candidateDetails: state.candidateRequest.get(\"candidateDetails\").toJS(),\n  additionalInformation: state.candidateRequest\n    .get(\"additionalInformation\")\n    .toJS(),\n});\n\nconst CandidateRequestSummary = ({\n  review,\n  requisitionDetails,\n  candidateDetails,\n  additionalInformation,\n}) => {\n  const {\n    requisitionType,\n    startDate,\n    hiringManager,\n    businessUnit,\n    department,\n    location,\n    employeeType,\n  } = requisitionDetails || {};\n  const {\n    firstName,\n    lastName,\n    username,\n    nonLpEmail,\n    job,\n    selectedCompany,\n    officeNumber,\n    mobileNumber,\n  } = candidateDetails || {};\n  const {selectedDevice, isGoogleAccountNeeded} = additionalInformation || {};\n\n  return (\n    <PaperCardWrapper>\n      <Box>\n        <SummaryTopTypography>\n          {review ? \"Review & Confirm Request\" : \"Request Completed\"}\n        </SummaryTopTypography>\n      </Box>\n\n      <RequestSummarySection title=\"Requisition Details\">\n        <RequestSummaryItem\n          name=\"Requisition Type\"\n          value={getRequisitionTypeTitle(requisitionType)}\n        />\n        <RequestSummaryItem\n          name=\"Start Date\"\n          value={dateFormat(`${startDate}T00:00`, \"mmmm d, yyyy\")}\n        />\n        <RequestSummaryItem\n          name=\"Hiring Manager\"\n          value={getProfileName(hiringManager)}\n        />\n        <RequestSummaryItem name=\"Business Unit\" value={businessUnit} />\n        <RequestSummaryItem name=\"Department\" value={department} />\n        <RequestSummaryItem\n          name=\"Location\"\n          value={`${location?.locationDescription} (${location?.locationCode})`}\n        />\n        <RequestSummaryItem name={\"Employee Type\"} value={employeeType} />\n      </RequestSummarySection>\n\n      <RequestSummarySection title=\"Candidate Details\">\n        <RequestSummaryItem\n          name=\"First and Last Name\"\n          value={getProfileName({firstName, lastName})}\n        />\n        <RequestSummaryItem name=\"Username\" value={username} />\n        <RequestSummaryItem name=\"Email\" value={nonLpEmail} />\n        <RequestSummaryItem\n          name=\"Job\"\n          value={job?.jobCode + \" | \" + job?.jobTitle}\n        />\n        <RequestSummaryItem name=\"Company\" value={selectedCompany} />\n        <RequestSummaryItem\n          name=\"Office number\"\n          value={officeNumber?.length > 0 ? officeNumber : \"n/a\"}\n        />\n        <RequestSummaryItem\n          name=\"Mobile Number\"\n          value={mobileNumber?.length > 0 ? mobileNumber : \"n/a\"}\n        />\n      </RequestSummarySection>\n\n      <RequestSummarySection title=\"Additional Information\">\n        <RequestSummaryItem\n          name=\"Google Account Needed\"\n          value={getYesOrNo(isGoogleAccountNeeded)}\n        />\n        <RequestSummaryItem\n          name=\"Device Requested\"\n          value={\n            selectedDevice?.length > 0 ? selectedDevice : \"No device selected\"\n          }\n        />\n      </RequestSummarySection>\n    </PaperCardWrapper>\n  );\n};\n\nexport default connect(mapStateToProps)(memo(CandidateRequestSummary));\n","import {gql} from \"@apollo/client\";\n\nexport const CREATE_ONBOARDING_TASK = gql`\n  mutation CreateOnboardingTask($input: LpsyncTaskInput) {\n    createOnboardingTask(input: $input) {\n      id\n      taskType\n      taskStatus\n      taskScheduleType\n      taskScheduleEpochTime\n      taskScheduleDateTime\n      taskCreatedDateTime\n      onboardingTask {\n        onboardUsername\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardPoNumber\n        onboardJobCode\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        firstApprovalBypass\n        isDeviceNoteConfirmed\n        isGoogleAccountNeeded\n        reqId\n        onboardingOktaGroups {\n          oktaGroupId\n          oktaGroupName\n        }\n        onboardingFinance {\n          onboardingSalaryCurrency\n          onboardingSalaryAmount\n          onboardingSalaryPeriod\n          onboardingContractMonths\n          onboardingContractHoursPerWeek\n        }\n      }\n    }\n  }\n`;\n","import React, {memo, useContext, useState} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {Button} from \"@material-ui/core\";\nimport {CREATE_LOG_ENTRY} from \"../../operations/mutations/createLogEntry\";\nimport MissedInputModal from \"../../components/modals/MissedInputModal\";\nimport {connect} from \"react-redux\";\nimport {CREATE_ONBOARDING_TASK} from \"../../operations/mutations/createOnboardingTask\";\nimport {\n  setRequisitionTypeError,\n  setBusinessUnitError,\n  setDepartmentError,\n  setEmployeeTypeError,\n  setFirstNameError,\n  setHiringManagerError,\n  setJobError,\n  setLastNameError,\n  setLocationError,\n  setNonLpEmailError,\n  setSelectedCompanyError,\n  setSelectedDeviceError,\n  setStartDateError,\n  setUsernameError,\n} from \"../../data/redux/candidateRequest/candidateRequestActions\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport {ADD_TASK_APPROVAL} from \"../../operations/mutations/addTaskApproval\";\nimport handleError from \"../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  isEmpty,\n  isMoreThan25Char,\n  validateEmailInput,\n  validateNameInput,\n  validatePhoneNumberInput,\n} from \"../../data/helper/validation\";\nimport {getValidationMessage} from \"../../data/helper/helpers\";\nimport ApprovalStatuses from \"../../data/constants/ApprovalStatuses\";\n\nconst mapStateToProps = (state) => ({\n  requisitionDetails: state.candidateRequest.get(\"requisitionDetails\").toJS(),\n  candidateDetails: state.candidateRequest.get(\"candidateDetails\").toJS(),\n  additionalInformation: state.candidateRequest\n    .get(\"additionalInformation\")\n    .toJS(),\n});\n\nconst mapDispatchToProps = {\n  setRequisitionTypeError,\n  setBusinessUnitError,\n  setDepartmentError,\n  setEmployeeTypeError,\n  setFirstNameError,\n  setHiringManagerError,\n  setJobError,\n  setLastNameError,\n  setLocationError,\n  setNonLpEmailError,\n  setSelectedCompanyError,\n  setSelectedDeviceError,\n  setStartDateError,\n  setUsernameError,\n};\n\nconst StepperButtons = ({\n  activeStep,\n  steps,\n  handleBack,\n  handleNext,\n  requisitionDetails,\n  candidateDetails,\n  additionalInformation,\n  ...props\n}) => {\n  const {permOnboardingApprovalBypass, permOnboardingRequisitionBypass} =\n    useContext(AuthUserContext);\n  const history = useHistory();\n  const {\n    requisitionType,\n    startDate,\n    hiringManager,\n    businessUnit,\n    department,\n    location,\n    employeeType,\n  } = requisitionDetails || {};\n  const {\n    firstName,\n    lastName,\n    username,\n    nonLpEmail,\n    job,\n    selectedCompany,\n    officeNumber,\n    mobileNumber,\n  } = candidateDetails || {};\n  const {selectedDevice, isDeviceNoteConfirmed, isGoogleAccountNeeded} =\n    additionalInformation || {};\n  const {\n    setRequisitionTypeError,\n    setBusinessUnitError,\n    setDepartmentError,\n    setEmployeeTypeError,\n    setFirstNameError,\n    setHiringManagerError,\n    setJobError,\n    setLastNameError,\n    setLocationError,\n    setNonLpEmailError,\n    setSelectedCompanyError,\n    setSelectedDeviceError,\n    setStartDateError,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [modalMsg, setModalMsg] = useState(\"\");\n  const [groups, setGroups] = useState(null);\n  const [isFirstApprovalBypass, setIsFirstApprovalBypass] = useState(false);\n\n  const [createOnboardingTask] = useMutation(CREATE_ONBOARDING_TASK, {\n    onCompleted(data) {\n      createLog(\n        \"info\",\n        `Candidate Task Created (${data?.createOnboardingTask?.id}); Req ID: ${\n          requisitionType?.id ? requisitionType?.id : \"n/a\"\n        }; Planned Start Date: ${startDate};  Manager: ${\n          hiringManager.email\n        }; Business Unit: ${businessUnit}; Department: ${department}; Location: ${\n          location?.locationDescription\n        } (${\n          location?.locationCode\n        }); Onboard: ${firstName} ${lastName}; Emp Type: ${employeeType};  Job Title: ${\n          job?.jobTitle\n        }; Company: ${selectedCompany};  Selected Device: ${selectedDevice}`\n      );\n      if (permOnboardingApprovalBypass) {\n        const id = parseInt(data?.createOnboardingTask?.id);\n        const taskStatus = TaskStatuses.PENDING_USER_TASKS;\n        const approvalStatus = ApprovalStatuses.APPROVED;\n        const approvalInfo = {\n          approvalStage: 1,\n          approvalStatus,\n        };\n\n        addApproval(id, taskStatus, approvalStatus, approvalInfo);\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addTaskApproval] = useMutation(ADD_TASK_APPROVAL);\n\n  const addApproval = (id, status, approvalStatus, approvalInfo) => {\n    addTaskApproval({\n      variables: {\n        id: id,\n        taskType: TaskTypes.ONBOARDING,\n        taskStatus: status,\n        taskApprovalStatus: approvalStatus,\n        input: approvalInfo,\n      },\n    });\n  };\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY, {\n    onError: (error) => console.error(\"Error: \", error),\n  });\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"Candidate\",\n          logNotification: info,\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  const createTask = (timestamp) => {\n    createOnboardingTask({\n      variables: {\n        input: {\n          taskType: TaskTypes.ONBOARDING,\n          taskStatus: TaskStatuses.PENDING,\n          taskScheduleEpochTime: timestamp,\n          taskScheduleDateTime: `${startDate}T00:00`,\n          taskScheduleType: TaskScheduleTypes.SCHEDULED,\n          onboardingTask: {\n            onboardManagerEmail: hiringManager?.email,\n            onboardManagerFirstName: hiringManager?.firstName?.trim(),\n            onboardManagerLastName: hiringManager?.lastName?.trim(),\n            onboardManagerId: hiringManager?.employeeNumber,\n            onboardUsername: username,\n            onboardBusinessUnit: businessUnit,\n            onboardDepartment: department,\n            onboardLocation: location?.locationCode,\n            onboardLocationDescription: location?.locationDescription,\n            onboardEmployeeType: employeeType,\n            onboardFirstName: firstName?.trim(),\n            onboardLastName: lastName?.trim(),\n            onboardNonLpEmail: nonLpEmail?.trim(),\n            onboardJobCode: job?.jobCode,\n            onboardJobTitle: job?.jobTitle,\n            onboardCompany: selectedCompany,\n            onboardOfficeNumber: officeNumber,\n            onboardMobileNumber: mobileNumber,\n            onboardDevice: selectedDevice,\n            onboardingOktaGroups: groups,\n            firstApprovalBypass: isFirstApprovalBypass,\n            reqId: requisitionType?.id,\n            isDeviceNoteConfirmed: isDeviceNoteConfirmed,\n            isGoogleAccountNeeded: isGoogleAccountNeeded,\n            onboardingFinance: {\n              onboardingSalaryCurrency: null,\n              onboardingSalaryAmount: null,\n              onboardingSalaryPeriod: null,\n              onboardingContractMonths: null,\n              onboardingContractHoursPerWeek: null,\n            },\n          },\n        },\n      },\n    });\n  };\n\n  const handleCheck = () => {\n    const errorMessage =\n      (!permOnboardingRequisitionBypass &&\n        getValidationMessage(\n          requisitionType,\n          [isEmpty],\n          \"Selected Requisition\",\n          setRequisitionTypeError\n        )) ||\n      getValidationMessage(\n        startDate,\n        [isEmpty],\n        \"Start Date\",\n        setStartDateError\n      ) ||\n      getValidationMessage(\n        hiringManager,\n        [isEmpty],\n        \"Manager\",\n        setHiringManagerError\n      ) ||\n      getValidationMessage(\n        businessUnit,\n        [isEmpty],\n        \"Business Unit\",\n        setBusinessUnitError\n      ) ||\n      getValidationMessage(\n        department,\n        [isEmpty],\n        \"Department\",\n        setDepartmentError\n      ) ||\n      getValidationMessage(location, [isEmpty], \"Location\", setLocationError) ||\n      getValidationMessage(\n        employeeType,\n        [isEmpty],\n        \"Employee Type\",\n        setEmployeeTypeError\n      ) ||\n      getValidationMessage(\n        firstName,\n        [isEmpty, validateNameInput],\n        \"First Name\",\n        setFirstNameError\n      ) ||\n      getValidationMessage(\n        lastName,\n        [isEmpty, validateNameInput],\n        \"Last Name\",\n        setLastNameError\n      ) ||\n      getValidationMessage(\n        username,\n        [isEmpty],\n        \"Enter first and last name again. Username\",\n        setUsernameError\n      ) ||\n      getValidationMessage(\n        nonLpEmail,\n        [isEmpty, validateEmailInput],\n        \"Personal email\",\n        setNonLpEmailError\n      ) ||\n      getValidationMessage(job?.jobCode, [isEmpty], \"Job Code\", setJobError) ||\n      getValidationMessage(\n        job?.jobTitle,\n        [isEmpty, isMoreThan25Char],\n        \"Job Title\",\n        setJobError\n      ) ||\n      getValidationMessage(\n        selectedCompany,\n        [isEmpty],\n        \"Company\",\n        setSelectedCompanyError\n      ) ||\n      (officeNumber &&\n        getValidationMessage(\n          officeNumber,\n          [validatePhoneNumberInput],\n          \"Office number\",\n          setNonLpEmailError\n        )) ||\n      (mobileNumber &&\n        getValidationMessage(\n          mobileNumber,\n          [validatePhoneNumberInput],\n          \"Mobile number\",\n          setNonLpEmailError\n        )) ||\n      getValidationMessage(\n        selectedDevice,\n        [isEmpty],\n        \"Request Device\",\n        setSelectedDeviceError\n      );\n\n    if (errorMessage) {\n      handleOpen(errorMessage);\n    } else {\n      handleNext();\n    }\n  };\n\n  const handleOnClick = () => {\n    handleCheck();\n    if (activeStep === 0) {\n      if (isGoogleAccountNeeded) {\n        const userGroups = [\n          {\n            oktaGroupId: \"00gavutg8pz6etkYY2p7\",\n            oktaGroupName: \"SSO-Google-User\",\n          },\n          {\n            oktaGroupId: \"00gbg7nt92aVJc8k92p7\",\n            oktaGroupName: \"SDP\",\n          },\n        ];\n        setGroups(userGroups);\n      } else {\n        const userGroups = [\n          {\n            oktaGroupId: \"00gbswdsgp1gzNbkB2p7\",\n            oktaGroupName: \"SSO-Google-AuthenticationOnly\",\n          },\n          {\n            oktaGroupId: \"00gbg7nt92aVJc8k92p7\",\n            oktaGroupName: \"SDP\",\n          },\n        ];\n        setGroups(userGroups);\n      }\n      if (permOnboardingApprovalBypass) {\n        setIsFirstApprovalBypass(true);\n      } else {\n        setIsFirstApprovalBypass(false);\n      }\n    }\n    if (activeStep === steps?.length - 2) {\n      const scheduledTimestamp =\n        new Date(`${startDate}T00:00Z`).getTime() / 1000.0;\n      createTask(scheduledTimestamp);\n    }\n  };\n\n  const handleOpen = (msg) => {\n    setModalMsg(msg + \"!\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button disabled={activeStep === 0} onClick={handleBack}>\n        Back\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleOnClick}>\n        {activeStep === steps?.length - 2 ? \"Confirm\" : \"Next\"}\n      </Button>\n\n      <MissedInputModal\n        open={open}\n        handleClose={handleClose}\n        modalMsg={modalMsg}\n      />\n    </>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(StepperButtons));\n","const RequestSteps = [\n  \"Create Request\",\n  \"Review & Confirm Request\",\n  \"Request Completed\",\n];\n\nexport default RequestSteps;\n","import React, {memo} from \"react\";\nimport RequestWrapperPage from \"../../components/requestWrapper/RequestWrapperPage\";\nimport CreateCandidateRequestForm from \"./CreateCandidateRequestForm\";\nimport CandidateRequestSummary from \"./CandidateRequestSummary\";\nimport StepperButtons from \"./StepperButtons\";\nimport {\n  setActiveStep,\n  setDefaultState,\n} from \"../../data/redux/candidateRequest/candidateRequestActions\";\nimport RequestSteps from \"../../data/constants/RequestSteps\";\nimport {connect} from \"react-redux\";\nimport StepperResetRequestButton from \"../../components/buttons/StepperResetRequestButton\";\n\nconst CandidateRequestPageContent = ({\n  activeStep,\n  setActiveStep,\n  setDefaultState,\n}) => {\n  return (\n    <RequestWrapperPage\n      steps={RequestSteps}\n      activeStep={activeStep}\n      setActiveStep={setActiveStep}\n      createFormComponent={<CreateCandidateRequestForm />}\n      reviewComponent={<CandidateRequestSummary review />}\n      summaryComponent={<CandidateRequestSummary />}\n      stepperButtons={<StepperButtons />}\n      stepperResetBtn={\n        <StepperResetRequestButton clearData={setDefaultState} />\n      }\n    />\n  );\n};\n\nexport default connect(\n  (state) => ({activeStep: state.candidateRequest.get(\"activeStep\")}),\n  {setDefaultState, setActiveStep}\n)(memo(CandidateRequestPageContent));\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {Box, Typography} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {useQuery} from \"@apollo/client\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport CandidateRequestPageContent from \"./CandidateRequestPageContent\";\nimport InfoBlock from \"../../components/InfoBlock\";\nimport {GET_COMPLETED_REQUISITIONS_BY_USER} from \"../../operations/queries/getCompletedRequisitionsByUser\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport BreadcrumbLink from \"../../components/breadcrumbs/BreadcrumbLink\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\n\nconst CandidateRequestPage = () => {\n  const {\n    permOnboardingAll,\n    permOnboardingTeam,\n    permOnboardingRequisitionBypass,\n  } = useContext(AuthUserContext);\n  const [viewCandidateRequest, setViewCandidateRequest] = useState(false);\n\n  useEffect(() => {\n    if (permOnboardingAll || permOnboardingTeam) {\n      setViewCandidateRequest(true);\n    }\n  }, [permOnboardingAll, permOnboardingTeam]);\n\n  const {data} = useQuery(GET_COMPLETED_REQUISITIONS_BY_USER, {});\n\n  return (\n    <Page title=\"Candidate Request | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"CANDIDATE REQUEST\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Candidate Request\" />\n\n        {viewCandidateRequest ? (\n          <>\n            {!permOnboardingRequisitionBypass && (\n              <>\n                {data?.get_completed_requisitions_by_user?.length === 0 && (\n                  <Box mb={2}>\n                    <Alert severity=\"warning\" variant=\"outlined\">\n                      You cannot make a candidate request because you do not\n                      have any approved requisitions. <br />\n                      Please request a requisition here:{\" \"}\n                      <BreadcrumbLink\n                        href={FrontendRoutes.REQUISITION_REQUEST}\n                        title={\"Requisition Request Page\"}\n                      />\n                    </Alert>\n                  </Box>\n                )}\n              </>\n            )}\n            {(permOnboardingRequisitionBypass ||\n              data?.get_completed_requisitions_by_user?.length > 0) && (\n              <InfoBlock type={\"info\"}>\n                <Typography component={\"div\"} variant=\"p\">\n                  You are making a candidate request.{\" \"}\n                  {!permOnboardingRequisitionBypass &&\n                    \"All candidate types will need to be linked to a requisition request.\"}{\" \"}\n                  Once the request is submitted it will need to be approved by\n                  IT/HR team. Any hardware requests are subject to approval and\n                  ten working days.\n                  {/* <Link className={classes.link}> See more information here. </Link>  */}\n                </Typography>\n              </InfoBlock>\n            )}\n            <CandidateRequestPageContent />\n          </>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(CandidateRequestPage);\n","import React, {useState, useEffect, useContext, memo} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport FrontendRoutes, {\n  AdminRoutes,\n} from \"../../../data/constants/FrontendRoutes\";\n\nconst HomePage = () => {\n  const {\n    permSysMgmtManage,\n    permSysMgmtFteCandidateTracker,\n    permSysMgmtSettingsOffboarding,\n  } = useContext(AuthUserContext);\n\n  const [redirectLink, setRedirectLink] = useState(\"\");\n\n  useEffect(() => {\n    if (permSysMgmtManage) {\n      setRedirectLink(AdminRoutes.ADMIN_USER_MANAGEMENT);\n    } else if (permSysMgmtFteCandidateTracker) {\n      setRedirectLink(AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER);\n    } else if (permSysMgmtSettingsOffboarding) {\n      setRedirectLink(AdminRoutes.ADMIN_OFFBOARDING_SETTINGS);\n    } else {\n      setRedirectLink(FrontendRoutes.HOME);\n    }\n  }, [\n    redirectLink,\n    permSysMgmtManage,\n    permSysMgmtFteCandidateTracker,\n    permSysMgmtSettingsOffboarding,\n  ]);\n\n  return (\n    <>\n      {!redirectLink ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          <Redirect to={redirectLink} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(HomePage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_LOG_ENTRIES = gql`\n  query GetLogEntries {\n    get_log_entries {\n      id\n      userId\n      logType\n      logNotification\n      logDateTime\n      logDescription\n    }\n  }\n`;\n","import React, {memo, useRef} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  logDescription: {\n    textAlign: \"left\",\n    display: \"box\",\n    lineClamp: 2,\n    boxOrient: \"vertical\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n  },\n  // tooltip: {\n  //   maxWidth: props => props?.maxwidth,\n  //   maxHeight: \"90vh\",\n  // }\n}));\n\nconst SystemLogsDescription = ({logDescription}) => {\n  const textElementRef = useRef();\n  // const [x, setX] = useState(300);\n  // useEffect(() => {\n  //   setX(textElementRef?.current?.scrollWidth);\n  // }, [textElementRef]);\n\n  const classes = useStyles(\n    // {maxwidth: x}\n  );\n\n  return (\n    // <Tooltip\n    //   title={logDescription}\n    //   classes={{ tooltip: classes.tooltip }}\n    // >\n    <Typography\n      ref={textElementRef}\n      component={\"div\"}\n      variant={\"subtitle2\"}\n      className={classes.logDescription}\n    >\n      {logDescription}{\" \"}\n    </Typography>\n    // </Tooltip>\n  );\n};\n\nexport default memo(SystemLogsDescription);","import React, {memo, useState} from \"react\";\nimport {makeStyles, TableContainer, TablePagination, Typography} from \"@material-ui/core\";\nimport {getShortDateWithTimeString} from \"../../../data/helper/DateTimezoneHelpers\";\nimport TableContent from \"../../../components/table/TableContent\";\nimport CustomTableRow from \"../../../components/table/CustomTableRow\";\nimport SystemLogsDescription from \"./SystemLogsDescription\";\n\nconst useStyles = makeStyles(() => ({\n  tableContainer: {\n    height: \"calc(95vh - 350px)\",\n    minHeight: \"500px\",\n  },\n}));\n\nconst headCells = [\n  {\n    id: \"dateTime\",\n    label: \"Date & Time\",\n  },\n  {\n    id: \"userId\",\n    label: \"Username\",\n  },\n  {\n    id: \"logType\",\n    label: \"Type\",\n  },\n  {\n    id: \"logNotification\",\n    label: \"Notification\",\n  },\n  {\n    id: \"logDescription\",\n    label: \"Description\",\n  },\n];\n\nconst getSystemLogRowData = (log) => [\n  {\n    id: \"dateTime\",\n    value: <Typography component={\"div\"} variant={\"subtitle2\"}>\n      {getShortDateWithTimeString(log.logDateTime)}\n    </Typography>,\n  },\n  {id: \"userId\", value: log.userId},\n  {id: \"logType\", value: log.logType},\n  {id: \"logNotification\", value: log.logNotification},\n  {\n    id: \"logDescription\",\n    value: <SystemLogsDescription logDescription={log.logDescription}/>\n  },\n];\n\nconst SystemLogsRow = (log) => {\n  return (\n    <CustomTableRow\n      key={log?.id}\n      id={log?.id}\n      rowData={getSystemLogRowData(log)}\n    />\n  );\n};\n\nconst SystemsLogsTable = ({logsData}) => {\n  const classes = useStyles();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      <TableContainer className={classes.tableContainer}>\n        <TableContent\n          data={logsData}\n          headCells={headCells}\n          sliceFrom={page * rowsPerPage}\n          sliceTo={page * rowsPerPage + rowsPerPage}\n          initOrderBy={\"logDateTime\"}\n          tableRow={SystemLogsRow}\n        />\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={logsData?.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </>\n  );\n};\n\nexport default memo(SystemsLogsTable);","import React, {memo, useCallback, useMemo, useState} from \"react\";\nimport {Box, Collapse, makeStyles} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {toSetArray} from \"../../../data/helper/commonFunctions\";\nimport SelectTextField from \"../../../components/inputs/SelectTextfield\";\nimport SmallDataTextField from \"../../../components/inputs/SmallDataTextField\";\nimport ResetFiltersButton from \"../../../components/buttons/ResetFilterButton\";\nimport ApplyFiltersButton from \"../../../components/buttons/ApplyFiltersButton\";\nimport {getLogDateString} from \"../../../data/helper/DateTimezoneHelpers\";\nimport AutocompleteTextField from \"../../../components/inputs/AutocompleteTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  filterBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"70%\",\n  },\n  filterSection: {\n    display: \"flex\",\n  },\n  filterField: {\n    margin: theme.spacing(1),\n    width: \"25ch\",\n  },\n}));\n\nconst SystemLogsFilters = ({\n  filterOpen,\n  allLogsData,\n  setIsFilterApplied,\n  setLogsData,\n}) => {\n  const classes = useStyles();\n  const [usernameFilter, setUsernameFilter] = useState(\"\");\n  const [typeFilter, setTypeFilter] = useState(\"\");\n  const [notificationFilter, setNotificationFilter] = useState(\"\");\n  const [dateFromFilter, setDateFromFilter] = useState(\"\");\n  const [dateToFilter, setDateToFilter] = useState(\"\");\n\n  const handleFilterQuery = () => {\n    setIsFilterApplied(true);\n    const filtered = allLogsData?.filter(\n      (log) =>\n        (!usernameFilter?.length || log.userId === usernameFilter) &&\n        (!typeFilter?.length || log.logType === typeFilter) &&\n        (!notificationFilter?.length ||\n          log.logNotification === notificationFilter) &&\n        (!dateFromFilter ||\n          getLogDateString(log.logDateTime) >= dateFromFilter) &&\n        (!dateToFilter || getLogDateString(log.logDateTime) <= dateToFilter)\n    );\n    setLogsData(filtered);\n  };\n\n  const handleClearFilters = useCallback(() => {\n    setNotificationFilter(\"\");\n    setDateFromFilter(\"\");\n    setDateToFilter(\"\");\n    setUsernameFilter(\"\");\n    setTypeFilter(\"\");\n    setIsFilterApplied(false);\n    setLogsData(allLogsData);\n  }, [allLogsData]);\n\n  const types = useMemo(\n    () => allLogsData?.map((data) => data.logType),\n    [allLogsData]\n  );\n\n  const usernames = useMemo(\n    () => toSetArray(allLogsData?.map((data) => data.userId))?.sort(),\n    [allLogsData]\n  );\n\n  const notifications = useMemo(\n    () => allLogsData?.map((data) => data.logNotification),\n    [allLogsData]\n  );\n\n  return (\n    <Collapse in={filterOpen} timeout=\"auto\" unmountOnExit>\n      <Box className={classes.filterBox}>\n        <div>\n          {allLogsData && (\n            <>\n              <div className={classes.filterSection}>\n                <SelectTextField\n                  id=\"select-type\"\n                  label=\"Type\"\n                  value={typeFilter}\n                  onValueChange={setTypeFilter}\n                  className={classes.filterField}\n                  dataList={types}\n                />\n                <Autocomplete\n                  id=\"select-username\"\n                  value={usernameFilter}\n                  options={usernames}\n                  getOptionLabel={(userId) => userId}\n                  className={classes.filterField}\n                  renderInput={(params) => (\n                    <AutocompleteTextField\n                      {...params}\n                      label=\"Username\"\n                      size=\"small\"\n                    />\n                  )}\n                  onChange={(event, newValue) => setUsernameFilter(newValue)}\n                />\n                <SelectTextField\n                  id=\"select-notification\"\n                  label=\"Notification\"\n                  value={notificationFilter}\n                  onValueChange={setNotificationFilter}\n                  className={classes.filterField}\n                  dataList={notifications}\n                />\n              </div>\n\n              <div className={classes.filterSection}>\n                <SmallDataTextField\n                  label=\"Log Entries Date From\"\n                  value={dateFromFilter}\n                  onChange={(e) => setDateFromFilter(e.target.value)}\n                />\n                <SmallDataTextField\n                  label=\"Log Entries Date To\"\n                  value={dateToFilter}\n                  onChange={(e) => setDateToFilter(e.target.value)}\n                />\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          <ResetFiltersButton handleClick={handleClearFilters} />\n\n          <ApplyFiltersButton handleClick={handleFilterQuery} />\n        </div>\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default memo(SystemLogsFilters);\n","import React, {memo} from \"react\";\nimport {Box, Button, Toolbar} from \"@material-ui/core\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport RefreshButton from \"../../../components/buttons/RefreshButton\";\n\nconst SystemLogsTopBox = ({refetch, handleFilterClick, isFilterApplied}) => {\n  return (\n    <Box>\n      <Toolbar>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={handleFilterClick}\n        >\n          <FilterListIcon /> Filter Log Entries\n          {isFilterApplied && \"(Applied)\"}\n        </Button>\n        <Box flexGrow={1} />\n        <RefreshButton handleClick={() => refetch()} />\n      </Toolbar>\n    </Box>\n  )\n}\n\nexport default memo(SystemLogsTopBox);","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {NetworkStatus, useQuery} from \"@apollo/client\";\nimport {Box} from \"@material-ui/core\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\nimport {GET_LOG_ENTRIES} from \"../../../operations/adminQueries/getLogEntries\";\nimport handleError from \"../../../data/handleError\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport SystemsLogsTable from \"./SystemsLogsTable\";\nimport SystemLogsFilters from \"./SystemLogsFilters\";\nimport SystemLogsTopBox from \"./SystemLogsTopBox\";\n\nconst SystemsLogsContent = () => {\n  const history = useHistory();\n\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [isFilterApplied, setIsFilterApplied] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [allLogsData, setAllLogsData] = useState();\n  const [logsData, setLogsData] = useState(allLogsData);\n\n  const {error, loading, networkStatus, refetch} = useQuery(GET_LOG_ENTRIES, {\n    notifyOnNetworkStatusChange: true,\n    onCompleted: (data) => {\n      setAllLogsData(data.get_log_entries);\n      setLogsData(data.get_log_entries);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (loading || networkStatus === NetworkStatus.refetch) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [loading, networkStatus, logsData]);\n\n  const handleFilterClick = () => {\n    setFilterOpen(!filterOpen);\n  };\n\n  if (error) {\n    return <p>`Error! ${error.message}`</p>;\n  }\n\n  return (\n    <Box>\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          <Box mt={3}>\n            <PaperCardWrapper>\n\n              <SystemLogsTopBox\n                refetch={refetch}\n                handleFilterClick={handleFilterClick}\n                isFilterApplied={isFilterApplied}\n              />\n\n              <SystemLogsFilters\n                filterOpen={filterOpen}\n                allLogsData={allLogsData}\n                setIsFilterApplied={setIsFilterApplied}\n                setLogsData={setLogsData}\n              />\n            </PaperCardWrapper>\n          </Box>\n\n          {logsData && (\n            <>\n              {!logsData?.length ? (\n                <NoResultsTypography />\n              ) : (\n                <SystemsLogsTable logsData={logsData} />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(SystemsLogsContent);","import React, {memo, useContext} from \"react\";\nimport {Box, Paper} from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport SystemsLogsTable from \"./SystemsLogsContent\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\n\nconst SystemLogsPage = () => {\n  const { permSysMgmtLogs } = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"User Management | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        <BreadcrumbText title={\"SYSTEM LOGS\"}/>\n      </BreadcrumbHomeBox>\n\n      {permSysMgmtLogs ? (\n        <Box mx={3}>\n          <PageTitleBox title=\"SYSTEM LOGS\"/>\n\n          <Box mt={3} minWidth={1050}>\n            <Paper elevation={3}>\n              <SystemsLogsTable/>\n            </Paper>\n          </Box>\n        </Box>\n      ) : (\n        <NoPermissionsError/>\n      )}\n    </Page>\n  );\n};\n\nexport default memo(SystemLogsPage);\n","import React, { createContext, useState } from \"react\";\n\nexport const UserManagementContext = createContext();\n\nconst UserManagementContextProvider = ({ children }) => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [allRoles, setAllRoles] = useState();\n  const [allPermissions, setAllPermissions] = useState();\n  const [allPermissionUsers, setAllPermissionUsers] = useState();\n  const [selectedUsers, setSelectedUsers] = useState();\n  const [selectedUsersTotal, setSelectedUsersTotal] = useState();\n  const [selectedRole, setSelectedRole] = useState();\n  const [selectedPermissions, setSelectedPermissions] = useState();\n  const [isAddRoleOpen, setIsAddRoleOpen] = useState(false);\n  const [isViewDetailsContent, setIsViewDetailsContent] = useState(false);\n  const [isEditRoleContent, setIsEditRoleContent] = useState(false);\n\n  return (\n    <UserManagementContext.Provider\n      value={{\n        isDrawerOpen,\n        setIsDrawerOpen,\n        allRoles,\n        setAllRoles,\n        allPermissions,\n        setAllPermissions,\n        selectedUsers,\n        setSelectedUsers,\n        selectedUsersTotal,\n        setSelectedUsersTotal,\n        selectedRole,\n        setSelectedRole,\n        selectedPermissions,\n        setSelectedPermissions,\n        isAddRoleOpen,\n        setIsAddRoleOpen,\n        isViewDetailsContent,\n        setIsViewDetailsContent,\n        isEditRoleContent,\n        setIsEditRoleContent,\n        allPermissionUsers,\n        setAllPermissionUsers,\n      }}\n    >\n      {children}\n    </UserManagementContext.Provider>\n  );\n};\n\nexport default UserManagementContextProvider;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_PERMISSIONS = gql`\n  query GetPermissions {\n    get_permissions {\n      id\n      permissionTitle\n      permissionDescription\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_ROLES = gql`\n  query GetRoles {\n    get_roles {\n      id\n      roleTitle\n      roleDescription\n      roleLocked\n      permissions {\n        permission {\n          id\n          permissionTitle\n          permissionDescription\n        }\n      }\n      oktaUsersTotal\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_ROLE = gql`\n  mutation DeleteRole($id: String!) {\n    deleteRole(id: $id) {\n      id\n    }\n  }\n`;\n","import React, {useContext} from \"react\";\nimport {Box, Button, Drawer, makeStyles, Toolbar} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport {UserManagementContext} from \"./UserManagementContextProvider\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  closeToolbar: {flexShrink: 0},\n  footerDiv: {height: \"3rem\", flexShrink: 0},\n  btnDiv: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst DrawerComponent = ({children}) => {\n  const classes = useStyles();\n  const {\n    isDrawerOpen,\n    setIsDrawerOpen,\n    setIsViewDetailsContent,\n    setIsEditRoleContent,\n  } = useContext(UserManagementContext);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsDrawerOpen(open);\n  };\n\n  const handleClose = () => {\n    setIsDrawerOpen(false);\n    setIsViewDetailsContent(false);\n    setIsEditRoleContent(false);\n  };\n\n  return (\n    <div>\n      <Drawer\n        anchor=\"right\"\n        open={isDrawerOpen}\n        onClose={toggleDrawer(false)}\n        classes={{paper: classes.paper}}\n      >\n        <Toolbar className={classes.closeToolbar}>\n          <Box className={classes.btnDiv}>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              onClick={() => handleClose()}\n            >\n              <CloseIcon /> Close\n            </Button>\n          </Box>\n        </Toolbar>\n        {children}\n        <div className={classes.footerDiv} />\n      </Drawer>\n    </div>\n  );\n};\n\nexport default DrawerComponent;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_ROLE_USER = gql`\n  mutation AddRoleUser($roleId: String!, $userId: String!) {\n    addRoleUser(roleId: $roleId, userId: $userId) {\n      roleId\n      userId\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_LOG_ENTRY = gql`\n  mutation CreateLogEntry($input: LpsyncLogInput) {\n    createLogEntry(input: $input) {\n      logType\n      logNotification\n      logDescription\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const REMOVE_ROLE_USER = gql`\n  mutation RemoveRoleUser($roleId: String!, $userId: String!) {\n    removeRoleUser(roleId: $roleId, userId: $userId) {\n      roleId\n      userId\n    }\n  }\n`;\n","import React, { memo } from \"react\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\nimport { Box, Button, makeStyles } from \"@material-ui/core\";\nimport { useMutation } from \"@apollo/client\";\nimport { REMOVE_ROLE_USER } from \"../../../../operations/adminMutations/removeRoleUser\";\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    fontSize: \".75rem\"\n  },\n  modalBtnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  }\n}));\n\nconst RemoveUserRoleModal = ({open, handleClose, createLog, selectedRemoveRole, selectedRemoveUser, onComplete}) => {\n  const classes = useStyles();\n\n  const [removeRoleUser, { error: removeError }] = useMutation(\n    REMOVE_ROLE_USER, {\n      onCompleted: () => onComplete()\n    }\n  );\n\n  if (removeError) {\n    createLog(\n      \"alert\",\n      `User Management >> Error - User removed from role; errorMsg: ${removeError.message}`\n    );\n  }\n\n  const handleRemoveRoleUser = (roleId, userId) => {\n    removeRoleUser({\n      variables: {\n        roleId: roleId,\n        userId: userId\n      }\n    });\n    createLog(\n      \"info\",\n      `User Management >> User removed from role; roleName: ${roleId}; userName: ${userId};`\n    );\n  };\n\n  return (\n    <CustomModal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"remove-modal\"\n      aria-describedby=\"remove-modal\"\n    >\n      <Box>\n        <Box mb={2}>\n          Are you sure you want to remove{\" \"}\n          <strong>{selectedRemoveUser.toUpperCase()}</strong>?\n        </Box>\n        <Box className={classes.modalBtnBox}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.btn}\n            onClick={handleClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"secondary\"\n            className={classes.btn}\n            onClick={() => {\n              handleRemoveRoleUser(selectedRemoveRole, selectedRemoveUser);\n            }}\n          >\n            Confirm\n          </Button>\n        </Box>\n      </Box>\n    </CustomModal>\n  )\n}\n\nexport default memo(RemoveUserRoleModal);","import React, {memo, useState} from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Button,\n  Collapse,\n  Container,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport SelectCircularProgress from \"../../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../../components/typographies/NoResultsTypography\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {SEARCH_USERS_QUERY} from \"../../../../../operations/queries/searchUsersQuery\";\nimport {DebounceInput} from \"react-debounce-input\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\", flexGrow: 1},\n  selected: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    flexGrow: 1,\n    height: 76,\n  },\n  textField: {\n    minWidth: \"40ch\",\n    width: \"100%\",\n  },\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    minWidth: \"40ch\",\n    width: \"100%\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"15rem\",\n    overflow: \"auto\",\n  },\n  selectedContainer: {\n    border: \"1px solid \" + theme.palette.warning.main,\n    padding: \"5px 10px\",\n    borderRadius: \"5px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  progressBar: {\n    background: \"\" + theme.palette.warning.main,\n  },\n}));\n\nconst SearchComponent = ({selected, setSelected}) => {\n  const debounceTime = 500;\n  const history = useHistory();\n  const classes = useStyles();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [list, setList] = useState();\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(false);\n\n  const [executeSearch, {loading: isResultsLoading}] = useLazyQuery(\n    SEARCH_USERS_QUERY,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) =>\n        setList(data?.search_users.map((item) => item.profile)),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const handleClick = (item) => {\n    setSelected(item);\n    setSearchQuery(`${item.firstName} ${item.lastName}`);\n    setResultsOpen(false);\n    setSelectedValue(true);\n  };\n\n  const clearSelectedValue = () => {\n    setSelectedValue(false);\n    setSelected(null);\n    setSearchQuery(\"\");\n  };\n\n  const searchOnChange = (e) => {\n    if (e.target.value === \"\") {\n      setResultsOpen(false);\n      return;\n    }\n    setResultsOpen(true);\n    setSearchQuery(e.target.value);\n    executeSearch({variables: {search: e.target.value}});\n  };\n  const blurHandler = (e) => {\n    if (e?.relatedTarget?.classList?.contains(\"prevent-blur\")) return;\n    setResultsOpen(false);\n    if (!selected) {\n      setSearchQuery(\"\");\n      setSelectedValue(false);\n    }\n  };\n  return (\n    <>\n      {!selectedValue && (\n        <Box className={clsx(classes.box)}>\n          <DebounceInput\n            className={classes.textField}\n            id=\"standard-basic\"\n            label=\"Search\"\n            color=\"secondary\"\n            variant=\"standard\"\n            debounceTimeout={debounceTime}\n            value={searchQuery}\n            helperText=\"Search by Name | Email | UserName\"\n            onChange={searchOnChange}\n            element={TextField}\n            onBlur={blurHandler}\n            autoComplete=\"off\"\n          />\n\n          {searchQuery?.length > 0 && (\n            <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n              <Box className={classes.resultsBox}>\n                <Paper>\n                  {isResultsLoading && <SelectCircularProgress />}\n                  {list && !isResultsLoading && (\n                    <>\n                      {list?.length === 0 ? (\n                        <Box m={1}>\n                          <NoResultsTypography />\n                        </Box>\n                      ) : (\n                        <List>\n                          {list.map((item, index) => (\n                            <React.Fragment key={index}>\n                              <ListItem\n                                key={index}\n                                button\n                                onClick={() => handleClick(item)}\n                                className=\"prevent-blur\"\n                              >\n                                <ListItemText\n                                  primary={\n                                    <>\n                                      <Typography\n                                        component={\"div\"}\n                                        variant=\"subtitle1\"\n                                      >\n                                        {`${item.firstName} ${item.lastName} | ${item.email} | ${item.userName}`}\n                                      </Typography>\n                                    </>\n                                  }\n                                />\n                              </ListItem>\n                              {list?.length > 1 && <Divider />}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      )}\n                    </>\n                  )}\n                </Paper>\n              </Box>\n            </Collapse>\n          )}\n        </Box>\n      )}\n\n      {selectedValue && (\n        <>\n          <Box className={classes.selected}>\n            <Container m={1} className={classes.selectedContainer}>\n              {`${selected.firstName} ${selected.lastName}`}\n            </Container>\n            <Button\n              size=\"small\"\n              variant=\"contained\"\n              onClick={clearSelectedValue}\n              style={{width: 200, marginLeft: 8}}\n            >\n              Clear&nbsp;Selected\n            </Button>\n          </Box>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default memo(SearchComponent);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_OKTA_USERS_BY_ROLE_ID = gql`\n  query GetOktaUsersByRoleId(\n    $id: String!\n    $skip: Int!\n    $take: Int!\n    $search: String!\n  ) {\n    get_okta_users_by_role_id(\n      id: $id\n      skip: $skip\n      take: $take\n      search: $search\n    ) {\n      user {\n        id\n        firstName\n        lastName\n        lastLogin\n        userName\n      }\n    }\n  }\n`;\n","import React, {useEffect, useState} from \"react\";\nimport {\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport StyledTableRow from \"../../../../../components/table/StyledTableRow\";\nimport dateFormat from \"dateformat\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport BoxTableWrapper from \"../../../../../components/table/BoxTableWrapper\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_OKTA_USERS_BY_ROLE_ID} from \"../../../../../operations/queries/getOktaUsersByRoleId\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {useStyles} from \"./ViewDetailsContent\";\n\nconst RoleUsersInfinityTable = ({\n  selectedRole,\n  handleOpen,\n  setSelectedRemoveUser,\n  setSelectedRemoveRole,\n  searchStr,\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [hasMore, setHasMore] = useState(true);\n  const [offset, setOffset] = useState(0);\n  const [rowsPerPage] = useState(20);\n  const [roleUsersData, setRoleUsersData] = useState(null);\n  const [preventFirstRun, setPreventFirstRun] = useState(true);\n\n  const [getOktaUsersByRoleId, {loading: roleUsersLoading}] = useLazyQuery(\n    GET_OKTA_USERS_BY_ROLE_ID,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => setUsers(data?.get_okta_users_by_role_id),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const setUsers = (result) => {\n    setRoleUsersData((prev) => {\n      return prev ? prev.concat(result) : result;\n    });\n    if (result?.length < rowsPerPage) {\n      setHasMore(false);\n    }\n  };\n\n  const loadUsers = () => {\n    getOktaUsersByRoleId({\n      variables: {\n        id: selectedRole.id,\n        take: rowsPerPage,\n        skip: offset,\n        search: searchStr.trim(),\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (hasMore) {\n      loadUsers();\n    }\n  }, [selectedRole.roleId, offset]);\n\n  useEffect(() => {\n    if (!preventFirstRun) {\n      setHasMore(true);\n      setRoleUsersData(null);\n      if (offset === 0) loadUsers();\n      else setOffset(0);\n    } else setPreventFirstRun(false);\n  }, [searchStr]);\n\n  function loadNextData() {\n    setOffset((prevState) => prevState + rowsPerPage);\n  }\n\n  return (\n    <BoxTableWrapper\n      id=\"infinity-scroll-role\"\n      hasMore={hasMore}\n      loading={roleUsersLoading}\n      next={loadNextData}\n      dataLength={roleUsersData?.length || 0}\n    >\n      <TableContainer id=\"infinity-scroll-role\">\n        <Table size=\"small\" aria-label=\"role users table\">\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.tableHeadCell}>Username</TableCell>\n              <TableCell className={classes.tableHeadCell} style={{width: 100}}>\n                First Name\n              </TableCell>\n              <TableCell className={classes.tableHeadCell}>Last Name</TableCell>\n              <TableCell className={classes.tableHeadCell}>\n                Last Login\n              </TableCell>\n\n              <TableCell className={classes.tableHeadCell}>\n                Remove User\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {roleUsersData &&\n              roleUsersData?.map((user) => {\n                return (\n                  <StyledTableRow id={user?.user.id} key={user.user.id}>\n                    <TableCell className={classes.userTableCell}>\n                      <div>{user?.user?.userName}</div>\n                    </TableCell>\n                    <TableCell className={classes.userTableCell}>\n                      {user?.user?.firstName}\n                    </TableCell>\n                    <TableCell className={classes.userTableCell}>\n                      {user?.user?.lastName}\n                    </TableCell>\n                    <TableCell className={classes.userTableCell}>\n                      {dateFormat(\n                        new Date(parseInt(user?.user?.lastLogin)).toISOString(),\n                        \"mmmm d, yyyy h:MM TT Z\"\n                      )}\n                    </TableCell>\n                    <TableCell className={classes.userTableCell}>\n                      <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        className={classes.btn}\n                        onClick={() => {\n                          setSelectedRemoveRole(selectedRole.id);\n                          setSelectedRemoveUser(user?.user?.userName);\n                          handleOpen();\n                        }}\n                      >\n                        <DeleteIcon className={classes.icon} />\n                        Remove\n                      </Button>\n                    </TableCell>\n                  </StyledTableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </BoxTableWrapper>\n  );\n};\n\nexport default RoleUsersInfinityTable;\n","import React from \"react\";\nimport {\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from \"@material-ui/core\";\nimport {useStyles} from \"./ViewDetailsContent\";\n\nconst RoleDetailsTable = ({selectedRole}) => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <TableContainer>\n        <Table size=\"small\" aria-label=\"role details table\">\n          <TableBody>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Role\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {selectedRole.roleTitle}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Role Description\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {selectedRole.roleDescription}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Permissions\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {selectedRole.permissions.map((perm) => (\n                  <p key={perm.permission.id}>\n                    {perm.permission.permissionTitle}\n                  </p>\n                ))}\n              </TableCell>\n            </TableRow>\n\n            <TableRow>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                className={classes.tableCellKey}\n              >\n                Total Users\n              </TableCell>\n              <TableCell align=\"left\" className={classes.tableCell}>\n                {selectedRole.oktaUsers?.length}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  );\n};\n\nexport default RoleDetailsTable;\n","import React, {useContext, useState} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  Container,\n  Divider,\n  makeStyles,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport {UserManagementContext} from \"../../UserManagementContextProvider\";\nimport {ADD_ROLE_USER} from \"../../../../../operations/adminMutations/addRoleUser\";\nimport {CREATE_LOG_ENTRY} from \"../../../../../operations/adminMutations/createLogEntry\";\nimport RemoveUserRoleModal from \"../RemoveUserRoleModal\";\nimport handleError from \"../../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport SearchComponent from \"./SearchComponent\";\nimport RoleUsersInfinityTable from \"./RoleUsersInfinityTable\";\nimport RoleDetailsTable from \"./RoleDetailsTable\";\nimport {DebounceInput} from \"react-debounce-input\";\n\nexport const useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\"},\n  tableCellKey: {\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n  },\n  tableCell: {\n    fontWeight: 700,\n    borderBottom: \"none\",\n    fontSize: \".9rem\",\n  },\n  heading: {\n    fontSize: \"1.15rem\",\n    fontWeight: 600,\n  },\n  tableHeadCell: {\n    fontWeight: \"bold\",\n    fontSize: \".75rem\",\n  },\n  usersTitleBox: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  addUserBox: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: \"flex\",\n    margin: 40,\n  },\n  addUserBtn: {\n    marginLeft: theme.spacing(1),\n    alignSelf: \"center\",\n    minWidth: 100,\n  },\n  userTableCell: {\n    fontSize: \".8rem\",\n  },\n  btn: {\n    fontSize: \".75rem\",\n  },\n  icon: {\n    fontSize: \".95rem\",\n  },\n}));\n\nconst ViewDetailsContent = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {selectedRole} = useContext(UserManagementContext);\n  const [addUserError, setAddUserError] = useState(false);\n  const [errorSent, setErrorSent] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [selectedRemoveRole, setSelectedRemoveRole] = useState(\"\");\n  const [selectedRemoveUser, setSelectedRemoveUser] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [addUserLoading, setAddUserLoading] = useState(false);\n\n  const [addRoleUser, {error: addError}] = useMutation(ADD_ROLE_USER, {\n    onCompleted: () => onComplete(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"System Settings\",\n          logNotification: info,\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  if (addError && !errorSent) {\n    setErrorSent(true);\n    createLog(\n      \"alert\",\n      `User Management >> Error - New User Added to a Role; errorMsg: ${addError.message}`\n    );\n  }\n\n  const handleAddRoleUser = (roleId) => {\n    if (!selectedUser) {\n      setAddUserError(true);\n    } else {\n      setAddUserLoading(true);\n      setAddUserError(false);\n      addRoleUser({\n        variables: {\n          roleId: roleId,\n          userId: selectedUser?.userName,\n        },\n      }).then(() => {\n        setAddUserLoading(false);\n      });\n      createLog(\n        \"info\",\n        `User Management >> New User Added to a Role; roleName: ${roleId}; userName: ${selectedUser?.userName};`\n      );\n    }\n  };\n\n  const onComplete = () => {\n    props.handleDrawerClose();\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSearch = (value) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar>\n        <div>\n          <Typography component={\"div\"} className={classes.heading}>\n            Role Details\n          </Typography>\n        </div>\n      </Toolbar>\n\n      <RoleDetailsTable selectedRole={selectedRole} />\n\n      <Divider />\n\n      <Box m={1} className={classes.addUserBox}>\n        <SearchComponent\n          selected={selectedUser}\n          setSelected={setSelectedUser}\n        />\n        <Button\n          size=\"small\"\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.addUserBtn}\n          disabled={addUserLoading}\n          onClick={() => handleAddRoleUser(selectedRole.id)}\n        >\n          {addUserLoading ? \"loading...\" : \"add user\"}\n        </Button>\n      </Box>\n\n      <Container>\n        <Divider />\n        <Box className={classes.usersTitleBox}>\n          <Toolbar>\n            <Box>\n              <Typography>Users</Typography>\n            </Box>\n            <Box flexGrow={1} />\n            <Box>\n              <DebounceInput\n                id=\"users-search-debounce\"\n                label=\"Search Users\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                autoComplete=\"off\"\n                value={searchQuery}\n                debounceTimeout={500}\n                onChange={(e) => handleSearch(e.target.value)}\n                element={TextField}\n              />\n            </Box>\n          </Toolbar>\n        </Box>\n        <RoleUsersInfinityTable\n          selectedRole={selectedRole}\n          setSelectedRemoveRole={setSelectedRemoveRole}\n          setSelectedRemoveUser={setSelectedRemoveUser}\n          handleOpen={handleOpen}\n          searchStr={searchQuery}\n        />\n      </Container>\n\n      {open && (\n        <RemoveUserRoleModal\n          open={open}\n          handleClose={handleClose}\n          createLog={createLog}\n          selectedRemoveRole={selectedRemoveRole}\n          selectedRemoveUser={selectedRemoveUser}\n          onComplete={onComplete}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default ViewDetailsContent;\n","import React, {memo} from \"react\";\nimport {Button, makeStyles} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    fontSize: \".7rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n}));\n\nconst DeleteButton = ({...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" size=\"small\" className={classes.btn} {...props}>\n      <DeleteIcon className={classes.icon} />\n      Delete\n    </Button>\n  );\n};\n\nexport default memo(DeleteButton);\n","import React, {useContext, useEffect} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  Box,\n  Chip,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport {DELETE_ROLE} from \"../../../../operations/adminMutations/deleteRole\";\nimport {UserManagementContext} from \"../UserManagementContextProvider\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport DrawerComponent from \"../DrawerComponent\";\nimport ViewDetailsContent from \"./ViewDetailsContent/ViewDetailsContent\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport DeleteButton from \"../../../../components/buttons/DeleteButton\";\nimport ViewButton from \"../../../../components/buttons/ViewButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"800px\",\n  },\n  tableBox: {\n    overflow: \"auto\",\n    height: \"calc(95vh - 250px)\",\n    minHeight: \"500px\",\n    padding: theme.spacing(3),\n  },\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n  },\n  tableHeadCell: {\n    fontWeight: \"bold\",\n    fontSize: \"1.1rem\",\n  },\n  btn: {\n    fontSize: \".7rem\",\n  },\n  chip: {\n    fontSize: \".75rem\",\n  },\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {marginTop: theme.spacing(2)},\n  },\n}));\n\nconst RolePermissionsTable = (props) => {\n  const classes = useStyles();\n  const {\n    allRoles,\n    setIsDrawerOpen,\n    setSelectedRole,\n    isViewDetailsContent,\n    setIsViewDetailsContent,\n  } = useContext(UserManagementContext);\n\n  useEffect(() => {}, [allRoles]);\n\n  const [deleteRole, {loading}] = useMutation(DELETE_ROLE, {\n    onCompleted: () => onComplete(),\n  });\n\n  const onComplete = () => {\n    props.setAlertMsg(\"Role deleted\");\n    props.setIsComplete(true);\n    props.refetch();\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      props.setIsComplete(false);\n    }, 5000);\n  };\n\n  const handleViewBtn = (role) => {\n    setIsDrawerOpen(true);\n    setIsViewDetailsContent(true);\n    setSelectedRole(role);\n  };\n\n  const handleDeleteRole = (id) => {\n    deleteRole({\n      variables: {\n        id: id,\n      },\n    });\n  };\n\n  const handleDrawerClose = () => {\n    props.refetch();\n    setIsViewDetailsContent(false);\n    setIsDrawerOpen(false);\n  };\n\n  return (\n    <Box>\n      {loading ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          {allRoles && (\n            <>\n              <Box className={classes.tableBox}>\n                <TableContainer>\n                  <Table size=\"small\" className={classes.table}>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell className={classes.tableHeadCell}>\n                          Role\n                        </TableCell>\n                        <TableCell className={classes.tableHeadCell}>\n                          Permissions\n                        </TableCell>\n                        <TableCell className={classes.tableHeadCell}>\n                          Users\n                        </TableCell>\n                        <TableCell>View</TableCell>\n                        <TableCell>Delete</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody className={classes.tableBody}>\n                      {allRoles?.map((role) => (\n                        <React.Fragment key={role.id}>\n                          <StyledTableRow\n                            id={role.id}\n                            key={role.id}\n                            className={classes.tableRow}\n                          >\n                            <TableCell>\n                              <div>{role.roleTitle}</div>\n                            </TableCell>\n                            <TableCell>\n                              {role.permissions?.map((perm) => (\n                                <Chip\n                                  id={perm.permission.id}\n                                  size=\"small\"\n                                  variant=\"outlined\"\n                                  key={perm.permission.id}\n                                  label={perm.permission.permissionTitle}\n                                  className={classes.chip}\n                                />\n                              ))}\n                            </TableCell>\n\n                            <TableCell>{role?.oktaUsersTotal}</TableCell>\n                            <TableCell>\n                              <ViewButton\n                                text={\"View Details\"}\n                                className={classes.btn}\n                                onClick={() => handleViewBtn(role)}\n                              />\n                            </TableCell>\n\n                            <TableCell>\n                              {role.oktaUsers?.length === 0 &&\n                                !role.roleLocked && (\n                                  <DeleteButton\n                                    onClick={() => handleDeleteRole(role.id)}\n                                  />\n                                )}\n                            </TableCell>\n                          </StyledTableRow>\n                        </React.Fragment>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Box>\n              <DrawerComponent>\n                {isViewDetailsContent && (\n                  <ViewDetailsContent handleDrawerClose={handleDrawerClose} />\n                )}\n              </DrawerComponent>\n            </>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default RolePermissionsTable;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_NEW_ROLE = gql`\n  mutation CreateNewRole($input: LpsyncRoleInput) {\n    createNewRole(input: $input) {\n      id\n      roleTitle\n      roleDescription\n      permissions {\n        roleId\n        permissionId\n      }\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {marginTop: theme.spacing(2)},\n  },\n}));\n\nconst AddRoleTopMessage = ({isComplete}) => {\n  const classes = useStyles();\n  return (\n    <Box>\n      {isComplete && (\n        <Box className={classes.alert} my={1}>\n          <Alert severity=\"success\">New role added</Alert>\n        </Box>\n      )}\n\n      <Box fontWeight=\"fontWeightBold\" fontSize=\"h6.fontSize\">\n        Add Role\n      </Box>\n      <Typography component={\"div\"} variant=\"subtitle1\">\n        Enter role name, role description and select the permissions for the\n        role.\n      </Typography>\n    </Box>\n  )\n};\n\nexport default memo(AddRoleTopMessage);","import React, {memo} from \"react\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  submitBtnBox: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nconst SubmitButtonBox = ({onSubmit}) => {\n  const classes = useStyles();\n  return (\n    <Box m={2} className={classes.submitBtnBox}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={onSubmit}\n      >\n        Submit\n      </Button>\n    </Box>\n  )\n}\n\nexport default memo(SubmitButtonBox);","import React, {memo} from \"react\";\nimport {makeStyles, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport CustomTableRow from \"../../../../../components/table/CustomTableRow\";\nimport ColorCheckbox from \"../../../../../components/checkboxes/ColorCheckbox\";\n\nconst useStyles = makeStyles(() => ({\n  tableHeadCell: {\n    fontWeight: \"bold\",\n    fontSize: \"1rem\",\n  },\n  tableBodyCell: {\n    fontSize: \".85rem\",\n  }\n}));\n\nexport const permissionTableHead = [\n  {id: \"select\", value: \"Select\"},\n  {id: \"permission\", value: \"Permission\"},\n  {id: \"description\", value: \"Description\"},\n];\n\nconst permissionRowData = (perm, isSelected, handleSingleCheck) => [\n  {\n    id: \"select\",\n    value: <ColorCheckbox\n      checked={isSelected}\n      value={perm?.id}\n      onChange={handleSingleCheck}\n    />,\n  },\n  {id: \"permission\", value: perm?.permissionTitle},\n  {id: \"description\", value: perm?.permissionDescription},\n];\n\n\nexport const PermissionHeadRow = memo(() => {\n  const classes = useStyles();\n  return (\n    <TableHead>\n      <TableRow>\n        {permissionTableHead?.map(({id, value}) => (\n          <TableCell key={id} className={classes.tableHeadCell}>\n            {value}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n});\n\nconst PermissionRow = ({perm, isSelected, handleSingleCheck}) => {\n  const classes = useStyles();\n  return (\n    <CustomTableRow\n      id={perm?.id}\n      align={\"left\"}\n      rowData={permissionRowData(perm, isSelected, handleSingleCheck)}\n      tableCellClasses={classes.tableBodyCell} />\n  );\n};\n\n\nexport default memo(PermissionRow);","import React, {memo} from \"react\";\nimport {Box, Table, TableBody} from \"@material-ui/core\";\nimport PermissionRow, {PermissionHeadRow} from \"./PermissionRow\";\n\nconst PermissionsTable = ({allPermissions, handleSingleCheck, isChecked, permissionQuery}) => {\n  const filteredPermissions = allPermissions\n    ?.filter((perm) =>\n      !permissionQuery\n      || isChecked?.[perm?.id]\n      || perm?.permissionTitle?.includes(permissionQuery)\n      || perm?.permissionDescription?.includes(permissionQuery))\n    ?.sort((a, b) => {\n        if (!isChecked?.[a?.id] === !isChecked?.[b?.id]) {\n          return a?.id < b?.id ? -1 : a?.id > b?.id ? 1 : 0;\n        } else {\n          return !isChecked?.[a?.id] > !isChecked?.[b?.id] ? 1 : -1;\n        }\n      },\n    );\n\n  return (\n    <Box>\n      <Table size=\"small\">\n        <PermissionHeadRow/>\n\n        <TableBody>\n          {filteredPermissions?.map((perm) => (\n            <PermissionRow\n              key={perm?.id}\n              perm={perm}\n              handleSingleCheck={handleSingleCheck}\n              isSelected={!!isChecked?.[perm?.id]}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </Box>\n  );\n};\n\nexport default memo(PermissionsTable);","import React, {memo, useCallback} from \"react\";\nimport {makeStyles, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  textField: {\n    width: \"40ch\",\n  },\n}));\n\nconst ManagementTextField = ({onChange, onValueChange, ...props}) => {\n  const classes = useStyles();\n\n  const handleChange = useCallback(\n    (e) => {\n      onChange && onChange(e);\n      onValueChange && onValueChange(e.target.value);\n    },\n    [onChange, onValueChange]\n  );\n\n  return (\n    <TextField\n      required\n      color=\"secondary\"\n      variant=\"outlined\"\n      margin=\"dense\"\n      autoComplete=\"off\"\n      onChange={handleChange}\n      className={classes.textField}\n      {...props}\n    />\n  )\n}\n\nexport default memo(ManagementTextField);","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport ManagementTextField from \"./ManagementTextField\";\n\n\nconst AddRoleFrom = ({\n  isNewRoleNameError, newRoleName, handleRoleNameChange,\n  isNewRoleDescriptionError, newRoleDescription, handleRoleDescriptionChange,\n}) => {\n  return (\n    <>\n      <Box m={1}>\n        <ManagementTextField\n          id=\"new-role-name\"\n          label=\"Role Name\"\n          error={isNewRoleNameError}\n          value={newRoleName}\n          onValueChange={handleRoleNameChange}\n        />\n      </Box>\n      <Box m={1}>\n        <ManagementTextField\n          id=\"new-role-description\"\n          label=\"Role Description\"\n          multiline\n          minRows={2}\n          maxRows={4}\n          error={isNewRoleDescriptionError}\n          value={newRoleDescription}\n          onValueChange={handleRoleDescriptionChange}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default memo(AddRoleFrom);","import React, {memo} from \"react\";\nimport {Box, makeStyles, Toolbar, Typography} from \"@material-ui/core\";\nimport {DebounceInput} from \"react-debounce-input\";\nimport ManagementTextField from \"./ManagementTextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  usersTitleBox: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst PermissionFilterSearchBox = ({title, permissionQuery, setPermissionQuery}) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.usersTitleBox}>\n      <Toolbar>\n        <Box>\n          <Typography>{title}</Typography>\n        </Box>\n        <Box flexGrow={1} />\n        <Box>\n          <DebounceInput\n            id={`${title}-search-debounce`}\n            label={`Search ${title}`}\n            value={permissionQuery}\n            required={false}\n            debounceTimeout={500}\n            onChange={(e) => setPermissionQuery(e.target.value)}\n            element={ManagementTextField}\n          />\n        </Box>\n      </Toolbar>\n    </Box>\n  )\n}\n\nexport default memo(PermissionFilterSearchBox);","import React, {memo, useCallback, useContext, useEffect, useState} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {Box, Container, makeStyles} from \"@material-ui/core\";\nimport LoadingCircle from \"../../../../../components/circularProgress/LoadingCircle\";\nimport {UserManagementContext} from \"../../UserManagementContextProvider\";\nimport {CREATE_NEW_ROLE} from \"../../../../../operations/adminMutations/createNewRole\";\nimport {CREATE_LOG_ENTRY} from \"../../../../../operations/adminMutations/createLogEntry\";\nimport AddRoleTopMessage from \"./AddRoleTopMessage\";\nimport SubmitButtonBox from \"./SubmitBottonBox\";\nimport PermissionsTable from \"./PermissionsTable\";\nimport AddRoleFrom from \"./AddRoleForm\";\nimport PermissionFilterSearchBox from \"./PermissionFilterSearchBox\";\nimport MissedInputModal from \"../../../../../components/modals/MissedInputModal\";\n\nconst useStyles = makeStyles(() => ({\n  box: {overflow: \"auto\", height: \"55vh\"},\n}));\n\nconst AddRole = ({refetch, isRoleAdded}) => {\n  const classes = useStyles();\n  const {allPermissions, allRoles} = useContext(UserManagementContext);\n  const [newRoleName, setNewRoleName] = useState(\"\");\n  const [newRoleDescription, setNewRoleDescription] = useState(\"\");\n  const [isNewRoleNameError, setIsNewRoleNameError] = useState(false);\n  const [isDuplicateRoleNameError, setIsDuplicateRoleNameError] = useState(\n    false,\n  );\n  const [isBlankRoleNameError, setIsBlankRoleNameError] = useState(false);\n  const [isNewRoleDescriptionError, setIsNewRoleDescriptionError] = useState(\n    false,\n  );\n  const [isPermissionsError, setIsPermissionsError] = useState(false);\n  const [isChecked, setIsChecked] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [permissionQuery, setPermissionQuery] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    const initialIsChecked = allPermissions?.reduce((acc, d) => {\n      acc[d.id] = false;\n      return acc;\n    }, {});\n    setIsChecked(initialIsChecked);\n    setIsLoading(false);\n  }, []);\n\n  const [createNewRole] = useMutation(CREATE_NEW_ROLE, {\n    onCompleted: () => {\n      setIsLoading(false);\n      setNewRoleName(\"\");\n      setNewRoleDescription(\"\");\n      setIsChecked((current) => {\n        const nextIsChecked = {};\n        Object.keys(current).forEach((key) => {\n          nextIsChecked[key] = false;\n        });\n        return nextIsChecked;\n      });\n      refetch();\n    },\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"System Settings\",\n          logNotification: \"info\",\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  const handleSingleCheck = useCallback((e) => {\n    setIsChecked(currentIsChecked => ({...currentIsChecked, [e.target.value]: e.target.checked}));\n    setIsPermissionsError(false);\n  }, []);\n\n\n  const submitNewRole = (roleId, permissionKeys) => {\n    let array = permissionKeys?.map((perm) => ({permissionId: perm}));\n\n    createNewRole({\n      variables: {\n        input: {\n          id: roleId,\n          roleTitle: newRoleName,\n          roleDescription: newRoleDescription,\n          permissions: array,\n        },\n      },\n    });\n    createLog(\n      `User Management >> New Role Created; roleId: ${roleId}; roleName: ${newRoleName}; roleDescription: ${newRoleDescription}; rolePermissions: ${permissionKeys}`,\n    );\n  };\n\n  const openModal = useCallback(() => {\n    setIsLoading(false);\n    setOpen(true);\n  }, []);\n\n  const handleCheck = (array) => {\n    let isValid = true;\n    if (!newRoleName?.length) {\n      setIsNewRoleNameError(true);\n      setIsBlankRoleNameError(true);\n      isValid = false;\n    }\n    const match = allRoles?.some((role) => role?.roleTitle?.toLowerCase() === newRoleName?.toLowerCase());\n    if (match) {\n      setIsNewRoleNameError(true);\n      setIsDuplicateRoleNameError(true);\n      isValid = false;\n    }\n    if (!newRoleDescription?.length) {\n      setIsNewRoleDescriptionError(true);\n      isValid = false;\n    }\n    if (!array?.length) {\n      setIsPermissionsError(true);\n      isValid = false;\n    }\n    if (!isValid) {\n      openModal();\n    }\n    return isValid;\n  };\n\n  const onSubmit = () => {\n    setIsLoading(true);\n    const permissionKeys = Object.keys(isChecked)?.filter(key => isChecked?.[key]);\n\n    if (handleCheck(permissionKeys)) {\n      const reformatted = newRoleName?.replace(/\\s+/g, \"-\").toLowerCase();\n      submitNewRole(reformatted, permissionKeys);\n    }\n  };\n\n  const handleRoleNameChange = useCallback((value) => {\n    setNewRoleName(value);\n    setIsNewRoleNameError(false);\n    setIsBlankRoleNameError(false);\n  }, []);\n\n  const handleRoleDescriptionChange = useCallback((value) => {\n    setNewRoleDescription(value);\n    setIsNewRoleDescriptionError(false);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <Container>\n      <AddRoleTopMessage isComplete={isRoleAdded} />\n\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <Box pb={1}>\n          <Box className={classes.box}>\n            <AddRoleFrom\n              isNewRoleNameError={isNewRoleNameError}\n              newRoleName={newRoleName}\n              handleRoleNameChange={handleRoleNameChange}\n              isNewRoleDescriptionError={isNewRoleDescriptionError}\n              newRoleDescription={newRoleDescription}\n              handleRoleDescriptionChange={handleRoleDescriptionChange}\n            />\n            <PermissionFilterSearchBox\n              title=\"Permissions\"\n              permissionQuery={permissionQuery}\n              setPermissionQuery={setPermissionQuery}\n            />\n            <PermissionsTable\n              isChecked={isChecked}\n              allPermissions={allPermissions}\n              handleSingleCheck={handleSingleCheck}\n              permissionQuery={permissionQuery}\n            />\n          </Box>\n\n          <MissedInputModal\n            open={open}\n            handleClose={handleClose}\n            modalMsg={isBlankRoleNameError\n              ? \"New role name is required!\"\n              : isNewRoleDescriptionError\n                ? \"New role description is required!\"\n                : isPermissionsError\n                  ? \"Select at least 1 or more permission\"\n                  : isDuplicateRoleNameError\n                    ? \"This role name is taken. Please create a different one. \"\n                    : null}\n          />\n\n          <SubmitButtonBox onSubmit={onSubmit} />\n        </Box>\n      )}\n    </Container>\n  );\n};\n\nexport default memo(AddRole);","import React, {memo, useCallback, useContext, useEffect, useState} from \"react\";\nimport {NetworkStatus, useQuery} from \"@apollo/client\";\nimport {Box, Button, makeStyles, Toolbar} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {GET_PERMISSIONS} from \"../../../../operations/adminQueries/getPermissions\";\nimport {GET_ROLES} from \"../../../../operations/adminQueries/getRoles\";\nimport {UserManagementContext} from \"../UserManagementContextProvider\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport RolePermissionsTable from \"./RolePermissionsTable\";\nimport AddRole from \"./AddRole/AddRole\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {GET_ALL_OKTA_USERS} from \"../../../../operations/queries/getAllOktaUsers\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"800px\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n  tableBox: {overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3)},\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n  },\n  tableHeadCell: {\n    fontWeight: \"bold\",\n    fontSize: \"1.1rem\",\n  },\n}));\n\nconst RoleManagement = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    allRoles,\n    setAllRoles,\n    allPermissions,\n    setAllPermissions,\n    isAddRoleOpen,\n    setIsAddRoleOpen,\n    setAllPermissionUsers,\n  } = useContext(UserManagementContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n  const [alertMsg, setAlertMsg] = useState(\"\");\n  const [isRoleAdded, setIsRoleAdded] = useState(false);\n\n  const {loading, refetch, networkStatus} = useQuery(GET_ROLES, {\n    fetchPolicy: \"no-cache\",\n    notifyOnNetworkStatusChange: true,\n    onCompleted: (data) => setAllRoles(data.get_roles),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const refetchRoles = useCallback(() => {\n    setIsRoleAdded(true);\n    refetch();\n    setTimeout(() => {\n      setIsRoleAdded(false);\n    }, 7000);\n  }, [refetch]);\n\n  useQuery(GET_PERMISSIONS, {\n    onCompleted: (data) => setAllPermissions(data.get_permissions),\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (loading || networkStatus === NetworkStatus.refetch) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [loading, networkStatus, allRoles]);\n\n  useQuery(GET_ALL_OKTA_USERS, {\n    onCompleted: (data) => setAllPermissionUsers(data.get_all_okta_users),\n    onError: (error) => handleError(error)(history),\n  });\n\n  return (\n    <>\n      {isComplete && (\n        <Box className={classes.alert} my={1}>\n          <Alert severity=\"success\">{alertMsg}</Alert>\n        </Box>\n      )}\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <Box mt={3} minWidth={1050}>\n          <Toolbar>\n            <Box flexGrow={1} />\n            {isAddRoleOpen ? (\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                variant=\"outlined\"\n                onClick={() => {\n                  setIsAddRoleOpen(false);\n                }}\n              >\n                <ArrowBackIosIcon /> Back\n              </Button>\n            ) : (\n              <Box>\n                <Button\n                  size=\"small\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={() => setIsAddRoleOpen(true)}\n                >\n                  Add Role\n                </Button>\n              </Box>\n            )}\n          </Toolbar>\n          {isAddRoleOpen ? (\n            <AddRole refetch={refetchRoles} isRoleAdded={isRoleAdded}/>\n          ) : (\n            <>\n              {allRoles && allPermissions && (\n                <div>\n                  <RolePermissionsTable\n                    refetch={refetch}\n                    setIsComplete={setIsComplete}\n                    setAlertMsg={setAlertMsg}\n                  />\n                </div>\n              )}\n            </>\n          )}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default memo(RoleManagement);\n","import React, {memo, useContext} from \"react\";\nimport {Box, Button, Paper} from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport RoleManagement from \"./RoleManagement/RoleManagement\";\nimport {UserManagementContext} from \"./UserManagementContextProvider\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\n\nconst UserManagementPageContent = () => {\n  const { isAddEditOpen, setIsAddEditOpen } = useContext(UserManagementContext);\n  const { permSysMgmtManage } = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"User Management | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        {isAddEditOpen ? (\n          <>\n            <Button size=\"small\" onClick={() => setIsAddEditOpen(false)}>\n              USER MANAGEMENT\n            </Button>\n            <BreadcrumbText title={\"ADD ROLE\"}/>\n          </>\n        ) : (\n          <BreadcrumbText title={\"USER MANAGEMENT\"}/>\n        )}\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"User Management\"/>\n\n        {permSysMgmtManage ? (\n          <Box mt={3} minWidth={1050}>\n            <Paper elevation={3}>\n              <RoleManagement/>\n            </Paper>\n          </Box>\n        ) : (\n          <NoPermissionsError/>\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(UserManagementPageContent);\n","import React from \"react\";\nimport UserManagementContextProvider from \"./UserManagementContextProvider\";\nimport UserManagementPageContent from \"./UserManagementPageContent\";\n\nconst UserManagementPage = () => {\n  return (\n    <UserManagementContextProvider>\n      <UserManagementPageContent />\n    </UserManagementContextProvider>\n  );\n};\n\nexport default UserManagementPage;\n","import React, { memo } from \"react\";\nimport { makeStyles, Tabs } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    width: \"250px\",\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n}));\n\nconst CustomTabs = ({...props}) => {\n  const classes = useStyles();\n  return (\n    <Tabs\n      orientation=\"vertical\"\n      variant=\"scrollable\"\n      aria-label=\"Vertical tabs example\"\n      className={classes.tabs}\n      {...props}\n    />\n  );\n};\n\nexport default memo(CustomTabs);","import {gql} from \"@apollo/client\";\n\nexport const CREATE_LPSYNC_BADGE = gql`\n  mutation CreateLpsyncBadge($input: LpsyncBadgeInput, $file: Upload) {\n    createLpsyncBadge(input: $input, file: $file) {\n      id\n    }\n  }\n`;\n","import React, {memo, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, Button, makeStyles, Typography} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../components/taskManager/TaskHeadingToolbar\";\nimport CustomTextField from \"../../../../components/inputs/CustomTextField\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {CREATE_LPSYNC_BADGE} from \"../../../../operations/adminMutations/createLpsyncBadge\";\nimport {transformSpaceToDashAndLowerCase} from \"../../../../data/helper/helpers\";\nimport ChooseBadgeIcon from \"../../../../components/badges/ChooseBadgeIcon\";\nimport ColorBorderBox from \"../../../../components/blocks/ColorBorderBox\";\nimport AlertBox from \"../../../../components/AlertBox\";\nimport handleError from \"../../../../data/handleError\";\nimport {CHECK_IF_BADGE_NAME_EXISTS} from \"../../../../operations/adminQueries/checkIfBadgeNameExists\";\nimport {CHECK_IF_BADGE_ICON_EXISTS} from \"../../../../operations/adminQueries/checkIfBadgeIconExists\";\nimport BadgeIcon from \"../../../../components/badges/BadgeIcon\";\nimport ImageUpload from \"../../../../components/ImageUpload\";\nimport SaveAndClearButtons from \"../../../../components/buttons/SaveAndClearButtons\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\"},\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  textField: {\n    width: \"40ch\",\n  },\n}));\n\nconst AddBadgesDrawerContent = ({\n  badgeType,\n  badgeTypeTitle,\n  setIsDrawerOpen,\n  executeQuery,\n}) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [badgeImage, setBadgeImage] = useState(\"\");\n  const [addNameError, setAddNameError] = useState(false);\n  const [badgeName, setBadgeName] = useState(\"\");\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\n  const [badgeFile, setBadgeFile] = useState();\n  const [badgeIconName, setBadgeIconName] = useState(\"\");\n  const [isUploadImage, setIsUploadImage] = useState(false);\n  const [isButtonsDisabled, setIsButtonsDisabled] = useState(false);\n\n  const [executeBadgeNameSearch] = useLazyQuery(CHECK_IF_BADGE_NAME_EXISTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) =>\n      onCheckBadgeNameComplete(data?.check_if_badge_name_exists),\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeBadgeIconSearch] = useLazyQuery(CHECK_IF_BADGE_ICON_EXISTS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      onCheckBadgeIconComplete(data?.check_if_badge_icon_exists);\n    },\n\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createLpsyncBadge] = useMutation(CREATE_LPSYNC_BADGE, {\n    onCompleted: () => onCreateComplete(),\n  });\n\n  const onCreateComplete = () => {\n    handleClear();\n    setIsButtonsDisabled(false);\n    handleAlert(\"Badge saved!\", true, \"success\");\n    executeQuery();\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      setIsAlertOpen(false);\n    }, 5000);\n  };\n\n  const handleAlert = (msg, open, severity) => {\n    setAlertSeverity(severity);\n    setAlertMessage(msg);\n    setIsAlertOpen(open);\n  };\n\n  const runBadgeNameSearch = () => {\n    executeBadgeNameSearch({\n      variables: {badgeName: badgeName, type: badgeType},\n    });\n  };\n\n  const onCheckBadgeIconComplete = (data) => {\n    if (data) {\n      handleAlert(\"Badge Icon already exists\", true, \"warning\");\n    } else {\n      runBadgeNameSearch();\n    }\n  };\n\n  const onCheckBadgeNameComplete = async (data) => {\n    if (data) {\n      handleAlert(\"Badge Name already exists\", true, \"warning\");\n    } else {\n      await saveBadge();\n    }\n  };\n\n  const handleOnClose = () => {\n    executeQuery();\n    setIsAlertOpen(false);\n    setIsDrawerOpen(false);\n  };\n\n  const handleChange = (name) => {\n    setBadgeName(name);\n    setAddNameError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleClear = (clearAlert) => {\n    setBadgeName(\"\");\n    setBadgeImage(\"\");\n    setBadgeFile();\n    setAddNameError(false);\n\n    if (clearAlert) {\n      setIsAlertOpen(false);\n    }\n  };\n\n  const handleUploadBtnClick = (bool) => {\n    setIsUploadImage(bool);\n    setBadgeImage(\"\");\n    setBadgeIconName(\"\");\n  };\n\n  const saveBadge = async () => {\n    setIsButtonsDisabled(true);\n    await createLpsyncBadge({\n      variables: {\n        input: {\n          badgeType: badgeType,\n          badgeIconName: badgeIconName,\n          badgeName: badgeName,\n        },\n        file: badgeFile,\n      },\n    });\n  };\n\n  const checkBadge = async () => {\n    if (!badgeName) {\n      setAddNameError(true);\n      handleAlert(\"Badge Name is missing\", true, \"warning\");\n    } else if (!badgeImage) {\n      handleAlert(\"Badge Icon is not selected\", true, \"warning\");\n    } else if (isUploadImage && badgeName) {\n      const iconName = await transformSpaceToDashAndLowerCase(badgeName);\n      setBadgeIconName(iconName);\n      await executeBadgeIconSearch({\n        variables: {iconName: iconName},\n      });\n    } else {\n      runBadgeNameSearch();\n    }\n  };\n\n  return (\n    <>\n      <TaskCloseButtonToolbar handleClose={() => handleOnClose()} />\n      <Box>\n        <TaskHeadingToolbar title={`Add a New ${badgeTypeTitle} Badge`} />\n      </Box>\n      {isAlertOpen && (\n        <AlertBox severity={alertSeverity} message={alertMessage} />\n      )}\n      <Box m={1} className={classes.box}>\n        <Box m={1}>\n          {isUploadImage ? (\n            <>\n              <Typography>\n                Upload an icon below. Don't have one? Choose one instead:{\" \"}\n                <span>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    onClick={() => handleUploadBtnClick(false)}\n                  >\n                    Choose Icon\n                  </Button>\n                </span>\n              </Typography>\n            </>\n          ) : (\n            <Typography>\n              Choose an icon below. Can't find the one? Upload one instead:{\" \"}\n              <span>\n                <Button\n                  variant=\"contained\"\n                  size=\"small\"\n                  onClick={() => handleUploadBtnClick(true)}\n                >\n                  Upload Icon\n                </Button>\n              </span>\n            </Typography>\n          )}\n        </Box>\n        <Box m={1}>\n          {isUploadImage ? (\n            <ColorBorderBox>\n              <Box p={2}>\n                <ImageUpload\n                  handleAlert={handleAlert}\n                  setIsAlertOpen={setIsAlertOpen}\n                  setBaseImage={setBadgeImage}\n                  setImageFile={setBadgeFile}\n                  sizeLimit={5}\n                />\n              </Box>\n              <Box m={2}>\n                <Typography>Preview image:</Typography>\n                {badgeImage?.length > 0 && <BadgeIcon image={badgeImage} />}\n              </Box>\n            </ColorBorderBox>\n          ) : (\n            <Box mt={2}>\n              <ChooseBadgeIcon\n                badgeIconName={badgeIconName}\n                setBadgeIconName={setBadgeIconName}\n                setBadgeImage={setBadgeImage}\n                badgeImage={badgeImage}\n              />\n            </Box>\n          )}\n        </Box>\n\n        <Box m={1} mt={2}>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              required\n              id=\"badge-name-input\"\n              label=\"Badge Name\"\n              error={addNameError}\n              value={badgeName}\n              onValueChange={handleChange}\n            />\n          </form>\n        </Box>\n        <SaveAndClearButtons\n          isButtonsDisabled={isButtonsDisabled}\n          handleClear={() => handleClear(true)}\n          handleSave={() => checkBadge()}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default memo(AddBadgesDrawerContent);\n","import {gql} from \"@apollo/client\";\n\nexport const DELETE_LPSYNC_BADGE = gql`\n  mutation DeleteLpsyncBadge($id: Int!) {\n    deleteLpsyncBadge(id: $id) {\n      id\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Box,\n  makeStyles,\n  TableCell,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Button,\n} from \"@material-ui/core\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport {useMutation, useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport {GET_LPSYNC_BADGES} from \"../../../../operations/adminQueries/getLpsyncBadges\";\nimport BadgeIcon from \"../../../../components/badges/BadgeIcon\";\nimport DisableBackdropDrawer from \"../../../../components/drawers/DisableBackdropDrawer\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddBadgesDrawerContent from \"./AddBadgesDrawerContent\";\nimport DeleteButton from \"../../../../components/buttons/DeleteButton\";\nimport {DELETE_LPSYNC_BADGE} from \"../../../../operations/adminMutations/deleteLpsyncBadge\";\nimport BoxTableWrapper from \"../../../../components/table/BoxTableWrapper\";\nimport SearchInput from \"../../../../components/SearchInput\";\nimport {\n  handlePageChange,\n  handleQueryFilter,\n  handleSearchQuery,\n} from \"../../../../data/helper/filterHelpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"1000px\",\n  },\n  chip: {\n    fontSize: \".75rem\",\n    margin: \".25rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  tableBox: {overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3)},\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst headCells = [\"Badge Icon\", \"Badge Name\", \"Users\", \"Delete\"];\n\nconst ManageBadgesTable = ({badgeTypeTitle, badgeType}) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [badgeData, setBadgeData] = useState([]);\n  const [dataCountStatus, setDataCountStatus] = useState(true);\n  const [filters, setFilters] = useState({\n    type: badgeType,\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_LPSYNC_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (result) => {\n      handleResult(result?.get_lpsync_badges);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [deleteLpsyncBadge, {loading: isDeleteLoading}] = useMutation(\n    DELETE_LPSYNC_BADGE,\n    {\n      onCompleted: () => executeQuery(),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const handleResult = (result) => {\n    handleQueryFilter(badgeData, setBadgeData, result, filters, setIsLoading);\n\n    if (result?.length >= filters?.itemsPerPage) {\n      setDataCountStatus(true);\n    } else {\n      setDataCountStatus(false);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsLoading(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    if (isDeleteLoading) {\n      setIsLoading(true);\n    }\n\n    executeQuery();\n  }, [isDeleteLoading, filters]);\n\n  const handleOnSearch = (query) => {\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsLoading\n    );\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsDrawerOpen(open);\n  };\n\n  const deleteBadge = async (badgeID) => {\n    await deleteLpsyncBadge({\n      variables: {\n        id: badgeID,\n      },\n    });\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar>\n        <div>\n          <TopTypography>{badgeTypeTitle}</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => setIsDrawerOpen(true)}\n        >\n          <AddIcon className={classes.icon} /> Add New Badge\n        </Button>\n      </Toolbar>\n      <Box mt={1}>\n        <SearchInput\n          onSearch={handleOnSearch}\n          searchQuery={filters.query}\n          label={`Search All ${badgeTypeTitle} Badges`}\n        />\n      </Box>\n      <div>\n        <BoxTableWrapper\n          id={\"manage-badges-table\"}\n          loading={isLoading}\n          dataLength={badgeData?.length}\n          hasMore={dataCountStatus}\n          next={() =>\n            handlePageChange &&\n            handlePageChange(\n              filters.pageCount + 1,\n              filters,\n              setFilters,\n              isLoading\n            )\n          }\n        >\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {headCells.map((cell) => (\n                  <TableCell key={cell}>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {badgeData?.map((badge) => (\n                <React.Fragment key={badge?.id}>\n                  <StyledTableRow id={badge?.id} key={badge?.id}>\n                    <TableCell>\n                      <BadgeIcon image={badge?.badgeIcon?.badgeIconImg} />\n                    </TableCell>\n                    <TableCell>{badge?.badgeName}</TableCell>\n                    <TableCell>{badge?.users?.length}</TableCell>\n                    <TableCell>\n                      {badge?.users?.length === 0 && (\n                        <DeleteButton onClick={() => deleteBadge(badge?.id)} />\n                      )}\n                    </TableCell>\n                  </StyledTableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </BoxTableWrapper>\n      </div>\n      <DisableBackdropDrawer open={isDrawerOpen} onClose={toggleDrawer(false)}>\n        <AddBadgesDrawerContent\n          data={badgeData}\n          badgeType={badgeType}\n          badgeTypeTitle={badgeTypeTitle}\n          setIsDrawerOpen={setIsDrawerOpen}\n          executeQuery={executeQuery}\n        />\n      </DisableBackdropDrawer>\n    </Box>\n  );\n};\n\nexport default memo(ManageBadgesTable);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_LPSYNC_BADGES} from \"../../../../operations/adminQueries/getLpsyncBadges\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  handlePageChange,\n  handleSearchQuery,\n} from \"../../../../data/helper/filterHelpers\";\nimport BoxGridWrapper from \"../../../../components/grid/BoxGridWrapper\";\nimport SearchInput from \"../../../../components/SearchInput\";\nimport {Box, Button, Typography} from \"@material-ui/core\";\nimport BadgeIconGridItem from \"../../../../components/grid/BadgeIconGridItem\";\n\nconst SelectBadgesBox = ({handleAlert, selectedBadges, setSelectedBadges}) => {\n  let history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isBackBtnDisabled, setIsBackBtnDisabled] = useState(false);\n  const [isNextBtnDisabled, setIsNextBtnDisabled] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [badgeData, setBadgeData] = useState([]);\n  const [filters, setFilters] = useState({\n    type: \"system-owner\",\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_LPSYNC_BADGES, {\n    onCompleted: (data) => handleResult(data?.get_lpsync_badges),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleResult = (result) => {\n    setBadgeData(result);\n    setIsLoading(false);\n\n    if (result?.length >= filters?.itemsPerPage) {\n      setIsNextBtnDisabled(false);\n    } else {\n      setIsNextBtnDisabled(true);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsLoading(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    if (filters.pageCount === 0) {\n      setIsBackBtnDisabled(true);\n    } else {\n      setIsBackBtnDisabled(false);\n    }\n\n    executeQuery();\n  }, [filters]);\n\n  const handleOnSearch = (query) => {\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsLoading\n    );\n  };\n\n  const handleBackBtn = () => {\n    const pageCount = filters.pageCount - 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const handleNextBtn = () => {\n    const pageCount = filters.pageCount + 1;\n    handlePageChange(pageCount, filters, setFilters, isLoading);\n  };\n\n  const handleAddBadge = (selected) => {\n    const isBadgeSelected = selectedBadges?.some(\n      (bge) => bge?.id === selected?.id\n    );\n\n    if (isBadgeSelected) {\n      handleAlert(\"Badge is already selected\", true, \"warning\");\n    } else {\n      setSelectedBadges([...selectedBadges, selected]);\n    }\n  };\n\n  return (\n    <Box mt={2}>\n      <Typography>\n        <strong>Select Badges:</strong>\n      </Typography>\n\n      <Box ml={2}>\n        <SearchInput\n          onSearch={handleOnSearch}\n          searchQuery={filters.query}\n          label={\"Search All System Owner Badges\"}\n        />\n      </Box>\n      <Box m={2}>\n        <BoxGridWrapper loading={isLoading} dataLength={badgeData?.length}>\n          {badgeData?.map((badge) => (\n            <BadgeIconGridItem\n              key={badge?.id}\n              image={badge?.badgeIcon?.badgeIconImg}\n              name={badge?.badgeName}\n              onClick={() => handleAddBadge(badge)} />\n          ))}\n        </BoxGridWrapper>\n        <Box mt={1}>\n          <Button\n            size={\"small\"}\n            variant={\"outlined\"}\n            disabled={isBackBtnDisabled}\n            onClick={handleBackBtn}\n          >\n            back\n          </Button>{\" \"}\n          <Button\n            size={\"small\"}\n            variant={\"outlined\"}\n            disabled={isNextBtnDisabled}\n            onClick={handleNextBtn}\n          >\n            next\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(SelectBadgesBox);\n","import React, { memo } from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ColorBorderBox from \"../blocks/ColorBorderBox\";\nimport BadgeChip from \"./BadgeChip\";\n\nconst SelectedBadgeChipsBox = ({badges, handleDelete}) => {\n  return (\n    <Box mt={2}>\n      <Typography>\n        <strong>Selected Badges:</strong>\n      </Typography>\n\n      <ColorBorderBox height={200} width={\"95%\"}>\n        {badges?.map((bge) => (\n          <BadgeChip\n            key={bge.badge?.id}\n            id={bge?.id}\n            label={bge?.badgeName}\n            image={bge?.badgeIcon?.badgeIconImg}\n            onDelete={() => handleDelete(bge)}\n          />\n        ))}\n      </ColorBorderBox>\n    </Box>\n  );\n};\n\nexport default memo(SelectedBadgeChipsBox);\n","import {gql} from \"@apollo/client\";\n\nexport const CREATE_BADGE_RULE = gql`\n  mutation CreateBadgeRule($input: BadgeRuleInput) {\n    createBadgeRule(input: $input) {\n      ruleName\n      criteriaFieldValue\n      criteriaFilter\n      criteriaInputValue\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_BADGE_RULE = gql`\n  mutation UpdateBadgeRule($input: BadgeRuleInput) {\n    updateBadgeRule(input: $input) {\n      ruleName\n      criteriaFieldValue\n      criteriaFilter\n      criteriaInputValue\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport TaskCloseButtonToolbar from \"../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport TaskHeadingToolbar from \"../../../../components/taskManager/TaskHeadingToolbar\";\nimport CustomTextField from \"../../../../components/inputs/CustomTextField\";\nimport AlertBox from \"../../../../components/AlertBox\";\nimport CustomFormSelect from \"../../../../components/inputs/CustomFormSelect\";\nimport SelectBadgesBox from \"./SelectBadgesBox\";\nimport SelectedBadgeChipsBox from \"../../../../components/badges/SelectedBadgeChipsBox\";\nimport SaveAndClearButtons from \"../../../../components/buttons/SaveAndClearButtons\";\nimport {getValidationMessage} from \"../../../../data/helper/helpers\";\nimport {isEmpty} from \"../../../../data/helper/validation\";\nimport {CREATE_BADGE_RULE} from \"../../../../operations/adminMutations/createBadgeRule\";\nimport {useMutation} from \"@apollo/client\";\nimport {useHistory} from \"react-router-dom\";\nimport handleError from \"../../../../data/handleError\";\nimport {UPDATE_BADGE_RULE} from \"../../../../operations/adminMutations/UpdateBadgeRule\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\"},\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  textField: {\n    width: \"40ch\",\n  },\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  criteriaBox: {\n    display: \"flex\",\n  },\n}));\n\nconst AddEditDrawerContent = ({\n  executeQuery,\n  setIsDrawerOpen,\n  isEditRule,\n  editRule,\n  ruleBadges,\n  setIsEditRule,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n  const [isButtonsDisabled, setIsButtonsDisabled] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"\");\n  const [ruleName, setRuleName] = useState(\"\");\n  const [ruleNameError, setRuleNameError] = useState(false);\n  const [criteriaFieldValue, setCriteriaFieldValue] = useState(\"\");\n  const [criteriaFieldValueError, setCriteriaFieldValueError] = useState(false);\n  const [criteriaFilter, setCriteriaFilter] = useState(\"\");\n  const [criteriaFilterError, setCriteriaFilterError] = useState(false);\n  const [criteriaInputValue, setCriteriaInputValue] = useState(\"\");\n  const [criteriaInputValueError, setCriteriaInputValueError] = useState(false);\n  const [selectedBadges, setSelectedBadges] = useState([]);\n  const [deletedBadges, setDeletedBadges] = useState([]);\n  const criteriaFieldValueOptions = [\"Job Title\"];\n  const criteriaFilterOptions = [\"contains\", \"is\"];\n\n  useEffect(() => {\n    if (isEditRule) {\n      setRuleName(editRule?.ruleName);\n      setCriteriaFieldValue(editRule?.criteriaFieldValue);\n      setCriteriaFilter(editRule?.criteriaFilter);\n      setCriteriaInputValue(editRule?.criteriaInputValue);\n      setSelectedBadges([...ruleBadges]);\n    }\n  }, [isEditRule, editRule, ruleBadges]);\n\n  const [createBadgeRule] = useMutation(CREATE_BADGE_RULE, {\n    onCompleted: () => {\n      handleOnClose();\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [updateBadgeRule] = useMutation(UPDATE_BADGE_RULE, {\n    onCompleted: () => {\n      handleOnClose();\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const createRule = async (idList) => {\n    setIsButtonsDisabled(true);\n    await createBadgeRule({\n      variables: {\n        input: {\n          ruleName: ruleName,\n          criteriaFieldValue: criteriaFieldValue,\n          criteriaFilter: criteriaFilter,\n          criteriaInputValue: criteriaInputValue,\n          badges: idList,\n        },\n      },\n    });\n  };\n\n  const updateRule = async (idList) => {\n    setIsButtonsDisabled(true);\n    await updateBadgeRule({\n      variables: {\n        input: {\n          id: editRule?.id,\n          ruleName: ruleName,\n          criteriaFieldValue: criteriaFieldValue,\n          criteriaFilter: criteriaFilter,\n          criteriaInputValue: criteriaInputValue,\n          badges: idList,\n          deleteBadges: deletedBadges,\n        },\n      },\n    });\n  };\n\n  const handleAlert = (msg, open, severity) => {\n    setAlertSeverity(severity);\n    setAlertMessage(msg);\n    setIsAlertOpen(open);\n  };\n\n  const handleOnClose = () => {\n    if (isEditRule) {\n      setIsEditRule(false);\n    }\n    setIsButtonsDisabled(false);\n    setIsDrawerOpen(false);\n    handleClear();\n    executeQuery();\n  };\n\n  const handleRuleNameChange = (name) => {\n    setRuleName(name);\n    setRuleNameError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleFieldValueChange = (field) => {\n    setCriteriaFieldValue(field);\n    setCriteriaFieldValueError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleFilterChange = (filter) => {\n    setCriteriaFilter(filter);\n    setCriteriaFilterError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleInputValueChange = (input) => {\n    setCriteriaInputValue(input);\n    setCriteriaInputValueError(false);\n    setIsAlertOpen(false);\n  };\n\n  const handleDelete = (chip) => {\n    setSelectedBadges((selectedBadges) =>\n      selectedBadges.filter((bge) => bge?.id !== chip?.id)\n    );\n    if (isEditRule) {\n      setDeletedBadges([...deletedBadges, chip?.id]);\n    }\n  };\n\n  const handleClear = () => {\n    setRuleName(\"\");\n    setCriteriaFieldValue(\"\");\n    setCriteriaFilter(\"\");\n    setCriteriaInputValue(\"\");\n    setSelectedBadges([]);\n\n    if (isEditRule) {\n      setDeletedBadges([]);\n    }\n    setIsAlertOpen(false);\n  };\n\n  const handleSave = async () => {\n    const errorMessage =\n      getValidationMessage(\n        ruleName,\n        [isEmpty],\n        \"Rule Name\",\n        setRuleNameError\n      ) ||\n      getValidationMessage(\n        criteriaFieldValue,\n        [isEmpty],\n        \"Field\",\n        setCriteriaFieldValueError\n      ) ||\n      getValidationMessage(\n        criteriaFilter,\n        [isEmpty],\n        \"Filter\",\n        setCriteriaFilterError\n      ) ||\n      getValidationMessage(\n        criteriaInputValue,\n        [isEmpty],\n        \"Input\",\n        setCriteriaInputValueError\n      );\n\n    if (errorMessage) {\n      handleAlert(errorMessage, true, \"warning\");\n    } else {\n      let idList = [];\n\n      if (isEditRule) {\n        selectedBadges\n          .filter(\n            (selected) => !ruleBadges.some((saved) => selected.id === saved.id)\n          )\n          .map((bge) => {\n            idList.push(bge.id);\n          });\n\n        await updateRule(idList);\n      } else {\n        selectedBadges.map((bge) => {\n          idList.push(bge.id);\n        });\n        await createRule(idList);\n      }\n    }\n  };\n\n  return (\n    <>\n      <TaskCloseButtonToolbar handleClose={handleOnClose} />\n      <Box>\n        <TaskHeadingToolbar\n          title={isEditRule ? \"Edit Rule\" : \"Add a New Rule\"}\n        />\n      </Box>\n      {isAlertOpen && (\n        <AlertBox severity={alertSeverity} message={alertMessage} />\n      )}\n      <Box m={1} className={classes.box}>\n        <Box mt={2}>\n          <Typography>\n            <strong>Enter Rule Name:</strong>\n          </Typography>\n        </Box>\n        <Box ml={2}>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              required\n              id=\"rule-name-input\"\n              label=\"Rule Name\"\n              error={ruleNameError}\n              value={ruleName}\n              onValueChange={handleRuleNameChange}\n            />\n          </form>\n        </Box>\n        <Box mt={2}>\n          <Typography>\n            <strong>Enter Rule:</strong>\n          </Typography>\n        </Box>\n        <Box ml={2} className={classes.criteriaBox}>\n          <Box mr={1}>\n            <CustomFormSelect\n              label={\"Field\"}\n              value={criteriaFieldValue}\n              options={criteriaFieldValueOptions}\n              error={criteriaFieldValueError}\n              onValueChange={handleFieldValueChange}\n              width={\"20ch\"}\n            />\n          </Box>\n          <Box mr={1}>\n            <CustomFormSelect\n              label={\"Filter\"}\n              value={criteriaFilter}\n              options={criteriaFilterOptions}\n              error={criteriaFilterError}\n              onValueChange={handleFilterChange}\n              width={\"12ch\"}\n            />\n          </Box>\n          <form noValidate autoComplete=\"off\">\n            <CustomTextField\n              required\n              small\n              id=\"input-value-input\"\n              label=\"Input\"\n              error={criteriaInputValueError}\n              value={criteriaInputValue}\n              onValueChange={handleInputValueChange}\n            />\n          </form>\n        </Box>\n\n        <SelectBadgesBox\n          handleAlert={handleAlert}\n          selectedBadges={selectedBadges}\n          setSelectedBadges={setSelectedBadges}\n        />\n        {selectedBadges?.length > 0 && (\n          <>\n            <SelectedBadgeChipsBox\n              badges={selectedBadges}\n              handleDelete={handleDelete}\n            />\n            <SaveAndClearButtons\n              isButtonsDisabled={isButtonsDisabled}\n              handleClear={handleClear}\n              handleSave={handleSave}\n            />\n          </>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default memo(AddEditDrawerContent);\n","import {gql} from \"@apollo/client\";\n\nexport const GET_BADGE_RULES = gql`\n  query GetBadgeRules($filters: BasicFiltersInput) {\n    get_badge_rules(filters: $filters) {\n      id\n      ruleName\n      criteriaFieldValue\n      criteriaFilter\n      criteriaInputValue\n      badges {\n        badge {\n          id\n          badgeIconId\n          badgeType\n          badgeName\n          badgeIcon {\n            badgeIconImg\n          }\n        }\n      }\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const DELETE_BADGE_RULE = gql`\n  mutation DeleteBadgeRule($id: Int!) {\n    deleteBadgeRule(id: $id) {\n      id\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Button, makeStyles} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    fontSize: \".7rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n}));\n\nconst DeleteButton = ({...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Button variant=\"outlined\" size=\"small\" className={classes.btn} {...props}>\n      <EditIcon className={classes.icon} />\n      Edit\n    </Button>\n  );\n};\n\nexport default memo(DeleteButton);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Box,\n  makeStyles,\n  TableCell,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport {useMutation, useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport DisableBackdropDrawer from \"../../../../components/drawers/DisableBackdropDrawer\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteButton from \"../../../../components/buttons/DeleteButton\";\nimport AddEditDrawerContent from \"./AddEditDrawerContent\";\nimport {GET_BADGE_RULES} from \"../../../../operations/adminQueries/getBadgeRules\";\nimport {\n  handlePageChange,\n  handleQueryFilter,\n  handleSearchQuery,\n} from \"../../../../data/helper/filterHelpers\";\nimport SearchInput from \"../../../../components/SearchInput\";\nimport BoxTableWrapper from \"../../../../components/table/BoxTableWrapper\";\nimport {DELETE_BADGE_RULE} from \"../../../../operations/adminMutations/deleteBadgeRule\";\nimport EditButton from \"../../../../components/buttons/EditButton\";\nimport BadgeChip from \"../../../../components/badges/BadgeChip\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"1000px\",\n  },\n  chip: {\n    fontSize: \".75rem\",\n    margin: \".25rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  tableBox: {overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3)},\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst headCells = [\"Rule Name\", \"Rule Criteria\", \"Edit\", \"Delete\"];\n\nconst BadgesAutomationTable = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [currentQuery, setCurrentQuery] = useState(\"\");\n  const [badgeRuleData, setBadgeRuleData] = useState([]);\n  const [dataCountStatus, setDataCountStatus] = useState(true);\n  const [isEditRule, setIsEditRule] = useState(false);\n  const [editRule, setEditRule] = useState();\n  const [ruleBadges, setRuleBadges] = useState([]);\n  const [filters, setFilters] = useState({\n    pageCount: 0,\n    itemsPerPage: 25,\n    query: \"\",\n  });\n\n  const [executeSearch] = useLazyQuery(GET_BADGE_RULES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (result) => {\n      handleResult(result?.get_badge_rules);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [deleteBadgeRule, {loading: isDeleteLoading}] = useMutation(\n    DELETE_BADGE_RULE,\n    {\n      onCompleted: () => executeQuery(),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const handleResult = (result) => {\n    handleQueryFilter(\n      badgeRuleData,\n      setBadgeRuleData,\n      result,\n      filters,\n      setIsLoading\n    );\n\n    if (result?.length >= filters?.itemsPerPage) {\n      setDataCountStatus(true);\n    } else {\n      setDataCountStatus(false);\n    }\n  };\n\n  const executeQuery = () => {\n    setIsLoading(true);\n    executeSearch({\n      variables: {filters: filters},\n    });\n  };\n\n  useEffect(() => {\n    if (isDeleteLoading) {\n      setIsLoading(true);\n    }\n\n    executeQuery();\n  }, [filters, isDeleteLoading]);\n\n  const handleOnSearch = (query) => {\n    handleSearchQuery(\n      query,\n      currentQuery,\n      setCurrentQuery,\n      filters,\n      setFilters,\n      setIsLoading\n    );\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsDrawerOpen(open);\n  };\n\n  const handleDeleteRule = async (id) => {\n    await deleteBadgeRule({\n      variables: {\n        id: id,\n      },\n    });\n  };\n\n  const handleEditRule = (rule) => {\n    const badges = rule?.badges?.map((bge) => bge?.badge);\n\n    setRuleBadges(badges);\n    setIsEditRule(true);\n    setEditRule(rule);\n\n    setIsDrawerOpen(true);\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar>\n        <div>\n          <TopTypography>Badges Automation</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => setIsDrawerOpen(true)}\n        >\n          <AddIcon className={classes.icon} /> Add New Rule\n        </Button>\n      </Toolbar>\n      <Box mt={1}>\n        <SearchInput\n          onSearch={handleOnSearch}\n          searchQuery={filters.query}\n          label={\"Search\"}\n          helperText={\"Search for rule name or rule criteria input\"}\n        />\n      </Box>\n      <div>\n        <BoxTableWrapper\n          id={\"manage-badges-table\"}\n          loading={isLoading}\n          dataLength={badgeRuleData?.length}\n          hasMore={dataCountStatus}\n          next={() =>\n            handlePageChange &&\n            handlePageChange(\n              filters.pageCount + 1,\n              filters,\n              setFilters,\n              isLoading\n            )\n          }\n        >\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {headCells.map((cell) => (\n                  <TableCell>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {badgeRuleData?.map((rule) => (\n                <React.Fragment key={rule?.id}>\n                  <StyledTableRow id={rule?.id} key={rule?.id}>\n                    <TableCell>{rule?.ruleName}</TableCell>\n                    <TableCell>\n                      <Box>\n                        <Typography variant={\"body2\"}>\n                          If{\" \"}\n                          <strong>\n                            {rule?.criteriaFieldValue} {rule?.criteriaFilter}{\" \"}\n                            {rule?.criteriaInputValue}\n                          </strong>{\" \"}\n                          then assign these badges:\n                        </Typography>\n                        {rule?.badges.map((bge) => (\n                          <BadgeChip\n                            id={bge?.badge?.id}\n                            label={bge?.badge?.badgeName}\n                            image={bge?.badge?.badgeIcon?.badgeIconImg}\n                          />\n                        ))}\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <EditButton onClick={() => handleEditRule(rule)} />\n                    </TableCell>\n                    <TableCell>\n                      <DeleteButton\n                        onClick={() => handleDeleteRule(rule?.id)}\n                      />\n                    </TableCell>\n                  </StyledTableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </BoxTableWrapper>\n      </div>\n      <DisableBackdropDrawer open={isDrawerOpen} onClose={toggleDrawer(false)}>\n        <AddEditDrawerContent\n          executeQuery={executeQuery}\n          setIsDrawerOpen={setIsDrawerOpen}\n          setIsEditRule={setIsEditRule}\n          isEditRule={isEditRule}\n          editRule={editRule}\n          ruleBadges={ruleBadges}\n        />\n      </DisableBackdropDrawer>\n    </Box>\n  );\n};\n\nexport default memo(BadgesAutomationTable);\n","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_SPLASH_SCREEN_COMPLETED = gql`\n  mutation UpdateSplashScreenCompleted(\n    $id: String\n    $type: String\n    $bool: Boolean\n  ) {\n    updateSplashScreenCompleted(id: $id, type: $type, bool: $bool) {\n      id\n      firstName\n      lastName\n      userName\n      splashScreenCompleted\n    }\n  }\n`;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Toolbar,\n} from \"@material-ui/core\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport SearchInput from \"../../../../components/SearchInput\";\nimport BoxTableWrapper from \"../../../../components/table/BoxTableWrapper\";\nimport React, {useEffect, useState} from \"react\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport {SEARCH_USERS_FOR_SPLASH_SCREEN_SETTINGS} from \"../../../../operations/queries/searchUsersByBadgesQuery\";\nimport {UPDATE_SPLASH_SCREEN_COMPLETED} from \"../../../../operations/mutations/updateSplashScreenCompleted\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"1000px\",\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n  },\n  boxButtons: {\n    marginTop: 24,\n    marginBottom: 24,\n  },\n  boxButton: {\n    marginRight: 24,\n  },\n  chip: {\n    fontSize: \".75rem\",\n    margin: \".25rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  tableBox: {overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3)},\n  tableContainer: {\n    position: \"relative\",\n  },\n  loader: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: 3,\n    backgroundColor: \"rgba(255, 255,255,0.3)\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst headCells = [\"Name\", \"Username\", \"Splash Screen Status\", \"\"];\n\nconst SplashScreenSettings = () => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [oktaUsers, setOktaUsers] = useState(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const [getOktaUsers, {loading: loadingOktaUsers}] = useLazyQuery(\n    SEARCH_USERS_FOR_SPLASH_SCREEN_SETTINGS,\n    {\n      onCompleted: (data) =>\n        setOktaUsers(data.search_users_for_splash_screen_settings),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n  const [updateSplashScreen, {loading: updatingSplashScreen}] = useMutation(\n    UPDATE_SPLASH_SCREEN_COMPLETED,\n    {\n      // onCompleted: ({updateSplashScreenCompleted: users}) => {\n      //   setOktaUsers((prevUsers) =>\n      //     prevUsers.map((prevUser) => {\n      //       const newUser = users.find((u) => u.id === prevUser.id);\n      //       if (newUser) return newUser;\n      //       else return prevUser;\n      //     })\n      //   );\n      // },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    getOktaUsers({variables: {search: searchQuery}});\n  }, [searchQuery]);\n\n  const searchHandler = (query) => {\n    setSearchQuery(query);\n  };\n\n  const resetHandler = () => {\n    updateSplashScreen({\n      variables: {\n        type: \"all\",\n        bool: false,\n      },\n    });\n  };\n  const turnOffHandler = () => {\n    updateSplashScreen({\n      variables: {\n        type: \"all\",\n        bool: true,\n      },\n    });\n  };\n  const toggleHandler = (userId) => {\n    const user = oktaUsers.find((u) => u.id === userId);\n    const bool = !user?.splashScreenCompleted;\n    updateSplashScreen({\n      variables: {\n        id: userId,\n        type: \"single\",\n        bool,\n      },\n    });\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar className={classes.toolbar}>\n        <div>\n          <TopTypography>Splash Screen Settings for ALL Users</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n        <Box className={classes.boxButtons}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={resetHandler}\n            className={classes.boxButton}\n          >\n            Reset Splashscreen\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={turnOffHandler}\n            className={classes.boxButton}\n          >\n            Turn off Splashscreen\n          </Button>\n        </Box>\n        <div>\n          <TopTypography>Splash Screen Settings per User</TopTypography>\n        </div>\n      </Toolbar>\n      <Box mt={1}>\n        <SearchInput\n          onSearch={searchHandler}\n          searchQuery={searchQuery}\n          label={\"Search\"}\n          helperText={\"Search for name, username or splashscreen status\"}\n        />\n      </Box>\n      <div className={classes.tableContainer}>\n        {updatingSplashScreen && (\n          <div className={classes.loader}>\n            <CircularProgress color=\"secondary\" />\n          </div>\n        )}\n        <BoxTableWrapper\n          id={\"manage-splash-screen-settings-table\"}\n          loading={loadingOktaUsers}\n          dataLength={oktaUsers?.length}\n          hasMore={false}\n          minHeight=\"325px\"\n        >\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {headCells.map((cell, id) => (\n                  <TableCell key={id}>{cell}</TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {oktaUsers?.map((user) => (\n                <React.Fragment key={user?.id}>\n                  <StyledTableRow id={user?.id} key={user?.id}>\n                    <TableCell>{`${user.firstName} ${user.lastName}`}</TableCell>\n                    <TableCell>{user.userName}</TableCell>\n                    <TableCell>{user.splashScreenCompleted ? 1 : 0}</TableCell>\n                    <TableCell>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        onClick={() => toggleHandler(user.id)}\n                      >\n                        {!user.splashScreenCompleted ? \"Disable\" : \"Enable\"}\n                      </Button>\n                    </TableCell>\n                  </StyledTableRow>\n                </React.Fragment>\n              ))}\n            </TableBody>\n          </Table>\n        </BoxTableWrapper>\n      </div>\n    </Box>\n  );\n};\nexport default SplashScreenSettings;\n","import React, {memo, useContext, useState} from \"react\";\nimport {Box, makeStyles, Paper, Tab} from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport CustomTabPanel, {\n  a11yProps,\n} from \"../../../components/tabs/CustomTabPanel\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport CustomTabs from \"../../../components/tabs/CustomTabs\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport ManageBadgesTable from \"./ManageBadges/ManageBadgesTable\";\nimport BadgeTypes from \"../../../data/constants/BadgeTypes\";\nimport BadgesAutomationTable from \"./BadgesAutomation/BadgesAutomationTable\";\nimport SplashScreenSettings from \"./SplashScreenSettings/SplashScreenSettings\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabRoot: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"70vh\",\n  },\n  div: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst tabName = \"vertical\";\n\nconst UserBadgeManagementPage = () => {\n  const classes = useStyles();\n  const {permSysMgmtBadgeMgmt} = useContext(AuthUserContext);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Page title=\"User Badge Management | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        <BreadcrumbText title={\"USER BADGE MANAGEMENT\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"User Badge Management\" />\n\n        {permSysMgmtBadgeMgmt ? (\n          <Box mt={3} minWidth={1050}>\n            <Paper elevation={3}>\n              <div className={classes.tabRoot}>\n                <CustomTabs value={value} onChange={handleChange}>\n                  <Tab label=\"System Owner Badges\" {...a11yProps(tabName, 0)} />\n                  <Tab\n                    label=\"Hobbies/Interests Badges\"\n                    {...a11yProps(tabName, 1)}\n                  />\n                  <Tab\n                    label=\"Subject Matter Expert Badges\"\n                    {...a11yProps(tabName, 2)}\n                  />\n                  <Tab label=\"Badges Automation\" {...a11yProps(tabName, 2)} />\n                  <Tab label=\"Splash Screen\" {...a11yProps(tabName, 3)} />\n                </CustomTabs>\n\n                <CustomTabPanel value={value} index={0} name={tabName}>\n                  <div className={classes.div}>\n                    <ManageBadgesTable\n                      badgeTypeTitle={\"System Owner\"}\n                      badgeType={BadgeTypes.SYSTEM_OWNER}\n                    />\n                  </div>\n                </CustomTabPanel>\n                <CustomTabPanel value={value} index={1} name={tabName}>\n                  <div className={classes.div}>\n                    <ManageBadgesTable\n                      badgeTypeTitle={\"Hobbies/Interests\"}\n                      badgeType={BadgeTypes.HOBBIES_INTERESTS}\n                    />\n                  </div>\n                </CustomTabPanel>\n                <CustomTabPanel value={value} index={2} name={tabName}>\n                  <div className={classes.div}>\n                    <ManageBadgesTable\n                      badgeTypeTitle={\"Subject Matter Expert\"}\n                      badgeType={BadgeTypes.SUBJECT_MATTER_EXPERT}\n                    />\n                  </div>\n                </CustomTabPanel>\n                <CustomTabPanel value={value} index={3} name={tabName}>\n                  <div className={classes.div}>\n                    <BadgesAutomationTable />\n                  </div>\n                </CustomTabPanel>\n                <CustomTabPanel value={value} index={4} name={tabName}>\n                  <div className={classes.div}>\n                    <SplashScreenSettings />\n                  </div>\n                </CustomTabPanel>\n              </div>\n            </Paper>\n          </Box>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(UserBadgeManagementPage);\n","import { gql } from \"@apollo/client\";\n\nexport const UPDATE_HRTERMINATION_CODE = gql`\n  mutation UpdateHRTerminationCode($id: Int!, $terminationCode: String!) {\n    updateHRTerminationCode(id: $id, terminationCode: $terminationCode) {\n      id\n      terminationCode\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_HRTERMINATION_CODE = gql`\n  mutation DeleteHRTerminationCode($id: Int!) {\n    deleteHRTerminationCode(id: $id) {\n      id\n    }\n  }\n`;\n","import React, { memo, useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Box, Button, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { UPDATE_HRTERMINATION_CODE } from \"../../../../operations/mutations/updateHRTerminationCode\";\nimport { DELETE_HRTERMINATION_CODE } from \"../../../../operations/mutations/deleteHRTerminationCode\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\"\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  editBtn: { fontSize: \".75rem\" },\n  deleteBtn: { color: \"#ca2929\" },\n  cancelBtn: { marginRight: theme.spacing(1) },\n  textField: {\n    width: \"40ch\"\n  },\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst EditDeleteCodeModal = ({ id, terminationCode, setIsLoading, refetch }) => {\n  const classes = useStyles();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [code, setCode] = useState(terminationCode);\n  const [isError, setIsError] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const [updateHRTerminationCode, { updateLoading }] = useMutation(\n    UPDATE_HRTERMINATION_CODE, {\n      onCompleted: () => onComplete()\n    }\n  );\n  const [deleteHRTerminationCode, { deleteLoading }] = useMutation(\n    DELETE_HRTERMINATION_CODE\n  );\n\n  useEffect(() => {\n    if (updateLoading || deleteLoading) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [updateLoading, deleteLoading, setIsLoading]);\n\n  const onComplete = () => {\n    setIsComplete(true);\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      setIsComplete(false);\n    }, 5000);\n  };\n\n  const updateCode = (event) => {\n    event.preventDefault();\n    const intID = parseInt(id);\n\n    if (code?.length > 0) {\n      updateHRTerminationCode({\n        variables: {\n          id: intID,\n          terminationCode: code\n        }\n      });\n    } else {\n      setIsError(true);\n    }\n  };\n\n  const deleteCode = (event) => {\n    event.preventDefault();\n    const intID = parseInt(id);\n\n    deleteHRTerminationCode({\n      variables: {\n        id: intID\n      }\n    });\n    refetch();\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setCode(terminationCode);\n    setIsError(false);\n  };\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    refetch();\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        size=\"small\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={handleModalOpen}\n        className={classes.editBtn}\n      >\n        <EditIcon className={classes.icon}/> Edit/Delete\n      </Button>\n\n      <CustomModal\n        open={isModalOpen}\n        onClose={handleModalClose}\n        aria-labelledby=\"termination-codes\"\n        aria-describedby=\"termination-codes\"\n        width={500}\n      >\n        <Box>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleModalClose}>\n            <CloseIcon/> Close\n          </Button>\n        </Box>\n        <Box m={2}>\n          {isComplete && (\n            <Box className={classes.alert} my={1}>\n              <Alert severity=\"success\">Code updated</Alert>\n            </Box>\n          )}\n          <Box mb={2}>\n            <Typography component={\"div\"}>\n              Edit/Delete Termination Code: <strong>{terminationCode}</strong>\n            </Typography>\n          </Box>\n          <Box m={2}>\n            {\" \"}\n            <TextField\n              id=\"outlined-basic\"\n              label=\"code\"\n              color=\"secondary\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              autoComplete=\"off\"\n              error={isError}\n              value={code}\n              onChange={(e) => {\n                setCode(e.target.value);\n                setIsError(false);\n                setIsComplete(false);\n              }}\n              className={classes.textField}\n            />\n          </Box>\n          <Box m={2} className={classes.btnBox}>\n            <div>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.deleteBtn}\n                onClick={deleteCode}\n              >\n                Delete\n              </Button>\n            </div>\n            <div>\n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.cancelBtn}\n                onClick={() => handleCancel()}\n              >\n                Cancel\n              </Button>\n\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={updateCode}\n              >\n                Update\n              </Button>\n            </div>\n          </Box>\n        </Box>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default memo(EditDeleteCodeModal);\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_HRTERMINATION_CODE = gql`\n  mutation CreateHRTerminationCode($input: HRTerminationCodeInput) {\n    createHRTerminationCode(input: $input) {\n      terminationCode\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport {\n  Box,\n  Button,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { CREATE_HRTERMINATION_CODE } from \"../../../../operations/adminMutations/createHRTerminationCode\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  btnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  textField: {\n    width: \"40ch\",\n  },\n  alert: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst AddCodeModal = (props) => {\n  const classes = useStyles();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const [createHRTerminationCode] = useMutation(CREATE_HRTERMINATION_CODE, {\n    onCompleted: () => onComplete(),\n  });\n\n  const onComplete = () => {\n    setIsComplete(true);\n    resetComplete();\n  };\n\n  const resetComplete = () => {\n    setTimeout(() => {\n      setIsComplete(false);\n    }, 5000);\n  };\n\n  const saveCode = () => {\n    if (code.length > 0) {\n      createHRTerminationCode({\n        variables: {\n          input: {\n            terminationCode: code,\n          },\n        },\n      });\n      setCode(\"\");\n      props.refetch();\n    } else {\n      setIsError(true);\n    }\n  };\n\n  const handleClear = () => {\n    setCode(\"\");\n    setIsError(false);\n  };\n\n  const handleModalOpen = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    props.refetch();\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"small\"\n        onClick={handleModalOpen}\n      >\n        <AddIcon className={classes.icon} /> Add New Code\n      </Button>\n\n      <CustomModal\n        open={isModalOpen}\n        onClose={handleModalClose}\n        aria-labelledby=\"termination-codes\"\n        aria-describedby=\"termination-codes\"\n        width={500}\n      >\n        <Box>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleModalClose}>\n            <CloseIcon /> Close\n          </Button>\n        </Box>\n        <Box m={2}>\n          {isComplete && (\n            <Box className={classes.alert} my={1}>\n              <Alert severity=\"success\">New code added</Alert>\n            </Box>\n          )}\n          <Box mb={2}>\n            <Typography component={\"div\"}>\n              Add a New Termination Code\n            </Typography>\n          </Box>\n          <Box m={2}>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"code\"\n              color=\"secondary\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              autoComplete=\"off\"\n              error={isError}\n              value={code}\n              onChange={(e) => {\n                setCode(e.target.value);\n                setIsError(false);\n                setIsComplete(false);\n              }}\n              className={classes.textField}\n            />\n          </Box>\n          <Box m={2} className={classes.btnBox}>\n            <Button variant=\"outlined\" onClick={() => handleClear()}>\n              Clear\n            </Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => saveCode()}\n            >\n              Save\n            </Button>\n          </Box>\n        </Box>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default AddCodeModal;\n","import React, { memo, useEffect, useState } from \"react\";\nimport { NetworkStatus, useQuery } from \"@apollo/client\";\nimport {\n  Box,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  Toolbar,\n} from \"@material-ui/core\";\nimport { GET_HRTERMINATION_CODES } from \"../../../../operations/queries/getHRTerminationCodes\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport EditDeleteCodeModal from \"./EditDeleteCodeModal\";\nimport handleError from \"../../../../data/handleError\";\nimport { useHistory } from \"react-router-dom\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport AddCodeModal from \"./AddCodeModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  // box: {\n  //   width: \"50vw\",\n  // },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.15rem\",\n  },\n  tableBox: { overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3) },\n  title: {\n    fontSize: \"1.2rem\",\n    fontWeight: 600,\n  },\n}));\n\nconst HrTerminationCodes = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { data, refetch, loading, networkStatus } = useQuery(\n    GET_HRTERMINATION_CODES,\n    {\n      notifyOnNetworkStatusChange: true,\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    if (loading || networkStatus === NetworkStatus.refetch) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [loading, networkStatus]);\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar>\n        <div>\n          <TopTypography>HR Termination Codes</TopTypography>\n        </div>\n        <Box ml={5}>\n          <AddCodeModal refetch={refetch} />\n        </Box>\n      </Toolbar>\n\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          {data && (\n            <Box className={classes.tableBox}>\n              <Table size=\"small\">\n                <TableBody>\n                  {data.get_hrtermination_codes.map((code) => (\n                    <StyledTableRow id={code.id} key={code.id}>\n                      <TableCell>\n                        <div>{code.terminationCode}</div>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <EditDeleteCodeModal\n                          id={code.id}\n                          terminationCode={code.terminationCode}\n                          refetch={refetch}\n                          setIsLoading={setIsLoading}\n                        />\n                      </TableCell>\n                    </StyledTableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          )}\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default memo(HrTerminationCodes);\n","import React, {memo} from \"react\";\nimport {makeStyles, Paper, Tab} from \"@material-ui/core\";\nimport CustomTabPanel, {a11yProps} from \"./CustomTabPanel\";\nimport StyledTab from \"./StyledTab\";\nimport CustomTabs from \"./CustomTabs\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabRoot: {\n    flexGrow: 1,\n    display: \"flex\",\n    height: \"70vh\",\n  },\n  div: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst AdminTabsPaper = ({\n  value,\n  handleChange,\n  tabs,\n  tabName,\n  styled,\n}) => {\n  const classes = useStyles();\n  return (\n    <Paper elevation={3}>\n      <div className={classes.tabRoot}>\n        <CustomTabs value={value} onChange={handleChange}>\n          {tabs?.map(({label}, index) =>\n            styled ? (\n              <StyledTab\n                key={index}\n                label={label}\n                {...a11yProps(tabName, index)}\n              />\n            ) : (\n              <Tab key={index} label={label} {...a11yProps(tabName, index)} />\n            ),\n          )}\n        </CustomTabs>\n\n        {tabs?.map(({content}, index) => (\n          <CustomTabPanel\n            key={index}\n            index={index}\n            value={value}\n            name={tabName}\n          >\n            <Paper elevation={3}>\n              <div className={classes.div}>\n                {content}\n              </div>\n            </Paper>\n          </CustomTabPanel>\n        ))}\n      </div>\n    </Paper>\n  );\n};\n\nexport default memo(AdminTabsPaper);\n","import React, {memo, useContext, useMemo, useState} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport HrTerminationCodes from \"./HrTerminationCodes/HrTerminationCodes\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport AdminTabsPaper from \"../../../components/tabs/AdminTabsPaper\";\n\nconst tabName = \"vertical\";\n\nconst OffboardingSettingsPage = () => {\n  const { permSysMgmtSettingsOffboarding } = useContext(AuthUserContext);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const offboardingSettingsTabs = useMemo(() => [\n    {\n      label: \"HR Termination Codes\",\n      content: <HrTerminationCodes />,\n    },\n  ], []);\n\n  return (\n    <Page title=\"Offboarding Settings | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        <BreadcrumbText title={\"OFFBOARDING SETTINGS\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Offboarding Settings\" />\n\n        {permSysMgmtSettingsOffboarding ? (\n          <Box mt={3} minWidth={1050}>\n            <AdminTabsPaper\n              value={value}\n              handleChange={handleChange}\n              tabs={offboardingSettingsTabs}\n              tabName={tabName}\n            />\n          </Box>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(OffboardingSettingsPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_ONBOARDING_DELEGATES = gql`\n  query GetAllOnboardingDelegates {\n    get_all_onboarding_delegates {\n      id\n      userName\n      onboardingDelegates {\n        id\n        delegateCompany\n        delegateTo\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_ONBOARDING_DELEGATES = gql`\n  mutation CreateOnboardingDelegates(\n    $user: String!\n    $input: [OnboardingDelegateInput]\n  ) {\n    createOnboardingDelegates(user: $user, input: $input) {\n      id\n      userName\n      onboardingDelegates {\n        delegateCompany\n        delegateTo\n      }\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport CustomTextField from \"../../../../../components/inputs/CustomTextField\";\nimport SelectCircularProgress from \"../../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../../components/typographies/NoResultsTypography\";\nimport { SEARCH_CONCUR_VENDORS } from \"../../../../../operations/queries/searchConcurVendors\";\nimport handleError from \"../../../../../data/handleError\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SearchDelegateCompany = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { delegates, setDelegates, delegateUser } = props;\n  const [isVendorSearchLoading, setIsVendorSearchLoading] = useState(false);\n  const [searchVendorsQuery, setSearchVendorsQuery] = useState(\"\");\n  const [isVendorResultsOpen, setIsVendorResultsOpen] = useState(false);\n  const [vendorData, setVendorData] = useState();\n\n  const [executeVendorsSearch] = useLazyQuery(SEARCH_CONCUR_VENDORS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setVendorData(data.search_concur_vendors);\n      setIsVendorSearchLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchVendorsQuery?.length > 0) {\n      executeVendorsSearch({ variables: { search: searchVendorsQuery } });\n      setIsVendorResultsOpen(true);\n    } else {\n      setIsVendorResultsOpen(false);\n      setVendorData([]);\n      setIsVendorSearchLoading(false);\n    }\n  }, [searchVendorsQuery, executeVendorsSearch]);\n\n  const searchVendorOnChange = (query) => {\n    setIsVendorSearchLoading(true);\n    setSearchVendorsQuery(query);\n  };\n\n  const handleVendorClick = (company) => {\n    setDelegates([...delegates, { delegateCompany: company }]);\n    setIsVendorResultsOpen(false);\n    setSearchVendorsQuery(\"\");\n  };\n\n  return (\n    <div>\n      <Box m={2}>\n        <Box>\n          <Typography>Search for a Company to Add</Typography>\n          <CustomTextField\n            required\n            id=\"standard-basic\"\n            label=\"Search\"\n            variant=\"standard\"\n            size=\"small\"\n            autoComplete=\"off\"\n            value={searchVendorsQuery}\n            onValueChange={searchVendorOnChange}\n          />\n        </Box>\n        {searchVendorsQuery?.length > 0 && (\n          <Collapse in={isVendorResultsOpen} timeout=\"auto\" unmountOnExit>\n            <Box className={classes.resultsBox}>\n              <Paper>\n                {isVendorSearchLoading ? (\n                  <SelectCircularProgress />\n                ) : vendorData?.length > 0 ? (\n                  <List>\n                    {vendorData?.map((vendor) => (\n                      <React.Fragment key={vendor.id}>\n                        <ListItem\n                          key={vendor.id}\n                          button\n                          onClick={() => handleVendorClick(vendor.companyName)}\n                        >\n                          <ListItemText\n                            primary={\n                              <Typography component={\"div\"} variant=\"subtitle1\">\n                                {vendor.companyName}\n                              </Typography>\n                            }\n                          />\n                        </ListItem>\n                        {vendorData?.length > 1 && <Divider />}\n                      </React.Fragment>\n                    ))}\n                  </List>\n                ) : (\n                  <Box m={1}>\n                    <NoResultsTypography />\n                  </Box>\n                )}\n              </Paper>\n            </Box>\n          </Collapse>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default SearchDelegateCompany;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport CustomTextField from \"../../../../../components/inputs/CustomTextField\";\nimport SelectCircularProgress from \"../../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../../components/typographies/NoResultsTypography\";\nimport { SEARCH_USERS_QUERY } from \"../../../../../operations/queries/searchUsersQuery\";\nimport handleError from \"../../../../../data/handleError\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\nconst SearchDelegateTo = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { delegates, setDelegates, delegateUser } = props;\n  const [isUserSearchLoading, setIsUserSearchLoading] = useState(false);\n  const [searchUserQuery, setSearchUserQuery] = useState(\"\");\n  const [isUserResultsOpen, setIsUserResultsOpen] = useState(false);\n  const [usersData, setUsersData] = useState();\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERS_QUERY, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setUsersData(data.search_users);\n      setIsUserSearchLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchUserQuery?.length > 0) {\n      executeSearch({ variables: { search: searchUserQuery } });\n      setIsUserResultsOpen(true);\n    } else {\n      setIsUserResultsOpen(false);\n      setUsersData([]);\n      setIsUserSearchLoading(false);\n    }\n  }, [searchUserQuery, executeSearch]);\n\n  const searchUserOnChange = (query) => {\n    setIsUserSearchLoading(true);\n    setSearchUserQuery(query);\n  };\n\n  const handleUserClick = (user) => {\n    setDelegates([...delegates, { delegateTo: user.toLowerCase() }]);\n    setIsUserResultsOpen(false);\n    setSearchUserQuery(\"\");\n  };\n\n  return (\n    <div>\n      <Box m={2}>\n        <Box>\n          <Typography>Search for a User to Add</Typography>\n          <CustomTextField\n            required\n            id=\"standard-basic\"\n            label=\"Search\"\n            variant=\"standard\"\n            size=\"small\"\n            autoComplete=\"off\"\n            value={searchUserQuery}\n            onValueChange={searchUserOnChange}\n          />\n          {searchUserQuery?.length > 0 && (\n            <Collapse in={isUserResultsOpen} timeout=\"auto\" unmountOnExit>\n              <Box className={classes.resultsBox}>\n                <Paper>\n                  {isUserSearchLoading && <SelectCircularProgress />}\n                  {usersData && (\n                    <>\n                      {usersData?.length === 0 ? (\n                        <Box m={1}>\n                          <NoResultsTypography />\n                        </Box>\n                      ) : (\n                        <List>\n                          {usersData?.map((user) => (\n                            <React.Fragment key={user.id}>\n                              <ListItem\n                                key={user.id}\n                                button\n                                onClick={() =>\n                                  handleUserClick(user?.profile.userName)\n                                }\n                              >\n                                <ListItemText\n                                  primary={\n                                    <>\n                                      <Typography\n                                        component={\"div\"}\n                                        variant=\"subtitle1\"\n                                      >\n                                        {user?.profile.firstName}{\" \"}\n                                        {user?.profile.lastName} |{\" \"}\n                                        {user?.profile.userName}\n                                      </Typography>\n                                    </>\n                                  }\n                                />\n                              </ListItem>\n                              {usersData?.length > 1 && <Divider />}\n                            </React.Fragment>\n                          ))}\n                        </List>\n                      )}\n                    </>\n                  )}\n                </Paper>\n              </Box>\n            </Collapse>\n          )}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default SearchDelegateTo;\n","import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport CustomTextField from \"../../../../../components/inputs/CustomTextField\";\nimport SelectCircularProgress from \"../../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../../components/typographies/NoResultsTypography\";\nimport {SEARCH_USERS_QUERY} from \"../../../../../operations/queries/searchUsersQuery\";\nimport handleError from \"../../../../../data/handleError\";\n\nconst SearchDelegateUser = ({delegateUser, setDelegateUser}) => {\n  const history = useHistory();\n  const [isUserSearchLoading, setIsUserSearchLoading] = useState(false);\n  const [searchUserQuery, setSearchUserQuery] = useState(\"\");\n  const [isUserResultsOpen, setIsUserResultsOpen] = useState(false);\n  const [usersData, setUsersData] = useState();\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERS_QUERY, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setUsersData(data.search_users);\n      setIsUserSearchLoading(false);\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  useEffect(() => {\n    if (searchUserQuery?.length > 0) {\n      executeSearch({variables: {search: searchUserQuery}});\n      setIsUserResultsOpen(true);\n    } else {\n      setIsUserResultsOpen(false);\n      setUsersData([]);\n      setIsUserSearchLoading(false);\n    }\n  }, [searchUserQuery, executeSearch]);\n\n  const searchUserOnChange = (query) => {\n    setIsUserSearchLoading(true);\n    setSearchUserQuery(query);\n  };\n\n  const handleUserClick = (user) => {\n    setDelegateUser(user.toLowerCase());\n\n    setIsUserResultsOpen(false);\n    setSearchUserQuery(\"\");\n  };\n\n  return (\n    <div>\n      <Box m={2}>\n        {!delegateUser ? (\n          <Box>\n            <Typography>Search for a Delegate User</Typography>\n            <CustomTextField\n              required\n              id=\"standard-basic\"\n              label=\"Search\"\n              variant=\"standard\"\n              size=\"small\"\n              autoComplete=\"off\"\n              value={searchUserQuery}\n              onValueChange={searchUserOnChange}\n            />\n            {searchUserQuery?.length > 0 && (\n              <Collapse in={isUserResultsOpen} timeout=\"auto\" unmountOnExit>\n                <Box>\n                  <Paper>\n                    {isUserSearchLoading && <SelectCircularProgress />}\n                    {usersData && (\n                      <>\n                        {usersData?.length === 0 ? (\n                          <Box m={1}>\n                            <NoResultsTypography />\n                          </Box>\n                        ) : (\n                          <List>\n                            {usersData?.map((user) => (\n                              <React.Fragment key={user.id}>\n                                <ListItem\n                                  key={user.id}\n                                  button\n                                  onClick={() =>\n                                    handleUserClick(user?.profile.userName)\n                                  }\n                                >\n                                  <ListItemText\n                                    primary={\n                                      <>\n                                        <Typography\n                                          component={\"div\"}\n                                          variant=\"subtitle1\"\n                                        >\n                                          {user?.profile.firstName}{\" \"}\n                                          {user?.profile.lastName} |{\" \"}\n                                          {user?.profile.userName}\n                                        </Typography>\n                                      </>\n                                    }\n                                  />\n                                </ListItem>\n                                {usersData?.length > 1 && <Divider />}\n                              </React.Fragment>\n                            ))}\n                          </List>\n                        )}\n                      </>\n                    )}\n                  </Paper>\n                </Box>\n              </Collapse>\n            )}\n          </Box>\n        ) : (\n          <Box>\n            <Typography>\n              Selected Delegate User: <strong>{delegateUser}</strong>\n            </Typography>\n            <Box mt={1}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                onClick={() => setDelegateUser(\"\")}\n              >\n                Clear Selected\n              </Button>\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default SearchDelegateUser;\n","import React, {memo, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useMutation} from \"@apollo/client\";\nimport {Box, Divider, makeStyles, Typography} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../../components/taskManager/TaskHeadingToolbar\";\nimport handleError from \"../../../../../data/handleError\";\nimport {CREATE_ONBOARDING_DELEGATES} from \"../../../../../operations/adminMutations/createOnboardingDelegates\";\nimport SearchDelegateCompany from \"./SearchDelegateCompany\";\nimport SearchDelegateTo from \"./SearchDelegateTo\";\nimport InfoBlock from \"../../../../../components/InfoBlock\";\nimport SearchDelegateUser from \"./SearchDelegateUser\";\nimport DelegateChip from \"../../../../../components/chips/DelegateChip\";\nimport SaveAndClearButtons from \"../../../../../components/buttons/SaveAndClearButtons\";\n\nconst useStyles = makeStyles(() => ({\n  box: {overflowY: \"auto\"},\n}));\n\nconst AddDelegatesDrawer = ({refetch, setIsDrawerOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [delegateUser, setDelegateUser] = useState(\"\");\n  const [delegates, setDelegates] = useState([]);\n  const [isButtonsDisabled, setIsButtonsDisabled] = useState(false);\n\n  const [createDelegates] = useMutation(CREATE_ONBOARDING_DELEGATES, {\n    onCompleted: () => onComplete(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const onComplete = () => {\n    refetch();\n    setIsButtonsDisabled(false);\n    setIsDrawerOpen(false);\n  };\n\n  const handleSave = async () => {\n    setIsButtonsDisabled(true);\n    await createDelegates({\n      variables: {\n        user: delegateUser,\n        input: delegates,\n      },\n    });\n  };\n\n  const handleClear = () => {\n    setDelegateUser(\"\");\n    setDelegates([]);\n  };\n\n  const handleDelete = (chip) => {\n    setDelegates((delegates) =>\n      delegates.filter((delegate) =>\n        chip.delegateTo\n          ? delegate.delegateTo !== chip.delegateTo\n          : delegate.delegateCompany !== chip.delegateCompany\n      )\n    );\n  };\n\n  return (\n    <div>\n      <TaskCloseButtonToolbar handleClose={() => setIsDrawerOpen(false)} />\n      <Box className={classes.box}>\n        <TaskHeadingToolbar title={\"Add Onboarding Delegates\"} />\n        <InfoBlock>\n          <Box m={2}>\n            <ol>\n              <li>\n                Search and select delegate user (can be new/old to the\n                Onboarding Delegates table)\n              </li>\n              <li>\n                Search for a user and/or a company (multiple can be selected) to\n                add\n              </li>\n              <li>Click the SAVE button</li>\n            </ol>\n          </Box>\n        </InfoBlock>\n        <Box m={2}>\n          <SearchDelegateUser\n            delegateUser={delegateUser}\n            setDelegateUser={setDelegateUser}\n          />\n        </Box>\n        {delegateUser?.length > 0 && (\n          <Box>\n            <Box mb={5}>\n              <SearchDelegateTo\n                delegates={delegates}\n                setDelegates={setDelegates}\n                delegateUser={delegateUser}\n              />\n            </Box>\n            <Box mb={5}>\n              <SearchDelegateCompany\n                delegates={delegates}\n                setDelegates={setDelegates}\n                delegateUser={delegateUser}\n              />\n            </Box>\n            <Divider />\n            <Box m={2}>\n              {delegates?.length > 0 && (\n                <>\n                  <Typography>\n                    <strong>To be added:</strong>\n                  </Typography>\n                  <Box mb={5}>\n                    {delegates?.map((del) => (\n                      <DelegateChip\n                        key={\n                          del.delegateTo ? del.delegateTo : del.delegateCompany\n                        }\n                        delegate={del}\n                        onDelete={() => handleDelete(del)}\n                      />\n                    ))}\n                  </Box>\n                  <SaveAndClearButtons\n                    handleClear={handleClear}\n                    handleSave={handleSave}\n                    isButtonsDisabled={isButtonsDisabled}\n                  />\n                </>\n              )}\n            </Box>\n          </Box>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default memo(AddDelegatesDrawer);\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_ONBOARDING_DELEGATE = gql`\n  mutation DeleteOnboardingDelegate($id: Int!) {\n    deleteOnboardingDelegate(id: $id) {\n      id\n    }\n  }\n`;\n","import React, {useState, memo} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useMutation} from \"@apollo/client\";\nimport {Box, makeStyles, Typography} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../components/taskManager/TaskHeadingToolbar\";\nimport handleError from \"../../../../data/handleError\";\nimport {DELETE_ONBOARDING_DELEGATE} from \"../../../../operations/adminMutations/deleteOnboardingDelegate\";\nimport InfoBlock from \"../../../../components/InfoBlock\";\nimport DelegateChip from \"../../../../components/chips/DelegateChip\";\n\nconst useStyles = makeStyles(() => ({\n  box: {overflowY: \"auto\"},\n}));\n\nconst EditDelegatesDrawer = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {refetch, selected, setIsDrawerOpen} = props;\n  const {onboardingDelegates, userName} = selected;\n  const [delArr, setDelArr] = useState(onboardingDelegates);\n\n  const [deleteDel] = useMutation(DELETE_ONBOARDING_DELEGATE, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleClose = () => {\n    setIsDrawerOpen(false);\n    refetch();\n  };\n\n  const handleDelete = (chip) => {\n    deleteDel({\n      variables: {\n        id: parseInt(chip.id),\n      },\n    });\n\n    setDelArr((delArr) =>\n      delArr.filter((delegate) =>\n        chip.delegateTo\n          ? delegate.delegateTo !== chip.delegateTo\n          : delegate.delegateCompany !== chip.delegateCompany\n      )\n    );\n  };\n\n  return (\n    <div>\n      <TaskCloseButtonToolbar handleClose={handleClose} />\n      <Box className={classes.box}>\n        <TaskHeadingToolbar\n          title={`Edit ${userName?.toUpperCase()} Delegates`}\n        />\n      </Box>\n      <InfoBlock>\n        <Box m={2}>\n          <Typography>\n            To delete, click on the X on the chip. <br />\n            <strong>\n              Once you click on the X, it'll instantly be deleted.\n            </strong>\n          </Typography>\n        </Box>\n      </InfoBlock>\n      <Box m={2}>\n        <Typography>\n          <strong>Delegate To and/or Company:</strong>\n        </Typography>\n        <Box mt={2}>\n          {delArr?.length > 0 ? (\n            delArr?.map((del) => (\n              <DelegateChip\n                key={del.id}\n                delegate={del}\n                onDelete={() => handleDelete(del)}\n              />\n            ))\n          ) : (\n            <Typography>No delegates</Typography>\n          )}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default memo(EditDelegatesDrawer);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Box,\n  makeStyles,\n  TableCell,\n  TableContainer,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Drawer,\n  Button,\n} from \"@material-ui/core\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport {NetworkStatus, useQuery} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport {GET_ALL_ONBOARDING_DELEGATES} from \"../../../../operations/adminQueries/getAllOnboardingDelegates\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport StyledTableRow from \"../../../../components/table/StyledTableRow\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddDelegatesDrawer from \"./AddDelegatesDrawer\";\nimport EditDelegatesDrawer from \"./EditDelegatesDrawer\";\nimport DelegateChip from \"../../../../components/chips/DelegateChip\";\nimport EditButton from \"../../../../components/buttons/EditButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    width: \"1000px\",\n  },\n  chip: {\n    fontSize: \".75rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n  tableBox: {overflow: \"auto\", height: \"55vh\", padding: theme.spacing(3)},\n  paper: {\n    width: \"700px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst OnboardingDelegates = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [selected, setSelected] = useState();\n  const [drawerView, setDrawerView] = useState();\n\n  const {data, loading, networkStatus, refetch} = useQuery(\n    GET_ALL_ONBOARDING_DELEGATES,\n    {\n      notifyOnNetworkStatusChange: true,\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    if (loading || networkStatus === NetworkStatus.refetch) {\n      setIsLoading(true);\n    } else {\n      setIsLoading(false);\n    }\n  }, [loading, networkStatus]);\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setIsDrawerOpen(open);\n  };\n\n  const handleEdit = (delegate) => {\n    setSelected(delegate);\n    setDrawerView(\"edit\");\n    setIsDrawerOpen(true);\n  };\n\n  const handleAdd = () => {\n    setDrawerView(\"add\");\n    setIsDrawerOpen(true);\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Toolbar>\n        <div>\n          <TopTypography>Onboarding Delegates</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={handleAdd}\n        >\n          <AddIcon className={classes.icon} /> Add New Delegate\n        </Button>\n      </Toolbar>\n\n      {isLoading ? (\n        <LoadingCircle />\n      ) : (\n        <>\n          {data && (\n            <Box className={classes.tableBox}>\n              <TableContainer>\n                <Table size=\"small\" className={classes.table}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell className={classes.tableHeadCell}>\n                        Delegate User\n                      </TableCell>\n                      <TableCell className={classes.tableHeadCell}>\n                        Delegate To and/or Company\n                      </TableCell>\n                      <TableCell className={classes.tableHeadCell}>\n                        Edit\n                      </TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody className={classes.tableBody}>\n                    {data?.get_all_onboarding_delegates.map((user) => (\n                      <React.Fragment key={user.userName}>\n                        <StyledTableRow\n                          id={user}\n                          key={user}\n                          className={classes.tableRow}\n                        >\n                          <TableCell>{user.userName}</TableCell>\n                          <TableCell>\n                            {user.onboardingDelegates?.map((del) => (\n                              <DelegateChip\n                                key={del.id}\n                                delegate={del}\n                                className={classes.chip}\n                              />\n                            ))}\n                          </TableCell>\n                          <TableCell>\n                            <EditButton onClick={() => handleEdit(user)} />\n                          </TableCell>\n                        </StyledTableRow>\n                      </React.Fragment>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          )}\n        </>\n      )}\n      <div>\n        <Drawer\n          anchor=\"right\"\n          open={isDrawerOpen}\n          onClose={toggleDrawer(false)}\n          classes={{paper: classes.paper}}\n        >\n          {drawerView === \"add\" ? (\n            <AddDelegatesDrawer\n              refetch={refetch}\n              setIsDrawerOpen={setIsDrawerOpen}\n            />\n          ) : (\n            <EditDelegatesDrawer\n              refetch={refetch}\n              setIsDrawerOpen={setIsDrawerOpen}\n              selected={selected}\n            />\n          )}\n          <div />\n        </Drawer>\n      </div>\n    </Box>\n  );\n};\n\nexport default memo(OnboardingDelegates);\n","export const DEPARTMENT_LABEL = 'department';\nexport const BUSINESS_UNIT_LABEL = 'businessUnit';\nexport const DEFAULT_ERRORS_INFO = { [DEPARTMENT_LABEL]: false, [BUSINESS_UNIT_LABEL]: false };\nexport const DEFAULT_BU_DEPT_INFO = { [DEPARTMENT_LABEL]: '', [BUSINESS_UNIT_LABEL]: '' };\nexport const DEFAULT_TOAST_INFO = { shown: false, text: '', severity: 'information' };\nexport const ULTI_BU_DEPT_SUCCESS_REQUEST_TEXT = 'Record was created successfully';\nexport const ULTI_BU_DEPT_FAILED_REQUEST_TEXT = 'Error occurred while creating record';\nexport const ULTI_BU_DEPT_VALIDATION_ERROR_TEXT = 'All fields are required';\n\nexport const INPUTS_CONFIG_FOR_BU_DEPT_FORM = [\n    {\n        id: DEPARTMENT_LABEL,\n        label: 'Department'\n    },\n    {\n        id: BUSINESS_UNIT_LABEL,\n        label: 'Business Unit'\n    }\n];","import { gql } from \"@apollo/client\";\n\nexport const ADD_ULTI_BU_DEPT = gql`\n    mutation addUltiBUDept($input: UltiBUDeptInput) {\n        addUltiBUDept(input: $input) {\n            department\n            businessUnit\n        }\n    }\n`;\n","import React, {memo, useState} from \"react\";\nimport {\n    Box,\n    makeStyles,\n    Toolbar,\n    Grid,\n    Button,\n    TextField,\n    Snackbar,\n} from \"@material-ui/core\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport {\n    DEFAULT_BU_DEPT_INFO,\n    DEFAULT_ERRORS_INFO,\n    DEFAULT_TOAST_INFO,\n    INPUTS_CONFIG_FOR_BU_DEPT_FORM,\n    ULTI_BU_DEPT_FAILED_REQUEST_TEXT,\n    ULTI_BU_DEPT_SUCCESS_REQUEST_TEXT,\n    ULTI_BU_DEPT_VALIDATION_ERROR_TEXT\n} from \"../../../../data/constants/OnboardingSettingsPage\";\nimport {useMutation} from \"@apollo/client\";\nimport {ADD_ULTI_BU_DEPT} from \"../../../../operations/mutations/addUltiBUDept\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n    box: {\n        width: \"100%\",\n    },\n    inputBox: {\n        marginBottom: \"32px\",\n        width: \"700px\"\n    },\n    saveButton: {\n        marginTop: \"16px\"\n    }\n}));\n\nconst OnboardingRequest = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [buDeptInfo, setBuDeptInfo] = useState(DEFAULT_BU_DEPT_INFO);\n    const [toastInfo, setToastInfo] = useState(DEFAULT_TOAST_INFO);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const [addUltiBUDept] = useMutation(ADD_ULTI_BU_DEPT, {\n        onCompleted: () => {\n            setToastInfo({ shown: true, text: ULTI_BU_DEPT_SUCCESS_REQUEST_TEXT, severity: 'success' });\n            resetData();\n        },\n        onError: (error) => {\n            handleError(error)(history);\n            setToastInfo({ shown: true, text: ULTI_BU_DEPT_FAILED_REQUEST_TEXT, severity: 'error' });\n            resetData();\n        },\n    });\n\n    const handleToastClose = () => {\n        setToastInfo({ ...DEFAULT_TOAST_INFO });\n    };\n\n    const resetData = () => {\n        setIsSaving(false);\n        setBuDeptInfo({ ...DEFAULT_BU_DEPT_INFO });\n    }\n\n    const validateBUDeptInfo = () => Object.values(buDeptInfo).every(value => Boolean(value.length));\n\n    const saveBuDept = () => {\n        if (validateBUDeptInfo()) {\n            setIsSaving(true);\n\n            addUltiBUDept({\n                variables: {\n                    input: buDeptInfo,\n                },\n            });\n        } else {\n            setToastInfo({ shown: true, text: ULTI_BU_DEPT_VALIDATION_ERROR_TEXT, severity: 'error' });\n        }\n    };\n\n    const handleChange = (inputId, event) => {\n        setBuDeptInfo({\n            ...buDeptInfo,\n            [inputId]: event.target.value\n        });\n    };\n\n    return (\n        <Box className={classes.box}>\n            <Snackbar\n                open={toastInfo.shown}\n                autoHideDuration={6000}\n                severity={toastInfo.severity}\n                onClose={handleToastClose}\n                message={toastInfo.text ?? '...'}\n            />\n            <Toolbar>\n                <div>\n                    <TopTypography>Onboarding Request</TopTypography>\n                </div>\n                <Box flexGrow={1} />\n            </Toolbar>\n            <>\n                <Grid item container className={classes.inputBox} xs={12}>\n                    <form autoComplete=\"off\">\n                        {INPUTS_CONFIG_FOR_BU_DEPT_FORM.map(config => {\n                            return <Grid item xs={12}><TextField\n                                required\n                                color=\"secondary\"\n                                id={config.id}\n                                label={config.label}\n                                value={buDeptInfo[config.id]}\n                                onChange={value => handleChange(config.id, value)}\n                            />\n                            </Grid>\n                        })}\n                        <Button variant=\"contained\"\n                                className={classes.saveButton}\n                                disabled={isSaving}\n                                onClick={saveBuDept}\n                        >Save</Button>\n                    </form>\n                </Grid>\n            </>\n        </Box>\n    );\n};\n\nexport default memo(OnboardingRequest);","import React, {memo, useContext, useMemo, useState} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport OnboardingDelegates from \"./OnboardingDelegates\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport OnboardingRequest from \"./OnboardingRequest\";\nimport AdminTabsPaper from \"../../../components/tabs/AdminTabsPaper\";\n\nconst tabName = \"vertical\";\n\nconst OnboardingSettingsPage = () => {\n  const {permSysMgmtSettingsOnboarding} = useContext(AuthUserContext);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const onboardingSettingsTabs = useMemo(() => [\n    {\n      label: \"Onboarding Delegates\",\n      content: <OnboardingDelegates />,\n    },\n    {\n      label: \"Onboarding Request\",\n      content: <OnboardingRequest />,\n    },\n  ], []);\n\n  return (\n    <Page title=\"Onboarding Settings | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        <BreadcrumbText title={\"ONBOARDING SETTINGS\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Onboarding Settings\" />\n\n        {permSysMgmtSettingsOnboarding ? (\n          <Box mt={3} minWidth={1050}>\n            <AdminTabsPaper\n              value={value}\n              handleChange={handleChange}\n              tabs={onboardingSettingsTabs}\n              tabName={tabName}\n            />\n          </Box>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(OnboardingSettingsPage);\n","import { gql } from \"@apollo/client\";\n\nexport const GET_GOOGLE_CLOUD_SCHEDULER_TASKS = gql`\n    query GetGoogleCloudSchedulerTasks {\n        get_google_cloud_scheduler_tasks {\n            name,\n            description,\n            state,\n            lastAttemptTime,\n            schedule\n        }\n    }\n`;\n","const NO_DATA_LABEL = \"No data\";\n\nexport const SCHEDULER_JOBS_TABLE_COLUMNS = [\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 350,\n    valueGetter: ({ row }) => {\n      if (row.name) {\n        const splicedName = row.name.split('/');\n        return splicedName[splicedName.length - 1];\n      }\n      return NO_DATA_LABEL;\n    }\n  },\n  {\n    field: \"description\",\n    headerName: \"Description\",\n    width: 550,\n    valueGetter: ({row}) => row.description ? row.description : NO_DATA_LABEL\n  },\n  {\n    field: \"state\",\n    headerName: \"State\",\n    width: 150,\n    valueGetter: ({ row }) => row.state ? row.state : NO_DATA_LABEL\n  },\n  {\n    field: \"lastAttemptTime\",\n    headerName: \"Last Attempt Time\",\n    width: 500,\n    valueGetter: ({ row }) => row.lastAttemptTime ? new Date(row.lastAttemptTime) : NO_DATA_LABEL\n  },\n  {\n    field: \"schedule\",\n    headerName: \"Schedule\",\n    width: 150,\n    valueGetter: ({ row }) => row.schedule ? row.schedule : NO_DATA_LABEL\n  },\n];","import {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport React, {useState, useEffect} from \"react\";\nimport {GET_GOOGLE_CLOUD_SCHEDULER_TASKS} from \"../../../../operations/queries/getGoogleCloudSchedulerTasks\";\nimport {useHistory} from \"react-router-dom\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport {SCHEDULER_JOBS_TABLE_COLUMNS} from \"../../../../data/constants/SchedulerJobs\";\n\nconst GRID_BOX_HEIGHT = 500,\n  CONTENT_HEIGHT_COEFFICIENT = 1.3054830287;\n\nconst useStyles = makeStyles((theme) => ({\n  loaderBox: {\n    margin: \"0 auto 0 auto\",\n  },\n  noRowsOverlay: {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: `${GRID_BOX_HEIGHT / CONTENT_HEIGHT_COEFFICIENT}px`,\n    height: \"100%\",\n  },\n}));\n\nconst addIdsToJobsData = (jobsData) =>\n  jobsData?.length\n    ? jobsData.map((jobData) => ({\n        ...jobData,\n        id: jobData.name + Math.random(),\n      }))\n    : [];\n\nconst SchedulerJobsPageContent = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [jobsData, setJobsData] = useState([]);\n\n  const [\n    getJobsData,\n    {data, refetch: refetchJobsData, called: jobsDataFetched},\n  ] = useLazyQuery(GET_GOOGLE_CLOUD_SCHEDULER_TASKS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setJobsData(addIdsToJobsData(data.get_google_cloud_scheduler_tasks));\n      setIsLoading(false);\n    },\n    onError: (error) => {\n      handleError(error)(history);\n      setIsLoading(false);\n    },\n  });\n\n  useEffect(() => {\n    if (!jobsDataFetched) {\n      getJobsData();\n    } else {\n      refetchJobsData();\n    }\n  }, []);\n\n  const NoRowsOverlay = () => (\n    <Box className={classes.noRowsOverlay}>No results found</Box>\n  );\n\n  const getJobsTable = () => {\n    return jobsData?.length ? (\n      <DataGrid\n        rows={jobsData}\n        columns={SCHEDULER_JOBS_TABLE_COLUMNS}\n        components={{\n          NoRowsOverlay,\n        }}\n      />\n    ) : null;\n  };\n\n  return (\n    <Box bgcolor=\"#FCFCFC\" p={4} minWidth={1050}>\n      <div style={{height: GRID_BOX_HEIGHT, width: \"100%\"}}>\n        {isLoading ? <LoadingCircle /> : getJobsTable()}\n      </div>\n    </Box>\n  );\n};\n\nexport default SchedulerJobsPageContent;\n","import React, {memo, useContext} from \"react\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {Box} from \"@material-ui/core\";\nimport SchedulerJobsPageContent from \"./SchedulerJobsPageContent\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport Page from \"../../../components/Page\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\n\nconst SchedulerJobsPage = () => {\n  const {permSysMgmtSchedulerJobs} = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Scheduler Jobs | LPSYNC\">\n      <BreadcrumbHomeBox admin>\n        <BreadcrumbText title={\"SCHEDULER JOBS\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mr={2} ml={2}>\n        <PageTitleBox title=\"Scheduler Jobs\" />\n\n        {permSysMgmtSchedulerJobs ? (\n          <SchedulerJobsPageContent />\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(SchedulerJobsPage);\n","import TaskStatusBlock from \"../../components/taskManager/TaskStatusBlock\";\nimport React from \"react\";\nimport ViewButton from \"../../components/buttons/ViewButton\";\n\nconst NO_DATA_LABEL = \"No data\";\n\nexport const GENERATE_FTE_TRACKER_TABLE_COLUMNS = (buttonCallback) => [\n  {\n    field: \"startDate\",\n    headerName: \"Start Date\",\n    width: 200,\n    valueGetter: ({row}) => row.created ?? NO_DATA_LABEL,\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 250,\n    valueGetter: ({row}) => {\n      let result = \"\";\n\n      if (row.firstName) result += row.firstName + \" \";\n      if (row.lastName) result += row.lastName;\n\n      return result;\n    },\n  },\n  {\n    field: \"location\",\n    headerName: \"Location\",\n    width: 200,\n    valueGetter: ({row}) => row.location ?? NO_DATA_LABEL,\n  },\n  {\n    field: \"device\",\n    headerName: \"Device\",\n    width: 250,\n    valueGetter: ({row}) =>\n      row.laptopType\n        ? `${row.laptopType} ${row.laptopLanguage}`\n        : NO_DATA_LABEL,\n  },\n  {\n    field: \"shippingStatus\",\n    headerName: \"Shipping Status\",\n    width: 200,\n    valueGetter: ({row}) => {\n      if (row.trackingNumber && row.trackingProvider) {\n        return `${row.trackingProvider} ${row.trackingNumber}`;\n      }\n\n      if (row.candidateStatus) {\n        return row.candidateStatus;\n      }\n\n      return NO_DATA_LABEL;\n    },\n    renderCell: ({row}) => {\n      if (row.trackingNumber && row.trackingProvider) {\n        return `${row.trackingProvider} ${row.trackingNumber}`;\n      }\n\n      if (row.candidateStatus) {\n        return (\n          <TaskStatusBlock taskStatus={row?.candidateStatus} id={row?.id} />\n        );\n      }\n\n      return NO_DATA_LABEL;\n    },\n  },\n  {\n    field: \"oktaStatus\",\n    headerName: \"Okta Status\",\n    width: 250,\n    valueGetter: ({row}) => row.oktaStatus ?? NO_DATA_LABEL,\n  },\n  {\n    field: \"viewButton\",\n    headerName: \" \",\n    width: 100,\n    renderCell: ({row}) => (\n      <ViewButton\n        variant={\"contained\"}\n        onClick={() => {\n          buttonCallback(row.username);\n        }}\n        text=\"VIEW\"\n      />\n    ),\n  },\n];\n\nexport const OKTA_STATUS_LABEL = \"oktaStatus\";\nexport const SHIPPING_STATUS_LABEL = \"shippingStatus\";\n\nexport const BUTTON_TEXT_ALL = \"ALL\";\nexport const BUTTON_TEXT_COMPLETED = \"Completed\";\nexport const BUTTON_TEXT_NOT_COMPLETED = \"Not Completed\";\nexport const BUTTON_TEXT_NEW = \"New\";\nexport const BUTTON_TEXT_SHIPPED = \"Shipped\";\nexport const BUTTON_TEXT_DISPATCH_NOW = \"Dispatch Now\";\n\nconst getStartsWithConfigObject = (columnField, value) => ({\n  id: columnField,\n  columnField,\n  operatorValue: \"startsWith\",\n  value,\n});\n\nconst oktaStatusButtons = [\n  {\n    label: BUTTON_TEXT_ALL,\n    config: OKTA_STATUS_LABEL,\n  },\n  {\n    label: BUTTON_TEXT_NOT_COMPLETED,\n    config: getStartsWithConfigObject(\n      OKTA_STATUS_LABEL,\n      BUTTON_TEXT_NOT_COMPLETED\n    ),\n  },\n  {\n    label: BUTTON_TEXT_COMPLETED,\n    config: getStartsWithConfigObject(OKTA_STATUS_LABEL, BUTTON_TEXT_COMPLETED),\n  },\n];\n\nconst shippingStatusButtons = [\n  {\n    label: BUTTON_TEXT_ALL,\n    config: SHIPPING_STATUS_LABEL,\n  },\n  {\n    label: BUTTON_TEXT_NEW,\n    config: getStartsWithConfigObject(SHIPPING_STATUS_LABEL, BUTTON_TEXT_NEW),\n  },\n  {\n    label: BUTTON_TEXT_DISPATCH_NOW,\n    config: getStartsWithConfigObject(\n      SHIPPING_STATUS_LABEL,\n      BUTTON_TEXT_DISPATCH_NOW\n    ),\n  },\n  {\n    label: BUTTON_TEXT_SHIPPED,\n    config: getStartsWithConfigObject(\n      SHIPPING_STATUS_LABEL,\n      BUTTON_TEXT_SHIPPED\n    ),\n    disabled: true,\n  },\n];\n\nexport const FTE_TRACKER_OPTIONS_BUTTONS_SELECTED = {\n  [OKTA_STATUS_LABEL]: false,\n  [SHIPPING_STATUS_LABEL]: false,\n};\n\nexport const FTE_TRACKER_OPTIONS_BUTTONS = {\n  [OKTA_STATUS_LABEL]: oktaStatusButtons,\n  [SHIPPING_STATUS_LABEL]: shippingStatusButtons,\n};\n","import React, {useState, useEffect} from \"react\";\nimport {Box, makeStyles, ButtonGroup, Button} from \"@material-ui/core\";\nimport {\n  BUTTON_TEXT_ALL,\n  FTE_TRACKER_OPTIONS_BUTTONS,\n  FTE_TRACKER_OPTIONS_BUTTONS_SELECTED,\n  GENERATE_FTE_TRACKER_TABLE_COLUMNS,\n  OKTA_STATUS_LABEL,\n  SHIPPING_STATUS_LABEL,\n} from \"../../../../data/constants/FteTracker\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport StyledDataGrid from \"../../../../components/table/StyledDataGrid\";\n\nconst GRID_BOX_HEIGHT = 500;\n\nconst useStyles = makeStyles((theme) => ({\n  buttonsBox: {\n    display: \"flex\",\n    marginBottom: \"20px\",\n    justifyContent: \"space-between\",\n  },\n  fullDimensionsBox: {\n    height: GRID_BOX_HEIGHT,\n    width: \"100%\",\n  },\n}));\n\nconst FteCandidateTrackerTable = ({openDrawerHandler, data, loading}) => {\n  const classes = useStyles();\n  const [filterModel, setFilterModel] = useState({items: []});\n  const [selectedButtons, setSelectedButtons] = useState(\n    FTE_TRACKER_OPTIONS_BUTTONS_SELECTED\n  );\n\n  const refreshSelectedButtons = (currentFilterModel) => {\n    const newButtonsOptionsObject = {...FTE_TRACKER_OPTIONS_BUTTONS_SELECTED};\n\n    currentFilterModel.items.forEach((item) => {\n      if (\n        [SHIPPING_STATUS_LABEL, OKTA_STATUS_LABEL].includes(item.columnField)\n      ) {\n        newButtonsOptionsObject[item.columnField] = item.value;\n      }\n    });\n\n    setSelectedButtons(newButtonsOptionsObject);\n  };\n\n  const handleFilterModelChange = (changedFilterModel) => {\n    setFilterModel(changedFilterModel.filterModel);\n  };\n\n  const applyFilterModelChanges = (itemChanges, columnToRemoveFromFilter) => {\n    const changedFilterModel = {...filterModel};\n\n    if (columnToRemoveFromFilter) {\n      const indexOfColumnToRemove = filterModel.items.findIndex(\n        (item) => item.columnField === columnToRemoveFromFilter\n      );\n\n      if (indexOfColumnToRemove !== -1) {\n        changedFilterModel.items.splice(indexOfColumnToRemove, 1);\n      }\n    } else {\n      let existingColumnFieldIndex = filterModel.items.findIndex(\n        (item) => item.columnField === itemChanges.columnField\n      );\n\n      if (existingColumnFieldIndex !== -1) {\n        changedFilterModel.items.splice(\n          existingColumnFieldIndex,\n          1,\n          itemChanges\n        );\n      } else {\n        changedFilterModel.items.push(itemChanges);\n      }\n    }\n\n    refreshSelectedButtons(changedFilterModel);\n    setFilterModel(changedFilterModel);\n  };\n\n  const isButtonSelected = (buttonGroup, buttonText) => {\n    return (\n      selectedButtons[buttonGroup] === buttonText ||\n      (buttonText === BUTTON_TEXT_ALL &&\n        typeof selectedButtons[buttonGroup] === \"boolean\" &&\n        !selectedButtons[buttonGroup])\n    );\n  };\n\n  const getButtonsBox = () => {\n    return (\n      <Box className={classes.buttonsBox}>\n        {Object.entries(FTE_TRACKER_OPTIONS_BUTTONS).map((buttonGroupEntry) => {\n          return (\n            <ButtonGroup disabled={loading}>\n              {buttonGroupEntry[1].map((button) => {\n                const [itemChanges, columnToRemoveFromFilter] =\n                  typeof button.config === \"string\"\n                    ? [null, button.config]\n                    : [button.config, null];\n\n                return (\n                  <Button\n                    variant={\n                      isButtonSelected(buttonGroupEntry[0], button.label)\n                        ? \"contained\"\n                        : \"outlined\"\n                    }\n                    color={\"secondary\"}\n                    onClick={() =>\n                      applyFilterModelChanges(\n                        itemChanges,\n                        columnToRemoveFromFilter\n                      )\n                    }\n                    disabled={button.disabled}\n                  >\n                    {button.label}\n                  </Button>\n                );\n              })}\n            </ButtonGroup>\n          );\n        })}\n      </Box>\n    );\n  };\n\n  const getFteCandidateTrackerTable = () => {\n    return (\n      <Box className={classes.fullDimensionsBox}>\n        <StyledDataGrid\n          rows={data}\n          columns={GENERATE_FTE_TRACKER_TABLE_COLUMNS(openDrawerHandler)}\n          filterModel={filterModel}\n          onFilterModelChange={handleFilterModelChange}\n        />\n      </Box>\n    );\n  };\n\n  return (\n    <Box bgcolor=\"#FCFCFC\" p={4} minWidth={1050}>\n      <div className={classes.fullDimensionsBox}>\n        {getButtonsBox()}\n        {loading ? <LoadingCircle /> : getFteCandidateTrackerTable()}\n      </div>\n    </Box>\n  );\n};\n\nexport default FteCandidateTrackerTable;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_FTE_TRACKER_HISTORY = gql`\n  query GetFteTrackerHistory($username: String!) {\n    get_fte_tracker_history(username: $username) {\n      id\n      candidateUsername\n      eventType\n      eventNote\n      eventDate\n      eventTime\n      associateUsername\n      associateFirstName\n      associateLastName\n      associateEmail\n    }\n  }\n`;\n","export const FteTrackerRows = (data) => {\n  const {\n    created,\n    firstName,\n    lastName,\n    username,\n    nonLpEmail,\n    businessUnit,\n    department,\n    location,\n  } = data || {};\n\n  return [\n    {\n      id: \"created\",\n      name: \"Start Date\",\n      value: created,\n    },\n    {\n      id: \"fullName\",\n      name: \"Full Name\",\n      value: `${firstName} ${lastName}`,\n    },\n    {\n      id: \"username\",\n      name: \"Username\",\n      value: username,\n    },\n    {\n      id: \"nonLpEmail\",\n      name: \"Non-LP Email\",\n      value: nonLpEmail,\n    },\n    {\n      id: \"businessUnit\",\n      name: \"Business Unit\",\n      value: businessUnit,\n    },\n    {\n      id: \"department\",\n      name: \"Department\",\n      value: department,\n    },\n    {\n      id: \"location\",\n      name: \"Location\",\n      value: location,\n    },\n  ];\n};\n\nexport const ShippingTrackerRows = (data) => {\n  const {laptopType, laptopLanguage, postalAddress, phoneNumber} = data || {};\n\n  return [\n    {id: \"laptopType\", name: \"Device Selected\", value: laptopType || \"-\"},\n    {\n      id: \"laptopLanguage\",\n      name: \"Device Language\",\n      value: laptopLanguage || \"-\",\n    },\n    {id: \"postalAddress\", name: \"Postal Address\", value: postalAddress || \"-\"},\n    {id: \"phoneNumber\", name: \"Phone Number\", value: phoneNumber || \"-\"},\n  ];\n};\n","export const FteTrackerEventType = {\n  ACCESS_GIVEN: \"Access given\",\n  SELECTED_DEVICE: \"Selected Device\",\n  ADDED_SHIPPING_INFO: \"Added Shipping Info\",\n  SET_UP_HUB_ACCOUNT: \"Set up Hub Account\",\n};","import React, {useEffect, useState} from \"react\";\nimport {\n  Box,\n  Divider,\n  TextField,\n  Button,\n  CircularProgress,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport CustomTimelineItem from \"../../../TaskManagerPage/SelectedTasks/components/CustomTimelineItem\";\nimport {Timeline} from \"@material-ui/lab\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_FTE_TRACKER_HISTORY} from \"../../../../operations/queries/getFteTrackerHistory\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport TaskStatusBlock from \"../../../../components/taskManager/TaskStatusBlock\";\nimport {FteTrackerRows, ShippingTrackerRows} from \"./SelectedFteTrackerData\";\nimport TaskSection from \"../../../TaskManagerPage/SelectedTasks/components/TaskSection\";\nimport {FteTrackerEventType} from \"../../../../data/constants/FteTrackerEventType\";\nimport CircularIndeterminate from \"../../../../components/circularProgress/LoadingCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  status: {\n    padding: \"5px 70px\",\n    backgroundColor: \"rgba(255,255,255,0.1)\",\n  },\n  header: {fontWeight: 700},\n  row: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n  },\n  trackingBox: {\n    backgroundColor: theme.palette.primary.light,\n    padding: \"10px 20px 20px 20px\",\n    margin: \"20px 10px\",\n    border: \"solid 2px\" + theme.palette.background.light,\n    position: \"relative\",\n  },\n  trackingLoader: {\n    position: \"absolute\",\n    zIndex: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: \"rgba(0,0,0, 0.5)\",\n  },\n  trackingColumn: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1,\n    marginRight: 20,\n    marginTop: 10,\n  },\n  trackingRow: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  trackingHeader: {\n    fontWeight: 700,\n    color: theme.palette.text.primary,\n  },\n  trackingInput: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst createHistoryData = (data) => {\n  if (data) {\n    const getTitle = (type) => {\n      switch (type) {\n        case FteTrackerEventType.ACCESS_GIVEN: {\n          return \"Candidate Portal Access Given to\";\n        }\n        case FteTrackerEventType.SELECTED_DEVICE: {\n          return \"Device Selected by\";\n        }\n        case FteTrackerEventType.SET_UP_HUB_ACCOUNT: {\n          return \"Hub Account Set Up by\";\n        }\n        case FteTrackerEventType.ADDED_SHIPPING_INFO: {\n          return \"Shipping Info Added by\";\n        }\n        default: {\n          return \"New Event Type\";\n        }\n      }\n    };\n\n    const newData = data.map((item) => {\n      return {\n        name:\n          item.eventType === FteTrackerEventType.SET_UP_HUB_ACCOUNT\n            ? item.associateEmail\n            : `${item.associateFirstName} ${item.associateLastName}`,\n        date: item.eventDate,\n        time: item.eventTime,\n        icon: <CheckCircleIcon fontSize=\"large\" />,\n        title: getTitle(item.eventType),\n      };\n    });\n    return newData;\n  } else return null;\n};\n\nconst FteTrackerDrawerContent = ({data, updateTracking, updatingTracking}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const initTracking = {\n    provider: data?.trackingProvider || \"\",\n    number: data?.trackingNumber || \"\",\n  };\n  const [tracking, setTracking] = useState(initTracking);\n  const [trackingChanged, setTrackingChanged] = useState(false);\n  const [historyData, setHistoryData] = useState(null);\n\n  const [getHistory, {loading: historyLoading}] = useLazyQuery(\n    GET_FTE_TRACKER_HISTORY,\n    {\n      onCompleted: (data) =>\n        setHistoryData(createHistoryData(data.get_fte_tracker_history)),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  useEffect(() => {\n    getHistory({variables: {username: data?.username}});\n  }, [data, getHistory]);\n\n  if (!data) return <CircularProgress />;\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const provider = e.target[0].value;\n    const number = e.target[1].value;\n    const id = data.FTETracker_id;\n    setTrackingChanged(false);\n    updateTracking({provider, number, id});\n  };\n  const changeHandler = (value, type) => {\n    const newData = {...tracking};\n    newData[type] = value;\n    if (\n      newData.number !== initTracking.number ||\n      newData.provider !== initTracking.provider\n    ) {\n      setTrackingChanged(true);\n    } else {\n      setTrackingChanged(false);\n    }\n    setTracking(newData);\n  };\n\n  return (\n    <Box mx={3}>\n      <TaskSection\n        title=\"FTE Details\"\n        statusBlock={\n          <TaskStatusBlock taskStatus={data?.candidateStatus} id={data?.id} />\n        }\n        tableRows={FteTrackerRows(data)}\n      >\n        <Divider />\n      </TaskSection>\n      <TaskSection\n        title=\"Shipping Information\"\n        tableRows={ShippingTrackerRows(data)}\n      >\n        <Divider />\n      </TaskSection>\n\n      <Box className={classes.trackingBox}>\n        {updatingTracking && (\n          <Box className={classes.trackingLoader}>\n            <CircularProgress />\n          </Box>\n        )}\n        <Typography className={classes.trackingHeader}>\n          Tracking Information:\n        </Typography>\n        <Box\n          component=\"form\"\n          onSubmit={submitHandler}\n          className={classes.trackingRow}\n        >\n          <div className={classes.trackingColumn}>\n            <TextField\n              required={true}\n              onChange={(e) => {\n                changeHandler(e.target.value, \"provider\");\n              }}\n              value={tracking.provider}\n              placeholder=\"Provider\"\n              InputProps={{\n                classes: {\n                  input: classes.trackingInput,\n                },\n              }}\n            />\n            <TextField\n              required={true}\n              onChange={(e) => {\n                changeHandler(e.target.value, \"number\");\n              }}\n              value={tracking.number}\n              placeholder=\"Tracking Number\"\n              InputProps={{\n                classes: {\n                  input: classes.trackingInput,\n                },\n              }}\n            />\n          </div>\n          <Button\n            disabled={!data.laptopType || !trackingChanged}\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Box>\n\n      <Box className={classes.row} mb={1}>\n        <Typography className={classes.header}>History</Typography>\n      </Box>\n      <Divider />\n\n      <Box mt={2}>\n        <Timeline align=\"alternate\">\n          {historyLoading && <CircularIndeterminate size={24} />}\n          {historyData?.map((item, index) => (\n            <CustomTimelineItem\n              key={index}\n              item={item}\n              isLast={index === historyData.length - 1}\n              alignCenter\n            />\n          ))}\n          {!historyLoading && !historyData?.length && <NoResultsTypography />}\n        </Timeline>\n      </Box>\n    </Box>\n  );\n};\n\nexport default FteTrackerDrawerContent;\n","import {gql} from \"@apollo/client\";\n\nexport const SEARCH_FTE_TRACKER_CANDIDATES = gql`\n  query SearchFteTrackerCandidates($search: String!, $skip: Int, $take: Int) {\n    search_fte_tracker_candidates(search: $search, skip: $skip, take: $take) {\n      id\n      created\n      location\n      username\n      firstName\n      lastName\n      oktaStatus\n      laptopType\n      laptopLanguage\n      FTETracker_id\n      trackingNumber\n      trackingProvider\n      nonLpEmail\n      department\n      postalAddress\n      phoneNumber\n      businessUnit\n      candidateStatus\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_FTE_TRACKING = gql`\n  mutation UpdateFteTracking($id: Int!, $provider: String!, $number: String!) {\n    updateFteTracking(id: $id, provider: $provider, number: $number) {\n      trackingProvider\n      trackingNumber\n      candidateUsername\n      candidateStatus\n    }\n  }\n`;\n","import React, {useContext, useEffect, useState} from \"react\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport Page from \"../../../components/Page\";\nimport InfoBlock from \"../../../components/InfoBlock\";\nimport FteCandidateTrackerTable from \"./components/FteCandidateTrackerTable\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport StyledDrawer from \"../../../components/drawers/StyledDrawer\";\nimport ToolbarTypography from \"../../../components/typographies/ToolbarTypography\";\nimport SearchInput from \"../../../components/SearchInput\";\nimport FteTrackerDrawerContent from \"./components/FteTrackerDrawerContent\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {SEARCH_FTE_TRACKER_CANDIDATES} from \"../../../operations/queries/searchFteTrackerCandidates\";\nimport {UPDATE_FTE_TRACKING} from \"../../../operations/mutations/updateFTETracking\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport handleError from \"../../../data/handleError\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {AdminRoutes} from \"../../../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles({\n  page: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n  },\n  headerBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n  root: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n  },\n});\n\nconst FteCandidateTrackerPage = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {permSysMgmtFteCandidateTracker} = useContext(AuthUserContext);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedData, setSelectedData] = useState(null);\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n  const [tableData, setTableData] = useState(null);\n  const [skip, setSkip] = useState(0);\n  const [take] = useState(20);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadNew, setLoadNew] = useState(true);\n  const {username} = useParams();\n\n  const [executeSearch, {loading: dataLoading}] = useLazyQuery(\n    SEARCH_FTE_TRACKER_CANDIDATES,\n    {\n      onCompleted: (data) => {\n        updateTableData(data?.search_fte_tracker_candidates);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const [updateFteTracking, {loading: updatingTracking}] = useMutation(\n    UPDATE_FTE_TRACKING,\n    {\n      onCompleted: (data) => updateSelectedData(data.updateFteTracking),\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const updateTableData = (data) => {\n    if (!data || data.length < take) {\n      setHasMore(false);\n    }\n    setTableData((prevData) => {\n      if (!loadNew && prevData) return prevData.concat(data);\n      else return data;\n    });\n  };\n\n  useEffect(() => {\n    // ***UNCOMMENT FOR PAGINATION\n    // executeSearch({variables: {search: searchInput, skip, take}});\n    executeSearch({variables: {search: searchInput}});\n  }, [searchInput, skip]);\n\n  useEffect(() => {\n    if (username && tableData) openDrawerHandler(username);\n  }, [username, tableData]);\n\n  const updateSkip = () => {\n    setSkip((prevState) => prevState + take);\n    setLoadNew(false);\n  };\n\n  function openDrawerHandler(username) {\n    history.push(`${AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER}/${username}`);\n    const selected = tableData.find((item) => item.username === username);\n    if (selected) {\n      setSelectedData(selected);\n      setDrawerOpen(true);\n    } else history.push(AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER);\n  }\n\n  const closeDrawerHandler = () => {\n    setDrawerOpen(false);\n    setSelectedData(null);\n    history.push(AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER);\n  };\n\n  const updateSelectedData = (data) => {\n    const selectedDataCopy = {...selectedData, ...data};\n    const tableDataCopy = [...tableData];\n    const selectedIndex = tableDataCopy.findIndex(\n      (item) => item.id === selectedDataCopy.id\n    );\n    tableDataCopy[selectedIndex] = selectedDataCopy;\n    setTableData(tableDataCopy);\n    setSelectedData(selectedDataCopy);\n  };\n\n  const searchHandler = (value) => {\n    setTableData(null);\n    setSearchInput(value);\n    setSkip(0);\n    setHasMore(true);\n    setLoadNew(true);\n    setSelectedData(null);\n  };\n\n  const updateTrackingHandler = ({id, provider, number}) => {\n    updateFteTracking({variables: {id, provider, number}});\n  };\n  return (\n    <Page title=\"FTE Candidate Tracker\" className={classes.page}>\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"FTE CANDIDATE TRACKER\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox\n          title=\"FTE Candidate Tracker\"\n          className={classes.headerBox}\n        />\n      </Box>\n      {permSysMgmtFteCandidateTracker ? (\n        <>\n          <Box mx={3} mt={3}>\n            <InfoBlock type=\"info\" mb={3}>\n              This page allows you to manage and track specific FTE Candidate\n              Tasks. This view is not for hiring managers or employees.\n            </InfoBlock>\n            <PaperCardWrapper>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  marginRight: 16,\n                }}\n                mb={4}\n              >\n                <ToolbarTypography title=\"Full Time Employees\" />\n                <SearchInput\n                  label=\"Search Users\"\n                  onSearch={(e) => {\n                    searchHandler(e);\n                  }}\n                  searchQuery={searchInput}\n                />\n              </Box>\n\n              <FteCandidateTrackerTable\n                openDrawerHandler={openDrawerHandler}\n                data={tableData?.length ? tableData : []}\n                loading={dataLoading}\n              />\n            </PaperCardWrapper>\n          </Box>\n          <StyledDrawer isOpen={isDrawerOpen} handleClose={closeDrawerHandler}>\n            {selectedData && (\n              <FteTrackerDrawerContent\n                data={selectedData}\n                updateTracking={updateTrackingHandler}\n                updatingTracking={updatingTracking}\n              />\n            )}\n          </StyledDrawer>\n        </>\n      ) : (\n        <NoPermissionsError />\n      )}\n    </Page>\n  );\n};\n\nexport default FteCandidateTrackerPage;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_CANDIDATE_PORTAL_LAPTOP_SETTINGS = gql`\n    query GetCandidatePortalSettings {\n        get_candidate_portal_laptops {\n            id\n            laptopType\n            laptopLanguage\n            laptopAvailability\n        }\n    }\n`;\n","import React from \"react\";\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst NO_DATA_LABEL = \"No data\";\n\nconst GENERATE_LAPTOPS_TABLE_COLUMNS = (editCallback, deleteCallback) => [\n  {\n    field: \"laptopType\",\n    headerName: \"Laptop Type\",\n    width: 320,\n    valueGetter: ({row}) => row?.laptopType ?? NO_DATA_LABEL,\n  },\n  {\n    field: \"laptopLanguage\",\n    headerName: \"Laptop Language\",\n    width: 200,\n    valueGetter: ({row}) => row?.laptopLanguage ?? NO_DATA_LABEL,\n  },\n  {\n    field: \"active\",\n    headerName: \"Active\",\n    width: 150,\n    valueGetter: ({row}) => row?.laptopAvailability ? \"True\" : \"False\",\n  },\n  {\n    field: \"editDelete\",\n    headerName: \" \",\n    width: 150,\n    renderCell: ({row}) => (\n      <div>\n        <IconButton onClick={event => editCallback(event, row)}>\n          <EditIcon color=\"secondary\" />\n        </IconButton>\n        <IconButton onClick={event => deleteCallback(event, row)}>\n          <DeleteIcon color=\"secondary\" />\n        </IconButton>\n      </div>\n    ),\n  },\n];\n\nexport default GENERATE_LAPTOPS_TABLE_COLUMNS;","import { gql } from \"@apollo/client\";\n\nexport const CREATE_LAPTOP_OPTION = gql`\n  mutation CreateLaptopOption($input: OnboardingLaptopInput) {\n    createLaptopOption(input: $input) {\n        id\n        laptopType\n        laptopLanguage\n        laptopAvailability\n    }\n  }\n`;\n","import React, {memo, useEffect, useState} from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport AutocompleteTextField from \"../../../../components/inputs/AutocompleteTextField\";\n\nconst LaptopField = ({label, options, value, setValue, error, setError}) => {\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    if (value) {\n      setInput(value);\n    }\n  }, [value]);\n\n  return (\n    <Autocomplete\n      freeSolo\n      autoSelect\n      blurOnSelect\n      options={options}\n      getOptionLabel={(option) => option}\n      style={{width: 400}}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      getOptionSelected={(option, value) => option === value}\n      inputValue={input}\n      onInputChange={(event, newInputValue) => {\n        setInput(newInputValue);\n        if (error) {\n          setError(false);\n        }\n      }}\n      renderInput={(params) => (\n        <AutocompleteTextField\n          {...params}\n          error={error}\n          required\n          label={label}\n        />\n      )}\n    />\n  );\n};\n\nexport default memo(LaptopField);","import React, {memo, useMemo, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useMutation} from \"@apollo/client\";\nimport {Box, Button, Checkbox, CircularProgress, FormControlLabel, makeStyles} from \"@material-ui/core\";\nimport TaskCloseButtonToolbar from \"../../../../components/taskManager/TaskCloseButtonToolbar\";\nimport TaskHeadingToolbar from \"../../../../components/taskManager/TaskHeadingToolbar\";\nimport {CREATE_LAPTOP_OPTION} from \"../../../../operations/adminMutations/createLaptopOption\";\nimport handleError from \"../../../../data/handleError\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport {toSetArray} from \"../../../../data/helper/commonFunctions\";\nimport LaptopField from \"./LaptopField\";\nimport MissedInputModal from \"../../../../components/modals/MissedInputModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {overflowY: \"auto\"},\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.5rem\",\n  },\n}));\n\nconst LaptopDrawer = ({onComplete, handleClose, selectedLaptop, isAdd, laptops, createLog}) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [laptopType, setLaptopType] = useState(selectedLaptop?.laptopType || \"\");\n  const [laptopLanguage, setLaptopLanguage] = useState(selectedLaptop?.laptopLanguage || \"\");\n  const [laptopTypeError, setLaptopTypeError] = useState(false);\n  const [laptopLanguageError, setLaptopLanguageError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [active, setActive] = useState(selectedLaptop?.laptopAvailability || false);\n  const [isButtonsDisabled, setIsButtonsDisabled] = useState(false);\n\n  const [createLaptop, {error, loading}] = useMutation(CREATE_LAPTOP_OPTION, {\n    onCompleted: () => onComplete(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  if (error) {\n    createLog(\n      \"alert\",\n      `Candidate Portal Setting >> Error - Laptop option upsert; errorMsg: ${error.message}`,\n    );\n  }\n\n  const handleSave = async() => {\n    if(!laptopLanguage){\n      setLaptopLanguageError(true);\n      return setErrorMessage(\"Laptop Language is missing!\");\n    }\n    if(!laptopType){\n      setLaptopTypeError(true);\n      return setErrorMessage(\"Laptop Type is missing!\");\n    }\n    if(laptops?.filter(laptop => laptop.laptopType === laptopType && laptop.laptopLanguage === laptopLanguage)?.length){\n      return setErrorMessage(\"Laptop Option already exist!\");\n    }\n    setIsButtonsDisabled(true);\n      await createLaptop({\n        variables: {\n          input: {\n            id: !isAdd ? selectedLaptop?.id : 0,\n            laptopType,\n            laptopLanguage,\n            laptopAvailability: active,\n          },\n        },\n      });\n    createLog(\n      \"info\",\n      `Candidate Portal Setting >> Laptop option ${isAdd ? \"added\" : \"updated\"}; laptopInfo: ${\n        laptopType} - ${laptopLanguage} ${active ? \"active\" : \"\"};`\n    );\n  };\n\n  const laptopTypes = useMemo(() =>\n      toSetArray(laptops?.map(laptop => laptop?.laptopType)),\n    [laptops]);\n\n  const laptopLanguages = useMemo(() =>\n      toSetArray(laptops?.map(laptop => laptop?.laptopLanguage)),\n    [laptops]);\n\n  return (\n    <div>\n      <TaskCloseButtonToolbar handleClose={handleClose} />\n      <Box m={1} className={classes.box}>\n        <TaskHeadingToolbar title={`${isAdd ? \"Add New\" : \"Update\"} Select Laptop Option`} />\n        <Box m={2} pt={1}>\n          <Box mb={5}>\n            <LaptopField\n              error={laptopTypeError}\n              setError={setLaptopTypeError}\n              options={laptopTypes}\n              value={laptopType}\n              setValue={setLaptopType}\n              label=\"Laptop Type\"\n            />\n          </Box>\n          <Box mb={5}>\n            <LaptopField\n              error={laptopLanguageError}\n              setError={setLaptopLanguageError}\n              options={laptopLanguages}\n              value={laptopLanguage}\n              setValue={setLaptopLanguage}\n              label=\"Laptop Language\"\n            />\n          </Box>\n          <Box mb={5}>\n            <FormControlLabel\n              label={\"Is Active?\"}\n              control={\n                <Checkbox checked={active} onChange={event => setActive(event.target.checked)} />}\n            />\n          </Box>\n        </Box>\n        <Box m={3}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            disabled={isButtonsDisabled}\n            onClick={handleSave}\n          >\n            {loading && <CircularProgress size={15} />}\n            <SaveIcon className={classes.icon} />\n            {isAdd ? \"Add\" : \"Update\"}\n          </Button>\n        </Box>\n        <MissedInputModal\n          modalMsg={errorMessage}\n          open={!!errorMessage}\n          handleClose={() => setErrorMessage(\"\")}\n        />\n      </Box>\n    </div>\n  );\n};\n\nexport default memo(LaptopDrawer);\n","import { gql } from \"@apollo/client\";\n\nexport const DELETE_LAPTOP_OPTION = gql`\n  mutation DeleteLaptopOption($id: Int!) {\n    deleteLaptopOption(id: $id) {\n        id\n        laptopType\n        laptopLanguage\n        laptopAvailability\n    }\n  }\n`;\n","import React, {memo} from \"react\";\nimport {Box, Button, CircularProgress, makeStyles} from \"@material-ui/core\";\nimport CustomModal from \"../../../../components/modals/CustomModal\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_LAPTOP_OPTION} from \"../../../../operations/adminMutations/deleteLaptopOption\";\n\nconst useStyles = makeStyles(() => ({\n  btn: {\n    fontSize: \".75rem\",\n  },\n  modalBtnBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n}));\n\nconst DeleteLaptopModal = ({selectedLaptop, open, handleClose, onComplete, createLog}) => {\n  const classes = useStyles();\n\n  const [deleteLaptop, {error: deleteError, loading}] = useMutation(\n    DELETE_LAPTOP_OPTION, {\n      onCompleted: () => onComplete(),\n    },\n  );\n\n  if (deleteError) {\n    createLog(\n      \"alert\",\n      `Candidate Portal Setting >> Error - Laptop option deleted; errorMsg: ${deleteError.message}`,\n    );\n  }\n\n  const handleDeleteLaptop = () => {\n    deleteLaptop({\n      variables: {\n        id: selectedLaptop?.id,\n      }\n    });\n    createLog(\n      \"info\",\n      `Candidate Portal Setting >> Laptop option deleted; laptopInfo: ${selectedLaptop?.laptopType} - ${\n        selectedLaptop?.laptopLanguage} ${selectedLaptop?.laptopAvailability ? \"active\" : \"\"};`\n    );\n  };\n\n  return (\n    <CustomModal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"remove-modal\"\n      aria-describedby=\"remove-modal\"\n      height={140}\n    >\n      <Box>\n        <Box mb={2}>\n          Are you sure you want to delete laptop: {\" \"}\n          <strong>{selectedLaptop?.laptopType || \"\"} - {selectedLaptop?.laptopLanguage || \"\"}</strong>?\n        </Box>\n        <Box className={classes.modalBtnBox}>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.btn}\n            onClick={handleClose}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            color=\"secondary\"\n            className={classes.btn}\n            onClick={handleDeleteLaptop}\n          >\n            {loading && <CircularProgress size={15} color=\"secondary\"/>}\n            Confirm\n          </Button>\n        </Box>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default memo(DeleteLaptopModal);","import {useHistory} from \"react-router-dom\";\nimport React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {Box, Button, Drawer, makeStyles, Toolbar} from \"@material-ui/core\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport handleError from \"../../../../data/handleError\";\nimport {GET_CANDIDATE_PORTAL_LAPTOP_SETTINGS} from \"../../../../operations/adminQueries/getCandidatePortalLaptopSettings\";\nimport GENERATE_LAPTOPS_TABLE_COLUMNS from \"../../../../data/constants/CandidateLaptops\";\nimport TopTypography from \"../../../../components/typographies/TopTypography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport LaptopDrawer from \"./LaptopDrawer\";\nimport DeleteLaptopModal from \"./DeleteLaptopModal\";\nimport {CREATE_LOG_ENTRY} from \"../../../../operations/adminMutations/createLogEntry\";\n\nconst GRID_BOX_HEIGHT = 500,\n  CONTENT_HEIGHT_COEFFICIENT = 1.3054830287;\n\nconst useStyles = makeStyles((theme) => ({\n  loaderBox: {\n    margin: \"0 auto 0 auto\",\n  },\n  noRowsOverlay: {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: `${GRID_BOX_HEIGHT / CONTENT_HEIGHT_COEFFICIENT}px`,\n    height: \"100%\",\n  },\n  paper: {\n    width: \"500px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.1rem\",\n  },\n}));\n\nconst CandidatePortalLaptopSettingsContent = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [laptops, setLaptops] = useState([]);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [drawerView, setDrawerView] = useState(\"\");\n  const [selected, setSelected] = useState();\n\n  const [getLaptopData, {loading}] = useLazyQuery(\n    GET_CANDIDATE_PORTAL_LAPTOP_SETTINGS,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => {\n        setLaptops(data.get_candidate_portal_laptops);\n      },\n      onError: (error) => {\n        handleError(error)(history);\n      },\n    },\n  );\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"Candidate Portal Settings\",\n          logNotification: info,\n          logDescription: description,\n        },\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (getLaptopData) {\n      getLaptopData();\n    }\n  }, [getLaptopData]);\n\n  const handleEdit = (event, laptop) => {\n    event.preventDefault();\n    setSelected(laptop);\n    setDrawerView(\"edit\");\n    setIsDrawerOpen(true);\n  };\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    setDrawerView(\"add\");\n    setIsDrawerOpen(true);\n  };\n  const handleDelete = (event, laptop) => {\n    event.preventDefault();\n    setSelected(laptop);\n    setIsDeleteModalOpen(true);\n  };\n\n  const NoRowsOverlay = () => (\n    <Box className={classes.noRowsOverlay}>No results found</Box>\n  );\n\n  const geLaptopsTable = () => {\n    return laptops?.length ? (\n      <DataGrid\n        rows={laptops}\n        columns={GENERATE_LAPTOPS_TABLE_COLUMNS(\n          handleEdit,\n          handleDelete,\n        )}\n        components={{NoRowsOverlay}}\n      />\n    ) : null;\n  };\n\n  const toggleDrawer = (open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setSelected(null);\n    setIsDrawerOpen(open);\n  };\n\n  const handleDrawerClose = () => {\n    setSelected(null);\n    setIsDrawerOpen(false);\n  };\n\n  const onDrawerComplete = () => {\n    handleDrawerClose();\n    getLaptopData();\n  };\n\n  const handleDeleteModalClose = () => {\n    setSelected(null);\n    setIsDeleteModalOpen(false);\n  };\n\n  const onDeleteComplete = () => {\n    handleDeleteModalClose();\n    getLaptopData();\n  }\n\n  return (\n    <>\n      <Toolbar>\n        <div>\n          <TopTypography>FTE Task Settings</TopTypography>\n        </div>\n        <Box flexGrow={1} />\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={handleAdd}\n        >\n          <AddIcon className={classes.icon} /> Add New Laptop Option\n        </Button>\n      </Toolbar>\n\n      <Box bgcolor=\"#FCFCFC\" p={4} minWidth={960}>\n        <div style={{height: GRID_BOX_HEIGHT, width: \"100%\"}}>\n          {loading ? <LoadingCircle /> : geLaptopsTable()}\n        </div>\n\n        <Drawer\n          anchor=\"right\"\n          open={isDrawerOpen}\n          onClose={toggleDrawer(false)}\n          classes={{paper: classes.paper}}\n        >\n          <LaptopDrawer\n            onComplete={onDrawerComplete}\n            handleClose={handleDrawerClose}\n            isAdd={drawerView === \"add\"}\n            selectedLaptop={selected}\n            laptops={laptops}\n            createLog={createLog}\n          />\n        </Drawer>\n\n        <DeleteLaptopModal\n          selectedLaptop={selected}\n          open={isDeleteModalOpen}\n          handleClose={handleDeleteModalClose}\n          onComplete={onDeleteComplete}\n          createLog={createLog}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default memo(CandidatePortalLaptopSettingsContent);\n","import {Button} from \"@mui/material\";\n\nconst NO_DATA_LABEL = \"No data\",\n  candidateTypes = {\n    nfte: 'N-FTE',\n    fte: 'FTE'\n  };\n\nexport const GENERATE_CANDIDATE_NON_FTE_TASKS_TABLE_COLUMNS = buttonCallback => [\n  {\n    field: \"candidateName\",\n    headerName: \"Candidate Name\",\n    width: 200,\n    valueGetter: ({ row }) => {\n      let result = '';\n\n      if (row.candidateFirstName) result += row.candidateFirstName + ' '\n      if (row.candidateLastName) result += row.candidateLastName\n\n      return result;\n    }\n  },\n  {\n    field: \"candidateEmail\",\n    headerName: \"Candidate Email\",\n    width: 300,\n    valueGetter: ({row}) => row.candidateNonLpEmail ?? NO_DATA_LABEL\n  },\n  {\n    field: \"lastLoginAt\",\n    headerName: \"Last Login Date\",\n    width: 500,\n    valueGetter: ({row}) => row.lastLoginAt ? new Date(+row.lastLoginAt) : NO_DATA_LABEL\n  },\n  {\n    field: \"taskType\",\n    headerName: \"Candidate Type\",\n    width: 250,\n    valueGetter: ({row}) => row.taskType ?? NO_DATA_LABEL\n  },\n  {\n    field: 'removeAccess',\n    headerName: ' ',\n    width: 200,\n    renderCell: ({row}) => (\n      <Button color={row.disabled ? \"success\" : \"warning\"}\n              variant=\"contained\"\n              onClick={event => buttonCallback(event, row.id, row.taskType)}>\n        { row.disabled ? 'Revoke Access' : 'Remove Access' }\n      </Button>\n    )\n  }\n];","import { gql } from \"@apollo/client\";\n\nexport const GET_CANDIDATE_TASKS_FOR_ADMIN_CANDIDATE_PORTAL_ACCESS = gql`\n    query GetCandidateNonFteTasks {\n        get_candidate_tasks {\n            id\n            taskType\n            disabled\n            candidateFirstName\n            candidateLastName\n            candidateNonLpEmail\n            lastLoginAt\n        }\n    }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const TOGGLE_CANDIDATE_TASK_STATUS = gql`\n    mutation ToggleCandidateTaskStatus($input: ToggleCandidateTaskStatusInput) {\n        toggleCandidateTaskStatus(input: $input) {\n            status\n        }\n    }\n`;\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {Box, makeStyles} from \"@material-ui/core\";\nimport {DataGrid} from \"@material-ui/data-grid\";\nimport LoadingCircle from \"../../../../components/circularProgress/LoadingCircle\";\nimport {GENERATE_CANDIDATE_NON_FTE_TASKS_TABLE_COLUMNS} from \"../../../../data/constants/CandidateNonFteTasks\";\nimport handleError from \"../../../../data/handleError\";\nimport {GET_CANDIDATE_TASKS_FOR_ADMIN_CANDIDATE_PORTAL_ACCESS} from \"../../../../operations/queries/getCandidateNonFteTasksForAdminCandidatePortalAccess\";\nimport {TOGGLE_CANDIDATE_TASK_STATUS} from \"../../../../operations/mutations/toggleCandidateTaskStatus\";\n\nconst GRID_BOX_HEIGHT = 500,\n  CONTENT_HEIGHT_COEFFICIENT = 1.3054830287;\n\nconst useStyles = makeStyles(() => ({\n  loaderBox: {\n    margin: \"0 auto 0 auto\",\n  },\n  noRowsOverlay: {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    lineHeight: `${GRID_BOX_HEIGHT / CONTENT_HEIGHT_COEFFICIENT}px`,\n    height: \"100%\",\n  },\n}));\n\nconst CandidatePortalAccessContent = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const [candidatesData, setCandidatesData] = useState([]);\n\n  const [getCandidateData] = useLazyQuery(\n    GET_CANDIDATE_TASKS_FOR_ADMIN_CANDIDATE_PORTAL_ACCESS,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => {\n        setCandidatesData(data.get_candidate_tasks);\n        setIsLoading(false);\n      },\n      onError: (error) => {\n        handleError(error)(history);\n        setIsLoading(false);\n      },\n    }\n  );\n\n  const [toggleCandidateAccess, {loading: candidateAccessToggling}] =\n    useMutation(TOGGLE_CANDIDATE_TASK_STATUS);\n\n  useEffect(() => {\n    if (!candidateAccessToggling) {\n      getCandidateData();\n    }\n  }, [candidateAccessToggling]);\n\n  const removeCandidate = (event, candidateId, candidateType) => {\n    event.stopPropagation(); // don't select this row after clicking\n    toggleCandidateAccess({\n      variables: {\n        input: {\n          id: +candidateId,\n          taskType: candidateType,\n        },\n      },\n    });\n  };\n\n  const NoRowsOverlay = () => (\n    <Box className={classes.noRowsOverlay}>No results found</Box>\n  );\n\n  const getCandidateNFteTasksTable = () => {\n    return candidatesData?.length ? (\n      <DataGrid\n        rows={candidatesData}\n        columns={GENERATE_CANDIDATE_NON_FTE_TASKS_TABLE_COLUMNS(\n          removeCandidate\n        )}\n        components={{NoRowsOverlay}}\n      />\n    ) : null;\n  };\n\n  return (\n    <Box bgcolor=\"#FCFCFC\" p={4} minWidth={1050}>\n      <div style={{height: GRID_BOX_HEIGHT, width: \"100%\"}}>\n        {isLoading ? <LoadingCircle /> : getCandidateNFteTasksTable()}\n      </div>\n    </Box>\n  );\n};\n\nexport default CandidatePortalAccessContent;\n","import React, {memo, useContext, useMemo, useState} from \"react\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {Box} from \"@material-ui/core\";\nimport CandidatePortalLaptopSettingsContent from \"./CandidatePortalSettingsContent\";\nimport BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport Page from \"../../../components/Page\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport AdminTabsPaper from \"../../../components/tabs/AdminTabsPaper\";\nimport CandidatePortalAccessContent from \"./CandidatePortalAccessContent\";\n\nconst tabName = \"candidate-portal-setting\";\n\nconst CandidatePortalSettingsPage = () => {\n  const {permSysMgmtCandidatePortalAccess} = useContext(AuthUserContext);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const candidatePortalSettingsTabs =  useMemo(() => [\n    {\n      label: \"Candidate Portal Settings\",\n      content: <CandidatePortalLaptopSettingsContent/>,\n    },\n    {\n      label: \"Candidate Portal Access\",\n      content: <CandidatePortalAccessContent/>,\n    },\n  ], []);\n\n  return (\n    <Page title=\"Candidate Portal Admin | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"CANDIDATE PORTAL ADMIN\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Candidate Portal Admin\" />\n\n          {permSysMgmtCandidatePortalAccess ? (\n            <Box mt={3} minWidth={1050}>\n             <AdminTabsPaper\n               value={value}\n               handleChange={handleChange}\n               tabs={candidatePortalSettingsTabs}\n               tabName={tabName}\n             />\n            </Box>\n          ) : (\n            <NoPermissionsError />\n          )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(CandidatePortalSettingsPage);\n","import React, {memo} from \"react\";\nimport {Switch, useLocation} from \"react-router-dom\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport HomePage from \"../../pages/adminPages/HomePage\";\nimport SystemLogsPage from \"../../pages/adminPages/SystemLogsPage\";\nimport UserManagementPage from \"../../pages/adminPages/UserManagementPage\";\nimport UserBadgeManagementPage from \"../../pages/adminPages/UserBadgeManagementPage\";\nimport ScrollToTop from \"../../components/ScrollToTop\";\nimport {AdminRoutes} from \"../../data/constants/FrontendRoutes\";\nimport OffboardingSettingsPage from \"../../pages/adminPages/OffboardingSettingsPage\";\nimport SecureRoute from \"../../components/routes/SecureRoute\";\nimport OnboardingSettingsPage from \"../../pages/adminPages/OnboardingSettingsPage\";\nimport SchedulerJobsPage from \"../../pages/adminPages/SchedulerJobsPage/SchedulerJobsPage\";\nimport FteCandidateTrackerPage from \"../../pages/adminPages/FteCandidateTrackerPage/FteCandidateTrackerPage\";\nimport CandidatePortalSettingsPage from \"../../pages/adminPages/CandidatePortalSettingsPage\";\n\nconst AdminMainContainer = () => {\n  const location = useLocation().pathname.split(\"/\");\n  const currentKey = (location[2] && \"/admin/\" + location[2]) || \"/admin\";\n\n  return (\n    <div>\n      <TransitionGroup>\n        <CSSTransition key={currentKey} classNames=\"fade\" timeout={300} appear>\n          <section>\n            <ScrollToTop />\n            <Switch>\n              <SecureRoute\n                exact\n                path={AdminRoutes.ADMIN}\n                component={HomePage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_OFFBOARDING_SETTINGS}\n                adminOnly\n              >\n                <OffboardingSettingsPage />\n              </SecureRoute>\n              <SecureRoute\n                path={AdminRoutes.ADMIN_ONBOARDING_SETTINGS}\n                adminOnly\n              >\n                <OnboardingSettingsPage />\n              </SecureRoute>\n              <SecureRoute\n                path={AdminRoutes.ADMIN_SYSTEM_LOGS}\n                component={SystemLogsPage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_USER_MANAGEMENT}\n                component={UserManagementPage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_USER_BADGING_MANAGEMENT}\n                component={UserBadgeManagementPage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_SCHEDULER_JOBS}\n                component={SchedulerJobsPage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_CANDIDATE_PORTAL}\n                component={CandidatePortalSettingsPage}\n                adminOnly\n              />\n              <SecureRoute\n                exact\n                path={AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER}\n                component={FteCandidateTrackerPage}\n                adminOnly\n              />\n              <SecureRoute\n                path={AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER_USERNAME}\n                component={FteCandidateTrackerPage}\n                adminOnly\n              />\n            </Switch>\n          </section>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  );\n};\n\nexport default memo(AdminMainContainer);\n","import React, { memo } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoginCallback = () => {\n  // useEffect(() => {\n  //   console.log(\"qwer\")\n  // }, []);\n  return (\n    <Redirect to={\"/\"}/>\n  )\n}\n\nexport default memo(LoginCallback);\n\n// var OktaError = function OktaError(_ref) {\n//   var error = _ref.error;\n//   if (error.name && error.message) {\n//     return /*#__PURE__*/React.createElement(\"p\", null, error.name, \": \", error.message);\n//   }\n//\n//   return /*#__PURE__*/React.createElement(\"p\", null, \"Error: \", error.toString());\n// };\n//\n// var LoginCallback = function LoginCallback(_ref) {\n//   var errorComponent = _ref.errorComponent;\n//\n//   var _useOktaAuth = useOktaAuth(),\n//     oktaAuth = _useOktaAuth.oktaAuth,\n//     authState = _useOktaAuth.authState;\n//\n//   var authStateReady = !authState.isPending;\n//   var ErrorReporter = errorComponent || OktaError;\n//   React.useEffect(function () {\n//     oktaAuth.handleLoginRedirect();\n//   }, [oktaAuth]);\n//\n//   if (authStateReady && authState.error) {\n//     return /*#__PURE__*/React.createElement(ErrorReporter, {\n//       error: authState.error\n//     });\n//   }\n//   return null;\n// };","import React, {memo} from \"react\";\nimport {Box, Button, makeStyles, Typography} from \"@material-ui/core\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles(() => ({\n  notFoundBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"calc(95vh - 64px)\",\n    lineHeight: 5\n  }\n}));\n\nconst NotFoundPage = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.notFoundBox}>\n      <Typography variant=\"h4\">404 - Not Found!</Typography>\n      <Typography>This page doesn't exist.</Typography>\n      <Box ml={1} mb={3}>\n        <Button color=\"secondary\" variant=\"outlined\" href={FrontendRoutes.HOME}>\n         lpsync home\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(NotFoundPage);","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst MultiCandidateRequestActonTypes = {\n  SET_CSV_DATA: \"SET_CSV_DATA\",\n  SET_CSV_FILE_ERROR: \"SET_CSV_FILE_ERROR\",\n  SET_SELECTED_TASK_IDS: \"SET_SELECTED_TASK_IDS\",\n  SET_SELECTED_TASKS: \"SET_SELECTED_TASKS\",\n  SET_SELECTED_TASK_USERNAME: \"SET_SELECTED_TASK_USERNAME\",\n  SET_EXISTING_ID: \"SET_EXISTING_ID\",\n\n  SET_DEFAULT_STATE: \"SET_DEFAULT_STATE\",\n\n  SET_ACTIVE_STEP: \"SET_ACTIVE_STEP\",\n};\n\nexport default typesWithPrefix(\"MULTI_CANDIDATE_REQUEST_\")(\n  MultiCandidateRequestActonTypes\n);\n","import MultiCandidateRequestActonTypes from \"./multiCandidateRequestActonTypes\";\n\nexport const setCSVData = (csvData) => ({\n  type: MultiCandidateRequestActonTypes.SET_CSV_DATA,\n  payload: {csvData},\n});\n\nexport const setCSVFileError = (csvFileError) => ({\n  type: MultiCandidateRequestActonTypes.SET_CSV_FILE_ERROR,\n  payload: {csvFileError},\n});\n\nexport const setSelectedTaskIds = (selectedTaskIds) => ({\n  type: MultiCandidateRequestActonTypes.SET_SELECTED_TASK_IDS,\n  payload: {selectedTaskIds},\n});\n\nexport const setSelectedTasks = (selectedTasks) => ({\n  type: MultiCandidateRequestActonTypes.SET_SELECTED_TASKS,\n  payload: {selectedTasks},\n});\n\nexport const setSelectedTaskUsername = (id, username) => ({\n  type: MultiCandidateRequestActonTypes.SET_SELECTED_TASK_USERNAME,\n  payload: {id, username},\n});\n\nexport const setExistingId = (existingId) => ({\n  type: MultiCandidateRequestActonTypes.SET_EXISTING_ID,\n  payload: {existingId},\n});\n\nexport const setDefaultState = () => ({\n  type: MultiCandidateRequestActonTypes.SET_DEFAULT_STATE,\n});\n\nexport const setActiveStep = (activeStep) => ({\n  type: MultiCandidateRequestActonTypes.SET_ACTIVE_STEP,\n  payload: {activeStep},\n});","import React, {memo} from \"react\";\nimport {Grid} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport {setSelectedTaskIds} from \"../../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\nimport StyledDataGrid from \"../../../components/table/StyledDataGrid\";\n\nconst GRID_BOX_HEIGHT = 500;\n\nconst TableBox = ({\n  tableData,\n  tableColumnsOptions,\n  selectedTaskIds,\n  setSelectedTaskIds,\n  ...props\n}) => {\n  return (\n    <Grid item container style={{height: GRID_BOX_HEIGHT}} xs={12}>\n      <StyledDataGrid\n        columns={tableColumnsOptions}\n        rows={tableData}\n        pageSize={50}\n        rowsPerPageOptions={[50]}\n        checkboxSelection\n        disableSelectionOnClick\n        onSelectionModelChange={(newSelection) => {\n          process.env.REACT_APP_ENVIRONMENT === \"staging\"\n            ? setSelectedTaskIds(newSelection)\n            : setSelectedTaskIds(newSelection?.selectionModel);\n        }}\n        selectionModel={selectedTaskIds}\n        {...props}\n      />\n    </Grid>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    selectedTaskIds: state.multiCandidateRequest.get(\"selectedTaskIds\"),\n  }),\n  {setSelectedTaskIds}\n)(memo(TableBox));\n","export const CSVFields = [\n  \"firstName\",\n  \"lastName\",\n  \"nonLpEmail\",\n  \"employeeType\",\n  \"locationCode\",\n  \"jobTitle\",\n  \"hiringManagerEmail\",\n  \"businessUnit\",\n  \"department\",\n  \"company\",\n  \"startDate\",\n];\n\nexport const DEFAULT_NO_DATA_LABEL = 'No data';\n\nconst tableColumnsOptions = [\n  {\n    field: \"id\",\n    headerName: \"ID\",\n    width: 100,\n    valueGetter: ({ row }) => row.id ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"firstName\",\n    headerName: \"First Name\",\n    width: 160,\n    valueGetter: ({ row }) => row.firstName ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"lastName\",\n    headerName: \"Last Name\",\n    width: 160,\n    valueGetter: ({ row }) => row.lastName ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"nonLpEmail\",\n    headerName: \"Non-LP E-Mail Address\",\n    width: 200,\n    valueGetter: ({ row }) => row.nonLpEmail ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"employeeType\",\n    headerName: \"Employment Type\",\n    width: 160,\n    valueGetter: ({ row }) => row.employeeType ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"locationCode\",\n    headerName: \"Location Code\",\n    width: 150,\n    valueGetter: ({ row }) => row.locationCode ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"jobTitle\",\n    headerName: \"Job Title\",\n    width: 200,\n    valueGetter: ({ row }) => row.jobTitle ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"hiringManagerEmail\",\n    headerName: \"Manager Email\",\n    width: 200,\n    valueGetter: ({ row }) => row.hiringManagerEmail ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"onboardBusinessUnit\",\n    headerName: \"Business Unit\",\n    width: 200,\n    valueGetter: ({ row }) => row.businessUnit ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"onboardDepartment\",\n    headerName: \"Department\",\n    width: 200,\n    valueGetter: ({ row }) => row.department ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"company\",\n    headerName: \"Company\",\n    width: 220,\n    valueGetter: ({ row }) => row.company ?? DEFAULT_NO_DATA_LABEL\n  },\n  {\n    field: \"startDate\",\n    headerName: \"Start Date\",\n    width: 160,\n    valueGetter: ({ row }) => row.startDate ?? DEFAULT_NO_DATA_LABEL\n  },\n];\n\nexport default tableColumnsOptions;","import React, {memo} from \"react\";\nimport {connect} from \"react-redux\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../../components/blocks/SectionTitleBlock\";\nimport TableBox from \"./TableBox\";\nimport tableColumnsOptions from \"./TableOptions\";\nimport {Grow} from \"@material-ui/core\";\n\nconst ImportDetails = ({csvData}) => {\n  return (\n    <>\n      {csvData?.length > 0 &&\n      <RequestFormWrapper>\n        <SectionTitleBlock title=\"Import Details\">\n          <Grow in={csvData?.length > 0}>\n            <TableBox\n              tableData={csvData}\n              tableColumnsOptions={tableColumnsOptions}\n            />\n          </Grow>\n        </SectionTitleBlock>\n      </RequestFormWrapper>\n      }\n    </>\n  );\n};\n\nexport default connect(\n  state => ({csvData: state.multiCandidateRequest.get(\"csvData\")}),\n  {})\n(memo(ImportDetails));","import React, {memo, useRef} from \"react\";\nimport {Box, Button, Grid, makeStyles, TextField} from \"@material-ui/core\";\nimport RequestFormTypography from \"../../../components/typographies/RequestFormTypography\";\nimport {connect} from \"react-redux\";\nimport {\n  setCSVData,\n  setCSVFileError,\n  setDefaultState\n} from \"../../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\nimport {CSVReader} from \"react-papaparse\";\nimport {CSVFields} from \"./TableOptions\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    overflowY: \"auto\"\n  }\n}));\n\nconst convertArrayToObject = (array, keys, itemNumber) => {\n  const initialValue = {id: itemNumber + 1};\n  return array?.reduce((obj, item, index) => {\n    return {...obj, [keys[index]]: item?.trim()?.replace(/\\s+/g, \" \")};\n  }, initialValue);\n};\n\nconst ImportCSV = ({csvFileError, setCSVFileError, setCSVData, setDefaultState}) => {\n  const buttonRef = useRef(null);\n  const classes = useStyles();\n\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = (data) => {\n    setDefaultState();\n    const parsedData = data?.slice(1)?.map(({data}, index) => convertArrayToObject(data, CSVFields, index));\n\n    setCSVData(parsedData);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    setCSVFileError(err);\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = (data) => {\n    setDefaultState();\n  };\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  return (\n    <Grid item container>\n      <Grid item xs={4}>\n        <RequestFormTypography title=\"* Select CSV to import\" />\n      </Grid>\n      <Grid item xs={8}>\n        <Box style={{display: \"flex\"}}>\n          <CSVReader\n            ref={buttonRef}\n            onFileLoad={handleOnFileLoad}\n            onError={handleOnError}\n            noClick\n            noDrag\n            onRemoveFile={handleOnRemoveFile}\n          >\n            {({file}) => (\n              <aside style={{display: \"flex\", flexDirection: \"row\"}}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{marginRight: \"1em\"}}\n                  onClick={handleOpenDialog}\n                >\n                  Select\n                </Button>\n                <TextField\n                  id=\"requisition-type\"\n                  error={!!csvFileError}\n                  style={{width: \"60ch\", marginRight: \"1em\"}}\n                  value={file && file.name || \"\"}\n                  InputProps={{classes: {input: classes.input}}}\n                  disabled\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  style={{marginRight: \"1em\"}}\n                  onClick={handleRemoveFile}\n                  disabled={!file}\n                >\n                  Remove\n                </Button>\n              </aside>\n            )}\n          </CSVReader>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    csvFileError: state.multiCandidateRequest.get(\"csvFileError\")\n  }),\n  {setCSVData, setCSVFileError, setDefaultState}\n)(memo(ImportCSV));\n","import React, {memo} from \"react\";\nimport RequestFormWrapper from \"../../components/requestFormWrapper/RequestFormWrapper\";\nimport SectionTitleBlock from \"../../components/blocks/SectionTitleBlock\";\nimport ImportDetails from \"./components/ImportDetails\";\nimport ImportCSV from \"./components/ImportCSV\";\n\nconst CreateMultiCandidateRequestForm = () => {\n  return (\n    <>\n      <RequestFormWrapper>\n        <SectionTitleBlock title=\"Import CSV\">\n          <ImportCSV />\n        </SectionTitleBlock>\n      </RequestFormWrapper>\n\n      {/*error block*/}\n      <ImportDetails/>\n    </>\n  );\n};\n\nexport default memo(CreateMultiCandidateRequestForm);\n","import React, {memo, useCallback, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {SEARCH_USERNAME} from \"../../../operations/queries/searchUsername\";\nimport {connect} from \"react-redux\";\nimport {\n  setExistingId,\n  setSelectedTaskUsername\n} from \"../../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\nimport LoadingCircle from \"../../../components/circularProgress/LoadingCircle\";\n\nconst CandidateUsername = ({firstName, lastName, id, setSelectedTaskUsername, setExistingId}) => {\n  const [currentUsername, setCurrentUsername] = useState(\"\");\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [index, setIndex] = useState(1);\n\n  const [executeSearch] = useLazyQuery(SEARCH_USERNAME, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      checkUsernameAvailable(data.search_username);\n    }\n  });\n\n  const checkUsernameAvailable = useCallback((searchUsernames) => {\n    if (searchUsernames && newUsername && id) {\n      if (firstName.length >= index) {\n        if (searchUsernames?.length > 0) {\n          searchUsernames?.forEach((user) => {\n            if (user.username.toLowerCase() === newUsername) {\n              setExistingId(id);\n              // if (firstName.length > index) { if (user.status !== \"ACTIVE\") {setOpen(true);}}\n              // else {setOpen(true);}\n              setIndex(index + 1);\n            }\n          });\n        } else {\n          setSelectedTaskUsername(id, newUsername);\n          setCurrentUsername(newUsername);\n        }\n      } else {\n        console.error(\"Can't find username\");\n      }\n    }\n  }, [newUsername, setSelectedTaskUsername, firstName, index, id, setExistingId]);\n\n  const createUsername = useCallback((index) => {\n    let username;\n    if (firstName && lastName) {\n      const first = firstName\n        .replace(/-|\\s/g, \"\")\n        .substring(0, index)\n        .toLowerCase();\n      const last = lastName.replace(/-|\\s/g, \"\").toLowerCase();\n\n      const combinedName = first + last;\n      if (combinedName?.length > 15) {\n        username = combinedName.substring(0, 15);\n      } else {\n        username = combinedName;\n      }\n      setNewUsername(username);\n    }\n  }, [firstName, lastName, setNewUsername]);\n\n  useEffect(() => {\n    if (newUsername) {\n      executeSearch({variables: {search: newUsername}});\n    }\n  }, [newUsername]);\n\n  useEffect(() => {\n    if (firstName && lastName) {\n      createUsername(index);\n    }\n  }, [firstName, lastName, createUsername, index]);\n\n  return (\n    <>\n      {!currentUsername ? <LoadingCircle size={24} /> : currentUsername}\n    </>\n  );\n};\n\nexport default connect(\n  () => ({}), {setSelectedTaskUsername, setExistingId})\n(memo(CandidateUsername));","import React, {memo, useCallback} from \"react\";\nimport {connect} from \"react-redux\";\nimport RequestFormWrapper from \"../../../components/requestFormWrapper/RequestFormWrapper\";\nimport TableBox from \"./TableBox\";\nimport tableColumnsOptions, {DEFAULT_NO_DATA_LABEL} from \"./TableOptions\";\nimport {Grow} from \"@material-ui/core\";\nimport AlreadyExistUsernameModal from \"../../../components/modals/AlreadyExistUsernameModal\";\nimport CandidateUsername from \"./CandidateUsername\";\nimport {setExistingId} from \"../../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\n\nconst fullTableColumnOptions = () => {\n  const options = tableColumnsOptions.concat(\n    [\n      {\n        field: \"locationDescription\",\n        headerName: \"Location Description\",\n        width: 250,\n        valueGetter: ({row}) => row.location?.locationDescription ?? DEFAULT_NO_DATA_LABEL\n      },\n      {\n        field: \"jobCode\",\n        headerName: \"Job Code\",\n        width: 160,\n        valueGetter: ({row}) => row.jobCode ?? DEFAULT_NO_DATA_LABEL\n      },\n      // {\n      //   field: \"managerName\",\n      //   headerName: \"Manager Name\",\n      //   width: 250,\n      //   valueGetter: ({ row }) => row.onboardManagerFirstName && row.onboardManagerLastName ?\n      //     `${row.onboardManagerFirstName} ${row.onboardManagerLastName}` : DEFAULT_NO_DATA_LABEL\n      // },\n    ]\n  );\n  options?.splice(3, 0, {\n    field: \"username\",\n    headerName: \"Username\",\n    width: 200,\n    renderCell: ({row}) => row.username ??\n      <CandidateUsername key={row.id} firstName={row?.firstName} lastName={row?.lastName} id={row.id} />\n  })\n  return options;\n}\n\nconst MultiCandidateDetails = ({selectedTasks, existingId, setExistingId}) => {\n\n  const handleClose = useCallback(() => {\n    setExistingId();\n  }, []);\n\n  return (\n    <>\n      {selectedTasks?.length > 0 &&\n      <RequestFormWrapper>\n        <Grow in={selectedTasks?.length > 0}>\n          <TableBox\n            tableData={selectedTasks}\n            tableColumnsOptions={fullTableColumnOptions()}\n            checkboxSelection={false}\n          />\n        </Grow>\n      </RequestFormWrapper>\n      }\n      {!!existingId && (\n        <AlreadyExistUsernameModal open={!!existingId} handleClose={handleClose} id={existingId} />\n      )}\n    </>\n  );\n};\n\nexport default connect(\n  state => ({\n    existingId: state.multiCandidateRequest.get(\"existingId\"),\n    selectedTasks: state.multiCandidateRequest.get(\"selectedTasks\")\n  }),\n  {setExistingId})\n(memo(MultiCandidateDetails));","import React, {memo} from \"react\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport SummaryTopTypography from \"../../components/typographies/TopTypography\";\nimport {Box} from \"@material-ui/core\";\nimport MultiCandidateDetails from \"./components/MultiCandidateDetails\";\n\nconst MultiCandidateRequestSummary = ({review}) => {\n  return (\n    <PaperCardWrapper>\n      <Box>\n        <SummaryTopTypography>\n          {review ? \"Review Users to be Onboarded\" : \"Request Completed\"}\n        </SummaryTopTypography>\n        <MultiCandidateDetails/>\n      </Box>\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(MultiCandidateRequestSummary);\n","import {gql} from \"@apollo/client\";\n\nexport const CREATE_MULTIPLE_ONBOARDING_TASKS = gql`\n  mutation CreateMultipleOnboardingTasks($input: [LpsyncTaskInput]) {\n    createMultipleOnboardingTasks(input: $input) {\n      id\n      taskType\n      taskStatus\n      taskScheduleType\n      taskScheduleEpochTime\n      taskScheduleDateTime\n      onboardingTask {\n        onboardUsername\n        onboardFirstName\n        onboardLastName\n        onboardNonLpEmail\n        onboardEmployeeType\n        onboardPoNumber\n        onboardJobCode\n        onboardJobTitle\n        onboardCompany\n        onboardLocation\n        onboardLocationDescription\n        onboardManagerId\n        onboardManagerEmail\n        onboardManagerFirstName\n        onboardManagerLastName\n        onboardBusinessUnit\n        onboardDepartment\n        onboardOfficeNumber\n        onboardMobileNumber\n        onboardDevice\n        firstApprovalBypass\n        isDeviceNoteConfirmed\n        isGoogleAccountNeeded\n        reqId\n        onboardingOktaGroups {\n          oktaGroupId\n          oktaGroupName\n        }\n        onboardingFinance {\n          onboardingSalaryCurrency\n          onboardingSalaryAmount\n          onboardingSalaryPeriod\n          onboardingContractMonths\n          onboardingContractHoursPerWeek\n        }\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_REQUISITION_JOB_CODES = gql`\n  query GetRequisitionJobCodes {\n    get_requisition_job_codes {\n        id\n        USJobCode\n        IntJobCode\n        typeName\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USERS_BY_EMAILS = gql`\n  query GetUsersByEmails($search: [String]!) {\n    get_users_by_emails(search: $search) {\n      id\n      status\n      profile {\n        businessUnit\n        companyName\n        costCenter\n        department\n        email\n        employeeNumber\n        employeeSince\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        manager\n        managerEmail\n        mobilePhone\n        primaryPhone\n        originalHireDate\n        userName\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_CONCUR_VENDORS = gql`\n  query getConcurVendors($search: [String]!) {\n    get_concur_vendors(search: $search) {\n      id\n      companyName\n    }\n  }\n`;\n","import React, {memo, useEffect, useMemo, useState} from \"react\";\nimport {useLazyQuery, useMutation, useQuery} from \"@apollo/client\";\nimport {Button} from \"@material-ui/core\";\nimport {CREATE_LOG_ENTRY} from \"../../operations/mutations/createLogEntry\";\nimport MissedInputModal from \"../../components/modals/MissedInputModal\";\nimport {connect} from \"react-redux\";\n\nimport TaskTypes from \"../../data/constants/TaskTypes\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  isEmployeeType,\n  isEmpty, isInArray,\n  isMoreThan25Char, isPastDate,\n  validateEmailInput,\n  validateNameInput,\n  validDateFormat,\n} from \"../../data/helper/validation\";\nimport {getValidationMessage} from \"../../data/helper/helpers\";\nimport {setSelectedTasks} from \"../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\nimport TaskStatuses from \"../../data/constants/TaskStatuses\";\nimport TaskScheduleTypes from \"../../data/constants/TaskScheduleTypes\";\nimport {GET_ULTI_LOCATIONS} from \"../../operations/queries/getUltiLocations\";\nimport handleError from \"../../data/handleError\";\nimport {CREATE_MULTIPLE_ONBOARDING_TASKS} from \"../../operations/mutations/createMultipleOnboardingTasks\";\nimport {GET_REQUISITION_JOB_CODES} from \"../../operations/queries/getRequisitionJobCodes\";\nimport {GET_ULTI_BU_DEPT} from \"../../operations/queries/getUltiBUDept\";\nimport {GET_USERS_BY_EMAILS} from \"../../operations/queries/getUsersByEmails\";\nimport {GET_CONCUR_VENDORS} from \"../../operations/queries/getConcurVendors\";\nimport EmployeeTypes from \"../../data/constants/EmployeeTypes\";\n\nconst getGroups = (employeeType) => {\n  if (employeeType === EmployeeTypes.FULL_TIME) {\n    return [{oktaGroupId: \"00gavutg8pz6etkYY2p7\", oktaGroupName: \"SSO-Google-User\"}];\n  }\n  return [\n    {oktaGroupId: \"00gavutg8pz6etkYY2p7\", oktaGroupName: \"SSO-Google-User\"},\n    {oktaGroupId: \"00gbg7nt92aVJc8k92p7\", oktaGroupName: \"SDP\"}\n  ];\n};\n\nconst StepperButtons = ({\n  activeStep,\n  steps,\n  handleBack,\n  handleNext,\n  selectedTaskIds,\n  csvData,\n  selectedTasks,\n  setSelectedTasks\n}) => {\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [modalMsg, setModalMsg] = useState(\"\");\n  const [reqJobCodes, setReqJobCodes] = useState([]);\n  const [locationList, setLocationList] = useState();\n  const [businessUnits, setBusinessUnits] = useState();\n  const [managers, setManagers] = useState();\n  const [companies, setCompanies] = useState();\n\n  useQuery(GET_ULTI_LOCATIONS, {\n    onCompleted: (data) => {\n      setLocationList(data.get_ulti_locations?.map(({locationCode, locationDescription, locationCountryCode}) =>\n        ({locationCode, locationDescription, locationCountryCode})\n      ));\n    }\n  });\n\n  useQuery(GET_REQUISITION_JOB_CODES, {\n    onCompleted: (data) => {\n      setReqJobCodes(data.get_requisition_job_codes);\n    },\n    onError: error => handleError(error)(history)\n  });\n\n  useQuery(GET_ULTI_BU_DEPT, {\n    onCompleted: (data) => {\n      const businessUnitSet = {};\n      data.get_ulti_bu_dept?.map(b => businessUnitSet[b.businessUnit] ?\n        businessUnitSet[b.businessUnit].push(b.department) :\n        businessUnitSet[b.businessUnit] = [b.department]);\n      setBusinessUnits(businessUnitSet);\n    },\n    onError: error => handleError(error)(history)\n  });\n\n  const [executeConcurCompanies] = useLazyQuery(GET_CONCUR_VENDORS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setCompanies(data.get_concur_vendors?.map(c => c.companyName));\n    },\n    onError: error => handleError(error)(history)\n  });\n\n  const [executeUsersByEmail] = useLazyQuery(GET_USERS_BY_EMAILS, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => {\n      setManagers(data.get_users_by_emails);\n    },\n    onError: error => handleError(error)(history)\n  });\n\n  useEffect(() => {\n    if(csvData?.length) {\n      const managersEmails = [...(new Set(csvData?.map(task => task?.hiringManagerEmail)))];\n      const companiesNames = [...new Set(csvData?.map(task => task?.company)?.concat([\"Liveperson INC.\"]))]\n      executeUsersByEmail({variables: {search: managersEmails}});\n      executeConcurCompanies({variables: {search: companiesNames}});\n    }\n  }, [csvData]);\n\n\n  const selectedTasksData = useMemo(() =>\n      selectedTaskIds?.length > 0 && csvData?.filter(data => selectedTaskIds.includes(data.id)),\n    [selectedTaskIds, csvData]);\n\n  const [createMultipleOnboardingTasks] = useMutation(CREATE_MULTIPLE_ONBOARDING_TASKS, {\n    onError: (error) => handleError(error)(history),\n    onCompleted(data) {\n      data?.createMultipleOnboardingTasks?.forEach(task => {\n        createLog(\n          \"info\",\n          `Candidate Task Created (${task?.id}); Req ID:\"n/a; Planned Start Date: ${task.taskScheduleDateTime\n          }; Manager: ${task.onboardingTask.onboardManagerEmail\n          }; Business Unit: ${task.onboardingTask.onboardBusinessUnit}; Department: ${task.onboardingTask.onboardDepartment\n          }; Location: ${task.onboardingTask.onboardLocationDescription} (${task.onboardingTask.onboardLocation\n          }); Onboard: ${task.onboardingTask.onboardFirstName} ${task.onboardingTask.onboardLastName\n          }; Emp Type: ${task.onboardingTask.onboardEmployeeType};  Job Title: ${task.onboardingTask.onboardJobTitle\n          }; Company: ${task.onboardingTask.onboardCompany};  Selected Device: ${task.onboardingTask.onboardDevice}`\n        );\n      });\n    }\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY, {\n    onError: (error) => console.error(\"Error: \", error)\n  });\n\n  const createLog = (info, description) => {\n    createLogEntry({\n      variables: {\n        input: {\n          logType: \"Candidate\",\n          logNotification: info,\n          logDescription: description\n        }\n      }\n    });\n  };\n\n  const createTasks = () => {\n    const input = selectedTasks?.map(task => {\n      const timestamp = new Date(`${task.startDate}T00:00Z`).getTime() / 1000.0;\n\n      const groups = getGroups(task.employeeType);\n\n      return {\n        taskType: TaskTypes.ONBOARDING,\n        taskStatus: TaskStatuses.PENDING,\n        taskScheduleEpochTime: timestamp,\n        taskScheduleDateTime: `${task.startDate}T00:00`,\n        taskScheduleType: TaskScheduleTypes.SCHEDULED,\n        onboardingTask: {\n          onboardManagerEmail: task.hiringManagerEmail,\n          onboardManagerFirstName: task.hiringManagerFirstName.trim(),\n          onboardManagerLastName: task.hiringManagerLastName.trim(),\n          onboardManagerId: task.hiringManagerEmployeeNumber,\n          onboardUsername: task.username,\n          onboardBusinessUnit: task.businessUnit,\n          onboardDepartment: task.department,\n          onboardLocation: task.locationCode,\n          onboardLocationDescription: task.location?.locationDescription,\n          onboardEmployeeType: task.employeeType,\n          onboardFirstName: task.firstName?.trim(),\n          onboardLastName: task.lastName?.trim(),\n          onboardNonLpEmail: task.nonLpEmail?.trim(),\n          onboardJobCode: task.jobCode,\n          onboardJobTitle: task.jobTitle,\n          onboardCompany: task.company,\n          onboardOfficeNumber: \"\",\n          onboardMobileNumber: \"\",\n          onboardDevice: \"No\",\n          onboardingOktaGroups: groups,\n          firstApprovalBypass: false,\n          reqId: null,\n          isDeviceNoteConfirmed: false,\n          isGoogleAccountNeeded: true,\n          onboardingFinance: {\n            onboardingSalaryCurrency: null,\n            onboardingSalaryAmount: null,\n            onboardingSalaryPeriod: null,\n            onboardingContractMonths: null,\n            onboardingContractHoursPerWeek: null\n          }\n        }\n      };\n    });\n    createMultipleOnboardingTasks({\n      variables: {input}\n    });\n  };\n\n  const handleCheck = (task) => {\n    const {\n      id,\n      firstName,\n      lastName,\n      nonLpEmail,\n      employeeType,\n      locationCode,\n      jobTitle,\n      hiringManagerEmail,\n      businessUnit,\n      department,\n      company,\n      startDate\n    } = task || {};\n\n    const errorMessage =\n      getValidationMessage(firstName, [isEmpty, validateNameInput], \"First Name\") ||\n      getValidationMessage(lastName, [isEmpty, validateNameInput], \"Last Name\") ||\n      getValidationMessage(nonLpEmail, [isEmpty, validateEmailInput], \"Personal email\") ||\n      getValidationMessage(employeeType, [isEmpty, isEmployeeType], \"Employee Type\") ||\n      getValidationMessage(\n        locationCode,\n        [isEmpty, isInArray(locationList?.map(l => l.locationCode))],\n        \"Location\"\n      ) ||\n      getValidationMessage(jobTitle, [isEmpty, isMoreThan25Char], \"Job Title\") ||\n      getValidationMessage(\n        hiringManagerEmail,\n        [isEmpty, validateEmailInput, isInArray(managers?.map(m => m?.profile?.email))],\n        \"Manager Email\"\n      ) ||\n      getValidationMessage(\n        businessUnit,\n        [isEmpty, isInArray(businessUnits && Object.keys(businessUnits))],\n        \"Business Unit\"\n      ) ||\n      getValidationMessage(department,\n        [isEmpty, isInArray(businessUnits?.[businessUnit])],\n        \"Department\"\n      ) ||\n      getValidationMessage(company,\n        [company ? isInArray(companies) : () => \"\"],\n        \"Company\"\n      ) ||\n      getValidationMessage(startDate, [isEmpty, validDateFormat, isPastDate], \"Start Date\");\n    if (errorMessage) {\n      handleOpen(errorMessage + ` in task with id: ${id}`);\n    }\n    return errorMessage;\n  };\n\n  const handleSecondCheck = (task) => {\n    const {id, company, username, jobCode, location, hiringManagerFirstName, hiringManagerLastName, hiringManagerEmployeeNumber} = task || {};\n    const errorMessage = handleCheck(task) ||\n      getValidationMessage(username, [isEmpty], \"Username\") ||\n      getValidationMessage(jobCode, [isEmpty], \"Job Code\") ||\n      getValidationMessage(location?.locationDescription, [isEmpty], \"LocationDescription\") ||\n      getValidationMessage(company, [isEmpty], \"Company\") ||\n      getValidationMessage(hiringManagerFirstName, [isEmpty], \"Hiring Manager First Name\") ||\n      getValidationMessage(hiringManagerLastName, [isEmpty], \"Hiring Manager Last Name\") ||\n      getValidationMessage(hiringManagerEmployeeNumber, [isEmpty], \"Hiring Manager Id\");\n\n    if (errorMessage) {\n      handleOpen(errorMessage + ` in task with id ${id}`);\n    }\n    return errorMessage;\n  };\n\n  const handleOnClick = () => {\n    if (!selectedTasksData?.length) {\n      handleOpen(\"You should select at least one task\");\n    } else {\n      if (activeStep === 0) {\n        const message = selectedTasksData?.map(task => handleCheck(task));\n        if (!message?.filter(m => !!m)?.length) {\n          const selectedTasksFullData = selectedTasksData?.map(task => {\n            const location = locationList?.find(l => l.locationCode === task.locationCode);\n            const jobCodes = reqJobCodes?.find(j => j.typeName === task.employeeType);\n            const jobCode = (location?.locationCountryCode === \"USA\") ? jobCodes?.USJobCode : jobCodes?.IntJobCode;\n\n            const manager = managers?.find(m => m?.profile?.email === task?.hiringManagerEmail);\n            const {\n              firstName: hiringManagerFirstName,\n              lastName: hiringManagerLastName,\n              employeeNumber: hiringManagerEmployeeNumber\n            } = manager?.profile || {};\n\n            return {\n              ...task,\n              company: task.company || \"Liveperson INC.\",\n              location,\n              jobCode,\n              hiringManagerFirstName,\n              hiringManagerLastName,\n              hiringManagerEmployeeNumber\n            };\n          });\n          setSelectedTasks(selectedTasksFullData);\n          handleNext();\n        }\n      }\n      if (activeStep === steps?.length - 2) {\n        const message2 = selectedTasks?.map(task => handleSecondCheck(task));\n        if (!message2?.filter(m => !!m)?.length) {\n          createTasks();\n          handleNext();\n        }\n      }\n    }\n  };\n\n  const handleOpen = (msg) => {\n    setModalMsg(msg + \"!\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button disabled={activeStep === 0} onClick={handleBack}>\n        Back\n      </Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleOnClick}>\n        {activeStep === steps?.length - 2 ? \"Confirm\" : \"Next\"}\n      </Button>\n      <MissedInputModal\n        open={open}\n        handleClose={handleClose}\n        modalMsg={modalMsg}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  selectedTaskIds: state.multiCandidateRequest.get(\"selectedTaskIds\"),\n  csvData: state.multiCandidateRequest.get(\"csvData\"),\n  selectedTasks: state.multiCandidateRequest.get(\"selectedTasks\")\n});\n\nconst mapDispatchToProps = {\n  setSelectedTasks\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(StepperButtons));\n","import React, {memo, useEffect} from \"react\";\nimport RequestWrapperPage from \"../../components/requestWrapper/RequestWrapperPage\";\nimport CreateMultiCandidateRequestForm from \"./CreateMultiCandidateRequestForm\";\nimport MultiCandidateRequestSummary from \"./MultiCandidateRequestSummary\";\nimport StepperButtons from \"./StepperButtons\";\nimport {connect} from \"react-redux\";\nimport {\n  setActiveStep,\n  setDefaultState,\n} from \"../../data/redux/multiCandidateRequest/multiCandidateRequestActions\";\nimport StepperResetRequestButton from \"../../components/buttons/StepperResetRequestButton\";\n\nconst RequestSteps = [\n  \"Import CSV\",\n  \"Review Candidates\",\n  \"Candidates Submitted\",\n];\n\nconst MultiCandidateRequestPageContent = ({\n  activeStep,\n  setActiveStep,\n  setDefaultState,\n}) => {\n  useEffect(() => {\n    return () => setDefaultState();\n  }, []);\n\n  return (\n    <RequestWrapperPage\n      steps={RequestSteps}\n      activeStep={activeStep}\n      setActiveStep={setActiveStep}\n      createFormComponent={<CreateMultiCandidateRequestForm />}\n      reviewComponent={<MultiCandidateRequestSummary review />}\n      summaryComponent={<MultiCandidateRequestSummary />}\n      stepperButtons={<StepperButtons />}\n      stepperResetBtn={\n        <StepperResetRequestButton clearData={setDefaultState} />\n      }\n    />\n  );\n};\n\nexport default connect(\n  (state) => ({activeStep: state.multiCandidateRequest.get(\"activeStep\")}),\n  {setDefaultState, setActiveStep}\n)(memo(MultiCandidateRequestPageContent));\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {Box, Link, Typography} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport MultiCandidateRequestPageContent from \"./MultiCandidateRequestPageContent\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\nimport InfoBlock from \"../../components/InfoBlock\";\n\nconst MultiCandidateRequestPage = () => {\n  const {permMultiCandidateRequestView} = useContext(AuthUserContext);\n  const [viewCandidateRequest, setViewCandidateRequest] = useState(false);\n\n  useEffect(() => {\n    if (permMultiCandidateRequestView) {\n      setViewCandidateRequest(true);\n    }\n  }, [permMultiCandidateRequestView]);\n\n  return (\n    <Page title=\"Multi-Candidate Onboarding Request | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"MULTI-CANDIDATE ONBOARDING REQUEST\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Multi-Candidate Onboarding Request\" />\n\n        {viewCandidateRequest ? (\n          <>\n            <InfoBlock>\n              <Typography component={\"div\"}>\n                This tools allows you to import a CSV for user/candidates who\n                need to be onboarded and/or sent a welcome email.\n                <br />\n                <Link\n                  href=\"https://storage.googleapis.com/lpsync/files/lpsync-multi-candidate-template.csv\"\n                  download\n                  style={{color: \"black\"}}\n                  underline={\"always\"}\n                >\n                  Download CSV format example.\n                </Link>\n              </Typography>\n            </InfoBlock>\n            <MultiCandidateRequestPageContent />\n          </>\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(MultiCandidateRequestPage);\n","import React, { Fragment } from \"react\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst action = (key, onClose, onShow) => (\n  <Fragment>\n    <Button onClick={() => {onShow(); onClose(key);}}>\n      Show\n    </Button>\n    <IconButton onClick={() => { onClose(key) }}>\n      <ClearIcon/>\n    </IconButton>\n  </Fragment>\n);\n\nexport default action;\n\n\nexport const getNotificationMessage = (taskType, type, id) => {\n  return `The ${taskType} task with id ${id} was ${type}`;\n};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { closeSnackbar as closeSnackbarAction, removeSnackbar } from \"../../data/redux/common/commonActions\";\nimport action from \"./notifiacationAction\";\n\nlet displayed = [];\n\nconst useNotifier = () => {\n  const dispatch = useDispatch();\n  const handleCloseSnackbar = (...args) => dispatch(closeSnackbarAction(...args));\n\n  const notifications = useSelector(state => state.common.get(\"notifications\") || []);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const storeDisplayed = (id) => {\n    displayed = [...displayed, id];\n  };\n\n  const removeDisplayed = (id) => {\n    displayed = [...displayed.filter(key => id !== key)];\n  };\n\n  useEffect(() => {\n    notifications?.forEach(({ key, message, options = {}, dismissed = false, onShow }) => {\n      if (dismissed) {\n        // dismiss snackbar using notistack\n        closeSnackbar(key);\n        return;\n      }\n\n      // do nothing if snackbar is already displayed\n      if (displayed?.includes(key)) return;\n\n      // display snackbar using notistack\n      enqueueSnackbar(message, {\n        key,\n        variant: \"success\",\n        ...options,\n        action: () => action(key, handleCloseSnackbar, onShow),\n        onClose: (event, reason, myKey) => {\n          if (options.onClose) {\n            options.onClose(event, reason, myKey);\n          }\n        },\n        onExited: (event, myKey) => {\n          // remove this snackbar from redux store\n          dispatch(removeSnackbar(myKey));\n          removeDisplayed(myKey);\n        },\n      });\n\n      // keep track of snackbars that we've displayed\n      storeDisplayed(key);\n    });\n  }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n};\n\nexport default useNotifier;\n","import BreadcrumbHomeBox from \"../../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../../components/breadcrumbs/BreadcrumbText\";\nimport {Box, Button, makeStyles} from \"@material-ui/core\";\nimport PageTitleBox from \"../../../components/blocks/PageTitleBox\";\nimport Page from \"../../../components/Page\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  page: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n  },\n  headerBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n  },\n  root: {\n    backgroundColor: \"#000\",\n    color: \"#fff\",\n  },\n  pageNav: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  pageNavButton: {\n    marginRight: 18,\n  },\n});\n\nconst PageComponent = ({title, children, breadcrumbs, backButtonLink}) => {\n  const classes = useStyles();\n  return (\n    <Page title={title} className={classes.page}>\n      <BreadcrumbHomeBox>\n        {breadcrumbs.map((item, index) => (\n          <BreadcrumbText key={index} title={item} />\n        ))}\n      </BreadcrumbHomeBox>\n\n      <Box mx={3} className={classes.pageNav}>\n        <PageTitleBox title={title} className={classes.headerBox} />\n        {backButtonLink && (\n          <NavLink to={backButtonLink} className={classes.pageNavButton}>\n            <Button style={{width: 100}} variant=\"outlined\">\n              BACK\n            </Button>\n          </NavLink>\n        )}\n      </Box>\n      {children}\n    </Page>\n  );\n};\n\nexport default PageComponent;\n","import {Divider, makeStyles} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Box} from \"@mui/material\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\n\nconst useStyles = makeStyles((theme) => ({\n  block: {\n    position: \"relative\",\n  },\n  blockDivider: {\n    height: 1,\n    backgroundColor: \"#ccc\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  gradientPaper: {\n    backgroundImage: theme.palette.background.gradient,\n  },\n}));\n\nconst SaSContainer = ({children, gradient}) => {\n  const classes = useStyles();\n  return (\n    <Box mx={3} mt={3} className={classes.block}>\n      <PaperCardWrapper className={gradient && classes.gradientPaper}>\n        {children}\n      </PaperCardWrapper>\n    </Box>\n  );\n};\nexport default SaSContainer;\n","import {Button, CircularProgress} from \"@material-ui/core\";\nimport React from \"react\";\n\nconst LoadingButton = ({\n  children,\n  disabled,\n  className,\n  onClick,\n  loading,\n  ...props\n}) => {\n  return (\n    <Button\n      variant=\"contained\"\n      size=\"small\"\n      onClick={onClick}\n      className={className}\n      color={\"secondary\"}\n      disabled={disabled}\n      style={{position: \"relative\", paddingLeft: 40, paddingRight: 40}}\n      {...props}\n    >\n      {loading && (\n        <CircularProgress\n          size={20}\n          color=\"inherit\"\n          style={{position: \"absolute\", left: 12}}\n        />\n      )}\n      {children}\n    </Button>\n  );\n};\nexport default LoadingButton;\n","import {Box, makeStyles} from \"@material-ui/core\";\nimport SearchTextField from \"../../../components/inputs/SearchTextField\";\nimport SelectTextField from \"../../../components/inputs/SelectTextfield\";\nimport LoadingButton from \"../../../components/buttons/LoadingButton\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  searchButton: {\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n  searchContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  searchRow: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    marginRight: 14,\n    flexGrow: 1,\n  },\n  select: {\n    marginLeft: 14,\n    borderTopLeftRadius: 4,\n    borderTopRightRadius: 4,\n    width: 150,\n    background: theme.palette.primary.main,\n    \"& .MuiSelect-select\": {\n      padding: 12,\n      paddingRight: 24,\n    },\n  },\n  search: {\n    flexGrow: 1,\n    \"& .MuiInputBase-input\": {\n      padding: 12,\n    },\n    \"& .MuiFilledInput-root\": {\n      background: theme.palette.primary.main,\n    },\n  },\n}));\n\nconst SaSSearch = ({\n  query,\n  onChange,\n  onSearch,\n  onClose,\n  queryType,\n  setQueryType,\n  loading,\n  onBlur,\n}) => {\n  const classes = useStyles();\n  const enterHandler = (key) => {\n    if (key === \"Enter\") onSearch();\n  };\n  return (\n    <Box className={classes.searchContainer} onBlur={onBlur}>\n      <Box className={classes.searchRow}>\n        <SearchTextField\n          className={classes.search}\n          margin=\"none\"\n          placeholder=\"Search by Tier, Owner, Team, Service Name or System Name\"\n          handleChange={onChange}\n          value={query}\n          onKeyPress={(e) => enterHandler(e.key)}\n          handleClose={onClose}\n        />\n        <SelectTextField\n          dataList={[\"All\", \"Systems\", \"Services\"]}\n          deleteFirst={true}\n          value={queryType}\n          className={classes.select}\n          onValueChange={setQueryType}\n        />\n      </Box>\n      <LoadingButton\n        loading={loading}\n        variant=\"contained\"\n        className={classes.searchButton}\n        onClick={onSearch}\n      >\n        SEARCH\n      </LoadingButton>\n    </Box>\n  );\n};\nexport default SaSSearch;\n","import {Tooltip, Typography} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\nimport {Box} from \"@mui/material\";\nimport React from \"react\";\n\nconst SaSTitle = ({children, tooltipText, ...props}) => {\n  return (\n    <Box style={{display: \"flex\"}} {...props}>\n      <Typography>{children}</Typography>\n      <Tooltip title={tooltipText} style={{marginLeft: 10, cursor: \"help\"}}>\n        <InfoIcon />\n      </Tooltip>\n    </Box>\n  );\n};\nexport default SaSTitle;\n","import {makeStyles} from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  icon: {},\n  container: {\n    borderBottom: \"1px solid rgba(81, 81, 81, 1)\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    position: \"relative\",\n    padding: \"3px 64px\",\n    \"&:hover\": {\n      backgroundColor: `${theme.palette.secondary.light}`,\n      cursor: \"pointer\",\n    },\n  },\n  link: {\n    color: \"inherit\",\n    textDecoration: \"underline\",\n    overflowX: \"hidden\",\n  },\n  tierText: {fontWeight: 700, color: \"#000\"},\n  flag: {\n    bottom: 0,\n    top: 0,\n    left: 0,\n  },\n  settings: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#000\",\n    position: \"absolute\",\n    bottom: 0,\n    top: 0,\n    right: 0,\n    width: 50,\n    cursor: \"pointer\",\n  },\n  settingsIcon: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n  },\n  item: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: \"1 1 20%\",\n    overflowX: \"hidden\",\n  },\n  itemCenter: {\n    justifyContent: \"center\",\n  },\n  itemText: {\n    marginLeft: 5,\n    whiteSpace: \"nowrap\",\n    overflowX: \"hidden\",\n    textOverflow: \"ellipsis\",\n    paddingRight: 10,\n  },\n}));\n","import {Box, Menu, MenuItem} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {Group, MoreVert, Person, Settings, Warning} from \"@material-ui/icons\";\nimport {Tooltip, Typography} from \"@material-ui/core\";\nimport TaskStatusBlock from \"../../../../components/taskManager/TaskStatusBlock\";\nimport {useStyles} from \"./SaSListItemStyles\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\nimport SaSFlag from \"../SaSFlag\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\n\nconst SaSListItem = ({data, openModal, ...props}) => {\n  const typographyVariant = \"subtitle1\";\n  const classes = useStyles();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (e) => {\n    e?.stopPropagation();\n    setAnchorEl(null);\n  };\n\n  const handleModalOpen = (e) => {\n    e?.stopPropagation();\n    handleClose();\n    openModal(data.team);\n  };\n\n  const redirectToService = (e) => {\n    e.stopPropagation();\n    history.push(`${FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}/${data.id}`);\n  };\n\n  const redirectToOwner = (e) => {\n    e.stopPropagation();\n    history.push(\n      FrontendRoutes.USER_DIRECTORY_PROFILE(data.owner.email.split(\"@\")[0])\n    );\n  };\n\n  return (\n    <Box {...props} className={classes.container} onClick={redirectToService}>\n      <div className={`${classes.settings} ${classes.flag}`}>\n        <SaSFlag type={data?.flag} />\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/\"} className={classes.link}>\n          <Tooltip title={data.name}>\n            <Typography\n              className={classes.itemText}\n              variant={typographyVariant}\n            >\n              {data?.name}\n            </Typography>\n          </Tooltip>\n        </NavLink>\n      </div>\n      <div className={`${classes.item} ${classes.itemCenter}`}>\n        <TaskStatusBlock taskStatus={Number(data.tier)} id={data.tier} />\n      </div>\n      <div className={classes.item}>\n        <Settings />\n        <Tooltip title={`Service: ${data.type ? data.type : \"No Type\"}`}>\n          <Typography variant={typographyVariant} className={classes.itemText}>\n            {`Service: ${data.type ? data.type : \"No Type\"}`}\n          </Typography>\n        </Tooltip>\n      </div>\n      <div className={classes.item}>\n        <Person />\n        <Tooltip title={data.owner?.name}>\n          <Typography variant={typographyVariant} className={classes.itemText}>\n            {data.owner?.name || <NoResultsTypography variant={\"inherit\"} />}\n          </Typography>\n        </Tooltip>\n      </div>\n      <div className={classes.item}>\n        <Group />\n        <Tooltip title={data.team}>\n          <Typography variant={typographyVariant} className={classes.itemText}>\n            {data.team || <NoResultsTypography variant={\"inherit\"} />}\n          </Typography>\n        </Tooltip>\n      </div>\n      <div className={classes.settings}>\n        <div\n          color={\"inherit\"}\n          id=\"basic-button\"\n          aria-controls={open ? \"basic-menu\" : undefined}\n          aria-haspopup=\"true\"\n          aria-expanded={open ? \"true\" : undefined}\n          onClick={handleClick}\n          className={classes.settingsIcon}\n        >\n          <MoreVert />\n        </div>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            \"aria-labelledby\": \"basic-button\",\n          }}\n        >\n          <MenuItem onClick={redirectToService}>\n            <Settings className={classes.icon} />\n            <Typography variant={typographyVariant}>\n              View Service Profile\n            </Typography>\n          </MenuItem>\n          {data.owner && (\n            <MenuItem onClick={redirectToOwner}>\n              <Person className={classes.icon} />\n              <Typography variant={typographyVariant}>\n                View Owner Profile\n              </Typography>\n            </MenuItem>\n          )}\n          {data.team && (\n            <MenuItem onClick={handleModalOpen}>\n              <Group className={classes.icon} />\n              <Typography variant={typographyVariant}>\n                View Team Members\n              </Typography>\n            </MenuItem>\n          )}\n        </Menu>\n      </div>\n    </Box>\n  );\n};\nexport default React.memo(SaSListItem);\n","import SaSListItem from \"./SaSListItem/SaSListItem\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport {LinearProgress, Box} from \"@material-ui/core\";\n\nconst SaSList = ({data, openModal, loading}) => {\n  if (loading) return <LinearProgress color=\"secondary\" />;\n  return data?.length ? (\n    <Box style={{maxHeight: 600, overflowY: \"auto\"}}>\n      {data.map((item, index) => (\n        <SaSListItem key={index} data={item} openModal={openModal} />\n      ))}\n    </Box>\n  ) : (\n    <NoResultsTypography />\n  );\n};\nexport default SaSList;\n","import CustomModal from \"../../../components/modals/CustomModal\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport React from \"react\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles({\n  paper: {\n    border: \"1px solid rgba(255, 255, 255, 0.23)\",\n    overflowY: \"auto\",\n    flexGrow: 1,\n  },\n  link: {\n    color: \"#fff\",\n    flex: \"0 0 50%\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {display: \"flex\", justifyContent: \"space-between\", width: \"100%\"},\n  content: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    overflowY: \"auto\",\n    height: 380,\n  },\n  loader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexGrow: 1,\n  },\n  cardContainer: {display: \"flex\", padding: 10, flex: \"1 1 50%\"},\n  cardImg: {marginRight: 10},\n});\n\nconst SaSModal = ({isModalOpen, handleModalClose, data, loading}) => {\n  const members = data?.members;\n  const name = data?.name;\n\n  const classes = useStyles();\n\n  const modalSettings = {\n    open: isModalOpen,\n    onClose: handleModalClose,\n    \"aria-labelledby\": \"sas-modal\",\n    \"aria-describedby\": \"sas-modal\",\n    width: 700,\n    height: 540,\n    middlePosition: true,\n  };\n  return (\n    <CustomModal {...modalSettings}>\n      <Box className={classes.container}>\n        <Toolbar style={{width: \"100%\"}}>\n          <Box className={classes.header}>\n            <Typography variant=\"h6\">Team Members of {name}</Typography>\n            <Button variant=\"outlined\" size=\"small\" onClick={handleModalClose}>\n              <CloseIcon /> Close\n            </Button>\n          </Box>\n        </Toolbar>\n        <PaperCardWrapper paperClassName={classes.paper}>\n          <Box className={classes.content}>\n            {loading ? (\n              <Box className={classes.loader}>\n                <CircularProgress color=\"secondary\" />\n              </Box>\n            ) : (\n              members?.map((user, index) => (\n                <Box className={classes.cardContainer}>\n                  <Box className={classes.cardImg}>\n                    <img src={user.photo} />\n                  </Box>\n                  <Box>\n                    <NavLink\n                      key={index}\n                      to={FrontendRoutes.USER_DIRECTORY_PROFILE(user.userName)}\n                      className={classes.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Typography variant=\"subtitle1\">{`${user.firstName} ${user.lastName}`}</Typography>\n                    </NavLink>\n                    <Typography variant=\"subtitle2\">{user.jobTitle}</Typography>\n                  </Box>\n                </Box>\n              ))\n            )}\n          </Box>\n        </PaperCardWrapper>\n      </Box>\n    </CustomModal>\n  );\n};\n\nexport default SaSModal;\n","import {gql} from \"@apollo/client\";\n\nexport const SEARCH_SYSTEMS_AND_SERVICES = gql`\n  query SearchSystemsAndServices($search: String!) {\n    search_systems_and_services(search: $search) {\n      id\n      type\n      category\n      name\n      tier\n      description\n      owner {\n        email\n        name\n      }\n      impact\n      team\n      flagId\n      lastUpdated\n      flag {\n        id\n        name\n        colour\n        description\n      }\n    }\n  }\n`;\n\nexport const GET_SERVICE_WITH_ID = gql`\n  query GetServiceWithId($id: String!) {\n    get_service_with_id(id: $id) {\n      id\n      type\n      category\n      name\n      tier\n      description\n      impact\n      team\n      owner {\n        email\n        name\n      }\n      manager {\n        email\n        name\n      }\n      director {\n        email\n        name\n      }\n      changeApprover {\n        email\n        name\n      }\n      changeApproverBackup {\n        email\n        name\n      }\n      qaLead {\n        email\n        name\n      }\n      flagId\n      lastUpdated\n      flag {\n        id\n        name\n        colour\n        description\n      }\n      dependencies {\n        id\n        relId\n        sysId\n        name\n        relationship\n        sysService {\n          tier\n          type\n          flag {\n            id\n            name\n            colour\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import {gql} from \"@apollo/client\";\n\nexport const GET_GROUP_MEMBERS = gql`\n  query GetGroupMembers($group: String!) {\n    get_group_members(group: $group) {\n      id\n      photo\n      firstName\n      lastName\n      jobTitle\n      userName\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport PageComponent from \"./components/PageComponent\";\nimport SaSContainer from \"./components/SaSContainer\";\nimport SaSSearch from \"./components/SaSSearch\";\nimport SaSTitle from \"./components/SaSTitle\";\nimport SaSList from \"./components/SaSList\";\nimport SaSModal from \"./components/SaSModal\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {SEARCH_SYSTEMS_AND_SERVICES} from \"../../operations/queries/searchSystemsAndServices\";\nimport {GET_GROUP_MEMBERS} from \"../../operations/queries/getGroupMembers\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\n\nexport const ServiceAndSystemDirectoryTitle = \"SERVICE & SYSTEM DIRECTORY\";\n\nconst ServiceAndSystemDirectoryContent = () => {\n  const Title = ServiceAndSystemDirectoryTitle;\n  const {permSystemsAndServicesView} = useContext(AuthUserContext);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showSearchResults, setShowSearchResults] = useState(false);\n  const [searchType, setSearchType] = useState(\"All\");\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [data, setData] = useState(null);\n  const [modalData, setModalData] = useState(null);\n\n  const [searchSystemsAndServices, {loading: loadingData}] = useLazyQuery(\n    SEARCH_SYSTEMS_AND_SERVICES,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) => setData(data.search_systems_and_services),\n      onError: (error) => console.log(error),\n    }\n  );\n  const [getGroupMembers, {loading: loadingGroupMembers, variables}] =\n    useLazyQuery(GET_GROUP_MEMBERS, {\n      fetchPolicy: \"no-cache\",\n      onCompleted: (data) =>\n        setModalData({\n          name: variables.group,\n          members: data.get_group_members,\n        }),\n      onError: (error) => console.log(error),\n    });\n\n  const searchHandler = () => {\n    searchSystemsAndServices({variables: {search: searchQuery}});\n    setShowSearchResults(true);\n  };\n  const changeHandler = (value) => {\n    setSearchQuery(value);\n    if (value.trim() === \"\") {\n      searchSystemsAndServices({variables: {search: \"\"}});\n      setShowSearchResults(false);\n    }\n  };\n  const closeHandler = () => {\n    setShowSearchResults(false);\n    searchSystemsAndServices({variables: {search: \"\"}});\n  };\n\n  const handleModalOpen = (groupName) => {\n    setModalOpen(true);\n    getGroupMembers({\n      variables: {\n        group: groupName,\n      },\n    });\n  };\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const ownedByYouTooltip =\n    \"These are all of the services and systems that you are owner of.\";\n  const activeNotificationTooltip =\n    \"These are the systems and services that currently have active notifications.\";\n  const searchNotificationTooltip =\n    \"These are the systems and services that you are searching for.\";\n\n  useEffect(() => {\n    searchSystemsAndServices({variables: {search: \"\"}});\n  }, []);\n\n  return (\n    <PageComponent title={Title} breadcrumbs={[Title]}>\n      {permSystemsAndServicesView ? (\n        <>\n          <SaSContainer gradient>\n            <SaSSearch\n              onSearch={searchHandler}\n              onChange={changeHandler}\n              onClose={closeHandler}\n              query={searchQuery}\n              queryType={searchType}\n              setQueryType={setSearchType}\n              loading={loadingData}\n            />\n          </SaSContainer>\n\n          {showSearchResults ? (\n            <SaSContainer>\n              <SaSTitle tooltipText={searchNotificationTooltip} mb={2}>\n                Search Results\n              </SaSTitle>\n              <SaSList\n                data={data}\n                openModal={handleModalOpen}\n                loading={loadingData}\n              />\n            </SaSContainer>\n          ) : (\n            <>\n              <SaSContainer>\n                <SaSTitle tooltipText={ownedByYouTooltip} mb={2}>\n                  Services/systems owned by you\n                </SaSTitle>\n                <SaSList\n                  data={data}\n                  openModal={handleModalOpen}\n                  loading={loadingData}\n                />\n              </SaSContainer>\n\n              <SaSContainer>\n                <SaSTitle tooltipText={activeNotificationTooltip} mb={2}>\n                  Services/systems with active notifications\n                </SaSTitle>\n                <SaSList\n                  data={data?.filter((s) => s.flag)}\n                  openModal={handleModalOpen}\n                  loading={loadingData}\n                />\n              </SaSContainer>\n            </>\n          )}\n\n          <SaSModal\n            isModalOpen={isModalOpen}\n            handleModalClose={handleModalClose}\n            data={modalData}\n            loading={loadingGroupMembers}\n          />\n        </>\n      ) : (\n        <NoPermissionsError />\n      )}\n    </PageComponent>\n  );\n};\n\nexport default memo(ServiceAndSystemDirectoryContent);\n","import {Box, Tooltip, makeStyles} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\nimport React from \"react\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport {NavLink} from \"react-router-dom\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles({\n  container: {display: \"flex\", marginBottom: 10},\n  content: {flex: \"1 1 20%\", display: \"flex\", alignItems: \"flex-start\"},\n  tooltip: {marginRight: 10},\n  icon: {width: \"0.8em\", height: \"0.8em\", marginRight: 10},\n  leftContent: {flex: \"1 1 80%\", paddingLeft: 15},\n  link: {color: \"inherit\", textDecoration: \"underline\"},\n  row: {display: \"flex\", alignItems: \"center\"},\n});\n\nconst TabPanelItem = ({tooltip, title, content, contentType, link}) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.container}>\n      <Box className={classes.content}>\n        <Box className={classes.row}>\n          <Tooltip title={tooltip} className={classes.tooltip}>\n            <InfoIcon className={classes.icon} />\n          </Tooltip>\n          {title}\n        </Box>\n      </Box>\n      <Box className={classes.leftContent}>\n        {content ? (\n          contentType === \"component\" ? (\n            content\n          ) : (\n            <NavLink\n              to={link ? FrontendRoutes.USER_DIRECTORY_PROFILE(link) : null}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className={classes.link}\n            >\n              {content}\n            </NavLink>\n          )\n        ) : (\n          <NoResultsTypography variant=\"subtitle1\" />\n        )}\n      </Box>\n    </Box>\n  );\n};\nexport default TabPanelItem;\n","import {\n  Box,\n  Typography,\n  Button,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport TabPanelItem from \"./components/TabPanelItem\";\n\nconst useStyles = makeStyles({\n  row: {display: \"flex\", marginBottom: 10},\n  column: {display: \"flex\", flexDirection: \"column\"},\n  top: {display: \"flex\", justifyContent: \"space-between\"},\n  icon: {marginRight: 10},\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n});\n\nconst Overview = ({data, loading}) => {\n  const classes = useStyles();\n\n  if (loading)\n    return (\n      <Box className={classes.loader}>\n        <CircularProgress color=\"secondary\" />\n      </Box>\n    );\n  return (\n    data && (\n      <Box>\n        <Typography variant={\"subtitle1\"}>\n          <Box className={classes.top}>\n            <Typography>Overview of this Service</Typography>\n            <Button disabled={true} variant=\"contained\">\n              Update\n            </Button>\n          </Box>\n\n          <TabPanelItem\n            title={\"Service Type\"}\n            tooltip={\"The Type of Service.\"}\n            contentType={\"component\"}\n            content={data.type}\n          />\n\n          <TabPanelItem\n            title={\"Service Description\"}\n            tooltip={\n              \"Description of the Service. What it is for and how it works.\"\n            }\n            contentType={\"component\"}\n            content={data.description}\n          />\n\n          <TabPanelItem\n            title={\"Service Owner\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.owner?.name}\n            link={data.owner?.email?.split(\"@\")[0]}\n          />\n\n          <TabPanelItem\n            title={\"Service Criticality\"}\n            tooltip={\"How critical is this service\"}\n            contentType={\"component\"}\n            content={data.tier ? `Tier ${data.tier}` : null}\n          />\n\n          <TabPanelItem\n            title={\"Service Impact\"}\n            tooltip={\n              \"Description of the impact this service has if the service has an interruption.\"\n            }\n            contentType={\"component\"}\n            content={data.impact}\n          />\n        </Typography>\n      </Box>\n    )\n  );\n};\nexport default Overview;\n","import {Box, CircularProgress, Typography, makeStyles} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport FrontendRoutes from \"../../../../data/constants/FrontendRoutes\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport {Tooltip} from \"@mui/material\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    color: \"inherit\",\n    \"&:hover\": {\n      color: theme.palette.warning.main,\n    },\n  },\n  groupList: {\n    maxHeight: 290,\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n\nconst MembersList = ({loading, openHandler, groupMembers, title}) => {\n  const classes = useStyles();\n\n  if (!title) return <NoResultsTypography variant={\"subtitle1\"} />;\n\n  return (\n    <Tooltip\n      arrow\n      onOpen={openHandler}\n      title={\n        <Box className={classes.groupList}>\n          {loading ? (\n            <CircularProgress color={\"inherit\"} size={24} />\n          ) : groupMembers?.length ? (\n            groupMembers?.map((member, index) => (\n              <Box key={index}>\n                <NavLink\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.link}\n                  to={FrontendRoutes.USER_DIRECTORY_PROFILE(member.userName)}\n                >\n                  <Typography\n                    variant={\"subtitle1\"}\n                  >{`${member.firstName} ${member.lastName}`}</Typography>\n                </NavLink>\n              </Box>\n            ))\n          ) : (\n            <NoResultsTypography variant={\"subtitle1\"} />\n          )}\n        </Box>\n      }\n    >\n      <div style={{display: \"inline-block\"}}>{title}</div>\n    </Tooltip>\n  );\n};\nexport default MembersList;\n","import {\n  Box,\n  Typography,\n  Button,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport TabPanelItem from \"./components/TabPanelItem\";\nimport {Tooltip} from \"@mui/material\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {GET_GROUP_MEMBERS} from \"../../../operations/queries/getGroupMembers\";\nimport NoResultsTypography from \"../../../components/typographies/NoResultsTypography\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport MembersList from \"./components/MembersList\";\n\nconst useStyles = makeStyles((theme) => ({\n  row: {display: \"flex\", marginBottom: 10},\n  column: {display: \"flex\", flexDirection: \"column\"},\n  top: {display: \"flex\", justifyContent: \"space-between\"},\n  icon: {marginRight: 10},\n  loader: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n}));\n\nconst People = ({data, loading}) => {\n  const classes = useStyles();\n  const [groupMembers, setGroupMembers] = useState(null);\n\n  const [getGroupMembers, {loading: loadingGroupMembers}] = useLazyQuery(\n    GET_GROUP_MEMBERS,\n    {\n      onCompleted: (data) => setGroupMembers(data.get_group_members),\n      onError: (error) => console.log(error),\n    }\n  );\n\n  const getGroupMembersHandler = () => {\n    if (!groupMembers)\n      getGroupMembers({\n        variables: {\n          group: data.team,\n        },\n      });\n  };\n\n  const getUsername = (email) => {\n    if (email) {\n      if (email.includes(\"@\")) {\n        const username = email.split(\"@\")[0];\n        return username;\n      }\n    }\n    return null;\n  };\n\n  if (loading)\n    return (\n      <Box className={classes.loader}>\n        <CircularProgress color=\"secondary\" />\n      </Box>\n    );\n  return (\n    data && (\n      <Box>\n        <Typography variant={\"subtitle1\"}>\n          <Box className={classes.top}>\n            <Typography>People Associated with this Service</Typography>\n            <Button disabled={true} variant=\"contained\">\n              Update\n            </Button>\n          </Box>\n\n          <TabPanelItem\n            title={\"Team\"}\n            tooltip={\"The team Responsible for this service.\"}\n            contentType={\"component\"}\n            content={\n              <MembersList\n                loading={loadingGroupMembers}\n                openHandler={getGroupMembersHandler}\n                title={data.team}\n                groupMembers={groupMembers}\n              />\n            }\n          />\n\n          <TabPanelItem\n            title={\"Service Owner\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.owner?.name}\n            link={getUsername(data.owner?.email)}\n          />\n          <TabPanelItem\n            title={\"Director\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.director?.name}\n            link={getUsername(data.director?.email)}\n          />\n          <TabPanelItem\n            title={\"Manager\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.manager?.name}\n            link={getUsername(data.manager?.email)}\n          />\n          <TabPanelItem\n            title={\"Change Approver\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.changeApprover?.name}\n            link={getUsername(data.changeApprover?.email)}\n          />\n          <TabPanelItem\n            title={\"Change Approver Backup\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.changeApproverBackup?.name}\n            link={getUsername(data.changeApproverBackup?.email)}\n          />\n          <TabPanelItem\n            title={\"QA Lead\"}\n            tooltip={\"Who is responsible for this service.\"}\n            content={data.qaLead?.name}\n            link={getUsername(data.qaLead?.email)}\n          />\n        </Typography>\n      </Box>\n    )\n  );\n};\nexport default People;\n","import React, {memo} from \"react\";\nimport {Box} from \"@material-ui/core\";\nimport {GENERATE_DEPENDENCY_TABLE_COLUMNS} from \"../../../data/constants/ServiceAndSystemDirectory\";\nimport StyledDataGrid from \"../../../components/table/StyledDataGrid\";\n\nconst formatData = (data) => {\n  if (!data) return null;\n  const formatted = data.map((service) => ({\n    id: service.id,\n    name: service.name,\n    relationship: service.relationship,\n    sysId: service.sysId,\n    type: service.sysService.type,\n    tier: service.sysService.tier,\n    flag: service.sysService.flag,\n  }));\n  return formatted;\n};\n\nconst Dependencies = ({data, viewHandler}) => {\n  return (\n    <Box style={{height: 400, width: \"100%\"}}>\n      <StyledDataGrid\n        disableSelectionOnClick\n        rows={formatData(data)}\n        columns={GENERATE_DEPENDENCY_TABLE_COLUMNS(viewHandler)}\n      />\n    </Box>\n  );\n};\n\nexport default memo(Dependencies);\n","import {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SelectCircularProgress from \"../../../../components/circularProgress/SelectCircularProgress\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"60ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n}));\n\nconst SearchResults = ({resultsOpen, isResultsLoading, data, onClick}) => {\n  const classes = useStyles();\n\n  return (\n    <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n      <Box className={classes.resultsBox}>\n        <Paper>\n          {isResultsLoading && <SelectCircularProgress />}\n          {data && (\n            <>\n              {data?.length === 0 ? (\n                <Box m={1}>\n                  <NoResultsTypography />\n                </Box>\n              ) : (\n                <List>\n                  {data?.map((service) => (\n                    <React.Fragment key={service.id}>\n                      <ListItem\n                        key={service.id}\n                        button\n                        onMouseDown={(e) => e.preventDefault()}\n                        onClick={() => onClick(service.id)}\n                      >\n                        <ListItemText\n                          primary={\n                            <>\n                              <Typography component={\"div\"} variant=\"subtitle1\">\n                                {service.name}\n                              </Typography>\n                            </>\n                          }\n                        />\n                      </ListItem>\n                      {data?.length > 1 && <Divider />}\n                    </React.Fragment>\n                  ))}\n                </List>\n              )}\n            </>\n          )}\n        </Paper>\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default SearchResults;\n","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {AppBar, Box, makeStyles, Tabs, Typography} from \"@material-ui/core\";\nimport {ServiceAndSystemDirectoryTitle as DirectoryTitle} from \"../ServiceAndSystemDirectoryContent\";\nimport PageComponent from \"../components/PageComponent\";\nimport {useParams, useHistory} from \"react-router-dom\";\nimport SaSContainer from \"../components/SaSContainer\";\nimport StyledTab from \"../../../components/tabs/StyledTab\";\nimport CustomTabPanel from \"../../../components/tabs/CustomTabPanel\";\nimport Overview from \"./Overview\";\nimport People from \"./People\";\nimport Dependencies from \"./Dependencies\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport {\n  GET_SERVICE_WITH_ID,\n  SEARCH_SYSTEMS_AND_SERVICES,\n} from \"../../../operations/queries/searchSystemsAndServices\";\nimport PaperCardWrapper from \"../../../components/PaperCardWrapper\";\nimport SaSSearch from \"../components/SaSSearch\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport SearchResults from \"./components/SearchResults\";\nimport TaskStatusBlock from \"../../../components/taskManager/TaskStatusBlock\";\nimport SaSFlag from \"../components/SaSFlag\";\nimport NoPermissionsError from \"../../../components/NoPermissionsError\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginBottom: \"10px\",\n  },\n  tabPanel: {\n    height: \"50vh\",\n    overflow: \"auto\",\n  },\n  link: {\n    color: \"inherit\",\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n    },\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginBottom: 16,\n  },\n  topBarTier: {\n    marginRight: 30,\n  },\n  topBarTitle: {\n    flexGrow: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  topBarDate: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n  },\n  paper: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst ServiceComponent = () => {\n  const classes = useStyles();\n  const {id} = useParams();\n  const history = useHistory();\n  const {permSystemsAndServicesView} = useContext(AuthUserContext);\n  const [serviceData, setServiceData] = useState(null);\n  const [value, setValue] = useState(0);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"All\");\n  const [data, setData] = useState(null);\n  const [isResultsOpen, setResultsOpen] = useState(false);\n\n  const lastUpdated = new Date(Number(serviceData?.lastUpdated));\n\n  const handleTabsChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [loadService, {loading: loadingService}] = useLazyQuery(\n    GET_SERVICE_WITH_ID,\n    {\n      onCompleted: (data) => setServiceData(data.get_service_with_id),\n      onError: (error) => console.log(error),\n    }\n  );\n  const [searchSystemsAndServices, {loading: loadingData}] = useLazyQuery(\n    SEARCH_SYSTEMS_AND_SERVICES,\n    {\n      onCompleted: (data) => setData(data.search_systems_and_services),\n      onError: (error) => console.log(error),\n    }\n  );\n\n  const searchHandler = () => {\n    setData(null);\n    if (searchQuery.trim() !== \"\") {\n      setResultsOpen(true);\n      searchSystemsAndServices({variables: {search: searchQuery}});\n    } else {\n      setResultsOpen(false);\n    }\n  };\n  const changeHandler = (value) => {\n    setSearchQuery(value);\n  };\n\n  const redirectHandler = (id) => {\n    setData(null);\n    setSearchQuery(\"\");\n    setResultsOpen(false);\n    setValue(0);\n    history.push(`${FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}/${id}`);\n  };\n\n  const searchBlurHandler = () => {\n    setResultsOpen(false);\n  };\n\n  useEffect(() => {\n    loadService({\n      variables: {\n        id,\n      },\n    });\n  }, [id]);\n\n  return (\n    <PageComponent\n      title={serviceData?.name}\n      breadcrumbs={[DirectoryTitle, serviceData?.name.toUpperCase()]}\n      backButtonLink={FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}\n    >\n      {permSystemsAndServicesView ? (\n        <>\n          <SaSContainer gradient>\n            <SaSSearch\n              onSearch={searchHandler}\n              onChange={changeHandler}\n              query={searchQuery}\n              queryType={searchType}\n              setQueryType={setSearchType}\n              loading={loadingData}\n              onBlur={searchBlurHandler}\n            />\n            {searchQuery && data?.length >= 0 && (\n              <SearchResults\n                data={data}\n                isResultsLoading={loadingData}\n                resultsOpen={isResultsOpen}\n                onClick={redirectHandler}\n              />\n            )}\n          </SaSContainer>\n\n          <Box mx={3} mt={3} className={classes.block}>\n            <PaperCardWrapper>\n              <Box className={classes.topBar}>\n                {serviceData?.tier && (\n                  <Box className={classes.topBarTier}>\n                    <TaskStatusBlock\n                      taskStatus={Number(serviceData?.tier)}\n                      id={serviceData?.tier}\n                    />\n                  </Box>\n                )}\n                <Box className={classes.topBarTitle}>\n                  <Typography className={classes.title}>\n                    {serviceData?.name}\n                  </Typography>\n                  {serviceData?.type && (\n                    <Typography variant={\"subtitle1\"}>\n                      Service: {serviceData?.type}\n                    </Typography>\n                  )}\n                </Box>\n                <Box className={classes.topBarDate}>\n                  {serviceData?.lastUpdated && (\n                    <Typography variant={\"subtitle1\"}>\n                      Last Updated: {lastUpdated.toDateString()}\n                    </Typography>\n                  )}\n                  <Box>\n                    {serviceData?.flag && <SaSFlag data={serviceData?.flag} />}\n                  </Box>\n                </Box>\n              </Box>\n\n              <AppBar position=\"static\">\n                <Tabs\n                  value={value}\n                  onChange={handleTabsChange}\n                  variant=\"scrollable\"\n                  scrollButtons=\"auto\"\n                  aria-label=\"systemAndServices dashboard tabs navigation\"\n                  className={classes.paper}\n                >\n                  <StyledTab label=\"Overview\" />\n                  <StyledTab label=\"People\" />\n                  <StyledTab label=\"Dependencies\" />\n                  )}\n                </Tabs>\n              </AppBar>\n\n              <CustomTabPanel\n                value={value}\n                index={0}\n                className={classes.tabPanel}\n              >\n                <Overview data={serviceData} loading={loadingService} />\n              </CustomTabPanel>\n              <CustomTabPanel\n                value={value}\n                index={1}\n                className={classes.tabPanel}\n              >\n                <People data={serviceData} />\n              </CustomTabPanel>\n              <CustomTabPanel\n                value={value}\n                index={2}\n                className={classes.tabPanel}\n              >\n                <Dependencies\n                  data={serviceData?.dependencies}\n                  viewHandler={redirectHandler}\n                />\n              </CustomTabPanel>\n            </PaperCardWrapper>\n          </Box>\n        </>\n      ) : (\n        <NoPermissionsError />\n      )}\n    </PageComponent>\n  );\n};\n\nexport default memo(ServiceComponent);\n","import React, {memo} from \"react\";\nimport SecureRoute from \"../../components/routes/SecureRoute\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport {Switch} from \"react-router-dom\";\nimport ServiceComponent from \"./ServiceComponent/ServiceComponent\";\nimport ServiceAndSystemDirectoryContent from \"./ServiceAndSystemDirectoryContent\";\n\nconst ServiceAndSystemDirectoryPage = () => {\n  return (\n    <Switch>\n      <SecureRoute\n        exact\n        path={FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY_SERVICE}\n      >\n        <ServiceComponent />\n      </SecureRoute>\n\n      <SecureRoute exact path={FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}>\n        <ServiceAndSystemDirectoryContent />\n      </SecureRoute>\n    </Switch>\n  );\n};\n\nexport default memo(ServiceAndSystemDirectoryPage);\n","import { gql } from \"@apollo/client\";\n\nexport const SEARCH_INNER_DATA = gql`\n    query SearchInnerData($search: String!) {\n        search_inner_data(search: $search) {\n            task  {\n                id\n                oldTaskId\n                taskType\n                taskCreatedDateTime\n                taskCreatorUsername\n                taskCreatorFirstName\n                taskCreatorLastName\n                taskStatus\n                taskScheduleType\n                taskScheduleDateTime\n                taskScheduleTimezone\n                taskSendNotification\n                taskEndDate\n                taskApprovalStatus\n                taskApprovals {\n                    id\n                    approvalStage\n                    approvalStatus\n                    approvalDateTime\n                    approvalUsername\n                    approvalFirstName\n                    approvalLastName\n                    approvalEmail\n                    approvalNote\n                }\n                offboardingTask {\n                    id\n                    offboardUsername\n                    offboardFirstName\n                    offboardLastName\n                    transferUsername\n                    transferFirstName\n                    transferLastName\n                    transferGdrive\n                    transferGcalendar\n                    transferAlias\n\n                    unassignLicense\n\n                    unassignDevice\n                    offboardingUnassignDevices {\n                        id\n                        deviceManager\n                        deviceName\n                        deviceId\n                        deviceSerialNumber\n                        deviceModel\n                    }\n                    hrTerminationCode\n                    hrTerminationType\n                    payrollEndDateTime\n                    payrollEndTimezone\n                    payrollNote\n                }\n                onboardingTask {\n                    id\n                    onboardUsername\n                    onboardEmail\n                    onboardFirstName\n                    onboardLastName\n                    onboardNonLpEmail\n                    onboardEmployeeType\n                    onboardJobTitle\n                    onboardCompany\n                    onboardLocation\n                    onboardLocationDescription\n                    onboardManagerId\n                    onboardManagerEmail\n                    onboardManagerFirstName\n                    onboardManagerLastName\n                    onboardBusinessUnit\n                    onboardDepartment\n                    onboardOfficeNumber\n                    onboardMobileNumber\n                    onboardDevice\n                    reqId\n                    onboardingOktaGroups {\n                        oktaGroupId\n                        oktaGroupName\n                    }\n                }\n                requisitionTask {\n                    reqType\n                    reqStartDate\n                    reqHiringManagerEmail\n                    reqBusinessUnit\n                    reqDepartment\n                    reqLocation\n                    reqLocationDescription\n                    isBackfill\n                    reqBackfillFirstName\n                    reqBackfillLastName\n                    reqBackfillUsername\n                    reqCompanyCode\n                    reqParentMgmtCC\n                    reqManagementCC\n                    reqFunctionalAreaDesc\n                    reqCountryDesc\n                    reqJobCode\n                    reqJobTitle\n                    reqSpendCurrency\n                    reqSpendAmount\n                    reqSpendPeriod\n                    reqBonusAmount\n                    reqBonusType\n                    reqCommissionCurrency\n                    reqCommissionAmount\n                    reqContractMonths\n                    reqContractHoursPerWeek\n                    comments\n                }\n            }\n            user {\n                id\n                status\n                profile {\n                    businessUnit\n                    department\n                    email\n                    employeeNumber\n                    employeeType\n                    firstName\n                    jobTitle\n                    lastName\n                    location\n                    userName\n                }\n            }\n            thirdParty {\n                id\n                code\n                name\n                altName\n                type\n                owner\n                status\n                contactFirstName\n                contactLastName\n                contactEmail\n                ownerFirstName\n                ownerLastName\n            }\n        }\n    }\n`;","import React, { memo } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  text: {\n    fontSize: \"0.875em\",\n    lineHeight: 1.5\n  },\n  title: {\n    fontSize: \"1em\",\n    lineHeight: 2,\n    fontWeight: \"bold\",\n  },\n}));\n\nconst GlobalSearchTypography = ({title, ...props}) => {\n  const classes = useStyles();\n  return <Typography color=\"textPrimary\" className={title ? classes.title : classes.text} {...props}/>\n}\n\nexport default memo(GlobalSearchTypography);","import React, {memo, useCallback, useMemo} from \"react\";\nimport {Box, makeStyles, Paper} from \"@material-ui/core\";\nimport CustomTypography from \"./GlobalSearchTypography\";\nimport CustomInfiniteScroll from \"../../components/table/CustomInfiniteScroll\";\n\nconst useStyles = makeStyles((theme) => ({\n  resultsBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  paper: {\n    marginBottom: theme.spacing(1.5),\n    padding: theme.spacing(1.25),\n    cursor: \"pointer\",\n    background: theme.palette.primary.main,\n    border: \"1px solid rgba(255, 255, 255, 0.7)\",\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.background.default,\n    },\n    \"&:hover\": {\n      background: theme.palette.secondary.light,\n    },\n  },\n  title: {\n    fontSize: \"1rem\",\n    lineHeight: 2,\n    fontWeight: \"bold\",\n  },\n  itemsWrapper: {\n    padding: \"8px 12px\",\n    maxHeight: \"calc(95vh - 275px)\",\n    overflowY: \"auto\",\n  },\n}));\n\nconst GlobalSearchResults = ({\n  results,\n  hasMore,\n  setCurrentPage,\n  currentPage,\n}) => {\n  const classes = useStyles();\n\n  const dataLength = useMemo(() => results?.length, [results]);\n\n  const handlePageChange = useCallback(() => {\n    setCurrentPage(currentPage + 1);\n  }, [currentPage]);\n\n  return (\n    <Box className={classes.itemsWrapper} id={\"global-search\"}>\n      <CustomInfiniteScroll\n        scrollableTarget=\"global-search\"\n        dataLength={dataLength}\n        next={handlePageChange}\n        hasMore={hasMore}\n      >\n        {results?.map(({title, info, description, icon, onClick}, index) => (\n          <Paper\n            hover\n            key={index}\n            elevation={3}\n            className={classes.paper}\n            onClick={() => onClick && onClick()}\n          >\n            {/*<Tooltip title={\"open\"} placement=\"top-start\">*/}\n            <Box>\n              <Box className={classes.resultsBlock}>\n                <CustomTypography title>{title}</CustomTypography>\n\n                <CustomTypography>{info}</CustomTypography>\n              </Box>\n\n              <Box className={classes.resultsBlock}>\n                <CustomTypography> {description} </CustomTypography>\n                {icon}\n              </Box>\n            </Box>\n            {/*</Tooltip>*/}\n          </Paper>\n        ))}\n      </CustomInfiniteScroll>\n    </Box>\n  );\n};\n\nexport default memo(GlobalSearchResults);\n","import React, { memo } from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport CustomTypography from \"./GlobalSearchTypography\";\n\nconst useStyles = makeStyles(() => ({\n  topResultsInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n}));\n\nconst GlobalSearchResultsInfoBlock = ({ searchQuery, allDataLength }) => {\n  const classes = useStyles();\n\n  return (\n    <Box py={1} px={2} className={classes.topResultsInfo}>\n      <CustomTypography title style={{fontSize: \"1.25em\"}}>\n        Search results for: {searchQuery}\n      </CustomTypography>\n\n      <CustomTypography title style={{fontSize: \"1.25em\"}}>\n        Showing {allDataLength} results\n      </CustomTypography>\n    </Box>\n  );\n};\n\nexport default memo(GlobalSearchResultsInfoBlock);","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { getStrWithFirstUpperLetter } from \"../../data/helper/helpers\";\nimport { getDateStringFromString } from \"../../data/helper/DateTimezoneHelpers\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport TaskTypes from \"../../data/constants/TaskTypes\";\n\nexport const getCardData = (result, history) => {\n  if (result?.task) {\n    const { taskType, id, taskCreatedDateTime, taskScheduleDateTime, taskStatus, taskScheduleType }\n      = result.task || {};\n\n    const title = `${getStrWithFirstUpperLetter(taskType)} Task: ${id}`;\n    const info = `Request Date: ${getDateStringFromString(taskCreatedDateTime)}`;\n    const onClick = () => id && history.push(FrontendRoutes.TASK_MANAGER_VIEW_TASK(\"alltasks\", id));\n\n    if (taskType === TaskTypes.ONBOARDING) {\n      const { onboardFirstName, onboardLastName, onboardJobTitle } = result?.task?.onboardingTask;\n\n      return {\n        title, info, onClick,\n        description: `Name: ${onboardFirstName} ${onboardLastName}; ` +\n          `JobTitle: ${onboardJobTitle}; Status: ${taskStatus}`,\n        icon: <FontAwesomeIcon icon=\"user-plus\" style={{ fontSize: \"1.4em\" }} />,\n      };\n    }\n\n    if (taskType === TaskTypes.OFFBOARDING) {\n      const { offboardFirstName, offboardLastName } = result?.task?.offboardingTask;\n\n      return {\n        title, info, onClick,\n        description: `Name: ${offboardFirstName} ${offboardLastName}; ` +\n          `Offboard Date: ${taskScheduleType === \"Immediate\"\n            ? \"Immediate\"\n            : taskScheduleDateTime?.split(\"T\")?.[0]}; ` +\n          `Status: ${taskStatus}`,\n        icon: <FontAwesomeIcon icon=\"user-minus\" style={{ fontSize: \"1.4em\" }} />,\n      };\n    }\n\n    if (taskType === TaskTypes.REQUISITION) {\n      const { reqJobTitle, reqJobCode } = result?.task?.requisitionTask;\n\n      return {\n        title, info, onClick,\n        description: `Job Code: ${reqJobCode}; JobTitle: ${reqJobTitle}; Status: ${taskStatus}`,\n        icon: <FontAwesomeIcon icon=\"thumbtack\" style={{ fontSize: \"1.4em\" }} />,\n      };\n    }\n  }\n\n  if (result?.user) {\n    const { firstName, lastName, email, userName, jobTitle, businessUnit, department, location }\n      = result?.user?.profile || {};\n\n    return {\n      title: `User Profile: ${firstName} ${lastName}`,\n      info: email,\n      description: `Job Title: ${jobTitle}; Business Unit: ${businessUnit}; Department: ${department}; Location: ${location}`,\n      icon: <AccountCircleIcon />,\n      onClick: () => userName && history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(userName)),\n    };\n  }\n\n  if (result?.thirdParty) {\n    const { name, owner, type, id } = result?.thirdParty || {};\n\n    return {\n      title: `Third Party Profile: ${name}`,\n      info: owner ? `${owner}@liveperson.com` : \"None\",\n      description: `Type: ${type}`,\n      icon: <SettingsIcon />,\n      onClick: () => id && history.push(FrontendRoutes.THIRD_PARTY_DIRECTORY_PROFILE(id)),\n    };\n  }\n};","import React, {memo, useEffect, useMemo, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { SEARCH_INNER_DATA } from \"../../operations/queries/searchInnerData\";\nimport handleError from \"../../data/handleError\";\nimport { setSearchQuery } from \"../../data/redux/common/commonActions\";\nimport LoadingCircle from \"../../components/circularProgress/LoadingCircle\";\nimport NoResultsTypography from \"../../components/typographies/NoResultsTypography\";\nimport GlobalSearchResults from \"./GlobalSearchResults\";\nimport PaperCardWrapper from \"../../components/PaperCardWrapper\";\nimport GlobalSearchResultsInfoBlock from \"./GlobalSeachResultsInfoBox\";\nimport { getCardData } from \"./getCardData\";\n\nconst useSearchData = (setSearchQuery, history) => {\n  const [executeSearch, { error, loading, data }] = useLazyQuery(\n    SEARCH_INNER_DATA, {\n      onError: (error) => {\n        setSearchQuery(\"\");\n        handleError(error, history);\n      },\n    },\n  );\n  return [executeSearch, { error, loading, data }];\n};\n\nconst itemsOnPage = 15;\n\nconst GlobalSearchContent = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const searchQuery = useSelector(state => state?.common?.get(\"searchQuery\"));\n  const [searchResults, setSearchResults] = useState([]);\n  const [results, setResults] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  const [executeSearch, { loading, data }] =\n    useSearchData(value => dispatch(setSearchQuery(value)), history);\n\n  useEffect(() => {\n    executeSearch({ variables: { search: searchQuery } });\n  }, [searchQuery]);\n\n  useEffect(() => {\n    setCurrentPage(1);\n    setSearchResults(data?.search_inner_data);\n  }, [data]);\n\n  useEffect(() => {\n    if (searchResults) {\n      const part = searchResults?.slice(itemsOnPage * (currentPage - 1), itemsOnPage * currentPage)?.filter(Boolean);\n      const partResults = part?.map(r => getCardData(r, history))?.filter(Boolean);\n\n      setHasMore(searchResults?.length > itemsOnPage * currentPage);\n\n      if (currentPage > 1) {\n        setResults(results => [...results, ...partResults]);\n      } else {\n        setResults(partResults);\n      }\n    }\n  }, [currentPage, searchResults]);\n\n  const allDataLength = useMemo(() => searchResults?.length, [searchResults]);\n\n  return (\n    <PaperCardWrapper style={{overflow: \"visible\"}}>\n      {(searchQuery?.length > 2 && loading) || (allDataLength && !results?.length) ? (\n        <LoadingCircle text={\"searching...\"} />\n      ) : results?.length > 0 ? (\n          <>\n            <GlobalSearchResultsInfoBlock\n              allDataLength={allDataLength}\n              searchQuery={searchQuery}\n            />\n\n            <GlobalSearchResults\n              hasMore={hasMore}\n              results={results}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n            />\n          </>\n        ) :\n        <NoResultsTypography />\n      }\n    </PaperCardWrapper>\n  );\n};\n\nexport default memo(GlobalSearchContent);","import React, { memo, useContext } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport BreadcrumbHomeBox from \"../../components/breadcrumbs/BreadcrumbHomeBox\";\nimport BreadcrumbText from \"../../components/breadcrumbs/BreadcrumbText\";\nimport PageTitleBox from \"../../components/blocks/PageTitleBox\";\nimport NoPermissionsError from \"../../components/NoPermissionsError\";\nimport { AuthUserContext } from \"../../AuthUserContextProvider\";\nimport GlobalSearchContent from \"./GlobalSearchContent\";\n\nconst GlobalSearchPage = () => {\n  const { permUserDirectoryView } = useContext(AuthUserContext);\n\n  return (\n    <Page title=\"Global Search | LPSYNC\">\n      <BreadcrumbHomeBox>\n        <BreadcrumbText title={\"GLOBAL SEARCH\"} />\n      </BreadcrumbHomeBox>\n\n      <Box mx={3}>\n        <PageTitleBox title=\"Global Search\" />\n\n        {permUserDirectoryView ? (\n          <GlobalSearchContent />\n        ) : (\n          <NoPermissionsError />\n        )}\n      </Box>\n    </Page>\n  );\n};\n\nexport default memo(GlobalSearchPage);","import React, {memo} from \"react\";\nimport {Route, Switch, useLocation} from \"react-router-dom\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport \"../../index.css\";\nimport NonFteAuditReportPage from \"../../pages/NonFteAuditReportPage\";\nimport ConsolidatedReportPage from \"../../pages/ConsolidatedReportPage\";\nimport DashboardPage from \"../../pages/DashboardPage\";\nimport HomePage from \"../../pages/HomePage\";\n// import OffboardEmployeePage from \"../../pages/OffboardEmployeePage\";\nimport OffboardRequestPage from \"../../pages/OffboardRequestPage\";\nimport OnboardingDashboardPage from \"../../pages/OnboardingDashboardPage\";\nimport OrganizationChartPage from \"../../pages/OrganizationChartPage\";\nimport RequisitionRequestPage from \"../../pages/RequisitionRequestPage\";\nimport SystemStatusPage from \"../../pages/SystemStatusPage\";\nimport ReportGenerator from \"../../pages/ReportGenerator\";\nimport TaskManagerPage from \"../../pages/TaskManagerPage\";\nimport ReportingDashboardPage from \"../../pages/ReportingDashboardPage\";\nimport UserDirectoryPage from \"../../pages/UserDirectoryPage\";\nimport ThirdPartyDirectoryPage from \"../../pages/ThirdPartyDirectoryPage\";\nimport ScrollToTop from \"../../components/ScrollToTop\";\nimport FrontendRoutes, {AdminRoutes} from \"../../data/constants/FrontendRoutes\";\nimport CandidateRequestPage from \"../../pages/CandidateRequestPage\";\nimport AdminMainContainer from \"./AdminMainContainer\";\nimport LoginCallback from \"../../components/routes/LoginCallback\";\nimport SecureRoute from \"../../components/routes/SecureRoute\";\nimport NotFoundPage from \"../../pages/NotFoundPage/NotFoundPage\";\nimport MultiCandidateRequestPage from \"../../pages/MultiCandidateRequestPage\";\nimport useNotifier from \"../../components/snackbars/useNotifier\";\nimport ServiceAndSystemDirectoryPage from \"../../pages/ServiceAndSystemDirectoryPage/ServiceAndSystemDirectoryPage\";\nimport GlobalSearchPage from \"../../pages/GlobalSearchPage/GlobalSeachPage\";\n\nconst MainContainer = () => {\n  const location = useLocation();\n  const currentKey = location?.pathname?.split(\"/\")[1] || \"/\";\n  useNotifier();\n\n  return (\n    <TransitionGroup>\n      <CSSTransition key={currentKey} classNames=\"fade\" timeout={300} appear>\n        <>\n          <ScrollToTop />\n          <Switch>\n            <Route exact path={FrontendRoutes.HOME} component={HomePage} />\n            <Route\n              exact\n              path={FrontendRoutes.LOGIN_CALLBACK}\n              component={LoginCallback}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.NON_FTE_AUDIT_REPORT}\n              component={NonFteAuditReportPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.REPORTING_DASHBOARD}\n              component={ReportingDashboardPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.REPORT_GENERATOR}\n              component={ReportGenerator}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.CONSOLIDATED_REPORT}\n              component={ConsolidatedReportPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.DASHBOARD}\n              component={DashboardPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.ORGANIZATION_CHART}\n              component={OrganizationChartPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.CANDIDATE_REQUEST}\n              component={CandidateRequestPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.MULTI_CANDIDATE_REQUEST}\n              component={MultiCandidateRequestPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.OFFBOARD_EMPLOYEE}\n              component={OffboardRequestPage}\n            />\n            <SecureRoute\n              path={FrontendRoutes.ONBOARDING_DASHBOARD}\n              component={OnboardingDashboardPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.REQUISITION_REQUEST}\n              component={RequisitionRequestPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.SYSTEM_STATUS}\n              component={SystemStatusPage}\n            />\n            <SecureRoute\n              path={FrontendRoutes.TASK_MANAGER}\n              component={TaskManagerPage}\n            />\n            <SecureRoute\n              path={FrontendRoutes.USER_DIRECTORY}\n              component={UserDirectoryPage}\n            />\n            <SecureRoute\n              path={FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}\n              component={ServiceAndSystemDirectoryPage}\n            />\n            <SecureRoute\n              exact\n              path={FrontendRoutes.GLOBAL_SEARCH}\n              component={GlobalSearchPage}\n            />\n            <SecureRoute\n              adminOnly\n              path={AdminRoutes.ADMIN}\n              component={AdminMainContainer}\n            />\n            <SecureRoute\n              path={FrontendRoutes.THIRD_PARTY_DIRECTORY}\n              component={ThirdPartyDirectoryPage}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </>\n      </CSSTransition>\n    </TransitionGroup>\n  );\n};\n\nexport default memo(MainContainer);\n","import React, { memo } from \"react\";\nimport { ListItemText, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  listItemText: {\n    fontSize: \".9rem\",\n  }\n}));\n\nconst NavListItemText = ({ ...props }) => {\n  const classes = useStyles();\n  return (\n    <ListItemText\n      classes={{ primary: classes.listItemText }}\n      {...props}\n    />\n  )\n};\n\nexport default memo(NavListItemText);","import React, { memo } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ListItem, ListItemIcon, makeStyles } from \"@material-ui/core\";\nimport NavListItemText from \"./NavListItemText\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    backgroundColor: theme.palette.primary.light,\n  },\n}));\n\nconst NavListItem = ({ text, icon, ...props }) => {\n  const classes = useStyles();\n  return (\n    <ListItem\n      button\n      component={NavLink}\n      activeClassName={classes.active}\n      {...props}\n    >\n      {icon && (\n        <ListItemIcon>\n          {icon}\n        </ListItemIcon>\n      )}\n\n      {text && <NavListItemText primary={text}/>}\n    </ListItem>\n  )\n};\n\nNavListItem.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.node\n};\nexport default memo(NavListItem);\n","import React, { memo } from \"react\";\nimport { ListSubheader } from \"@material-ui/core\";\n\nconst NavListSubheader = ({children}) => {\n  return (\n    <ListSubheader style={{fontFamily: \"Space Grotesk\"}} disableSticky>\n      {children}\n    </ListSubheader>\n  );\n};\n\nexport default memo(NavListSubheader);\n","import React from \"react\";\n\nconst CustomIcon = ({alt, src, height, ...props}) => {\n  return <img alt={alt} src={src} height={height ? height : 24} {...props} />;\n};\n\nexport default CustomIcon;\n","import React, {useState, useContext, useEffect, memo} from \"react\";\nimport {connect} from \"react-redux\";\nimport {List} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport FrontendRoutes from \"../../../data/constants/FrontendRoutes\";\nimport NavListItem from \"../../../components/list/NavListItem\";\nimport NavListSubheader from \"../../../components/list/NavListSubheader\";\nimport {setOrgChartEmail} from \"../../../data/redux/common/commonActions\";\nimport CustomIcon from \"../../../components/CustomIcon\";\n\nconst NavItems = ({setOrgChartEmail}) => {\n  const {\n    permOffboardingAll,\n    permOffboardingTeam,\n    permOffboardingNfte,\n    permOnboardingAll,\n    permOnboardingTeam,\n    permOrgChartView,\n    permReportGeneratorView,\n    permReportingDashboardView,\n    permReportNonFteAudit,\n    permRequisitionAll,\n    permSysMgmtLogs,\n    permSysMgmtManage,\n    permSysMgmtSettingsOffboarding,\n    permTaskManagerViewAll,\n    permTaskManagerViewTeam,\n    permUserDirectoryView,\n    permThirdPartyDirectoryView,\n    permMultiCandidateRequestView,\n    permSysMgmtSettingsOnboarding,\n    permSysMgmtFteCandidateTracker,\n    permSysMgmtBadgeMgmt,\n    permSysMgmtCandidatePortalAccess,\n    permSysMgmtSchedulerJobs,\n    permSystemsAndServicesView,\n  } = useContext(AuthUserContext);\n  const [viewCompany, setViewCompany] = useState(false);\n  const [viewSystemTools, setViewSystemTools] = useState(false);\n  const [viewReports, setViewReports] = useState(false);\n  const [viewAdminTools, setViewAdminTools] = useState(false);\n  useEffect(() => {\n    if (\n      permOrgChartView ||\n      permUserDirectoryView ||\n      permThirdPartyDirectoryView\n    ) {\n      setViewCompany(true);\n    }\n\n    if (\n      permOnboardingAll ||\n      permOnboardingTeam ||\n      permRequisitionAll ||\n      permOffboardingAll ||\n      permOffboardingTeam ||\n      permOffboardingNfte ||\n      permMultiCandidateRequestView ||\n      permTaskManagerViewAll ||\n      permTaskManagerViewTeam\n    ) {\n      setViewAdminTools(true);\n    }\n\n    if (\n      permSysMgmtLogs ||\n      permSysMgmtManage ||\n      permSysMgmtSettingsOffboarding ||\n      permSysMgmtSettingsOnboarding ||\n      permSysMgmtFteCandidateTracker ||\n      permSysMgmtBadgeMgmt ||\n      permSysMgmtCandidatePortalAccess ||\n      permSysMgmtSchedulerJobs\n    ) {\n      setViewSystemTools(true);\n    }\n\n    if (\n      permReportNonFteAudit ||\n      permReportingDashboardView ||\n      permReportGeneratorView\n    ) {\n      setViewReports(true);\n    }\n  }, [\n    permOffboardingAll,\n    permOffboardingTeam,\n    permOffboardingNfte,\n    permOnboardingAll,\n    permOnboardingTeam,\n    permOrgChartView,\n    permReportGeneratorView,\n    permReportingDashboardView,\n    permReportNonFteAudit,\n    permRequisitionAll,\n    permSysMgmtLogs,\n    permSysMgmtManage,\n    permSysMgmtSettingsOffboarding,\n    permTaskManagerViewAll,\n    permTaskManagerViewTeam,\n    permUserDirectoryView,\n    permThirdPartyDirectoryView,\n    permMultiCandidateRequestView,\n    permSysMgmtSettingsOnboarding,\n    permSysMgmtFteCandidateTracker,\n    permSysMgmtBadgeMgmt,\n    permSysMgmtCandidatePortalAccess,\n    permSysMgmtSchedulerJobs,\n  ]);\n\n  return (\n    <>\n      {viewCompany && (\n        <>\n          <NavListSubheader>COMPANY</NavListSubheader>\n          {permOrgChartView && (\n            <NavListItem\n              onClick={() => setOrgChartEmail(\"\")}\n              to={FrontendRoutes.ORGANIZATION_CHART}\n              icon={\n                <CustomIcon\n                  alt=\"org-chart-icon\"\n                  src={\"/images/hierarchy-streamline.png\"}\n                />\n              }\n              text=\"Organization Chart\"\n            />\n          )}\n          {permUserDirectoryView && (\n            <NavListItem\n              to={FrontendRoutes.USER_DIRECTORY}\n              icon={\n                <CustomIcon\n                  alt=\"user-directory-icon\"\n                  src={\"/images/multiple-neutral-streamline.png\"}\n                />\n              }\n              text=\"User Directory\"\n            />\n          )}\n          {permThirdPartyDirectoryView && (\n            <NavListItem\n              to={FrontendRoutes.THIRD_PARTY_DIRECTORY}\n              icon={\n                <CustomIcon\n                  alt=\"third-party-directory-icon\"\n                  src={\"/images/shop-streamline.png\"}\n                />\n              }\n              text=\"Third Party Directory\"\n            />\n          )}\n          {permSystemsAndServicesView && (\n            <NavListItem\n              to={FrontendRoutes.SERVICE_AND_SYSTEM_DIRECTORY}\n              icon={\n                <CustomIcon\n                  alt=\"service-system-directory-icon\"\n                  src={\"/images/workflow-data-table-cog-streamline.png\"}\n                />\n              }\n              text=\"Service & System Directory\"\n            />\n          )}\n        </>\n      )}\n      {viewAdminTools && (\n        <>\n          <NavListSubheader>ADMIN TOOLS</NavListSubheader>\n          {(permOnboardingAll || permOnboardingTeam || permRequisitionAll) && (\n            <NavListItem\n              to={FrontendRoutes.ONBOARDING_DASHBOARD}\n              icon={\n                <CustomIcon\n                  alt=\"onboarding-dashboard-icon\"\n                  src={\"/images/layout-dashboard-streamline.png\"}\n                />\n              }\n              text=\"Onboarding Dashboard\"\n            />\n          )}\n          {permRequisitionAll && (\n            <>\n              <NavListItem\n                to={FrontendRoutes.REQUISITION_REQUEST}\n                icon={\n                  <CustomIcon\n                    alt=\"requisition-request-icon\"\n                    src={\"/images/task-checklist-add-streamline.png\"}\n                  />\n                }\n                text=\"Requisition Request\"\n              />\n            </>\n          )}\n          {(permOnboardingAll || permOnboardingTeam) && (\n            <NavListItem\n              to={FrontendRoutes.CANDIDATE_REQUEST}\n              icon={\n                <CustomIcon\n                  alt=\"candidate-request-icon\"\n                  src={\"/images/single-neutral-actions-add-streamline.png\"}\n                />\n              }\n              text=\"Candidate Request\"\n            />\n          )}\n          {permMultiCandidateRequestView && (\n            <NavListItem\n              to={FrontendRoutes.MULTI_CANDIDATE_REQUEST}\n              icon={\n                <CustomIcon\n                  alt=\"multi-candidate-request-icon\"\n                  src={\"/images/multiple-actions-add-streamline.png\"}\n                />\n              }\n              text=\"Multi-Candidate Request\"\n            />\n          )}\n          {(permOffboardingAll ||\n            permOffboardingTeam ||\n            permOffboardingNfte) && (\n            <NavListItem\n              to={FrontendRoutes.OFFBOARD_EMPLOYEE}\n              icon={\n                <CustomIcon\n                  alt=\"offboard-employee-icon\"\n                  src={\"/images/single-neutral-actions-subtract-streamline.png\"}\n                />\n              }\n              text=\"Offboard Employee\"\n            />\n          )}\n          {(permTaskManagerViewAll || permTaskManagerViewTeam) && (\n            <NavListItem\n              to={FrontendRoutes.TASK_MANAGER}\n              icon={\n                <CustomIcon\n                  alt=\"task-manager-icon\"\n                  src={\"/images/task-list-approve-streamline.png\"}\n                />\n              }\n              text=\"Task Manager\"\n            />\n          )}\n        </>\n      )}\n\n      {viewReports && (\n        <>\n          <NavListSubheader>REPORTS</NavListSubheader>\n          <List>\n            {permReportNonFteAudit && (\n              <NavListItem\n                to={FrontendRoutes.NON_FTE_AUDIT_REPORT}\n                text=\"Non-FTE Audit Report\"\n              />\n            )}\n            {permReportingDashboardView && (\n              <NavListItem\n                to={FrontendRoutes.REPORTING_DASHBOARD}\n                text=\"Reporting Dashboard\"\n              />\n            )}\n            {permReportGeneratorView && (\n              <NavListItem\n                to={FrontendRoutes.REPORT_GENERATOR}\n                text=\"Report Generator\"\n              />\n            )}\n          </List>\n        </>\n      )}\n      {viewSystemTools && (\n        <>\n          <NavListSubheader>SYSTEM TOOLS</NavListSubheader>\n          <List>\n            <NavListItem to=\"/admin\" text=\"Admin\" />\n          </List>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default connect(() => ({}), {setOrgChartEmail})(memo(NavItems));\n","import React, {useContext} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Button,\n  Box,\n} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport FrontendRoutes, {\n  AdminRoutes,\n} from \"../../../data/constants/FrontendRoutes\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: \"flex\",\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  active: {\n    backgroundColor: theme.palette.primary.light,\n  },\n  subText: {\n    paddingLeft: theme.spacing(2),\n  },\n  listItemText: {\n    fontSize: \".9rem\",\n  },\n}));\n\nconst AdminNavItems = () => {\n  const classes = useStyles();\n\n  const {\n    permSysMgmtSettingsOffboarding,\n    permSysMgmtSettingsOnboarding,\n    permSysMgmtLogs,\n    permSysMgmtManage,\n    permSysMgmtBadgeMgmt,\n    permSysMgmtCandidatePortalAccess,\n    permSysMgmtSchedulerJobs,\n    permSysMgmtFteCandidateTracker,\n  } = useContext(AuthUserContext);\n\n  return (\n    <>\n      <Box ml={1} mb={3}>\n        <Button variant=\"outlined\" href={FrontendRoutes.HOME}>\n          lpsync home\n        </Button>\n      </Box>\n\n      <ListSubheader>ADMIN TOOLS</ListSubheader>\n      <List>\n        {permSysMgmtCandidatePortalAccess && (//todo add new permission\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_CANDIDATE_PORTAL}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"Candidate Portal Settings\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtFteCandidateTracker && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_FTE_CANDIDATE_TRACKER}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"FTE Candidate Tracker\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtSettingsOffboarding && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_OFFBOARDING_SETTINGS}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"Offboarding Settings\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtSettingsOnboarding && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_ONBOARDING_SETTINGS}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"Onboarding Settings\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtSchedulerJobs && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_SCHEDULER_JOBS}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"Scheduler Jobs\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtLogs && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_SYSTEM_LOGS}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"System Logs\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtBadgeMgmt && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_USER_BADGING_MANAGEMENT}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"User Badge Management\"\n            />\n          </ListItem>\n        )}\n        {permSysMgmtManage && (\n          <ListItem\n            button\n            component={NavLink}\n            to={AdminRoutes.ADMIN_USER_MANAGEMENT}\n            activeClassName={classes.active}\n          >\n            <ListItemText\n              classes={{primary: classes.listItemText}}\n              primary=\"User Management\"\n            />\n          </ListItem>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default AdminNavItems;\n","import React, {useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {useLocation, useRouteMatch} from \"react-router-dom\";\n\nimport {Box, Drawer, Hidden, List, makeStyles} from \"@material-ui/core\";\nimport NavItems from \"./NavItems\";\nimport {AdminRoutes} from \"../../../data/constants/FrontendRoutes\";\nimport AdminNavItems from \"./AdminNavItems\";\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 295,\n  },\n  desktopDrawer: {\n    backgroundColor: \"transparent\",\n    width: 295,\n    top: 64,\n    height: \"calc(100% - 64px)\",\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 64,\n    height: 64,\n  },\n}));\n\nconst NavBar = ({onMobileClose, openMobile}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const isAdmin = useRouteMatch(AdminRoutes.ADMIN);\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]); // fixme add openMobile && onMobileClose, resolve bahavior in bodyLayout with closing after\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box p={2}>\n        <List>{isAdmin ? <AdminNavItems /> : <NavItems />}</List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{paper: classes.mobileDrawer}}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{paper: classes.desktopDrawer, docked: classes.mobileDrawer}}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false,\n};\n\nexport default NavBar;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_AUTH_USER = gql`\n  query GetAuthUser {\n    get_auth_user {\n      id\n      profile {\n        businessUnit\n        companyName\n        department\n        email\n        employeeNumber\n        employeeType\n        firstName\n        jobTitle\n        lastName\n        location\n        userName\n        costCenter\n        managerEmail\n      }\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const GET_USER_ROLES_BY_USER_ID = gql`\n  query GetUserRolesByUserId {\n    get_user_roles_by_user_id {\n      role {\n        roleTitle\n        permissions {\n          permissionId\n        }\n      }\n      roleId\n      userId\n    }\n  }\n`;\n","export const setAuthExpireDateTimeToStorage = (ttl = 60 * 60 * 1000) => {\n  const now = new Date();\n  const authExpireDateTime = now.getTime() + ttl;\n  window.localStorage.setItem(\"authExpireDateTime\", authExpireDateTime.toString());\n};\n\nexport const isAuthExpired = () => {\n  try {\n    const authExpireDateTime = localStorage.getItem(\"authExpireDateTime\");\n    if (!authExpireDateTime) {\n      return true;\n    }\n    const expireTime = parseInt(authExpireDateTime);\n    const now = new Date();\n    if (now.getTime() > expireTime || isNaN(expireTime)) {\n      removeAuthExpireDateTime();\n      return true;\n    }\n    return false;\n  } catch (err) {\n    return true;\n  }\n};\n\nexport const removeAuthExpireDateTime = () => {\n  localStorage.removeItem(\"authExpireDateTime\");\n};","import React, {memo} from \"react\";\nimport {Box, makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  brandImg: {\n    width: \"115px\",\n  },\n  brandText: {\n    fontSize: \"1.75rem\",\n    lineHeight: \"1rem\",\n    marginLeft: \"1.57rem\",\n  },\n}));\n\nconst BrandIcon = () => {\n  const classes = useStyles();\n  return (\n    <Box>\n      <img\n        src=\"/images/black_lp_logo_300.png\"\n        alt=\"small-liveperson-logo\"\n        className={classes.brandImg}\n      />\n      <p className={classes.brandText}>\n        <span style={{fontWeight: \"bold\"}}>LP</span>\n        SYNC\n      </p>\n    </Box>\n  );\n};\n\nexport default memo(BrandIcon);\n","import React, {memo} from \"react\";\nimport {Box, Button, Popover} from \"@material-ui/core\";\n\nconst PowerSettingPopover = ({anchorEl, handleClose, logout}) => {\n  return (\n    <Popover\n      id={!!anchorEl ? \"simple-popover\" : undefined}\n      open={!!anchorEl}\n      anchorEl={anchorEl}\n      onClose={handleClose}\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"center\",\n      }}\n      transformOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\",\n      }}\n    >\n      <Box m={3}>\n        <Button onClick={logout} variant=\"contained\" color=\"secondary\">\n          Log Out\n        </Button>{\" \"}\n        <Button onClick={handleClose} variant=\"outlined\">\n          Cancel\n        </Button>\n      </Box>\n    </Popover>\n  );\n};\n\nexport default memo(PowerSettingPopover);\n","import { gql } from \"@apollo/client\";\n\nexport const CREATE_FEEDBACK = gql`\n  mutation CreateFeedback($input: LpsyncFeedbackInput) {\n    createFeedback(input: $input) {\n      id\n      name\n      email\n      feedback\n    }\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const SEND_FEEDBACK_EMAIL = gql`\n  mutation SendFeedbackEmail($input: SendEmailInput) {\n    sendFeedbackEmail(input: $input) {\n      body\n    }\n  }\n`;\n","import React, {useState} from \"react\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport {CREATE_FEEDBACK} from \"../../../operations/mutations/createFeedback\";\nimport {SEND_FEEDBACK_EMAIL} from \"../../../operations/mutations/sendFeedbackEmail\";\n\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    fontSize: \".9rem\",\n  },\n  heading: {\n    fontSize: \"1.15rem\",\n    fontWeight: 600,\n  },\n  dialog: {\n    backgroundColor: theme.palette.secondary.light,\n  },\n}));\n\nconst ProvideFeedback = () => {\n  const classes = useStyles();\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [notesError, setNotesError] = useState(false);\n\n  const [createFeedback] = useMutation(CREATE_FEEDBACK);\n\n  const [sendFeedbackEmail] = useMutation(SEND_FEEDBACK_EMAIL);\n\n  const runFeedbackEmail = () => {\n    const mailDetails = `<table border='0' style='border: 0; width: 1%;' cellpadding='0' cellspacing='0'>\n        <tbody>\n        <tr>\n        <td style='width: 100%; padding:0;'><img src='https://storage.googleapis.com/lpsync/email-lp-logo.png' width='252' height='54' /></td>\n        </tr>\n        <tr>\n        <td style='width: 100%; padding:0;'>\n        <h4 style='text-align: right;'>LPSync</h4>\n        </td>\n        </tr>\n        </tbody>\n        </table>\n        \n        <p>Hi Team, </p>\n        <p>A feedback was submitted, please read below:</p>\n        <p><strong>From:&nbsp;</strong>${name} - ${email}</p>\n        <p><strong>Feedback:&nbsp;</strong> ${notes} </p>\n        \n        <p>This email has been sent automatically from LPSync. The address it has been sent from is not monitored. For further assistance contact <a href='mailto:itsupport@liveperson.com'>itsupport@liveperson.com</a>&nbsp;</p>\n        `;\n\n    sendFeedbackEmail({\n      variables: {\n        input: {\n          body: mailDetails,\n        },\n      },\n    });\n  };\n\n  const handleDialogClickOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setName(\"\");\n    setEmail(\"\");\n    setNotes(\"\");\n  };\n\n  const handleNotes = (value) => {\n    setNotes(value);\n    setNotesError(false);\n  };\n\n  const handleDialogSubmit = () => {\n    if (notes?.length === 0) {\n      setNotesError(true);\n    } else {\n      createFeedback({\n        variables: {\n          input: {\n            name: name,\n            email: email,\n            feedback: notes,\n          },\n        },\n      });\n      runFeedbackEmail();\n      setName(\"\");\n      setEmail(\"\");\n      setNotes(\"\");\n      handleDialogClose();\n    }\n  };\n\n  const stopPropagationForTab = (event) => {\n    if (event.key === \"Tab\") {\n      event.stopPropagation();\n    }\n  };\n\n  return (\n    <>\n      <MenuItem className={classes.menuItem} onClick={handleDialogClickOpen}>\n        Provide Feedback\n      </MenuItem>\n      <Dialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        aria-labelledby=\"provide-feedback-title\"\n        onKeyDown={stopPropagationForTab}\n      >\n        <DialogTitle id=\"provide-feedback-title\">Feedback Form</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            We would love to hear your comments, suggestions, or problems with\n            LPSync.\n          </DialogContentText>\n          <TextField\n            onKeyDown={(e) => e.stopPropagation()}\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            helperText=\"optional\"\n            color=\"secondary\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            onKeyDown={(e) => e.stopPropagation()}\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            helperText=\"optional\"\n            color=\"secondary\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            required\n            onKeyDown={(e) => e.stopPropagation()}\n            error={notesError}\n            id=\"feedback\"\n            label=\"Feedback\"\n            color=\"secondary\"\n            multiline\n            minRows={4}\n            maxRows={6}\n            value={notes}\n            onChange={(e) => handleNotes(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n          />{\" \"}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDialogSubmit}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ProvideFeedback;\n","import {ClickAwayListener, Grow, MenuList, Paper, Popper} from \"@material-ui/core\";\nimport ProvideFeedback from \"./ProvideFeedback\";\nimport React, {memo} from \"react\";\n\nconst FeedbackPopover = ({anchorCur, isMenuOpen, setIsMenuOpen}) => {\n  const handleMenuClose = (event) => {\n    if (anchorCur && anchorCur.contains(event.target)) {\n      return;\n    }\n    setIsMenuOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setIsMenuOpen(false);\n    }\n  }\n\n  return (\n    <Popper\n      open={isMenuOpen}\n      anchorEl={anchorCur}\n      role={undefined}\n      transition\n      disablePortal\n    >\n      {({TransitionProps, placement}) => (\n        <Grow\n          {...TransitionProps}\n          style={{\n            transformOrigin:\n              placement === \"bottom\" ? \"center top\" : \"center bottom\"\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={handleMenuClose}>\n              <MenuList\n                autoFocusItem={isMenuOpen}\n                id=\"menu-list-grow\"\n                onKeyDown={handleListKeyDown}\n              >\n                <ProvideFeedback />\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  )\n}\n\nexport default memo(FeedbackPopover);","import {gql} from \"@apollo/client\";\n\nexport const UPDATE_USER_LAST_LOGIN = gql`\n  mutation UpdateUserLastLogin {\n    updateUserLastLogin {\n      id\n      firstName\n      lastName\n    }\n  }\n`;\n","import React, {memo, useState} from \"react\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_LPSYNC_USER_BADGES} from \"../../../../operations/queries/getLpsyncUserBadges\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport BadgeTypes from \"../../../../data/constants/BadgeTypes\";\nimport {Typography} from \"@material-ui/core\";\nimport InfoTooltip from \"../../../../components/tooltips/InfoTooltip\";\nimport ColorBorderBox from \"../../../../components/blocks/ColorBorderBox\";\nimport BadgeChip from \"../../../../components/badges/BadgeChip\";\n\nconst SystemOwnerBadgesInfo = () => {\n  const history = useHistory();\n  const [soBadges, setSoBadges] = useState([]);\n\n  useQuery(GET_LPSYNC_USER_BADGES, {\n    fetchPolicy: \"no-cache\",\n    onCompleted: (data) => getSoBadges(data?.get_lpsync_user_badges),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const getSoBadges = (data) => {\n    const so = data.filter(\n      (x) => x.badge.badgeType === BadgeTypes.SYSTEM_OWNER\n    );\n\n    setSoBadges(so);\n  };\n\n  if (!soBadges?.length) return null;\n\n  return (\n    <div>\n      <Typography>\n        You have the following System Owner badges...{\" \"}\n        <span>\n          <InfoTooltip placement={\"right-start\"}>\n            System Owner Badges are automatically assigned <br />\n            to you based on your role at LivePerson.\n          </InfoTooltip>\n        </span>\n      </Typography>\n\n      {soBadges?.length ? (\n        <ColorBorderBox height={\"auto\"}>\n          {soBadges?.map((bge) => (\n            <BadgeChip\n              key={bge.badge?.id}\n              id={bge.badge?.id}\n              label={bge.badge?.badgeName}\n              image={bge.badge?.badgeIcon?.badgeIconImg}\n            />\n          ))}\n        </ColorBorderBox>\n      ) : (\n        <Typography>No badges</Typography>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SystemOwnerBadgesInfo);\n","import React, {memo} from \"react\";\nimport {Button, makeStyles} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    fontSize: \".7rem\",\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n    fontSize: \"1.25rem\",\n  },\n}));\n\nconst AddButton = ({...props}) => {\n  const classes = useStyles();\n\n  return (\n    <Button color=\"secondary\" variant=\"contained\" size=\"small\" {...props}>\n      <AddIcon className={classes.icon} /> Add\n    </Button>\n  );\n};\n\nexport default memo(AddButton);\n","import React, {memo, useEffect, useState} from \"react\";\nimport {useLazyQuery} from \"@apollo/client\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Box,\n  Collapse,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport InfoTooltip from \"../../../../components/tooltips/InfoTooltip\";\nimport ColorBorderBox from \"../../../../components/blocks/ColorBorderBox\";\nimport BadgeChip from \"../../../../components/badges/BadgeChip\";\nimport CustomTextField from \"../../../../components/inputs/CustomTextField\";\nimport NoResultsTypography from \"../../../../components/typographies/NoResultsTypography\";\nimport BadgeIcon from \"../../../../components/badges/BadgeIcon\";\nimport AddButton from \"../../../../components/buttons/AddButton\";\nimport SelectCircularProgress from \"../../../../components/circularProgress/SelectCircularProgress\";\nimport {GET_LPSYNC_BADGES} from \"../../../../operations/adminQueries/getLpsyncBadges\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Help} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {position: \"relative\"},\n  resultsBox: {\n    position: \"absolute\",\n    zIndex: 2,\n    width: \"30ch\",\n    border: \"1px solid \" + theme.palette.secondary.main,\n    maxHeight: \"20rem\",\n    overflow: \"auto\",\n  },\n  boxContent: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  boxIcon: {marginLeft: 10},\n  listItemText: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst BadgesSearch = ({\n  selectedBadges,\n  setSelectedBadges,\n  deleteBadgeHandler,\n  badgesType,\n  title,\n  tooltip,\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [badgesData, setBadgesData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [resultsOpen, setResultsOpen] = useState(false);\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\n\n  const [executeBadgeSearch, {loading: loadingBadges}] = useLazyQuery(\n    GET_LPSYNC_BADGES,\n    {\n      onCompleted: (data) => {\n        setBadgesData(data?.get_lpsync_badges);\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const handleSearch = () => {\n    executeBadgeSearch({\n      variables: {\n        filters: {\n          type: badgesType,\n          query: searchQuery,\n          pageCount: 0,\n          itemsPerPage: 50,\n        },\n      },\n    });\n    setResultsOpen(true);\n  };\n\n  useEffect(() => {\n    if (searchQuery?.length) {\n      handleSearch();\n    } else if (!searchQuery?.length) {\n      setResultsOpen(false);\n      setBadgesData([]);\n    }\n  }, [executeBadgeSearch, searchQuery]);\n\n  const handleAddButton = (selectedBadge) => {\n    setSearchQuery(\"\");\n\n    const isBadgeSelected = selectedBadges?.some(\n      (bge) => bge?.id === selectedBadge?.id\n    );\n\n    if (isBadgeSelected) {\n      setIsAlertOpen(true);\n    } else {\n      setSelectedBadges([...selectedBadges, selectedBadge]);\n      setResultsOpen(false);\n    }\n  };\n\n  const filterBadges = (initArr, dataArr) => {\n    if (initArr && dataArr)\n      return initArr.filter(\n        (initItem) => !dataArr.some((dataItem) => dataItem.id === initItem.id)\n      );\n    else return [];\n  };\n\n  const handleDelete = async (chip) => {\n    deleteBadgeHandler(chip.id);\n    setSelectedBadges((selectedBadges) =>\n      selectedBadges.filter((bge) => bge.id !== chip.id)\n    );\n  };\n\n  const searchOnChange = (query) => {\n    setIsAlertOpen(false);\n    setResultsOpen(true);\n    setSearchQuery(query);\n  };\n\n  const handleClick = () => {\n    handleSearch();\n  };\n\n  const focusInCurrentTarget = ({relatedTarget, currentTarget}) => {\n    if (relatedTarget === null) return false;\n\n    let node = relatedTarget.parentNode;\n\n    while (node !== null) {\n      if (node === currentTarget) return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const handleBlur = (e) => {\n    if (!focusInCurrentTarget(e)) {\n      setResultsOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <Typography>\n        {title}\n        <span>\n          <InfoTooltip placement={\"right-start\"}>{tooltip}</InfoTooltip>\n        </span>\n      </Typography>\n\n      {isAlertOpen && (\n        <Alert severity=\"warning\">Badge is already selected</Alert>\n      )}\n\n      <Box mt={2} mb={2} className={classes.box} onBlur={handleBlur}>\n        <Box className={classes.boxContent}>\n          <CustomTextField\n            small\n            id=\"standard-basic\"\n            label=\"Search\"\n            variant=\"standard\"\n            autoComplete=\"off\"\n            value={searchQuery}\n            onValueChange={searchOnChange}\n            onClick={handleClick}\n          />\n          <Tooltip\n            title=\"If you do not see a badge you can request a new from your profile\"\n            className={classes.boxIcon}\n          >\n            <Help />\n          </Tooltip>\n        </Box>\n        <Collapse in={resultsOpen} timeout=\"auto\" unmountOnExit>\n          <Box className={classes.resultsBox}>\n            <Paper>\n              {loadingBadges ? (\n                <SelectCircularProgress />\n              ) : badgesData?.length ? (\n                <List>\n                  {filterBadges(badgesData, selectedBadges).map((badge) => (\n                    <React.Fragment key={badge?.id}>\n                      <ListItem key={badge?.id}>\n                        <ListItemText\n                          primary={\n                            <Box className={classes.listItemText}>\n                              <Box mr={1}>\n                                <AddButton\n                                  onClick={() => handleAddButton(badge)}\n                                />\n                              </Box>\n                              <Box mr={1}>\n                                <BadgeIcon\n                                  image={badge?.badgeIcon?.badgeIconImg}\n                                />\n                              </Box>\n                              <Typography component={\"div\"} variant=\"subtitle1\">\n                                {badge?.badgeName}\n                              </Typography>\n                            </Box>\n                          }\n                        />\n                      </ListItem>\n                      {badgesData?.length > 1 && <Divider />}\n                    </React.Fragment>\n                  ))}\n                </List>\n              ) : (\n                <Box m={1}>\n                  <NoResultsTypography />\n                </Box>\n              )}\n            </Paper>\n          </Box>\n        </Collapse>\n      </Box>\n\n      <Box>\n        {selectedBadges?.length > 0 && (\n          <ColorBorderBox height={\"auto\"}>\n            {selectedBadges?.map((bge) => (\n              <BadgeChip\n                key={bge?.id}\n                id={bge?.id}\n                label={bge?.badgeName}\n                image={bge?.badgeIcon?.badgeIconImg}\n                onDelete={() => handleDelete(bge)}\n              />\n            ))}\n          </ColorBorderBox>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default memo(BadgesSearch);\n","import React, {memo, useState} from \"react\";\nimport UserImg from \"../../../../components/UserImg\";\nimport {Button, makeStyles, Popover, Typography} from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\n\nconst useStyles = makeStyles((theme) => ({\n  imgDiv: {\n    height: \"6rem\",\n  },\n  img: {\n    width: \"6rem\",\n    borderRadius: \"10%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.3)\",\n  },\n  typography: {\n    padding: theme.spacing(2),\n  },\n  icon: {\n    fontSize: \"1.15rem\",\n  },\n  link: {\n    color: \"white\",\n    textDecoration: \"underline\",\n  },\n}));\n\nconst UserImgPopover = ({email}) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const preventDefault = (event) => event.preventDefault();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <Button aria-describedby={id} onClick={handleClick}>\n        <UserImg\n          email={email}\n          imgClass={classes.img}\n          imgDivClass={classes.imgDiv}\n        />\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Typography className={classes.typography}>\n          If you want to change your photo, <br />\n          go to{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"https://myaccount.google.com/personal-info\"\n            aria-label=\"myaccount.google.com/personal-info\"\n            className={classes.link}\n          >\n            accounts.google.com <OpenInNewIcon className={classes.icon} />\n          </a>\n        </Typography>\n      </Popover>\n    </div>\n  );\n};\n\nexport default memo(UserImgPopover);\n","import React, {useEffect, useState} from \"react\";\nimport {Box, Button, makeStyles, Typography} from \"@material-ui/core\";\nimport SystemOwnerBadgesInfo from \"./SystemOwnerBadgesInfo\";\nimport BadgesSearch from \"./BadgesSearch\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {ADD_AUTH_USER_BADGES} from \"../../../../operations/mutations/addAuthUserBadges\";\nimport handleError from \"../../../../data/handleError\";\nimport {useHistory} from \"react-router-dom\";\nimport {UPDATE_SPLASH_SCREEN_COMPLETED} from \"../../../../operations/mutations/updateSplashScreenCompleted\";\nimport UserImgPopover from \"./UserImgPopover\";\nimport BadgeTypes from \"../../../../data/constants/BadgeTypes\";\nimport {GET_LPSYNC_USER_BADGES} from \"../../../../operations/queries/getLpsyncUserBadges\";\nimport {DELETE_AUTH_USER_BADGE} from \"../../../../operations/mutations/deleteAuthUserBadge\";\n\nconst useStyles = makeStyles((theme) => ({\n  saveBtnBox: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  imgDiv: {\n    marginRight: theme.spacing(1),\n    height: \"6rem\",\n  },\n  img: {\n    width: \"6rem\",\n    borderRadius: \"10%\",\n    boxShadow: \"0px 10px 25px 0px rgba(0, 0, 0, 0.3)\",\n  },\n  welcomeBox: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n}));\n\nconst SplashModal = ({name, email, setIsSplashOpen}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [smeSelectedBadges, setSmeSelectedBadges] = useState([]);\n  const [userBadges, setUserBadges] = useState([]);\n  const [hiSelectedBadges, setHiSelectedBadges] = useState([]);\n\n  const [updateSplash] = useMutation(UPDATE_SPLASH_SCREEN_COMPLETED, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [addBadges] = useMutation(ADD_AUTH_USER_BADGES, {\n    onCompleted: () => updateSplash(),\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [getUserBadges, {loading: loadingBadges}] = useLazyQuery(\n    GET_LPSYNC_USER_BADGES,\n    {\n      onCompleted: (data) => {\n        const result = data.get_lpsync_user_badges;\n        if (result) {\n          const smeBadges = result\n            .filter(\n              (b) => b.badge.badgeType === BadgeTypes.SUBJECT_MATTER_EXPERT\n            )\n            .map((b) => b.badge);\n          const hiBadges = result\n            .filter((b) => b.badge.badgeType === BadgeTypes.HOBBIES_INTERESTS)\n            .map((b) => b.badge);\n          setSmeSelectedBadges(smeBadges);\n          setHiSelectedBadges(hiBadges);\n          setUserBadges([...smeBadges, ...hiBadges]);\n        }\n      },\n      onError: (error) => handleError(error)(history),\n    }\n  );\n\n  const [deleteBadge] = useMutation(DELETE_AUTH_USER_BADGE, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const handleDelete = (badgeId) => {\n    if (userBadges.some((b) => b.id === badgeId)) {\n      deleteBadge({\n        variables: {\n          badgeId: parseInt(badgeId),\n        },\n      });\n    }\n  };\n\n  const handleSave = async () => {\n    let badgeIds = [];\n    if (smeSelectedBadges.length > 0) {\n      smeSelectedBadges.map((badge) => {\n        badgeIds.push({badgeId: parseInt(badge.id)});\n      });\n    }\n    if (hiSelectedBadges.length > 0) {\n      hiSelectedBadges.map((badge) => {\n        badgeIds.push({badgeId: parseInt(badge.id)});\n      });\n    }\n\n    if (badgeIds.length > 0) {\n      await addBadges({\n        variables: {\n          input: badgeIds,\n        },\n      });\n    }\n\n    await setIsSplashOpen(false);\n  };\n\n  useEffect(() => {\n    getUserBadges({variables: {user: email}});\n  }, [email]);\n\n  return (\n    <div>\n      <Box className={classes.welcomeBox}>\n        <UserImgPopover email={email} />\n        <Box>\n          <Typography variant={\"h4\"}>Hi {name},</Typography>\n          <Typography variant={\"h4\"}>Welcome to LPSync!</Typography>\n        </Box>\n      </Box>\n      <Box mt={2}>\n        <SystemOwnerBadgesInfo />\n      </Box>\n      <Box mt={2}>\n        <BadgesSearch\n          selectedBadges={smeSelectedBadges}\n          setSelectedBadges={setSmeSelectedBadges}\n          badgesType={BadgeTypes.SUBJECT_MATTER_EXPERT}\n          deleteBadgeHandler={handleDelete}\n          title=\"Add some Subject Matter Expert badges for yourself... \"\n          tooltip={\n            <>\n              Subject Matter Expert badges should reflect <br />\n              knowledge/skills you have in a particular topic. <br />\n              People can look you up based on a subject.\n            </>\n          }\n        />\n      </Box>\n      <Box mt={2}>\n        <BadgesSearch\n          selectedBadges={hiSelectedBadges}\n          setSelectedBadges={setHiSelectedBadges}\n          badgesType={BadgeTypes.HOBBIES_INTERESTS}\n          deleteBadgeHandler={handleDelete}\n          title=\"Any Hobbies/Interests you want others to know about... \"\n          tooltip={\n            <>\n              Hobbies/Interests enable others to look you up <br />\n              based on what you have selected.\n            </>\n          }\n        />\n      </Box>\n      <Box className={classes.saveBtnBox}>\n        <Button variant={\"contained\"} color={\"secondary\"} onClick={handleSave}>\n          Save & Continue\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default SplashModal;\n","import {gql} from \"@apollo/client\";\n\nexport const CHECK_IF_AUTH_SPLASH_SCREEN_COMPLETED = gql`\n  query CheckIfAuthSplashScreenCompleted {\n    check_if_auth_splash_screen_completed {\n      splashScreenCompleted\n    }\n  }\n`;\n","import React, {memo, useContext, useEffect, useMemo, useState} from \"react\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Box, IconButton, makeStyles} from \"@material-ui/core\";\nimport {setSearchQuery} from \"../../data/redux/common/commonActions\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport SearchBlock from \"../../components/blocks/SearchBlock\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {CSSTransition} from \"react-transition-group\";\nimport useDebouncedChangeHandler from \"../../hooks/useDebouncedChangeHandler\";\n\nconst useStyles = makeStyles(() => ({\n  globalSearchTextField: {\n    width: \"50ch\",\n    \"& .MuiInputLabel-filled.MuiInputLabel-shrink.MuiInputLabel-marginDense\": {\n      transform: \"translate(12px, 2px) scale(0.75);\",\n    },\n    \"& .MuiInputLabel-filled\": {\n      fontSize: \"0.75rem\",\n      lineHeight: 1.5,\n    },\n    \"& .MuiFilledInput-input\": {\n      paddingTop: 14,\n      paddingBottom: 6,\n    },\n  },\n  searchItem: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n}));\n\nconst GlobalSearchBlock = () => {\n  const {\n    permTaskManagerViewAll,\n    permTaskManagerViewAllOffboarding,\n    permTaskManagerViewAllOnboarding,\n    permTaskManagerViewAllRequisition,\n    permUserDirectoryItDetailsView,\n    permThirdPartyDirectoryView,\n  } = useContext(AuthUserContext);\n  const classes = useStyles();\n  const searchQuery = useSelector(state => state?.common?.get(\"searchQuery\"));\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const globalSearch = useRouteMatch(FrontendRoutes.GLOBAL_SEARCH);\n  const [active, setActive] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const debouncedChangeHandler = useDebouncedChangeHandler(setSearchQuery, dispatch);\n\n  useEffect(() => {\n    if (active && !globalSearch && searchQuery?.length > 2) {\n      history.push(FrontendRoutes.GLOBAL_SEARCH);\n    }\n  }, [globalSearch, searchQuery, active]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const searchFields = useMemo(() => [\n      \"User\",\n      permUserDirectoryItDetailsView && \"Device Serial Number\",\n      (permTaskManagerViewAll\n        || permTaskManagerViewAllOffboarding\n        || permTaskManagerViewAllOnboarding\n        || permTaskManagerViewAllRequisition) ? \"Task\" : \"Own Task\",\n      permThirdPartyDirectoryView && \"Third Party\",\n    ]?.filter(Boolean),\n    [permThirdPartyDirectoryView, permUserDirectoryItDetailsView]);\n\n  return (\n    <>\n      <Box style={{position: \"relative\", height: 50}}>\n        <CSSTransition\n          in={open}\n          timeout={1000}\n          classNames=\"search\"\n          unmountOnExit\n          appear\n        >\n          <SearchBlock\n            searchProps={{\n              id: \"global-search-text-field\",\n              label: `Search by ${searchFields?.join(\", \")}`,\n              className: classes.globalSearchTextField,\n              onFocus: () => setActive(true),\n              onBlur: () => setActive(false),\n              handleClose,\n            }}\n            searchQuery={searchQuery}\n            handleChange={debouncedChangeHandler}\n            className={classes.searchItem}\n          />\n        </CSSTransition>\n\n        {!open && <IconButton onClick={() => setOpen(prev => !prev)} className={classes.searchItem}>\n          <SearchIcon />\n        </IconButton>\n        }\n      </Box>\n    </>\n  );\n};\n\nexport default memo(GlobalSearchBlock);","import {useContext, useEffect} from \"react\";\nimport {AuthUserContext} from \"../AuthUserContextProvider\";\n\nconst usePermissions = () => {\n  const {\n    authUserPermissions,\n    setIsPageLoading,\n    setPermDashboardView,\n    setMultiCandidateRequestView,\n    setPermBadgeRequestApproveTasks,\n    setPermBadgeRequestCancelTasks,\n    setPermBadgeRequestRejectTasks,\n    setPermOffboardingAll,\n    setPermOffboardingTeam,\n    setPermOffboardingNfte,\n    setPermOffboardingApproveTasks,\n    setPermOffboardingCancelTasks,\n    setPermOffboardingHrInfo,\n    setPermOffboardingRejectTasks,\n    setPermOnboardingAll,\n    setPermOnboardingApprovalBypass,\n    setPermOnboardingApproveTasks,\n    setPermOnboardingCancelTasks,\n    setPermOnboardingRejectTasks,\n    setPermOnboardingRequisitionBypass,\n    setPermOnboardingTeam,\n    setPermOnboardingDashboardView,\n    setPermOffboardingApprovalBypass,\n    setPermOrgChartView,\n    setPermReportGeneratorView,\n    setPermReportingDashboardView,\n    setPermReportNonFteAudit,\n    setPermRequisitionAll,\n    setPermRequisitionApproveTasks,\n    setPermRequisitionRejectTasks,\n    setPermRequisitionCancelTasks,\n    setPermSysMgmtBadgeMgmt,\n    setPermSysMgmtCandidatePortalAccess,\n    setPermSysMgmtFteCandidateTracker,\n    setPermSystemsAndServicesView,\n    setPermSysMgmtLogs,\n    setPermSysMgmtManage,\n    setPermSysMgmtSchedulerJobs,\n    setPermSysMgmtSettingsOffboarding,\n    setPermSysMgmtSettingsOnboarding,\n    setPermTaskManagerViewAll,\n    setPermTaskManagerViewAllOffboarding,\n    setPermTaskManagerViewAllOnboarding,\n    setPermTaskManagerViewAllRequisition,\n    setPermTaskManagerViewTeam,\n    setPermTaskManagerViewHrInfo,\n    setPermUserDirectoryFinanceView,\n    setPermUserDirectoryItDetailsView,\n    setPermUserDirectoryLpsyncManage,\n    setPermUserDirectoryNonFteAudit,\n    setPermUserDirectoryOrgDetailsView,\n    setPermUserDirectoryView,\n    setPermThirdPartyDirectoryView,\n    setPermBulkApproverOnboarding,\n    setPermBulkApproverRequisition,\n    setPermBulkApproverOffboarding,\n  } = useContext(AuthUserContext);\n\n  useEffect(() => {\n    if (authUserPermissions?.length) {\n      authUserPermissions?.forEach((id) => {\n        switch(id) {\n          case \"dashboard-view\":\n            setPermDashboardView(true);\n            break;\n          case \"multicandidaterequest-view\":\n            setMultiCandidateRequestView(true);\n            break;\n          case \"badge-request-approve-tasks\":\n            setPermBadgeRequestApproveTasks(true);\n            break;\n          case \"badge-request-cancel-tasks\":\n            setPermBadgeRequestCancelTasks(true);\n            break;\n          case \"badge-request-reject-tasks\":\n            setPermBadgeRequestRejectTasks(true);\n            break;\n          case \"offboarding-all\":\n            setPermOffboardingAll(true);\n            break;\n          case \"offboarding-team\":\n            setPermOffboardingTeam(true);\n            break;\n          case \"offboarding-nfte\":\n            setPermOffboardingNfte(true);\n            break;\n          case \"offboarding-approval-bypass\":\n            setPermOffboardingApprovalBypass(true);\n            break;\n          case \"offboarding-approve-tasks\":\n            setPermOffboardingApproveTasks(true);\n            break;\n          case \"offboarding-cancel-tasks\":\n            setPermOffboardingCancelTasks(true);\n            break;\n          case \"offboarding-hrinfo\":\n            setPermOffboardingHrInfo(true);\n            break;\n          case \"offboarding-reject-tasks\":\n            setPermOffboardingRejectTasks(true);\n            break;\n          case \"onboarding-all\":\n            setPermOnboardingAll(true);\n            break;\n          case \"onboarding-approval-bypass\":\n            setPermOnboardingApprovalBypass(true);\n            break;\n          case \"onboarding-approve-tasks\":\n            setPermOnboardingApproveTasks(true);\n            break;\n          case \"onboarding-cancel-tasks\":\n            setPermOnboardingCancelTasks(true);\n            break;\n          case \"onboarding-reject-tasks\":\n            setPermOnboardingRejectTasks(true);\n            break;\n          case \"onboarding-requisition-bypass\":\n            setPermOnboardingRequisitionBypass(true);\n            break;\n          case \"onboarding-team\":\n            setPermOnboardingTeam(true);\n            break;\n          case \"onboardingdashboard-view\":\n            setPermOnboardingDashboardView(true);\n            break;\n          case \"orgchart-view\":\n            setPermOrgChartView(true);\n            break;\n          case \"reportgenerator-view\":\n            setPermReportGeneratorView(true);\n            break;\n          case \"reportingdashboard-view\":\n            setPermReportingDashboardView(true);\n            break;\n          case \"reporting-report-nonfteaudit\":\n            setPermReportNonFteAudit(true);\n            break;\n          case \"requisition-all\":\n            setPermRequisitionAll(true);\n            break;\n          case \"requisition-approve-tasks\":\n            setPermRequisitionApproveTasks(true);\n            break;\n          case \"requisition-reject-tasks\":\n            setPermRequisitionRejectTasks(true);\n            break;\n          case \"requisition-cancel-tasks\":\n            setPermRequisitionCancelTasks(true);\n            break;\n          case \"systemmanagement-badge-mgmt\":\n            setPermSysMgmtBadgeMgmt(true);\n            break;\n          case \"systemmanagement-candidate-portal-access\":\n            setPermSysMgmtCandidatePortalAccess(true);\n            break;\n          case \"systemmanagement-fte-candidate-tracker\":\n            setPermSysMgmtFteCandidateTracker(true);\n            break;\n          case \"systems-and-services-view\":\n            setPermSystemsAndServicesView(true);\n            break;\n\n          case \"systemmanagement-logs\":\n            setPermSysMgmtLogs(true);\n            break;\n          case \"systemmanagement-manage\":\n            setPermSysMgmtManage(true);\n            break;\n          case \"systemmanagement-schedulerjobs\":\n            setPermSysMgmtSchedulerJobs(true);\n            break;\n          case \"systemmanagement-settings-offboarding\":\n            setPermSysMgmtSettingsOffboarding(true);\n            break;\n          case \"systemmanagement-settings-onboarding\":\n            setPermSysMgmtSettingsOnboarding(true);\n            break;\n          case \"taskmanager-view-all\":\n            setPermTaskManagerViewAll(true);\n            break;\n          case \"taskmanager-view-all-offboarding\":\n            setPermTaskManagerViewAllOffboarding(true);\n            break;\n          case \"taskmanager-view-all-onboarding\":\n            setPermTaskManagerViewAllOnboarding(true);\n            break;\n          case \"taskmanager-view-all-requisition\":\n            setPermTaskManagerViewAllRequisition(true);\n            break;\n          case \"taskmanager-view-team\":\n            setPermTaskManagerViewTeam(true);\n            break;\n          case \"taskmanager-view-hrinfo\":\n            setPermTaskManagerViewHrInfo(true);\n            break;\n          case \"userdirectory-finance-view\":\n            setPermUserDirectoryFinanceView(true);\n            break;\n          case \"userdirectory-itdetails-view\":\n            setPermUserDirectoryItDetailsView(true);\n            break;\n          case \"userdirectory-lpsync-manage\":\n            setPermUserDirectoryLpsyncManage(true);\n            break;\n          case \"userdirectory-nonfteaudit\":\n            setPermUserDirectoryNonFteAudit(true);\n            break;\n          case \"userdirectory-orgdetails-view\":\n            setPermUserDirectoryOrgDetailsView(true);\n            break;\n          case \"userdirectory-view\":\n            setPermUserDirectoryView(true);\n            break;\n          case \"vendordirectory-view\":\n            setPermThirdPartyDirectoryView(true);\n            break;\n          case \"bulk-approver-onboarding\":\n            setPermBulkApproverOnboarding(true);\n            break;\n          case \"bulk-approver-requisition\":\n            setPermBulkApproverRequisition(true);\n            break;\n          case \"bulk-approver-offboarding\":\n            setPermBulkApproverOffboarding(true);\n            break;\n          default:\n            break;\n        }\n      });\n      setIsPageLoading(false);\n    }\n  }, [authUserPermissions,\n    setIsPageLoading, setMultiCandidateRequestView, setPermBadgeRequestApproveTasks,\n    setPermBadgeRequestCancelTasks, setPermBadgeRequestRejectTasks, setPermBulkApproverOffboarding,\n    setPermBulkApproverOnboarding, setPermBulkApproverRequisition, setPermDashboardView,\n    setPermOffboardingAll, setPermOffboardingApprovalBypass, setPermOffboardingApproveTasks,\n    setPermOffboardingCancelTasks, setPermOffboardingHrInfo, setPermOffboardingNfte,\n    setPermOffboardingRejectTasks, setPermOffboardingTeam, setPermOnboardingAll,\n    setPermOnboardingApprovalBypass, setPermOnboardingApproveTasks, setPermOnboardingCancelTasks,\n    setPermOnboardingDashboardView, setPermOnboardingRejectTasks, setPermOnboardingRequisitionBypass,\n    setPermOnboardingTeam, setPermOrgChartView, setPermReportGeneratorView, setPermReportNonFteAudit,\n    setPermReportingDashboardView, setPermRequisitionAll, setPermRequisitionApproveTasks,\n    setPermRequisitionCancelTasks, setPermRequisitionRejectTasks, setPermSysMgmtBadgeMgmt,\n    setPermSysMgmtCandidatePortalAccess, setPermSysMgmtFteCandidateTracker, setPermSysMgmtLogs,\n    setPermSysMgmtManage, setPermSysMgmtSchedulerJobs, setPermSysMgmtSettingsOffboarding,\n    setPermSysMgmtSettingsOnboarding, setPermSystemsAndServicesView, setPermTaskManagerViewAll,\n    setPermTaskManagerViewAllOffboarding, setPermTaskManagerViewAllOnboarding, setPermTaskManagerViewAllRequisition,\n    setPermTaskManagerViewHrInfo, setPermTaskManagerViewTeam, setPermThirdPartyDirectoryView,\n    setPermUserDirectoryFinanceView, setPermUserDirectoryItDetailsView, setPermUserDirectoryLpsyncManage,\n    setPermUserDirectoryNonFteAudit, setPermUserDirectoryOrgDetailsView, setPermUserDirectoryView\n  ]);\n};\n\n\nexport default usePermissions;","import {useCallback, useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport {useSubscription} from \"@apollo/client\";\nimport {CREATE_TASK_SUBSCRIPTION} from \"../operations/subscription/createTaskSubscription\";\nimport {UPDATE_TASK_SUBSCRIPTION} from \"../operations/subscription/updateTaskSubscription\";\nimport {enqueueSnackbar} from \"../data/redux/common/commonActions\";\nimport {getNotificationMessage} from \"../components/snackbars/notifiacationAction\";\nimport FrontendRoutes from \"../data/constants/FrontendRoutes\";\n\nconst useTopBarSnackbar = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isTaskManager = useRouteMatch(FrontendRoutes.TASK_MANAGER_VIEW());\n\n  const createTaskSubscription = useSubscription(CREATE_TASK_SUBSCRIPTION);\n  const updateTaskSubscription = useSubscription(UPDATE_TASK_SUBSCRIPTION);\n\n  const handleShow = useCallback((taskType, id) => {\n    if (taskType && id) {\n      history.push(\n        FrontendRoutes.TASK_MANAGER_VIEW_TASK(\n          isTaskManager?.params?.hash || \"alltasks\",\n          id,\n        ),\n      );\n    }\n  }, [isTaskManager, history]);\n\n  useEffect(() => {\n    const subData = createTaskSubscription?.data?.createTaskSubscription;\n    if (subData) {\n      dispatch(enqueueSnackbar({\n        message: getNotificationMessage(\n          subData?.taskType,\n          \"created\",\n          subData?.id,\n        ),\n        onShow: () => handleShow(subData?.taskType, subData?.id),\n      }));\n    }\n  }, [createTaskSubscription.data, createTaskSubscription.error, dispatch, handleShow]);\n\n  useEffect(() => {\n    const subData = updateTaskSubscription?.data?.updateTaskSubscription;\n    if (subData) {\n      dispatch(enqueueSnackbar({\n        message: getNotificationMessage(\n          subData?.taskType,\n          \"updated\",\n          subData?.id,\n        ),\n        onShow: () => handleShow(subData?.taskType, subData?.id),\n      }));\n    }\n  }, [updateTaskSubscription.data, updateTaskSubscription.error, dispatch, handleShow]);\n}\n\nexport default useTopBarSnackbar;","import React, {\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  useLazyQuery,\n  useMutation,\n  useQuery,\n} from \"@apollo/client\";\nimport {\n  AppBar,\n  Box,\n  Button,\n  Hidden,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {AuthUserContext} from \"../../../AuthUserContextProvider\";\nimport {GET_AUTH_USER} from \"../../../operations/queries/getAuthUser\";\nimport {CREATE_LOG_ENTRY} from \"../../../operations/mutations/createLogEntry\";\nimport {GET_USER_ROLES_BY_USER_ID} from \"../../../operations/queries/getUserRolesByUserId\";\nimport {GET_DIRECT_REPORTS} from \"../../../operations/queries/getDirectReports\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\nimport handleError from \"../../../data/handleError\";\nimport FrontendRoutes, {\n  AdminRoutes,\n} from \"../../../data/constants/FrontendRoutes\";\nimport {\n  isAuthExpired,\n  removeAuthExpireDateTime,\n  setAuthExpireDateTimeToStorage,\n} from \"../../../data/helper/storageHelpers\";\nimport BrandIcon from \"./BrandIcon\";\nimport PowerSettingPopover from \"./PowerSettingPopover\";\nimport FeedbackPopover from \"./FeedbackPopover\";\nimport {UPDATE_USER_LAST_LOGIN} from \"../../../operations/mutations/updateUserLastLogin\";\nimport CustomModal from \"../../../components/modals/CustomModal\";\nimport SplashModal from \"./SplashModalContent\";\nimport {CHECK_IF_AUTH_SPLASH_SCREEN_COMPLETED} from \"../../../operations/queries/checkIfAuthSplashScreenCompleted\";\nimport GlobalSearchBlock from \"../GlobalSearchBlock\";\nimport CustomIcon from \"../../../components/CustomIcon\";\nimport usePermissions from \"../../../hooks/usePermissions\";\nimport useTopBarSnackbar from \"../../../hooks/useTopBarSnackbar\";\n\nconst publicIp = require(\"public-ip\");\nconst isStaging = process.env.REACT_APP_ENVIRONMENT === \"staging\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: \"linear-gradient(45deg, #1d1f52 30%, #162036 90%)\",\n  },\n  toolbar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  menuItem: {\n    fontSize: \".9rem\",\n  },\n  commentIcon: {\n    fontSize: \"1.5rem\",\n  },\n  topBlock: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  userNameButton: {\n    textTransform: \"none\",\n  },\n}));\n\nconst TopBar = ({className, onMobileNavOpen, ...rest}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    authUser,\n    permUserDirectoryView,\n    setAuthUser,\n    setAuthUserPermissions,\n    isPageLoading,\n    setAuthUserDirectReports,\n  } = useContext(AuthUserContext);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const anchorRef = useRef(null);\n  const [isSplashOpen, setIsSplashOpen] = useState(false);\n\n  useQuery(GET_AUTH_USER, {\n    onCompleted: (data) => setAuthUser(data.get_auth_user),\n    onError: (error) => handleError(error)(history),\n  });\n\n  useQuery(GET_USER_ROLES_BY_USER_ID, {\n    onCompleted: (data) => savePermissions(data.get_user_roles_by_user_id),\n    onError: (error) => handleError(error)(history),\n  });\n\n  useQuery(CHECK_IF_AUTH_SPLASH_SCREEN_COMPLETED, {\n    onCompleted: (data) => {\n      if (!data?.check_if_auth_splash_screen_completed?.splashScreenCompleted) {\n        setIsSplashOpen(true);\n      }\n    },\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [executeReportsSearch] = useLazyQuery(GET_DIRECT_REPORTS, {\n    onCompleted: (data) => setAuthUserDirectReports(data.get_direct_reports),\n    onError: (error) => handleError(error)(history),\n  }); // TODO do we need this here? switch to nonFte\n\n  const [updateUserLastLogin] = useMutation(UPDATE_USER_LAST_LOGIN, {\n    onError: (error) => handleError(error)(history),\n  });\n\n  const [createLogEntry] = useMutation(CREATE_LOG_ENTRY);\n\n  const logUserAuthenticated = async() => {\n    await updateUserLastLogin();\n    if (isAuthExpired()) {\n      setAuthExpireDateTimeToStorage();\n      if (process.env.NODE_ENV === \"production\") {\n        // todo check for staging\n        const ipAddress = await publicIp.v4();\n        createLog(\n          \"info\",\n          `User Authenticated >> infoMsg: Success. ipAddress: ${ipAddress}`,\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (authUser) {\n      executeReportsSearch({variables: {search: authUser.profile.email}});\n      logUserAuthenticated();\n    }\n  }, [authUser]);\n\n  const savePermissions = async(data) => {\n    let permissions = [];\n\n    await data?.forEach((userRole) => {\n      userRole.role.permissions.map((perm) =>\n        permissions.push(perm.permissionId),\n      );\n    });\n    const permissionsSet = [...new Set(permissions)];\n\n    setAuthUserPermissions(permissionsSet);\n  };\n\n  const createLog = useCallback(\n    (info, description) => {\n      createLogEntry({\n        variables: {\n          input: {\n            logType: \"Authentication\",\n            logNotification: info,\n            logDescription: description,\n          },\n        },\n      });\n    },\n    [createLogEntry],\n  );\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const logout = async() => {\n    await createLog(\"info\", \"User Authenticated >> infoMsg: User logged out.\");\n    removeAuthExpireDateTime();\n    document.cookie.split(\";\").forEach(function(c) {\n      document.cookie = c\n        .replace(/^ +/, \"\")\n        .replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n    });\n    window.location.href = \"https://hub.liveperson.com/app/UserHome\";\n  };\n\n  const handleMenuToggle = () => {\n    setIsMenuOpen((prevOpen) => !prevOpen);\n  };\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = useRef(isMenuOpen);\n  useEffect(() => {\n    if (prevOpen.current === true && isMenuOpen === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = isMenuOpen;\n  }, [isMenuOpen]);\n\n  const isAdmin = useRouteMatch(AdminRoutes.ADMIN);\n  const title = isAdmin ? (isStaging ? \"Admin - Staging\" : \"Admin\") : \"Staging\";\n\n  usePermissions();\n  useTopBarSnackbar();\n\n  return (\n    <>\n      <AppBar\n        className={`${classes.root} ${className}`}\n        postion=\"sticky\"\n        elevation={1}\n        {...rest}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Box className={classes.topBlock}>\n            <BrandIcon />\n            <Hidden lgUp>\n              <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            {(isStaging || isAdmin) && (\n              <Box ml={3}>\n                <Typography component={\"div\"}>{title}</Typography>\n              </Box>\n            )}\n          </Box>\n\n\n          <Box className={classes.topBlock}>\n            {permUserDirectoryView && (\n                <GlobalSearchBlock />\n            )}\n            {isPageLoading ? (\n              <Typography component={\"div\"}>Loading permissions...</Typography>\n            ) : (\n              authUser && (\n                <Button className={classes.userNameButton}\n                        onClick={() => history.push(FrontendRoutes.USER_DIRECTORY_PROFILE(authUser?.profile.userName))}\n                >\n                  <Typography component={\"div\"} variant={\"h5\"}>\n                    {authUser.profile.firstName + \" \" + authUser.profile.lastName}\n                  </Typography>\n                </Button>\n              )\n            )}\n            {!isAdmin && (\n              <Button\n                ref={anchorRef}\n                aria-controls={isMenuOpen ? \"menu-list-grow\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleMenuToggle}\n              >\n                <CustomIcon\n                  alt=\"feedback-icon\"\n                  src={\"/images/messages-bubble-edit-streamline.png\"}\n                />\n              </Button>\n            )}\n            <IconButton onClick={handleClick}>\n              <CustomIcon\n                alt=\"power-button-icon\"\n                src={\"/images/power-button-streamline.png\"}\n              />\n            </IconButton>\n          </Box>\n          {!isAdmin && (\n            <FeedbackPopover\n              anchorCur={anchorRef.current}\n              isMenuOpen={isMenuOpen}\n              setIsMenuOpen={setIsMenuOpen}\n            />\n          )}\n          <PowerSettingPopover\n            anchorEl={anchorEl}\n            handleClose={handleClose}\n            logout={logout}\n          />\n        </Toolbar>\n        {isPageLoading && <LinearProgress color=\"secondary\" />}\n      </AppBar>\n      <CustomModal open={isSplashOpen} large>\n        <SplashModal\n          name={authUser?.profile?.firstName}\n          email={authUser?.profile?.email}\n          setIsSplashOpen={setIsSplashOpen}\n        />\n      </CustomModal>\n    </>\n  );\n};\n\n\nexport default memo(TopBar);\n","import React from \"react\";\nimport { Container, Typography, makeStyles, Box } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"70vh\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  logoDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  brandImg: {\n    width: \"120px\",\n    marginLeft: \"-1.4rem\",\n    marginBottom: \"-1rem\",\n  },\n  brandText: {\n    fontSize: \"3rem\",\n  },\n}));\n\nconst MobileAlertPage = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box mt={5}>\n        <Alert severity=\"error\" className={classes.alert}>\n          LPSync is only available on desktop\n        </Alert>\n      </Box>\n      <Container className={classes.root}>\n        <div className={classes.logoDiv}>\n          <div>\n            <img\n              src=\"https://storage.googleapis.com/lpsync/orange_lp_logo.png\"\n              alt=\"small-liveperson-logo\"\n              className={classes.brandImg}\n            />\n            <Typography\n              component={\"div\"}\n              variant=\"h1\"\n              className={classes.brandText}\n            >\n              <span style={{ fontWeight: \"bold\" }}>LP</span>\n              <span style={{ fontWeight: \"300\" }}>SYNC</span>\n            </Typography>\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default MobileAlertPage;\n","import {useEffect, useState} from \"react\";\n\nconst getScreenDimensions = () => {\n  const {innerWidth: width, innerHeight: height} = window;\n  return {width, height};\n};\n\nconst useScreenDimensions = () => {\n  const [screenDimensions, setScreenDimensions] = useState(getScreenDimensions());\n\n  useEffect(() => {\n    const handleResize = () => {\n      setScreenDimensions(getScreenDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return screenDimensions;\n};\n\nexport default useScreenDimensions;","import React, {memo, useContext, useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {AuthUserContext} from \"../../AuthUserContextProvider\";\nimport MainContainer from \"./MainContainer\";\nimport NavBar from \"./NavBar\";\nimport TopBar from \"./TopBar\";\nimport MobileAlertPage from \"./MobileAlertPage\";\nimport {useRouteMatch} from \"react-router-dom\";\nimport FrontendRoutes from \"../../data/constants/FrontendRoutes\";\nimport useScreenDimensions from \"../../hooks/useScreenDimensions\";\n\nconst useStyles = makeStyles((theme) => ({\n  desktopRoot: {\n    backgroundColor: theme.palette.background.default,\n    display: \"flex\",\n    height: \"100%\",\n    // overflow: \"auto\",\n    width: \"100%\",\n    paddingBottom: (props) => (props.orgchart ? 0 : props.request ? \"2vh\" : \"5vh\"),\n    [theme.breakpoints.down(\"sm\")]: {\n      display: (props) => (props.firefox ? \"none\" : \"flex\"),\n    },\n  },\n  mobileRoot: {\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  rootWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    overflowX: \"hidden\",\n  },\n  wrapper: {\n    display: \"flex\",\n    // flex: \"1 1 auto\",\n    paddingTop: 64,\n    overflowX: \"hidden\",\n  },\n  contentContainer: {\n    flex: \"1 1 auto\",\n    height: \"100%\",\n    width: \"inherit\",\n  },\n}));\n\nconst BodyLayout = () => {\n  const orgchart = useRouteMatch(FrontendRoutes.ORGANIZATION_CHART);\n  const offboarding = useRouteMatch(FrontendRoutes.OFFBOARD_EMPLOYEE);\n  const candidate = useRouteMatch(FrontendRoutes.CANDIDATE_REQUEST);\n  const requisition = useRouteMatch(FrontendRoutes.REQUISITION_REQUEST);\n  const request = offboarding || candidate || requisition;\n\n  const firefox = typeof InstallTrigger !== \"undefined\";\n  const classes = useStyles({orgchart, request, firefox});\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  const {isPageLoading} = useContext(AuthUserContext);\n  const {width} = useScreenDimensions();\n\n  useEffect(() => {\n    const scale = width / 1275;\n    if (width < 960) {\n      document.body.style.zoom = scale;\n    } else {\n      document.body.style.zoom = 1;\n      document.body.style[\"-moz-transform\"] = 1;\n    }\n  }, [width]);\n\n  return (\n    <>\n      {firefox && (\n        <div className={classes.mobileRoot}>\n          <MobileAlertPage />\n        </div>\n      )}\n      <div className={classes.desktopRoot}>\n        <>\n          <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n          {!isPageLoading && (\n            <NavBar\n              onMobileClose={() => setMobileNavOpen(false)}\n              openMobile={isMobileNavOpen}\n            />\n          )}\n        </>\n        <div id=\"portal-root-id\" className={classes.rootWrapper}>\n          <div className={classes.wrapper}>\n            <div className={classes.contentContainer}>\n              {!isPageLoading && <MainContainer />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(BodyLayout);\n","import { Record } from \"immutable\";\n\nconst RequisitionType = new Record({\n    id: 0,\n    jobCode: \"\",\n    jobTitle: \"\",\n    startDate: \"\"\n  }\n);\n\nexport default RequisitionType;","import {Record} from \"immutable\";\n\nconst HiringManager = new Record({\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  employeeNumber: \"\",\n});\n\nexport default HiringManager;\n","import { Record } from \"immutable\";\n\nconst Location = new Record({\n  locationCode: '',\n  locationDescription: '',\n  locationCountryCode: ''\n});\n\nexport default Location;","import {isImmutable, Record} from \"immutable\";\nimport {deepCopy} from \"../../helper/helpers\";\nimport RequisitionType from \"./RequisitionType\";\nimport HiringManager from \"./HiringManager\";\nimport Location from \"./Location\";\n\nconst defaultProps = {\n  requisitionType: null,\n  startDate: \"\",\n  hiringManager: null,\n  businessUnit: null,\n  department: null,\n  location: null,\n  employeeType: \"\",\n};\n\nclass RequisitionDetails extends (new Record(defaultProps)) {\n  constructor(props) {\n    if (!props) {\n      super(props);\n      return;\n    }\n    props = deepCopy(props);\n    if (!isImmutable(props)) {\n      if (\n        props &&\n        props.requisitionType &&\n        !isImmutable(props.requisitionType)\n      ) {\n        props.requisitionType = new RequisitionType(props.requisitionType);\n      }\n      if (props && props.hiringManager && !isImmutable(props.hiringManager)) {\n        props.hiringManager = new HiringManager(props.hiringManager);\n      }\n      if (props && props.location && !isImmutable(props.location)) {\n        props.location = new Location(props.location);\n      }\n    }\n    super(props);\n  }\n}\n\nexport default RequisitionDetails;\n","import {Record} from \"immutable\";\n\nconst Job = new Record({\n  jobTitle: \"\",\n  jobCode: \"\"\n});\n\nexport default Job;","import {isImmutable, Record} from \"immutable\";\nimport {deepCopy} from \"../../helper/helpers\";\nimport Job from \"./Job\";\n\nconst defaultProps = {\n  firstName: \"\",\n  username: \"\",\n  lastName: \"\",\n  nonLpEmail: \"\",\n  job: new Job(),\n  selectedCompany: \"\",\n  officeNumber: \"\",\n  mobileNumber: \"\",\n};\n\nclass CandidateDetails extends (new Record(defaultProps)) {\n  constructor(props) {\n    if (!props) {\n      super(props);\n      return;\n    }\n    props = deepCopy(props);\n    if (!isImmutable(props)) {\n      if (props && props.job && !isImmutable(props.job)) {\n        props.job = new Job(props.job);\n      }\n    }\n    super(props);\n  }\n}\n\nexport default CandidateDetails;\n","import {Record} from \"immutable\";\n\nconst AdditionalInformation = new Record({\n  selectedDevice: \"No\",\n  isDeviceNoteConfirmed: false,\n  isGoogleAccountNeeded: false,\n});\n\nexport default AdditionalInformation;\n","import {OrderedMap} from \"immutable\";\nimport RequisitionDetails from \"../../immutableEntities/candidateImmutables/RequisitionDetails\";\nimport CandidateDetails from \"../../immutableEntities/candidateImmutables/CandidateDetails\";\nimport AdditionalInformation from \"../../immutableEntities/candidateImmutables/AdditionalInformation\";\nimport CandidateRequestActonTypes from \"./candidateRequestActonTypes\";\nimport Location from \"../../immutableEntities/candidateImmutables/Location\";\nimport HiringManager from \"../../immutableEntities/candidateImmutables/HiringManager\";\nimport RequisitionType from \"../../immutableEntities/candidateImmutables/RequisitionType\";\nimport Job from \"../../immutableEntities/candidateImmutables/Job\";\n\nconst defaultState = OrderedMap({\n  requisitionDetails: new RequisitionDetails(),\n  candidateDetails: new CandidateDetails(),\n  additionalInformation: new AdditionalInformation(),\n\n  requisitionTypeError: false,\n  isFilledByRequisition: false,\n  startDateError: false,\n  hiringManagerError: false,\n  businessUnitError: false,\n  departmentError: false,\n  locationError: false,\n  employeeTypeError: false,\n  firstNameError: false,\n  lastNameError: false,\n  nonLpEmailError: false,\n  jobError: false,\n  selectedCompanyError: false,\n  usernameError: false,\n  selectedDeviceError: false,\n  isDeviceNoteConfirmed: false,\n  isGoogleAccountNeeded: true,\n  activeStep: 0,\n});\n\nconst candidateRequestReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case CandidateRequestActonTypes.SET_REQUISITION_TYPE:\n      return state.setIn(\n        [\"requisitionDetails\", \"requisitionType\"],\n        new RequisitionType(action.payload.requisitionType)\n      );\n    case CandidateRequestActonTypes.SET_START_DATE:\n      return state.setIn(\n        [\"requisitionDetails\", \"startDate\"],\n        action.payload.startDate\n      );\n    case CandidateRequestActonTypes.SET_HIRING_MANAGER:\n      return state.setIn(\n        [\"requisitionDetails\", \"hiringManager\"],\n        action.payload.hiringManager\n          ? new HiringManager(action.payload.hiringManager)\n          : action.payload.hiringManager\n      );\n    case CandidateRequestActonTypes.SET_BUSINESS_UNIT:\n      return state.setIn(\n        [\"requisitionDetails\", \"businessUnit\"],\n        action.payload.businessUnit\n      );\n    case CandidateRequestActonTypes.SET_DEPARTMENT:\n      return state.setIn(\n        [\"requisitionDetails\", \"department\"],\n        action.payload.department\n      );\n    case CandidateRequestActonTypes.SET_LOCATION:\n      return state.setIn(\n        [\"requisitionDetails\", \"location\"],\n        action.payload.location\n          ? new Location(action.payload.location)\n          : action.payload.location\n      );\n    case CandidateRequestActonTypes.SET_EMPLOYEE_TYPE:\n      return state.setIn(\n        [\"requisitionDetails\", \"employeeType\"],\n        action.payload.employeeType\n      );\n    case CandidateRequestActonTypes.SET_REQUISITION_DETAILS:\n      return state.set(\n        \"requisitionDetails\",\n        new RequisitionDetails(action.payload.requisitionDetails)\n      );\n\n    case CandidateRequestActonTypes.SET_FIRST_NAME:\n      return state.setIn(\n        [\"candidateDetails\", \"firstName\"],\n        action.payload.firstName\n      );\n    case CandidateRequestActonTypes.SET_LAST_NAME:\n      return state.setIn(\n        [\"candidateDetails\", \"lastName\"],\n        action.payload.lastName\n      );\n    case CandidateRequestActonTypes.SET_USERNAME:\n      return state.setIn(\n        [\"candidateDetails\", \"username\"],\n        action.payload.userName\n      );\n    case CandidateRequestActonTypes.SET_NON_LP_EMAIL:\n      return state.setIn(\n        [\"candidateDetails\", \"nonLpEmail\"],\n        action.payload.nonLpEmail\n      );\n    case CandidateRequestActonTypes.SET_JOB:\n      return state.setIn(\n        [\"candidateDetails\", \"job\"],\n        action.payload.job ? new Job(action.payload.job) : new Job()\n      );\n\n    case CandidateRequestActonTypes.SET_JOB_TITLE:\n      return state.setIn(\n        [\"candidateDetails\", \"job\", \"jobTitle\"],\n        action.payload.jobTitle\n      );\n\n    case CandidateRequestActonTypes.SET_JOB_CODE:\n      return state.setIn(\n        [\"candidateDetails\", \"job\", \"jobCode\"],\n        action.payload.jobCode\n      );\n\n    case CandidateRequestActonTypes.SET_SELECTED_COMPANY:\n      return state.setIn(\n        [\"candidateDetails\", \"selectedCompany\"],\n        action.payload.selectedCompany\n      );\n    case CandidateRequestActonTypes.SET_OFFICE_NUMBER:\n      return state.setIn(\n        [\"candidateDetails\", \"officeNumber\"],\n        action.payload.officeNumber\n      );\n    case CandidateRequestActonTypes.SET_MOBILE_NUMBER:\n      return state.setIn(\n        [\"candidateDetails\", \"mobileNumber\"],\n        action.payload.mobileNumber\n      );\n\n    case CandidateRequestActonTypes.SET_IS_DEVICE_NOTE_CONFIRMED:\n      return state.setIn(\n        [\"additionalInformation\", \"isDeviceNoteConfirmed\"],\n        action.payload.isDeviceNoteConfirmed\n      );\n\n    case CandidateRequestActonTypes.SET_REQUEST_DEVICE:\n      return state.setIn(\n        [\"additionalInformation\", \"selectedDevice\"],\n        action.payload.selectedDevice\n      );\n\n    case CandidateRequestActonTypes.SET_DEFAULT_STATE:\n      return defaultState;\n\n    case CandidateRequestActonTypes.SET_IS_FILLED_BY_REQUISITION:\n      return state.set(\n        \"isFilledByRequisition\",\n        action.payload.isFilledByRequisition\n      );\n\n    case CandidateRequestActonTypes.SET_IS_GOOGLE_ACCOUNT_NEEDED:\n      return state.setIn(\n        [\"additionalInformation\", \"isGoogleAccountNeeded\"],\n        action.payload.isGoogleAccountNeeded\n      );\n\n    //errors\n    case CandidateRequestActonTypes.SET_REQUISITION_TYPE_ERROR:\n      return state.set(\n        \"requisitionTypeError\",\n        action.payload.requisitionTypeError\n      );\n    case CandidateRequestActonTypes.SET_START_DATE_ERROR:\n      return state.set(\"startDateError\", action.payload.startDateError);\n    case CandidateRequestActonTypes.SET_HIRING_MANAGER_ERROR:\n      return state.set(\"hiringManagerError\", action.payload.hiringManagerError);\n    case CandidateRequestActonTypes.SET_BUSINESS_UNIT_ERROR:\n      return state.set(\"businessUnitError\", action.payload.businessUnitError);\n    case CandidateRequestActonTypes.SET_DEPARTMENT_ERROR:\n      return state.set(\"departmentError\", action.payload.departmentError);\n    case CandidateRequestActonTypes.SET_LOCATION_ERROR:\n      return state.set(\"locationError\", action.payload.locationError);\n    case CandidateRequestActonTypes.SET_EMPLOYEE_TYPE_ERROR:\n      return state.set(\"employeeTypeError\", action.payload.employeeTypeError);\n\n    case CandidateRequestActonTypes.SET_FIRST_NAME_ERROR:\n      return state.set(\"firstNameError\", action.payload.firstNameError);\n    case CandidateRequestActonTypes.SET_LAST_NAME_ERROR:\n      return state.set(\"lastNameError\", action.payload.lastNameError);\n    case CandidateRequestActonTypes.SET_USERNAME_ERROR:\n      return state.set(\"usernameError\", action.payload.userNameError);\n    case CandidateRequestActonTypes.SET_NON_LP_EMAIL_ERROR:\n      return state.set(\"nonLpEmailError\", action.payload.nonLpEmailError);\n    case CandidateRequestActonTypes.SET_JOB_ERROR:\n      return state.set(\"jobError\", action.payload.jobError);\n    case CandidateRequestActonTypes.SET_SELECTED_COMPANY_ERROR:\n      return state.set(\n        \"selectedCompanyError\",\n        action.payload.selectedCompanyError\n      );\n\n    case CandidateRequestActonTypes.SET_DEVICE_ERROR:\n      return state.set(\n        \"selectedDeviceError\",\n        action.payload.selectedDeviceError\n      );\n\n    case CandidateRequestActonTypes.SET_ACTIVE_STEP:\n      return state.set(\"activeStep\", action.payload.activeStep);\n    default:\n      return state;\n  }\n};\n\nexport default candidateRequestReducer;\n","import { OrderedMap } from \"immutable\";\nimport CommonActionTypes from \"./commonActionTypes\";\n\nconst defaultState = OrderedMap({\n  orgChartEmail: \"\",\n  notifications: [],\n  searchQuery: \"\"\n});\n\nconst commonReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case CommonActionTypes.SET_ORGCHART_EMAIL:\n      return state.set(\"orgChartEmail\", action.payload.orgChartEmail);\n    case  CommonActionTypes.ENQUEUE_SNACKBAR:\n      return state.update(\"notifications\", notifications =>\n        [...notifications, { key: action.key, ...action.notification}]\n      );\n\n    case  CommonActionTypes.CLOSE_SNACKBAR:\n      return state.update(\"notifications\", notifications => notifications.map(\n        notification => ((action.dismissAll || notification.key === action.key)\n          ? { ...notification, dismissed: true }\n          : { ...notification }))\n      );\n\n    case  CommonActionTypes.REMOVE_SNACKBAR:\n      return  state.update(\"notifications\", notifications => notifications.filter(\n          notification => notification.key !== action.key)\n      );\n\n    case CommonActionTypes.SET_SEARCH_QUERY: {\n      return  state.set(\"searchQuery\", action.payload.searchQuery);\n    }\n    default:\n      return state;\n  }\n};\n\nexport default commonReducer;\n","import {Record} from \"immutable\";\n\nconst DataTransfer = new Record({\n  selectedTransferUser: \"\",\n  isDriveChecked: true,\n  isCalendarChecked: true,\n  isDataStudioChecked: true,\n  googleUserAliases: [],\n});\n\nexport default DataTransfer;\n","import {Record} from \"immutable\";\n\nconst DeviceUnassign = new Record({\n  jamfDevicesData: [],\n  googleDevicesData: [],\n});\n\nexport default DeviceUnassign;\n","import {Record} from \"immutable\";\n\nconst LicenseRemoval = new Record({\n  unassignLicenses: [],\n});\n\nexport default LicenseRemoval;\n","import {Record} from \"immutable\";\n\nconst TaskScheduling = new Record({\n  scheduleType: \"\",\n  scheduleDate: \"\",\n  scheduleEpoch: null,\n  scheduleTimeZone: \"\",\n  scheduleTimeZoneId: \"\",\n  isNotifyTerminationsChecked: true,\n  isNotifyTerminationsDisabled: false,\n});\n\nexport default TaskScheduling;\n","import {Record} from \"immutable\";\n\nconst HrInformation = new Record({\n  hrTerminationCode: \"\",\n  hrTerminationType: \"\",\n  hrSelectedDate: \"\",\n  hrPayrollEpoch: null,\n  hrTimeZone: \"\",\n  hrTimeZoneId: \"\",\n  hrNotes: \"\",\n});\n\nexport default HrInformation;","import {isImmutable, Record} from \"immutable\";\nimport {deepCopy} from \"../../helper/helpers\";\nimport DataTransfer from \"./DataTransfer\";\nimport LicenseRemoval from \"./LicenseRemoval\";\nimport DeviceUnassign from \"./DeviceUnassign\";\nimport TaskScheduling from \"./TaskScheduling\";\nimport HrInformation from \"../HrInformation\";\n\nconst defaultProps = {\n  selectedOffboardUser: \"\",\n};\n\nclass OffboardDetails extends (new Record(defaultProps)) {\n  constructor(props) {\n    if (!props) {\n      super(props);\n      return;\n    }\n    props = deepCopy(props);\n    if (!isImmutable(props)) {\n      if (props && props.dataTransfer && !isImmutable(props.dataTransfer)) {\n        props.dataTransfer = new DataTransfer(props.dataTransfer);\n      }\n      if (props && props.licenseRemoval && !isImmutable(props.licenseRemoval)) {\n        props.licenseRemoval = new LicenseRemoval(props.licenseRemoval);\n      }\n      if (props && props.deviceUnassign && !isImmutable(props.deviceUnassign)) {\n        props.deviceUnassign = new DeviceUnassign(props.deviceUnassign);\n      }\n      if (props && props.taskScheduling && !isImmutable(props.taskScheduling)) {\n        props.taskScheduling = new TaskScheduling(props.taskScheduling);\n      }\n      if (props && props.hrInformation && !isImmutable(props.hrInformation)) {\n        props.hrInformation = new HrInformation(props.hrInformation);\n      }\n    }\n    super(props);\n  }\n}\n\nexport default OffboardDetails;\n","import {OrderedMap} from \"immutable\";\nimport OffboardRequestActonTypes from \"./offboardRequestActonTypes\";\nimport DataTransfer from \"../../immutableEntities/offboardImmutables/DataTransfer\";\nimport DeviceUnassign from \"../../immutableEntities/offboardImmutables/DeviceUnassign\";\nimport LicenseRemoval from \"../../immutableEntities/offboardImmutables/LicenseRemoval\";\nimport OffboardDetails from \"../../immutableEntities/offboardImmutables/OffboardDetails\";\nimport TaskScheduling from \"../../immutableEntities/offboardImmutables/TaskScheduling\";\nimport HrInformation from \"../../immutableEntities/HrInformation\";\n\nconst defaultState = OrderedMap({\n  dataTransfer: new DataTransfer(),\n  deviceUnassign: new DeviceUnassign(),\n  licenseRemoval: new LicenseRemoval(),\n  offboardDetails: new OffboardDetails(),\n  taskScheduling: new TaskScheduling(),\n  hrInformation: new HrInformation(),\n\n  hrLocationLat: \"\",\n  hrLocationLong: \"\",\n  hrCity: \"\",\n\n  scheduleTypeError: false,\n  scheduleDateError: false,\n  scheduleTimeZoneError: false,\n  hrDateError: false,\n  hrTimeZoneError: false,\n\n  isWarningModalOpen: false,\n  warningModalMessage: \"\",\n  isButtonDisabled: false,\n  isOffboarding: false,\n  offboardingReason: \"\",\n  isSelectedLoading: false,\n  activeStep: 0,\n});\n\nconst offboardRequestReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case OffboardRequestActonTypes.SET_SELECTED_OFFBOARD_USER:\n      return state.setIn(\n        [\"offboardDetails\", \"selectedOffboardUser\"],\n        action.payload.selectedOffboardUser\n      );\n    case OffboardRequestActonTypes.SET_SELECTED_TRANSFER_USER:\n      return state.setIn(\n        [\"dataTransfer\", \"selectedTransferUser\"],\n        action.payload.selectedTransferUser\n      );\n    case OffboardRequestActonTypes.SET_IS_DRIVE_CHECKED:\n      return state.setIn(\n        [\"dataTransfer\", \"isDriveChecked\"],\n        action.payload.isDriveChecked\n      );\n    case OffboardRequestActonTypes.SET_IS_CALENDAR_CHECKED:\n      return state.setIn(\n        [\"dataTransfer\", \"isCalendarChecked\"],\n        action.payload.isCalendarChecked\n      );\n    case OffboardRequestActonTypes.SET_IS_DATA_STUDIO_CHECKED:\n      return state.setIn(\n        [\"dataTransfer\", \"isDataStudioChecked\"],\n        action.payload.isDataStudioChecked\n      );\n    case OffboardRequestActonTypes.SET_GOOGLE_USER_ALIASES:\n      return state.setIn(\n        [\"dataTransfer\", \"googleUserAliases\"],\n        action.payload.googleUserAliases\n      );\n    case OffboardRequestActonTypes.SET_UNASSIGN_LICENSES:\n      return state.setIn(\n        [\"licenseRemoval\", \"unassignLicenses\"],\n        action.payload.unassignLicenses\n      );\n    case OffboardRequestActonTypes.SET_JAMF_DEVICES_DATA:\n      return state.setIn(\n        [\"deviceUnassign\", \"jamfDevicesData\"],\n        action.payload.jamfDevicesData\n      );\n    case OffboardRequestActonTypes.SET_GOOGLE_DEVICES_DATA:\n      return state.setIn(\n        [\"deviceUnassign\", \"googleDevicesData\"],\n        action.payload.googleDevicesData\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_TYPE:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleType\"],\n        action.payload.scheduleType\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_DATE:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleDate\"],\n        action.payload.scheduleDate\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_EPOCH:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleEpoch\"],\n        action.payload.scheduleEpoch\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_TIME_ZONE:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleTimeZone\"],\n        action.payload.scheduleTimeZone\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_TIME_ZONE_ID:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleTimeZoneId\"],\n        action.payload.scheduleTimeZoneId\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_LOCATION_LAT:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleLocationLat\"],\n        action.payload.scheduleLocationLat\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_LOCATION_LONG:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleLocationLong\"],\n        action.payload.scheduleLocationLong\n      );\n    case OffboardRequestActonTypes.SET_SCHEDULE_CITY:\n      return state.setIn(\n        [\"taskScheduling\", \"scheduleCity\"],\n        action.payload.scheduleCity\n      );\n    case OffboardRequestActonTypes.SET_IS_NOTIFY_TERMINATIONS_CHECKED:\n      return state.setIn(\n        [\"taskScheduling\", \"isNotifyTerminationsChecked\"],\n        action.payload.isNotifyTerminationsChecked\n      );\n    case OffboardRequestActonTypes.SET_IS_NOTIFY_TERMINATIONS_DISABLED:\n      return state.setIn(\n        [\"taskScheduling\", \"isNotifyTerminationsDisabled\"],\n        action.payload.isNotifyTerminationsDisabled\n      );\n    case OffboardRequestActonTypes.SET_HR_TERMINATION_CODE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTerminationCode\"],\n        action.payload.hrTerminationCode\n      );\n    case OffboardRequestActonTypes.SET_HR_TERMINATION_TYPE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTerminationType\"],\n        action.payload.hrTerminationType\n      );\n    case OffboardRequestActonTypes.SET_HR_SELECTED_DATE:\n      return state.setIn(\n        [\"hrInformation\", \"hrSelectedDate\"],\n        action.payload.hrSelectedDate\n      );\n    case OffboardRequestActonTypes.SET_HR_PAYROLL_EPOCH:\n      return state.setIn(\n        [\"hrInformation\", \"hrPayrollEpoch\"],\n        action.payload.hrPayrollEpoch\n      );\n    case OffboardRequestActonTypes.SET_HR_TIMEZONE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTimeZone\"],\n        action.payload.hrTimeZone\n      );\n    case OffboardRequestActonTypes.SET_HR_TIMEZONE_ID:\n      return state.setIn(\n        [\"hrInformation\", \"hrTimeZoneId\"],\n        action.payload.hrTimeZoneId\n      );\n    case OffboardRequestActonTypes.SET_HR_NOTES:\n      return state.setIn([\"hrInformation\", \"hrNotes\"], action.payload.hrNotes);\n\n    case OffboardRequestActonTypes.SET_IS_WARNING_MODAL_OPEN:\n      return state.set(\"isWarningModalOpen\", action.payload.isWarningModalOpen);\n\n    case OffboardRequestActonTypes.SET_WARNING_MODAL_MESSAGE:\n      return state.set(\"warningModalMessage\", action.payload.warningModalMessage);\n\n    case OffboardRequestActonTypes.SET_HR_LOCATION_LAT:\n      return state.set(\"hrLocationLat\", action.payload.hrLocationLat);\n    case OffboardRequestActonTypes.SET_HR_LOCATION_LONG:\n      return state.set(\"hrLocationLong\", action.payload.hrLocationLong);\n    case OffboardRequestActonTypes.SET_HR_CITY:\n      return state.set(\"hrCity\", action.payload.hrCity);\n\n    case OffboardRequestActonTypes.SET_SCHEDULE_TYPE_ERROR:\n      return state.set(\"scheduleTypeError\", action.payload.scheduleTypeError);\n    case OffboardRequestActonTypes.SET_SCHEDULE_DATE_ERROR:\n      return state.set(\"scheduleDateError\", action.payload.scheduleDateError);\n    case OffboardRequestActonTypes.SET_HR_DATE_ERROR:\n      return state.set(\"hrDateError\", action.payload.hrDateError);\n    case OffboardRequestActonTypes.SET_HR_TIME_ZONE_ERROR:\n      return state.set(\"hrTimeZoneError\", action.payload.hrTimeZoneError);\n\n    case OffboardRequestActonTypes.SET_IS_BUTTON_DISABLED:\n      return state.set(\"isButtonDisabled\", action.payload.isButtonDisabled);\n    case OffboardRequestActonTypes.SET_IS_OFFBOARDING:\n      return state.set(\"isOffboarding\", action.payload.isOffboarding);\n    case OffboardRequestActonTypes.SET_OFFBOARDING_REASON:\n      return state.set(\"offboardingReason\", action.payload.offboardingReason);\n    case OffboardRequestActonTypes.SET_IS_SELECTED_LOADING:\n      return state.set(\"isSelectedLoading\", action.payload.isSelectedLoading);\n    case OffboardRequestActonTypes.SET_ACTIVE_STEP:\n      return state.set(\"activeStep\", action.payload.activeStep);\n    case OffboardRequestActonTypes.SET_DEFAULT_STATE:\n      return defaultState;\n    default:\n      return state;\n  }\n};\n\nexport default offboardRequestReducer;\n","import { OrderedMap } from \"immutable\";\nimport TaskManagerActonTypes from \"./taskManagerActonTypes\";\n\nconst defaultState = OrderedMap({\n  allTasksData: [],\n  selectedTaskData: null,\n  isDrawerOpen: false,\n  viewTaskTypeDetails: \"\",\n});\n\nconst taskManagerReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case TaskManagerActonTypes.SET_ALL_TASKS_DATA:\n      return state.set(\"allTasksData\", action.payload.allTasksData);\n    case TaskManagerActonTypes.ADD_TASK_DATA:\n      return state.update(\"allTasksData\", allTasksData => [action.payload.taskData, ...allTasksData]);\n    case TaskManagerActonTypes.SET_IS_DRAWER_OPEN:\n      return state.set(\"isDrawerOpen\", action.payload.isDrawerOpen);\n    case TaskManagerActonTypes.SET_SELECTED_TASK_DATA:\n      return state.set(\"selectedTaskData\", action.payload.selectedTaskData);\n    case TaskManagerActonTypes.SET_VIEW_TASK_TYPE_DETAILS:\n      return state.set(\"viewTaskTypeDetails\", action.payload.viewTaskTypeDetails);\n\n    default:\n      return state;\n  }\n};\n\nexport default taskManagerReducer;\n","import { OrderedMap } from \"immutable\";\nimport ThirdPartyActonTypes from \"./thirdPartyActonTypes\";\n\nconst defaultState = OrderedMap({\n  allThirdParties: [],\n  thirdPartyData: null,\n  filters: {\n    pageCount: 0,\n    itemsPerPage: 25,\n    vendorType: '',\n    status: undefined,\n    owner: '',\n    // query: \"\" gets from searchQuery\n  },\n  searchQuery: '',\n  thirdPartyUsers: []\n});\n\nconst thirdPartyReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ThirdPartyActonTypes.SET_ALL_THIRD_PARTIES:\n      return state.set(\"allThirdParties\", action.payload.allThirdParties);\n    case ThirdPartyActonTypes.SET_SEARCH_QUERY:\n      return state.set(\"searchQuery\", action.payload.searchQuery);\n    case ThirdPartyActonTypes.SET_THIRD_PARTY_DATA:\n      return state.set(\"thirdPartyData\", action.payload.thirdPartyData);\n    case ThirdPartyActonTypes.SET_FILTERS:\n      return state.set(\"filters\", action.payload.filters);\n    case ThirdPartyActonTypes.SET_THIRD_PARTY_USERS:\n      return state.set(\"thirdPartyUsers\", action.payload.thirdPartyUsers);\n\n    default:\n      return state;\n  }\n};\n\nexport default thirdPartyReducer;\n","import {typesWithPrefix} from \"../../helper/helpers\";\n\nconst RequisitionRequestActionTypes = {\n  SET_REQUISITION_TYPE: \"SET_REQUISITION_TYPE\",\n  // SET_START_DATE: \"SET_START_DATE\",\n  // SET_HIRING_MANAGER: \"SET_HIRING_MANAGER\",\n  // SET_BUSINESS_UNIT: \"SET_BUSINESS_UNIT\",\n  // SET_DEPARTMENT: \"SET_DEPARTMENT\",\n  // SET_LOCATION: \"SET_LOCATION\",\n  // SET_EMPLOYEE_TYPE: \"SET_EMPLOYEE_TYPE\",\n  // SET_REQUISITION_DETAILS: \"SET_REQUISITION_DETAILS\",\n  //\n  // SET_FIRST_NAME: \"SET_FIRST_NAME\",\n  // SET_LAST_NAME: \"SET_LAST_NAME\",\n  // SET_NON_LP_EMAIL: \"SET_NON_LP_EMAIL\",\n  // SET_JOB: \"SET_JOB\",\n  // SET_SELECTED_COMPANY: \"SET_SELECTED_COMPANY\",\n  // SET_OFFICE_NUMBER: \"SET_OFFICE_NUMBER\",\n  // SET_MOBILE_NUMBER: \"SET_MOBILE_NUMBER\",\n  //\n  // SET_USERNAME: \"SET_USERNAME\",\n  // SET_IS_DEVICE_NOTE_CONFIRMED: \"SET_IS_DEVICE_NOTE_CONFIRMED\",\n  // SET_REQUEST_DEVICE: \"SET_REQUEST_DEVICE\",\n  //\n  // SET_DEFAULT_STATE: \"SET_DEFAULT_STATE\",\n  //\n  // SET_IS_FILLED_BY_REQUISITION: \"SET_IS_FILLED_BY_REQUISITION\",\n  // SET_IS_GOOGLE_ACCOUNT_NEEDED: \"SET_IS_GOOGLE_ACCOUNT_NEEDED\",\n\n  SET_REQUISITION_TYPE_ERROR: \"SET_REQUISITION_TYPE_ERROR\",\n  // SET_START_DATE_ERROR: \"SET_START_DATE_ERROR\",\n  // SET_HIRING_MANAGER_ERROR: \"SET_HIRING_MANAGER_ERROR\",\n  // SET_BUSINESS_UNIT_ERROR: \"SET_BUSINESS_UNIT_ERROR\",\n  // SET_DEPARTMENT_ERROR: \"SET_DEPARTMENT_ERROR\",\n  // SET_LOCATION_ERROR: \"SET_LOCATION_ERROR\",\n  // SET_EMPLOYEE_TYPE_ERROR: \"SET_EMPLOYEE_TYPE_ERROR\",\n  //\n  // SET_FIRST_NAME_ERROR: \"SET_FIRST_NAME_ERROR\",\n  // SET_LAST_NAME_ERROR: \"SET_LAST_NAME_ERROR\",\n  // SET_NON_LP_EMAIL_ERROR: \"SET_NON_LP_EMAIL_ERROR\",\n  // SET_JOB_ERROR: \"SET_JOB_ERROR\",\n  // SET_SELECTED_COMPANY_ERROR: \"SET_SELECTED_COMPANY_ERROR\",\n  //\n  // SET_USERNAME_ERROR: \"SET_USERNAME_ERROR\",\n  // SET_REQUEST_DEVICE_ERROR: \"SET_DEVICE_ERROR\",\n  //\n  // SET_ACTIVE_STEP: \"SET_ACTIVE_STEP\",\n};\n\nexport default typesWithPrefix(\"REQUISITION_REQUEST_\")(\n  RequisitionRequestActionTypes\n);\n","import {OrderedMap} from \"immutable\";\nimport RequisitionRequestActionTypes from \"./requisitionRequestActonTypes\";\nimport RequisitionDetails from \"../../immutableEntities/candidateImmutables/RequisitionDetails\";\nimport CandidateDetails from \"../../immutableEntities/candidateImmutables/CandidateDetails\";\nimport AdditionalInformation from \"../../immutableEntities/candidateImmutables/AdditionalInformation\";\n// import RequisitionRequestActionTypes from \"./requisitionRequestActonTypes\";\nimport Location from \"../../immutableEntities/candidateImmutables/Location\";\nimport HiringManager from \"../../immutableEntities/candidateImmutables/HiringManager\";\nimport RequisitionType from \"../../immutableEntities/candidateImmutables/RequisitionType\";\nimport Job from \"../../immutableEntities/candidateImmutables/Job\";\n\nconst defaultState = OrderedMap({\n  // requisitionDetails: new RequisitionDetails(),\n  // candidateDetails: new CandidateDetails(),\n  // additionalInformation: new AdditionalInformation(),\n\n  requisitionType: null,\n  requisitionTypeError: false,\n  // isFilledByRequisition: false,\n  // startDateError: false,\n  // hiringManagerError: false,\n  // businessUnitError: false,\n  // departmentError: false,\n  // locationError: false,\n  // employeeTypeError: false,\n  // firstNameError: false,\n  // lastNameError: false,\n  // nonLpEmailError: false,\n  // jobError: false,\n  // selectedCompanyError: false,\n  // usernameError: false,\n  // selectedDeviceError: false,\n  // isDeviceNoteConfirmed: false,\n  // isGoogleAccountNeeded: true,\n  // activeStep: 0,\n});\n\nconst requisitionRequestReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case RequisitionRequestActionTypes.SET_REQUISITION_TYPE:\n      return state.set(\"requisitionType\", action.payload.requisitionType);\n    // case RequisitionRequestActionTypes.SET_START_DATE:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"startDate\"],\n    //     action.payload.startDate\n    //   );\n    // case RequisitionRequestActionTypes.SET_HIRING_MANAGER:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"hiringManager\"],\n    //     action.payload.hiringManager\n    //       ? new HiringManager(action.payload.hiringManager)\n    //       : action.payload.hiringManager\n    //   );\n    // case RequisitionRequestActionTypes.SET_BUSINESS_UNIT:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"businessUnit\"],\n    //     action.payload.businessUnit\n    //   );\n    // case RequisitionRequestActionTypes.SET_DEPARTMENT:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"department\"],\n    //     action.payload.department\n    //   );\n    // case RequisitionRequestActionTypes.SET_LOCATION:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"location\"],\n    //     action.payload.location\n    //       ? new Location(action.payload.location)\n    //       : action.payload.location\n    //   );\n    // case RequisitionRequestActionTypes.SET_EMPLOYEE_TYPE:\n    //   return state.setIn(\n    //     [\"requisitionDetails\", \"employeeType\"],\n    //     action.payload.employeeType\n    //   );\n    // case RequisitionRequestActionTypes.SET_REQUISITION_DETAILS:\n    //   return state.set(\n    //     \"requisitionDetails\",\n    //     new RequisitionDetails(action.payload.requisitionDetails)\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_FIRST_NAME:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"firstName\"],\n    //     action.payload.firstName\n    //   );\n    // case RequisitionRequestActionTypes.SET_LAST_NAME:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"lastName\"],\n    //     action.payload.lastName\n    //   );\n    // case RequisitionRequestActionTypes.SET_USERNAME:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"username\"],\n    //     action.payload.userName\n    //   );\n    // case RequisitionRequestActionTypes.SET_NON_LP_EMAIL:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"nonLpEmail\"],\n    //     action.payload.nonLpEmail\n    //   );\n    // case RequisitionRequestActionTypes.SET_JOB:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"job\"],\n    //     action.payload.job ? new Job(action.payload.job) : action.payload.job\n    //   );\n    // case RequisitionRequestActionTypes.SET_SELECTED_COMPANY:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"selectedCompany\"],\n    //     action.payload.selectedCompany\n    //   );\n    // case RequisitionRequestActionTypes.SET_OFFICE_NUMBER:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"officeNumber\"],\n    //     action.payload.officeNumber\n    //   );\n    // case RequisitionRequestActionTypes.SET_MOBILE_NUMBER:\n    //   return state.setIn(\n    //     [\"candidateDetails\", \"mobileNumber\"],\n    //     action.payload.mobileNumber\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_IS_DEVICE_NOTE_CONFIRMED:\n    //   return state.setIn(\n    //     [\"additionalInformation\", \"isDeviceNoteConfirmed\"],\n    //     action.payload.isDeviceNoteConfirmed\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_REQUEST_DEVICE:\n    //   return state.setIn(\n    //     [\"additionalInformation\", \"selectedDevice\"],\n    //     action.payload.selectedDevice\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_DEFAULT_STATE:\n    //   return defaultState;\n    //\n    // case RequisitionRequestActionTypes.SET_IS_FILLED_BY_REQUISITION:\n    //   return state.set(\n    //     \"isFilledByRequisition\",\n    //     action.payload.isFilledByRequisition\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_IS_GOOGLE_ACCOUNT_NEEDED:\n    //   return state.setIn(\n    //     [\"additionalInformation\", \"isGoogleAccountNeeded\"],\n    //     action.payload.isGoogleAccountNeeded\n    //   );\n\n    //errors\n    case RequisitionRequestActionTypes.SET_REQUISITION_TYPE_ERROR:\n      return state.set(\n        \"requisitionTypeError\",\n        action.payload.requisitionTypeError\n      );\n    // case RequisitionRequestActionTypes.SET_START_DATE_ERROR:\n    //   return state.set(\"startDateError\", action.payload.startDateError);\n    // case RequisitionRequestActionTypes.SET_HIRING_MANAGER_ERROR:\n    //   return state.set(\"hiringManagerError\", action.payload.hiringManagerError);\n    // case RequisitionRequestActionTypes.SET_BUSINESS_UNIT_ERROR:\n    //   return state.set(\"businessUnitError\", action.payload.businessUnitError);\n    // case RequisitionRequestActionTypes.SET_DEPARTMENT_ERROR:\n    //   return state.set(\"departmentError\", action.payload.departmentError);\n    // case RequisitionRequestActionTypes.SET_LOCATION_ERROR:\n    //   return state.set(\"locationError\", action.payload.locationError);\n    // case RequisitionRequestActionTypes.SET_EMPLOYEE_TYPE_ERROR:\n    //   return state.set(\"employeeTypeError\", action.payload.employeeTypeError);\n    //\n    // case RequisitionRequestActionTypes.SET_FIRST_NAME_ERROR:\n    //   return state.set(\"firstNameError\", action.payload.firstNameError);\n    // case RequisitionRequestActionTypes.SET_LAST_NAME_ERROR:\n    //   return state.set(\"lastNameError\", action.payload.lastNameError);\n    // case RequisitionRequestActionTypes.SET_USERNAME_ERROR:\n    //   return state.set(\"usernameError\", action.payload.userNameError);\n    // case RequisitionRequestActionTypes.SET_NON_LP_EMAIL_ERROR:\n    //   return state.set(\"nonLpEmailError\", action.payload.nonLpEmailError);\n    // case RequisitionRequestActionTypes.SET_JOB_ERROR:\n    //   return state.set(\"jobError\", action.payload.jobError);\n    // case RequisitionRequestActionTypes.SET_SELECTED_COMPANY_ERROR:\n    //   return state.set(\n    //     \"selectedCompanyError\",\n    //     action.payload.selectedCompanyError\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_DEVICE_ERROR:\n    //   return state.set(\n    //     \"selectedDeviceError\",\n    //     action.payload.selectedDeviceError\n    //   );\n    //\n    // case RequisitionRequestActionTypes.SET_ACTIVE_STEP:\n    //   return state.set(\"activeStep\", action.payload.activeStep);\n    default:\n      return state;\n  }\n};\n\nexport default requisitionRequestReducer;\n","import {OrderedMap} from \"immutable\";\nimport OnboardingDashboardActonTypes from \"./onboardingDashboardActonTypes\";\n\nconst defaultState = OrderedMap({\n  selectedTaskData: null,\n  isDrawerOpen: false,\n  viewTaskTypeDetails: \"\",\n  isReqSubmitted: false,\n  isCandidateSubmitted: false\n});\n\nconst onboardingDashboardReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case OnboardingDashboardActonTypes.SET_SELECTED_TASK_DATA:\n      return state.set(\"selectedTaskData\", action.payload.selectedTaskData);\n\n    case OnboardingDashboardActonTypes.SET_IS_DRAWER_OPEN:\n      return state.set(\"isDrawerOpen\", action.payload.isDrawerOpen);\n\n    case OnboardingDashboardActonTypes.SET_VIEW_TASK_TYPE_DETAILS:\n      return state.set(\"viewTaskTypeDetails\", action.payload.viewTaskTypeDetails);\n\n    case OnboardingDashboardActonTypes.SET_IS_REQ_SUBMITTED:\n      return state.set(\"isReqSubmitted\", action.payload.isReqSubmitted);\n\n    case OnboardingDashboardActonTypes.SET_IS_CANDIDATE_SUBMITTED:\n      return state.set(\"isCandidateSubmitted\", action.payload.isCandidateSubmitted);\n\n    default:\n      return state;\n  }\n};\n\nexport default onboardingDashboardReducer;\n","import {OrderedMap} from \"immutable\";\nimport MultiCandidateRequestActonTypes from \"./multiCandidateRequestActonTypes\";\n\nconst defaultState = OrderedMap({\n  csvData: null,\n  csvFileError: \"\",\n  selectedTasks: null,\n  selectedIds: [],\n  activeStep: 0,\n  existingId: null\n});\n\nconst multiCandidateRequestReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case MultiCandidateRequestActonTypes.SET_CSV_DATA:\n      return state.set(\"csvData\", action.payload.csvData);\n\n    case MultiCandidateRequestActonTypes.SET_CSV_FILE_ERROR:\n      return state.set(\"csvFileError\", action.payload.csvFileError);\n\n    case MultiCandidateRequestActonTypes.SET_SELECTED_TASK_IDS:\n      return state.set(\"selectedTaskIds\", action.payload.selectedTaskIds);\n\n    case MultiCandidateRequestActonTypes.SET_SELECTED_TASKS:\n      return state.set(\"selectedTasks\", action.payload.selectedTasks);\n\n    case MultiCandidateRequestActonTypes.SET_SELECTED_TASK_USERNAME:\n      return state.update(\"selectedTasks\", selectedTasks => selectedTasks.map(task => {\n        if (task.id === action.payload.id)\n          return {...task, username: action.payload.username};\n        else\n          return task;\n      }));\n\n    case MultiCandidateRequestActonTypes.SET_EXISTING_ID:\n      return state.set(\"existingId\", action.payload.existingId)\n\n    case MultiCandidateRequestActonTypes.SET_DEFAULT_STATE:\n      return defaultState;\n\n    case MultiCandidateRequestActonTypes.SET_ACTIVE_STEP:\n      return state.set(\"activeStep\", action.payload.activeStep);\n    default:\n      return state;\n  }\n};\n\nexport default multiCandidateRequestReducer;\n","import { OrderedMap } from \"immutable\";\nimport UserDirectoryActionTypes from \"./userDirectoryActionTypes\";\nimport UserDirectorySearchTypes from \"../../constants/UserDirectorySearchTypes\";\n\nconst defaultState = OrderedMap({\n  searchQuery: \"\",\n  searchType: UserDirectorySearchTypes.ALL,\n  usersData: [],\n  userData: null,\n  costCenters: [],\n  userDirectReports: null,\n  googleUserInfo: [],\n  selectedAuditUser: null,\n  isLoading: false,\n  userBadges: null,\n  isAuditDrawerOpen: false,\n  isGoogleGroupsDrawerOpen: false,\n  isAdGroupsDrawerOpen: false,\n  isAppMembershipsDrawerOpen: false,\n  disabledSearchResults: true,\n});\n\nconst userDirectoryReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case UserDirectoryActionTypes.SET_SEARCH_QUERY:\n      return state.set(\"searchQuery\", action.payload.searchQuery);\n\n    case UserDirectoryActionTypes.SET_SEARCH_TYPE:\n      return state.set(\"searchType\", action.payload.searchType);\n\n    case UserDirectoryActionTypes.SET_USERS_DATA:\n      return state.set(\"usersData\", action.payload.usersData);\n\n    case UserDirectoryActionTypes.SET_USER_DATA:\n      return state.set(\"userData\", action.payload.userData);\n\n    case UserDirectoryActionTypes.SET_USER_BADGES:\n      return state.set(\"userBadges\", action.payload.userBadges);\n\n    case UserDirectoryActionTypes.SET_COST_CENTERS:\n      return state.set(\"costCenters\", action.payload.costCenters);\n\n    case UserDirectoryActionTypes.SET_USER_DIRECT_REPORTS:\n      return state.set(\"userDirectReports\", action.payload.userDirectReports);\n\n    case UserDirectoryActionTypes.SET_GOOGLE_USER_INFO:\n      return state.set(\"googleUserInfo\", action.payload.googleUserInfo);\n\n    case UserDirectoryActionTypes.SET_SELECTED_AUDIT_USER:\n      return state.set(\"selectedAuditUser\", action.payload.selectedAuditUser);\n\n    case UserDirectoryActionTypes.SET_IS_LOADING:\n      return state.set(\"isLoading\", action.payload.isLoading);\n\n    case UserDirectoryActionTypes.SET_IS_AUDIT_DRAWER_OPEN:\n      return state.set(\"isAuditDrawerOpen\", action.payload.isAuditDrawerOpen);\n\n    case UserDirectoryActionTypes.SET_IS_GOOGLE_GROUPS_DRAWER_OPEN:\n      return state.set(\"isGoogleGroupsDrawerOpen\", action.payload.isGoogleGroupsDrawerOpen);\n\n    case UserDirectoryActionTypes.SET_IS_AD_GROUPS_DRAWER_OPEN:\n      return state.set(\"isAdGroupsDrawerOpen\", action.payload.isAdGroupsDrawerOpen);\n\n    case UserDirectoryActionTypes.SET_IS_APP_MEMBERSHIPS_DRAWER_OPEN:\n      return state.set(\"isAppMembershipsDrawerOpen\", action.payload.isAppMembershipsDrawerOpen);\n\n    case UserDirectoryActionTypes.SET_DISABLED_SEARCH_RESULTS:\n      return state.set(\"disabledSearchResults\", action.payload.disabledSearchResults);\n\n    default:\n      return state;\n  }\n};\n\nexport default userDirectoryReducer;\n","import {OrderedMap} from \"immutable\";\nimport TaskManagerHrInfoActonTypes from \"./taskManagerHrInfoActonTypes\";\nimport HrInformation from \"../../immutableEntities/HrInformation\";\n\nconst defaultState = OrderedMap({\n  hrInformation: new HrInformation(),\n  hrDateError: \"\",\n  hrTimeZoneError: \"\",\n  hrTerminationCodeError: \"\",\n  hrTerminationTypeError: \"\",\n\n  hrLocationLat: \"\",\n  hrLocationLong: \"\",\n  hrCity: \"\",\n});\n\nconst taskManagerHrInfoReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case TaskManagerHrInfoActonTypes.CLEAR_HR_INFORMATION:\n      return defaultState;\n\n    case TaskManagerHrInfoActonTypes.SET_HR_INFORMATION:\n      return state.set(\n        \"hrInformation\",\n        action.payload.hrInformation\n          ? new HrInformation(action.payload.hrInformation)\n          : new HrInformation()\n      );\n\n    case TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_CODE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTerminationCode\"],\n        action.payload.hrTerminationCode\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_TYPE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTerminationType\"],\n        action.payload.hrTerminationType\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_SELECTED_DATE:\n      return state.setIn(\n        [\"hrInformation\", \"hrSelectedDate\"],\n        action.payload.hrSelectedDate\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_PAYROLL_EPOCH:\n      return state.setIn(\n        [\"hrInformation\", \"hrPayrollEpoch\"],\n        action.payload.hrPayrollEpoch\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_TIMEZONE:\n      return state.setIn(\n        [\"hrInformation\", \"hrTimeZone\"],\n        action.payload.hrTimeZone\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_TIMEZONE_ID:\n      return state.setIn(\n        [\"hrInformation\", \"hrTimeZoneId\"],\n        action.payload.hrTimeZoneId\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_NOTES:\n      return state.setIn([\"hrInformation\", \"hrNotes\"], action.payload.hrNotes);\n\n    case TaskManagerHrInfoActonTypes.SET_HR_LOCATION_LAT:\n      return state.set(\"hrLocationLat\", action.payload.hrLocationLat);\n    case TaskManagerHrInfoActonTypes.SET_HR_LOCATION_LONG:\n      return state.set(\"hrLocationLong\", action.payload.hrLocationLong);\n    case TaskManagerHrInfoActonTypes.SET_HR_CITY:\n      return state.set(\"hrCity\", action.payload.hrCity);\n\n    case TaskManagerHrInfoActonTypes.SET_HR_DATE_ERROR:\n      return state.set(\"hrDateError\", action.payload.hrDateError);\n    case TaskManagerHrInfoActonTypes.SET_HR_TIME_ZONE_ERROR:\n      return state.set(\"hrTimeZoneError\", action.payload.hrTimeZoneError);\n    case TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_CODE_ERROR:\n      return state.set(\n        \"hrTerminationCodeError\",\n        action.payload.hrTerminationCodeError\n      );\n    case TaskManagerHrInfoActonTypes.SET_HR_TERMINATION_TYPE_ERROR:\n      return state.set(\n        \"hrTerminationTypeError\",\n        action.payload.hrTerminationTypeError\n      );\n\n    default:\n      return state;\n  }\n};\n\nexport default taskManagerHrInfoReducer;\n","import {combineReducers, createStore} from 'redux';\nimport candidateRequestReducer from \"./candidateRequest/candidateRequestReducer\";\nimport commonReducer from \"./common/commonReducer\";\nimport offboardRequestReducer from \"./offboardRequest/offboardRequestReducer\";\nimport taskManagerReducer from \"./taskManager/taskManagerReducer\";\nimport thirdPartyReducer from \"./thirdParty/thirdPartyReducer\";\nimport requisitionRequestReducer from \"./requisitionRequst/requisitionRequestReducer\";\nimport onboardingDashboardReducer from \"./onboardingDashboard/onboardingDashboardReducer\";\nimport multiCandidateRequestReducer from \"./multiCandidateRequest/multiCandidateRequestReducer\";\nimport userDirectoryReducer from \"./userDirectory/userDirectoryReducer\";\nimport taskManagerHrInfoReducer from \"./taskManagerHrInfo/taskManagerHrInfoReducer\";\n\nconst rootReducer = combineReducers({\n    common: commonReducer,\n    userDirectory: userDirectoryReducer,\n    thirdParty: thirdPartyReducer,\n    onboardingDashboard: onboardingDashboardReducer,\n    requisitionRequest: requisitionRequestReducer,\n    candidateRequest: candidateRequestReducer,\n    multiCandidateRequest: multiCandidateRequestReducer,\n    offboardRequest: offboardRequestReducer,\n    taskManager: taskManagerReducer,\n    taskManagerHrInfo: taskManagerHrInfoReducer,\n});\n\nconst store = createStore(\n    rootReducer,\n   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import { createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    \"@global\": {\n      \"*\": {\n        boxSizing: \"border-box\",\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        \"-webkit-font-smoothing\": \"antialiased\",\n        \"-moz-osx-font-smoothing\": \"grayscale\",\n        height: \"100%\",\n        width: \"100%\",\n      },\n      body: {\n        background: \"linear-gradient(45deg, #1d1f52 30%, #162036 90%)\",\n        height: \"100%\",\n        width: \"100%\",\n      },\n      a: {\n        textDecoration: \"none\",\n      },\n      \"#root\": {\n        height: \"100%\",\n        width: \"100%\",\n      },\n    },\n  })\n);\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport {Provider as ReduxProvider} from \"react-redux\";\nimport AuthorizedApolloProvider from \"./AuthorizedApolloProvider\";\nimport {makeStyles, MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {fab} from \"@fortawesome/free-brands-svg-icons\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCircle,\n  faCommentDots,\n  faDotCircle,\n  faUserMinus,\n  faUserPlus,\n  faCogs,\n  faThumbtack,\n  faIdCard,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport theme from \"./theme\";\nimport BodyLayout from \"./layout/BodyLayout\";\nimport AuthUserContextProvider from \"./AuthUserContextProvider\";\nimport store from \"./data/redux/store\";\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport {SnackbarProvider} from \"notistack\";\n\nlibrary.add(\n  fab,\n  faCircle,\n  faCommentDots,\n  faDotCircle,\n  faUserMinus,\n  faUserPlus,\n  faThumbtack,\n  faCogs,\n  faIdCard,\n);\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: \"100vh\",\n  },\n}));\n\nconst AppContent = () => {\n  const classes = useStyles();\n\n  return (\n    <ReduxProvider store={store}>\n      <AuthorizedApolloProvider>\n        <AuthUserContextProvider>\n          <MuiThemeProvider theme={theme}>\n            <SnackbarProvider\n            // maxSnack={4}\n            // preventDuplicate\n            // anchorOrigin={{\n            //   vertical: 'top',\n            //   horizontal: 'right',\n            // }}\n            //TransitionComponent={Slide}\n            >\n              <div className={classes.root}>\n                <CssBaseline />\n                <GlobalStyles />\n                <BodyLayout />\n              </div>\n            </SnackbarProvider>\n          </MuiThemeProvider>\n        </AuthUserContextProvider>\n      </AuthorizedApolloProvider>\n    </ReduxProvider>\n  );\n};\n\nexport default AppContent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { disableReactDevTools } from \"@fvilers/disable-react-devtools\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nif (process.env.NODE_ENV === \"production\") {\n  disableReactDevTools();\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}